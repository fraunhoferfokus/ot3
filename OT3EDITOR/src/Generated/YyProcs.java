package Generated;
import Gently.*;
public class YyProcs
{
   static boolean javadummy = true;
// global variable OutlineObjects
static JavaNode OutlineObjects = null;

public
static
void
HEADER(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X11
JavaNode X11 = null;
// DECLARE for proc Id
JavaNode Id = null;
// DECLARE for proc X5
JavaNode X5 = null;
// DECLARE for proc X4
JavaNode X4 = null;
// DECLARE for proc X3
JavaNode X3 = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc X
JavaNode X = null;
CONDITION0:
while(javadummy) {
// ***** begin condlist 1 (in cond 0) *****
CONDLIST1: // @@@ begin of alternative group
while(javadummy) {
CONDITION2: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "TTCN3Module_A1") )
   if (javadummy) break  CONDITION2;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to X4 --- JJ.M4
X4 = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to X5 --- JJ.M4
X5 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ModuleId_A1") )
   if (javadummy) break  CONDITION2;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X11 --- JJ.M4
X11 = current1 ;
} //)) children level 1
};
yy_outparam_0 = 
Id
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1;
// $$$$$$$$ 
} // CONDITION2 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1 N=0
if (javadummy) break CONDITION0;
} // CONDLIST1 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION0
// failed:
JavaLib.rtsAllAlternativesFailed("HEADER");
}



public
static
void
OUTLINE(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Outline
JavaNode Outline = null;
// DECLARE for proc Rt
JavaNode Rt = null;
// DECLARE for proc SUITE
JavaNode SUITE = null;
// DECLARE for proc L
JavaNode L = null;
// DECLARE for proc n
JavaNode n = null;
CONDITION3:
while(javadummy) {
// ***** begin condlist 4 (in cond 3) *****
CONDLIST4: // @@@ begin of alternative group
while(javadummy) {
CONDITION5: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to n --- JJ.M4
n = current0 ;
};
OutlineObjects=
NodeFactory.NewNode (
"NilOf-OutlineEntry"
,  new JavaNode [] {})
;
YyProcs.
Sammle
(
n
);
JavaLib.rtsCheckDefined(OutlineObjects,"/line,offset,length,file=/ 25 433 14 Outline.g");
L = OutlineObjects;
YyProcs.
HEADER
(
n
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to SUITE --- JJ.M4
SUITE = current0 ;
}
Rt = 
NodeFactory.NewNode(
"outlineentry"
, new JavaNode [] {
SUITE
,
new JavaStringValue( "module" )
,
n
,
L
}
)
;
Outline = 
NodeFactory.NewNode (
"SeqOf-OutlineEntry"
, new JavaNode [] {
Rt
,
NodeFactory.NewNode (
"NilOf-OutlineEntry"
,  new JavaNode [] {})
}
)
;
yy_outparam_0 = 
Outline
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST4;
// $$$$$$$$ 
} // CONDITION5 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=4 N=3
if (javadummy) break CONDITION3;
} // CONDLIST4 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION3
// failed:
JavaLib.rtsAllAlternativesFailed("OUTLINE");
}



public
static
void
Sammle(

JavaNode yy_inparam_0
)
{
// DECLARE for proc L
JavaNode L = null;
// DECLARE for proc H
JavaNode H = null;
// DECLARE for proc NAME0
JavaNode NAME0 = null;
// DECLARE for proc X
JavaNode X = null;
CONDITION6:
while(javadummy) {
// ***** begin condlist 7 (in cond 6) *****
CONDLIST7: // @@@ begin of alternative group
while(javadummy) {
CONDITION8: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
if (! current0 .Name
.equals( "FunctionDef_A1") )
   if (javadummy) break  CONDITION8;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME0 --- JJ.M4
NAME0 = current1 ;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
current1 = kurrent0.Child1[3];
current1 = kurrent0.Child1[4];
current1 = kurrent0.Child1[5];
} //)) children level 1
};
H = 
NodeFactory.NewNode(
"outlineentry"
, new JavaNode [] {
NAME0
,
new JavaStringValue( "function" )
,
X
,
NodeFactory.NewNode (
"NilOf-OutlineEntry"
,  new JavaNode [] {})
}
)
;
JavaLib.rtsCheckDefined(OutlineObjects,"/line,offset,length,file=/ 52 1063 14 Outline.g");
L = OutlineObjects;
OutlineObjects=
NodeFactory.NewNode (
"SeqOf-OutlineEntry"
, new JavaNode [] {
H
,
L
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST7;
// $$$$$$$$ 
} // CONDITION8 // @@@ end of alternative
CONDITION9: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
if (! current0 .Name
.equals( "TestcaseDef_A1") )
   if (javadummy) break  CONDITION9;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME0 --- JJ.M4
NAME0 = current1 ;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
current1 = kurrent0.Child1[3];
current1 = kurrent0.Child1[4];
} //)) children level 1
};
H = 
NodeFactory.NewNode(
"outlineentry"
, new JavaNode [] {
NAME0
,
new JavaStringValue( "testcase" )
,
X
,
NodeFactory.NewNode (
"NilOf-OutlineEntry"
,  new JavaNode [] {})
}
)
;
JavaLib.rtsCheckDefined(OutlineObjects,"/line,offset,length,file=/ 68 1403 14 Outline.g");
L = OutlineObjects;
OutlineObjects=
NodeFactory.NewNode (
"SeqOf-OutlineEntry"
, new JavaNode [] {
H
,
L
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST7;
// $$$$$$$$ 
} // CONDITION9 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=7 N=6
if (javadummy) break CONDITION6;
} // CONDLIST7 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION6
// failed:
// sweep schema 1
for(JavaNode child : yy_inparam_0.Child1)
{
Sammle(child);
}
}



public
static
void
NotCovered(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc Str
JavaNode Str = null;
// DECLARE for proc P
JavaNode P = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Msg
JavaNode Msg = null;
CONDITION10:
while(javadummy) {
// ***** begin condlist 11 (in cond 10) *****
CONDLIST11: // @@@ begin of alternative group
while(javadummy) {
CONDITION12: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Msg --- JJ.M4
Msg = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(X);
//assign current0 to P --- JJ.M4
P = current0 ;
};
Gently.JavaLib.
Concat
(
new JavaStringValue( "Not yet covered in this version: " )
,
Msg
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Str --- JJ.M4
Str = current0 ;
}
YyExternalPackage.ExternalFunctions.
Error
(
Str
,
P
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST11;
// $$$$$$$$ 
} // CONDITION12 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=11 N=10
if (javadummy) break CONDITION10;
} // CONDLIST11 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION10
// failed:
JavaLib.rtsAllAlternativesFailed("NotCovered");
}



public
static
void
ErrorI(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
,

JavaNode yy_inparam_3
)
{
// DECLARE for proc t2
JavaNode t2 = null;
// DECLARE for proc t1
JavaNode t1 = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc string3
JavaNode string3 = null;
// DECLARE for proc string2
JavaNode string2 = null;
// DECLARE for proc string1
JavaNode string1 = null;
CONDITION13:
while(javadummy) {
// ***** begin condlist 14 (in cond 13) *****
CONDLIST14: // @@@ begin of alternative group
while(javadummy) {
CONDITION15: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to string1 --- JJ.M4
string1 = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to string2 --- JJ.M4
string2 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to string3 --- JJ.M4
string3 = current0 ;
};
{
JavaNode current0 = yy_inparam_3;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
Gently.JavaLib.
Concat
(
string1
,
string2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to t1 --- JJ.M4
t1 = current0 ;
}
Gently.JavaLib.
Concat
(
t1
,
string3
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to t2 --- JJ.M4
t2 = current0 ;
}
YyExternalPackage.ExternalFunctions.
Error
(
t2
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST14;
// $$$$$$$$ 
} // CONDITION15 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=14 N=13
if (javadummy) break CONDITION13;
} // CONDLIST14 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION13
// failed:
JavaLib.rtsAllAlternativesFailed("ErrorI");
}



public
static
void
CompilerError(

JavaNode yy_inparam_0
)
{
// DECLARE for proc str
JavaNode str = null;
CONDITION16:
while(javadummy) {
// ***** begin condlist 17 (in cond 16) *****
CONDLIST17: // @@@ begin of alternative group
while(javadummy) {
CONDITION18: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to str --- JJ.M4
str = current0 ;
};
TokenStream.ReportError
(
str
,new JavaStringValue( "nopos" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST17;
// $$$$$$$$ 
} // CONDITION18 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=17 N=16
if (javadummy) break CONDITION16;
} // CONDLIST17 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION16
// failed:
JavaLib.rtsAllAlternativesFailed("CompilerError");
}


// global variable HasControlPart
static JavaNode HasControlPart = null;

public
static
void
Emit_ControlPart(

JavaNode yy_inparam_0
)
{
// DECLARE for proc STMT
JavaNode STMT = null;
CONDITION19:
while(javadummy) {
// ***** begin condlist 20 (in cond 19) *****
CONDLIST20: // @@@ begin of alternative group
while(javadummy) {
CONDITION21: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to STMT --- JJ.M4
STMT = current0 ;
};
HasControlPart=
new JavaIntValue(1)
;
JavaLib.rtsEmitCode
("@Override\n");
JavaLib.rtsEmitCode
("public void RunControlPart()\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("   DoControlPart();\n");
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
("public static void DoControlPart()\n");
JavaLib.rtsEmitCode
("{\n");
YyProcs.
Emit_Stmt
(
STMT
);
JavaLib.rtsEmitCode
("}\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST20;
// $$$$$$$$ 
} // CONDITION21 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=20 N=19
if (javadummy) break CONDITION19;
} // CONDLIST20 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION19
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_ControlPart");
}



public
static
void
Emit_Testcase(

JavaNode yy_inparam_0
)
{
// DECLARE for proc Block
JavaNode Block = null;
// DECLARE for proc SystemC
JavaNode SystemC = null;
// DECLARE for proc RunsOnC
JavaNode RunsOnC = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION22:
while(javadummy) {
// ***** begin condlist 23 (in cond 22) *****
CONDLIST23: // @@@ begin of alternative group
while(javadummy) {
CONDITION24: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "testcase") )
   if (javadummy) break  CONDITION24;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RunsOnC --- JJ.M4
RunsOnC = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to SystemC --- JJ.M4
SystemC = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to Block --- JJ.M4
Block = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("public static void ");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(" ()\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("Instructions.TestcasePrelude(\"");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
("\");\n");
JavaLib.rtsEmitCode
("Instructions.SetSystemComponent(new ");
JavaLib.rtsEmitString
(
SystemC
);
JavaLib.rtsEmitCode
("(\"#SC#\"));\n");
JavaLib.rtsEmitCode
("Value MyRunsOnC = new ");
JavaLib.rtsEmitString
(
RunsOnC
);
JavaLib.rtsEmitCode
("(\"#RC#\")\n;");
JavaLib.rtsEmitCode
("Instructions.SetRunsOnComponent(MyRunsOnC);\n");
JavaLib.rtsEmitCode
("try {\n");
YyProcs.
Emit_Stmt
(
Block
);
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
("catch (targetcode.TestCaseKilled X) {\n");
JavaLib.rtsEmitCode
("Instructions.Trace(\"CAUGHT TestCaseKilled\");\n");
JavaLib.rtsEmitCode
("System.out.println(\"TESTCASE KILLED\");\n");
JavaLib.rtsEmitCode
("System.out.println(\"EXCEPTION IN TESTCASE\");\n");
JavaLib.rtsEmitCode
("throw new targetcode.TtcnFatal();\n");
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
("catch (Exception X) {\n");
JavaLib.rtsEmitCode
("System.out.println(\"EXCEPTION IN TESTCASE\");\n");
JavaLib.rtsEmitCode
("throw new targetcode.TtcnFatal();\n");
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
("Instructions.TestcasePostlude(\"");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
("\");\n");
JavaLib.rtsEmitCode
("}\n");
YyProcs.
CollectTestcase
(
Id
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST23;
// $$$$$$$$ 
} // CONDITION24 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=23 N=22
if (javadummy) break CONDITION22;
} // CONDLIST23 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION22
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_Testcase");
}



public
static
void
Emit_Function(

JavaNode yy_inparam_0
)
{
// DECLARE for proc Block
JavaNode Block = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION25:
while(javadummy) {
// ***** begin condlist 26 (in cond 25) *****
CONDLIST26: // @@@ begin of alternative group
while(javadummy) {
CONDITION27: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "function") )
   if (javadummy) break  CONDITION27;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Block --- JJ.M4
Block = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("public static void ");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(" (Value MyRunsOnC)\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("Instructions.FunctionPrelude(\"");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
("\", MyRunsOnC);\n");
JavaLib.rtsEmitCode
("final Value FinalMyRunsOnC = MyRunsOnC;\n");
YyProcs.
Emit_Stmt
(
Block
);
JavaLib.rtsEmitCode
("}\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST26;
// $$$$$$$$ 
} // CONDITION27 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=26 N=25
if (javadummy) break CONDITION25;
} // CONDLIST26 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION25
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_Function");
}



public
static
void
Emit_Imports(
)
{
CONDITION28:
while(javadummy) {
// ***** begin condlist 29 (in cond 28) *****
CONDLIST29: // @@@ begin of alternative group
while(javadummy) {
CONDITION30: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
("import org.etsi.ttcn.tci.Value;\n");
JavaLib.rtsEmitCode
("import org.etsi.ttcn.tci.BooleanValue;\n");
JavaLib.rtsEmitCode
("\n");
JavaLib.rtsEmitCode
("import targetcode.Instructions;\n");
JavaLib.rtsEmitCode
("import targetcode.Lambda;\n");
JavaLib.rtsEmitCode
("import targetcode.Component;\n");
JavaLib.rtsEmitCode
("import targetcode.Port;\n");
JavaLib.rtsEmitCode
("\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST29;
// $$$$$$$$ 
} // CONDITION30 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=29 N=28
if (javadummy) break CONDITION28;
} // CONDLIST29 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION28
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_Imports");
}



public
static
void
Emit_Prelude(
)
{
// DECLARE for proc PKG
JavaNode PKG = null;
CONDITION31:
while(javadummy) {
// ***** begin condlist 32 (in cond 31) *****
CONDLIST32: // @@@ begin of alternative group
while(javadummy) {
CONDITION33: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsCheckDefined(NameOfModule,"/line,offset,length,file=/ 191 4295 12 Emit.g");
PKG = NameOfModule;
YyExternalPackage.ExternalFunctions.
OpenJavaTargetFile
(
PKG
,
new JavaStringValue( "MODULE" )
);
JavaLib.rtsEmitCode
("// EMITFILE 0 module\n");
JavaLib.rtsEmitCode
("package ");
JavaLib.rtsEmitString
(
PKG
);
JavaLib.rtsEmitCode
(";\n");
JavaLib.rtsEmitCode
("import org.etsi.ttcn.tci.Value;\n");
JavaLib.rtsEmitCode
("import org.etsi.ttcn.tci.BooleanValue;\n");
JavaLib.rtsEmitCode
("import targetcode.Instructions;\n");
JavaLib.rtsEmitCode
("import targetcode.Lambda;\n");
JavaLib.rtsEmitCode
("import targetcode.Component;\n");
JavaLib.rtsEmitCode
("import targetcode.Port;\n");
JavaLib.rtsEmitCode
("\n");
JavaLib.rtsEmitCode
("public class MODULE\n");
JavaLib.rtsEmitCode
("implements targetcode.MetaModule\n");
JavaLib.rtsEmitCode
("{\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST32;
// $$$$$$$$ 
} // CONDITION33 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=32 N=31
if (javadummy) break CONDITION31;
} // CONDLIST32 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION31
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_Prelude");
}



public
static
void
Emit_Postlude(
)
{
CONDITION34:
while(javadummy) {
// ***** begin condlist 35 (in cond 34) *****
CONDLIST35: // @@@ begin of alternative group
while(javadummy) {
CONDITION36: // @@@ begin of alternative
while(javadummy) {
// ***** begin condlist 37 (in cond 36) *****
CONDLIST37: // @@@ begin of alternative group
while(javadummy) {
CONDITION38: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Q
JavaNode Q= null;
JavaLib.rtsCheckDefined(HasControlPart,"/line,offset,length,file=/ 212 4848 14 Emit.g");
Q = HasControlPart;
{
JavaNode current0 = Q;
//JJ.M6
if (! JavaIntValue.MatchesInt(current0,1))
   if (javadummy) break  CONDITION38;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST37;
// $$$$$$$$ 
} // CONDITION38 // @@@ end of alternative
CONDITION39: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
("@Override\n");
JavaLib.rtsEmitCode
("public void RunControlPart()\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("   System.out.println(\"[Module has no control part]\");\n");
JavaLib.rtsEmitCode
("}\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST37;
// $$$$$$$$ 
} // CONDITION39 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=37 N=36
if (javadummy) break CONDITION36;
} // CONDLIST37 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
EmitTestcaseTable
(
);
JavaLib.rtsEmitCode
("}\n");
// openfile
JavaLib.rtsCloseAlphaFile
(
);
// openfile end
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST35;
// $$$$$$$$ 
} // CONDITION36 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=35 N=34
if (javadummy) break CONDITION34;
} // CONDLIST35 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION34
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_Postlude");
}



public
static
void
Emit_Expression(

JavaNode yy_inparam_0
)
{
CONDITION40:
while(javadummy) {
// ***** begin condlist 41 (in cond 40) *****
CONDLIST41: // @@@ begin of alternative group
while(javadummy) {
CONDITION42: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Type
JavaNode Type= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "createcomponent") )
   if (javadummy) break  CONDITION42;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Type --- JJ.M4
Type = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("new ");
JavaLib.rtsEmitString
(
Type
);
JavaLib.rtsEmitCode
(" (\"Rumpelstilzchen\")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION42 // @@@ end of alternative
CONDITION43: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_verdict") )
   if (javadummy) break  CONDITION43;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"pass"))
   if (javadummy) break  CONDITION43;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.VerdictPass()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION43 // @@@ end of alternative
CONDITION44: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_verdict") )
   if (javadummy) break  CONDITION44;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"fail"))
   if (javadummy) break  CONDITION44;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.VerdictFail()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION44 // @@@ end of alternative
CONDITION45: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_verdict") )
   if (javadummy) break  CONDITION45;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"inconc"))
   if (javadummy) break  CONDITION45;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.VerdictInconc()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION45 // @@@ end of alternative
CONDITION46: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_verdict") )
   if (javadummy) break  CONDITION46;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"none"))
   if (javadummy) break  CONDITION46;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.VerdictNone()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION46 // @@@ end of alternative
CONDITION47: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_verdict") )
   if (javadummy) break  CONDITION47;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"error"))
   if (javadummy) break  CONDITION47;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.VerdictError()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION47 // @@@ end of alternative
CONDITION48: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_compportref") )
   if (javadummy) break  CONDITION48;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.ComponentPort(\n");
YyProcs.
Emit_Expression
(
X
);
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("\"");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
("\"\n");
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION48 // @@@ end of alternative
CONDITION49: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_runsonc_port") )
   if (javadummy) break  CONDITION49;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.ComponentPort(\n");
JavaLib.rtsEmitCode
("MyRunsOnC\n");
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("\"");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
("\"\n");
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION49 // @@@ end of alternative
CONDITION50: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_systemc_port") )
   if (javadummy) break  CONDITION50;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.SystemCPort(\"");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
("\")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION50 // @@@ end of alternative
CONDITION51: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "monexpr") )
   if (javadummy) break  CONDITION51;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"bitnot"))
   if (javadummy) break  CONDITION51;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("XInstructions.Not4b(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION51 // @@@ end of alternative
CONDITION52: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "monexpr") )
   if (javadummy) break  CONDITION52;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"not"))
   if (javadummy) break  CONDITION52;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Not(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION52 // @@@ end of alternative
CONDITION53: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "monexpr") )
   if (javadummy) break  CONDITION53;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"minus"))
   if (javadummy) break  CONDITION53;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerUnaryMinus(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION53 // @@@ end of alternative
CONDITION54: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "fragezeichen") )
   if (javadummy) break  CONDITION54;
};
JavaLib.rtsEmitCode
("new targetcode.Joker()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION54 // @@@ end of alternative
CONDITION55: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Name
JavaNode Name= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "fragezeichen_record") )
   if (javadummy) break  CONDITION55;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Name --- JJ.M4
Name = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("new targetcode.RecordJoker((new Meta");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
("()).newInstance())\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION55 // @@@ end of alternative
CONDITION56: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "fragezeichen_tp") )
   if (javadummy) break  CONDITION56;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tp --- JJ.M4
Tp = current1 ;
} //)) children level 1
};
// ***** begin condlist 57 (in cond 56) *****
CONDLIST57: // @@@ begin of alternative group
while(javadummy) {
CONDITION58: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_boolean") )
   if (javadummy) break  CONDITION58;
};
JavaLib.rtsEmitCode
("new targetcode.BooleanJoker()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST57;
// $$$$$$$$ 
} // CONDITION58 // @@@ end of alternative
CONDITION59: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_charstring") )
   if (javadummy) break  CONDITION59;
};
JavaLib.rtsEmitCode
("new targetcode.CharstringJoker()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST57;
// $$$$$$$$ 
} // CONDITION59 // @@@ end of alternative
CONDITION60: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION60;
};
JavaLib.rtsEmitCode
("new targetcode.IntegerJoker()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST57;
// $$$$$$$$ 
} // CONDITION60 // @@@ end of alternative
CONDITION61: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
("new targetcode.Joker()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST57;
// $$$$$$$$ 
} // CONDITION61 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=57 N=56
if (javadummy) break CONDITION56;
} // CONDLIST57 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION56 // @@@ end of alternative
CONDITION62: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_match") )
   if (javadummy) break  CONDITION62;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Match(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION62 // @@@ end of alternative
CONDITION63: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION63;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"less"))
   if (javadummy) break  CONDITION63;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerLess(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION63 // @@@ end of alternative
CONDITION64: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION64;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"greater"))
   if (javadummy) break  CONDITION64;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerGreater(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION64 // @@@ end of alternative
CONDITION65: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION65;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"greaterequal"))
   if (javadummy) break  CONDITION65;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerGreaterEqual(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION65 // @@@ end of alternative
CONDITION66: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION66;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"lessequal"))
   if (javadummy) break  CONDITION66;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerLessEqual(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION66 // @@@ end of alternative
CONDITION67: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION67;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"shiftleft"))
   if (javadummy) break  CONDITION67;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("XInstructions.ShiftLeft(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION67 // @@@ end of alternative
CONDITION68: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION68;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"shiftright"))
   if (javadummy) break  CONDITION68;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("XInstructions.ShiftRight(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION68 // @@@ end of alternative
CONDITION69: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION69;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"rotateleft"))
   if (javadummy) break  CONDITION69;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("XInstructions.RotateLeft(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION69 // @@@ end of alternative
CONDITION70: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION70;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"rotateright"))
   if (javadummy) break  CONDITION70;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("XInstructions.RotateRight(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION70 // @@@ end of alternative
CONDITION71: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION71;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"notequal"))
   if (javadummy) break  CONDITION71;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerUnequal(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION71 // @@@ end of alternative
CONDITION72: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION72;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"equal"))
   if (javadummy) break  CONDITION72;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerEqual(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION72 // @@@ end of alternative
CONDITION73: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION73;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"or"))
   if (javadummy) break  CONDITION73;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Or(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION73 // @@@ end of alternative
CONDITION74: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION74;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"and"))
   if (javadummy) break  CONDITION74;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.And(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION74 // @@@ end of alternative
CONDITION75: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION75;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"xor"))
   if (javadummy) break  CONDITION75;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Xor(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION75 // @@@ end of alternative
CONDITION76: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION76;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"bitand"))
   if (javadummy) break  CONDITION76;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("XInstructions.And4b(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION76 // @@@ end of alternative
CONDITION77: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION77;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"bitxor"))
   if (javadummy) break  CONDITION77;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("XInstructions.Xor4b(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION77 // @@@ end of alternative
CONDITION78: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION78;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"bitor"))
   if (javadummy) break  CONDITION78;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("XInstructions.Or4b(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION78 // @@@ end of alternative
CONDITION79: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION79;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"div"))
   if (javadummy) break  CONDITION79;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerDiv(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION79 // @@@ end of alternative
CONDITION80: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION80;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"mul"))
   if (javadummy) break  CONDITION80;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerMult(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION80 // @@@ end of alternative
CONDITION81: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION81;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"mod"))
   if (javadummy) break  CONDITION81;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerMod(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION81 // @@@ end of alternative
CONDITION82: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION82;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"rem"))
   if (javadummy) break  CONDITION82;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerRem(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION82 // @@@ end of alternative
CONDITION83: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION83;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"concat"))
   if (javadummy) break  CONDITION83;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.CharstringConcat(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION83 // @@@ end of alternative
CONDITION84: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION84;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"add"))
   if (javadummy) break  CONDITION84;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerPlus(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION84 // @@@ end of alternative
CONDITION85: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION85;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"sub"))
   if (javadummy) break  CONDITION85;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerMinus(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION85 // @@@ end of alternative
CONDITION86: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "compidexpr") )
   if (javadummy) break  CONDITION86;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.ComponentVar(\n");
JavaLib.rtsEmitCode
("MyRunsOnC\n");
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("\"");
JavaLib.rtsEmitString
(
str
);
JavaLib.rtsEmitCode
("\"\n");
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION86 // @@@ end of alternative
CONDITION87: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "fieldselection") )
   if (javadummy) break  CONDITION87;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.FieldSelection(\n");
YyProcs.
Emit_Expression
(
X
);
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("\"");
JavaLib.rtsEmitString
(
str
);
JavaLib.rtsEmitCode
("\"\n");
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION87 // @@@ end of alternative
CONDITION88: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "idexpr") )
   if (javadummy) break  CONDITION88;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitString
(
str
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION88 // @@@ end of alternative
CONDITION89: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_omit") )
   if (javadummy) break  CONDITION89;
};
JavaLib.rtsEmitCode
("Instructions.IntegerConstant(444)\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION89 // @@@ end of alternative
CONDITION90: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative n
JavaNode n= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_float") )
   if (javadummy) break  CONDITION90;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to n --- JJ.M4
n = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.FloatConstant(");
JavaLib.rtsEmitString
(
n
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION90 // @@@ end of alternative
CONDITION91: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative n
JavaNode n= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "intexpr") )
   if (javadummy) break  CONDITION91;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to n --- JJ.M4
n = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerConstant(");
JavaLib.rtsEmitString
(
n
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION91 // @@@ end of alternative
CONDITION92: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_true") )
   if (javadummy) break  CONDITION92;
};
JavaLib.rtsEmitCode
("Instructions.BooleanConstant(true)\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION92 // @@@ end of alternative
CONDITION93: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_false") )
   if (javadummy) break  CONDITION93;
};
JavaLib.rtsEmitCode
("Instructions.BooleanConstant(false)\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION93 // @@@ end of alternative
CONDITION94: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative n4
JavaNode n4= null;
// DECLARE for alternative n3
JavaNode n3= null;
// DECLARE for alternative n2
JavaNode n2= null;
// DECLARE for alternative n1
JavaNode n1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_quadrupel") )
   if (javadummy) break  CONDITION94;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to n1 --- JJ.M4
n1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to n2 --- JJ.M4
n2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to n3 --- JJ.M4
n3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to n4 --- JJ.M4
n4 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerConstant(555)\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION94 // @@@ end of alternative
CONDITION95: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_cstring") )
   if (javadummy) break  CONDITION95;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.CharstringConstant(");
JavaLib.rtsEmitString
(
str
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION95 // @@@ end of alternative
CONDITION96: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_bstring") )
   if (javadummy) break  CONDITION96;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerConstant(666)\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION96 // @@@ end of alternative
CONDITION97: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_hstring") )
   if (javadummy) break  CONDITION97;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerConstant(666)\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION97 // @@@ end of alternative
CONDITION98: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_ostring") )
   if (javadummy) break  CONDITION98;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerConstant(666)\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION98 // @@@ end of alternative
CONDITION99: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Spec
JavaNode Spec= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_templsimple") )
   if (javadummy) break  CONDITION99;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Spec --- JJ.M4
Spec = current1 ;
} //)) children level 1
};
YyProcs.
Emit_ObjectElement
(
Spec
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION99 // @@@ end of alternative
CONDITION100: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Specs
JavaNode Specs= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_templ") )
   if (javadummy) break  CONDITION100;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Specs --- JJ.M4
Specs = current1 ;
} //)) children level 1
};
TokenStream.ReportError
(
new JavaStringValue( "template expr" )
,new JavaStringValue( "nopos" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION100 // @@@ end of alternative
CONDITION101: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Specs
JavaNode Specs= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_compound") )
   if (javadummy) break  CONDITION101;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Specs --- JJ.M4
Specs = current1 ;
} //)) children level 1
};
TokenStream.ReportError
(
new JavaStringValue( "compound expr" )
,new JavaStringValue( "nopos" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION101 // @@@ end of alternative
CONDITION102: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Xs
JavaNode Xs= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_array") )
   if (javadummy) break  CONDITION102;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Xs --- JJ.M4
Xs = current1 ;
} //)) children level 1
};
TokenStream.ReportError
(
new JavaStringValue( "array expr" )
,new JavaStringValue( "nopos" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION102 // @@@ end of alternative
CONDITION103: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_skip") )
   if (javadummy) break  CONDITION103;
};
TokenStream.ReportError
(
new JavaStringValue( "skip expr" )
,new JavaStringValue( "nopos" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION103 // @@@ end of alternative
CONDITION104: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Es
JavaNode Es= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_nimmdas") )
   if (javadummy) break  CONDITION104;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Es --- JJ.M4
Es = current1 ;
} //)) children level 1
};
YyProcs.
Emit_CompoundExpression1
(
Es
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION104 // @@@ end of alternative
CONDITION105: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
JavaLib.PrintNode
(
X
);
TokenStream.ReportError
(
new JavaStringValue( "Emit_Expression incomplete" )
,new JavaStringValue( "nopos" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST41;
// $$$$$$$$ 
} // CONDITION105 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=41 N=40
if (javadummy) break CONDITION40;
} // CONDLIST41 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION40
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_Expression");
}



public
static
void
Emit_CompoundExpression1(

JavaNode yy_inparam_0
)
{
// DECLARE for proc L
JavaNode L = null;
// DECLARE for proc Exprs
JavaNode Exprs = null;
CONDITION106:
while(javadummy) {
// ***** begin condlist 107 (in cond 106) *****
CONDLIST107: // @@@ begin of alternative group
while(javadummy) {
CONDITION108: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Exprs --- JJ.M4
Exprs = current0 ;
};
JavaLib.rtsEmitCode
("new targetcode.CompoundValue (\n");
JavaLib.rtsEmitCode
("new Value[] {\n");
L = 
Exprs
;
// ***** begin condlist 109 (in cond 108) *****
CONDLIST109: // @@@ begin of alternative group
while(javadummy) {
CONDITION110: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = L;
if (current0.Name
!= "SeqOf-EXPR")
if (javadummy) break CONDITION110;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
Emit_Expression
(
H
);
// ***** begin condlist 111 (in cond 110) *****
CONDLIST111: // @@@ begin of alternative group
while(javadummy) {
CONDITION112: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = T;
if (current0.Name
!= "SeqOf-EXPR")
if (javadummy) break CONDITION112;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
JavaLib.rtsEmitCode
(",\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST111;
// $$$$$$$$ 
} // CONDITION112 // @@@ end of alternative
CONDITION113: // @@@ begin of alternative
while(javadummy) {
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST111;
// $$$$$$$$ 
} // CONDITION113 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=111 N=110
if (javadummy) break CONDITION110;
} // CONDLIST111 @@@ end of alternative group
// *** CONTINUE ***
L = 
T
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) continue CONDLIST109;
// $$$$$$$$ 
} // CONDITION110 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=109 N=108
if (javadummy) break CONDLIST109;
} // CONDLIST109 @@@ end of alternative group
// *** CONTINUE ***
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST107;
// $$$$$$$$ 
} // CONDITION108 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=107 N=106
if (javadummy) break CONDITION106;
} // CONDLIST107 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION106
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_CompoundExpression1");
}



public
static
void
Emit_CompoundExpression2(

JavaNode yy_inparam_0
)
{
// DECLARE for proc L
JavaNode L = null;
// DECLARE for proc Fields
JavaNode Fields = null;
CONDITION114:
while(javadummy) {
// ***** begin condlist 115 (in cond 114) *****
CONDLIST115: // @@@ begin of alternative group
while(javadummy) {
CONDITION116: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Fields --- JJ.M4
Fields = current0 ;
};
JavaLib.rtsEmitCode
("new Value[] {\n");
L = 
Fields
;
// ***** begin condlist 117 (in cond 116) *****
CONDLIST117: // @@@ begin of alternative group
while(javadummy) {
CONDITION118: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
// DECLARE for alternative Expr
JavaNode Expr= null;
{
JavaNode current0 = L;
if (current0.Name
!= "SeqOf-FIELDSPEC")
if (javadummy) break CONDITION118;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
// ***** begin condlist 119 (in cond 118) *****
CONDLIST119: // @@@ begin of alternative group
while(javadummy) {
CONDITION120: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Name
JavaNode Name= null;
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "spec_namedfield") )
   if (javadummy) break  CONDITION120;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Name --- JJ.M4
Name = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Expr --- JJ.M4
Expr = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST119;
// $$$$$$$$ 
} // CONDITION120 // @@@ end of alternative
CONDITION121: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "spec_unnamedfield") )
   if (javadummy) break  CONDITION121;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Expr --- JJ.M4
Expr = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST119;
// $$$$$$$$ 
} // CONDITION121 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=119 N=118
if (javadummy) break CONDITION118;
} // CONDLIST119 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Emit_Expression
(
Expr
);
// ***** begin condlist 122 (in cond 118) *****
CONDLIST122: // @@@ begin of alternative group
while(javadummy) {
CONDITION123: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = T;
if (current0.Name
!= "SeqOf-FIELDSPEC")
if (javadummy) break CONDITION123;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
JavaLib.rtsEmitCode
(",\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST122;
// $$$$$$$$ 
} // CONDITION123 // @@@ end of alternative
CONDITION124: // @@@ begin of alternative
while(javadummy) {
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST122;
// $$$$$$$$ 
} // CONDITION124 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=122 N=118
if (javadummy) break CONDITION118;
} // CONDLIST122 @@@ end of alternative group
// *** CONTINUE ***
L = 
T
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) continue CONDLIST117;
// $$$$$$$$ 
} // CONDITION118 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=117 N=116
if (javadummy) break CONDLIST117;
} // CONDLIST117 @@@ end of alternative group
// *** CONTINUE ***
JavaLib.rtsEmitCode
("}\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST115;
// $$$$$$$$ 
} // CONDITION116 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=115 N=114
if (javadummy) break CONDITION114;
} // CONDLIST115 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION114
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_CompoundExpression2");
}



public
static
void
Emit_Stmt(

JavaNode yy_inparam_0
)
{
CONDITION125:
while(javadummy) {
// ***** begin condlist 126 (in cond 125) *****
CONDLIST126: // @@@ begin of alternative group
while(javadummy) {
CONDITION127: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative B
JavaNode B= null;
// DECLARE for alternative A
JavaNode A= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_seq") )
   if (javadummy) break  CONDITION127;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to A --- JJ.M4
A = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to B --- JJ.M4
B = current1 ;
} //)) children level 1
};
YyProcs.
Emit_Stmt
(
A
);
YyProcs.
Emit_Stmt
(
B
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION127 // @@@ end of alternative
CONDITION128: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative A
JavaNode A= null;
// DECLARE for alternative Defs
JavaNode Defs= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_block") )
   if (javadummy) break  CONDITION128;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Defs --- JJ.M4
Defs = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to A --- JJ.M4
A = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("{\n");
YyProcs.
Emit_Stmt
(
Defs
);
YyProcs.
Emit_Stmt
(
A
);
JavaLib.rtsEmitCode
("}\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION128 // @@@ end of alternative
CONDITION129: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative STMT
JavaNode STMT= null;
// DECLARE for alternative EXPR
JavaNode EXPR= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_while") )
   if (javadummy) break  CONDITION129;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to EXPR --- JJ.M4
EXPR = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to STMT --- JJ.M4
STMT = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("while (\n");
JavaLib.rtsEmitCode
("Instructions.ToBoolean(\n");
YyProcs.
Emit_Expression
(
EXPR
);
JavaLib.rtsEmitCode
(")\n");
JavaLib.rtsEmitCode
(") {\n");
JavaLib.rtsEmitCode
("Instructions.CheckKillFlag();\n");
YyProcs.
Emit_Stmt
(
STMT
);
JavaLib.rtsEmitCode
("}\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION129 // @@@ end of alternative
CONDITION130: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative L
JavaNode L= null;
// DECLARE for alternative Else
JavaNode Else= null;
// DECLARE for alternative Elsifs
JavaNode Elsifs= null;
// DECLARE for alternative Then
JavaNode Then= null;
// DECLARE for alternative Expr
JavaNode Expr= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_if") )
   if (javadummy) break  CONDITION130;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Expr --- JJ.M4
Expr = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Then --- JJ.M4
Then = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Elsifs --- JJ.M4
Elsifs = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to Else --- JJ.M4
Else = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("// IF\n");
JavaLib.rtsEmitCode
("if (\n");
JavaLib.rtsEmitCode
("Instructions.ToBoolean(\n");
YyProcs.
Emit_Expression
(
Expr
);
JavaLib.rtsEmitCode
(")\n");
JavaLib.rtsEmitCode
(")\n");
JavaLib.rtsEmitCode
("{\n");
YyProcs.
Emit_Stmt
(
Then
);
JavaLib.rtsEmitCode
("}\n");
L = 
Elsifs
;
// ***** begin condlist 131 (in cond 130) *****
CONDLIST131: // @@@ begin of alternative group
while(javadummy) {
CONDITION132: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S
JavaNode S= null;
// DECLARE for alternative C
JavaNode C= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = L;
if (current0.Name
!= "SeqOf-ELSEIF")
if (javadummy) break CONDITION132;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "elseif") )
   if (javadummy) break  CONDITION132;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to C --- JJ.M4
C = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to S --- JJ.M4
S = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("else if (\n");
JavaLib.rtsEmitCode
("Instructions.ToBoolean(\n");
YyProcs.
Emit_Expression
(
C
);
JavaLib.rtsEmitCode
(")\n");
JavaLib.rtsEmitCode
(")\n");
JavaLib.rtsEmitCode
("{\n");
YyProcs.
Emit_Stmt
(
S
);
JavaLib.rtsEmitCode
("}\n");
L = 
T
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) continue CONDLIST131;
// $$$$$$$$ 
} // CONDITION132 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=131 N=130
if (javadummy) break CONDLIST131;
} // CONDLIST131 @@@ end of alternative group
// *** CONTINUE ***
JavaLib.rtsEmitCode
("else\n");
JavaLib.rtsEmitCode
("{\n");
YyProcs.
Emit_Stmt
(
Else
);
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
("// ENDIF\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION130 // @@@ end of alternative
CONDITION133: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative E
JavaNode E= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_log") )
   if (javadummy) break  CONDITION133;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to E --- JJ.M4
E = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Log(\n");
YyProcs.
Emit_Expression
(
E
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION133 // @@@ end of alternative
CONDITION134: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Str
JavaNode Str= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_action") )
   if (javadummy) break  CONDITION134;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Str --- JJ.M4
Str = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"ACTION\");\n");
JavaLib.rtsEmitCode
("Instructions.Action(\n");
JavaLib.rtsEmitString
(
Str
);
JavaLib.rtsEmitCode
("\n");
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION134 // @@@ end of alternative
CONDITION135: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative B
JavaNode B= null;
// DECLARE for alternative A
JavaNode A= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_send") )
   if (javadummy) break  CONDITION135;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to A --- JJ.M4
A = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to B --- JJ.M4
B = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"SEND\");\n");
JavaLib.rtsEmitCode
("Instructions.Send(\n");
YyProcs.
Emit_Expression
(
A
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
B
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION135 // @@@ end of alternative
CONDITION136: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Bs
JavaNode Bs= null;
// DECLARE for alternative A
JavaNode A= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_assigncompound1") )
   if (javadummy) break  CONDITION136;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to A --- JJ.M4
A = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Bs --- JJ.M4
Bs = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"ASSIGN\");\n");
JavaLib.rtsEmitCode
("Instructions.AssignCompoundValue(\n");
YyProcs.
Emit_Expression
(
A
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_CompoundExpression1
(
Bs
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION136 // @@@ end of alternative
CONDITION137: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Bs
JavaNode Bs= null;
// DECLARE for alternative A
JavaNode A= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_assigncompound2") )
   if (javadummy) break  CONDITION137;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to A --- JJ.M4
A = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Bs --- JJ.M4
Bs = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"ASSIGN\");\n");
JavaLib.rtsEmitCode
("Instructions.AssignCompoundValue(\n");
YyProcs.
Emit_Expression
(
A
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_CompoundExpression2
(
Bs
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION137 // @@@ end of alternative
CONDITION138: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative B
JavaNode B= null;
// DECLARE for alternative A
JavaNode A= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_assign") )
   if (javadummy) break  CONDITION138;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to A --- JJ.M4
A = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to B --- JJ.M4
B = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"ASSIGN\");\n");
JavaLib.rtsEmitCode
("Instructions.AssignValue(\n");
YyProcs.
Emit_Expression
(
A
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
B
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION138 // @@@ end of alternative
CONDITION139: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_null") )
   if (javadummy) break  CONDITION139;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION139 // @@@ end of alternative
CONDITION140: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_nolist") )
   if (javadummy) break  CONDITION140;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION140 // @@@ end of alternative
CONDITION141: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_declarecharstring") )
   if (javadummy) break  CONDITION141;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"DECLARE\");\n");
JavaLib.rtsEmitCode
("final Value ");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(" = Instructions.CharstringConstant(\"abc\");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION141 // @@@ end of alternative
CONDITION142: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_declareboolean") )
   if (javadummy) break  CONDITION142;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"DECLARE\");\n");
JavaLib.rtsEmitCode
("final Value ");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(" = Instructions.BooleanConstant(false);\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION142 // @@@ end of alternative
CONDITION143: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_declareinteger") )
   if (javadummy) break  CONDITION143;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"DECLARE\");\n");
JavaLib.rtsEmitCode
("final Value ");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(" = Instructions.IntegerConstant(999);\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION143 // @@@ end of alternative
CONDITION144: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative TypeId
JavaNode TypeId= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_declarereferenced") )
   if (javadummy) break  CONDITION144;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TypeId --- JJ.M4
TypeId = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"DECLARE\");\n");
JavaLib.rtsEmitCode
("final Value ");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(" = new ");
JavaLib.rtsEmitString
(
TypeId
);
JavaLib.rtsEmitCode
(" (\"Gantenbein\");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION144 // @@@ end of alternative
CONDITION145: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_declaretimer") )
   if (javadummy) break  CONDITION145;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"DECLARETIMER\");\n");
JavaLib.rtsEmitCode
("final Value ");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(" = new targetcode.Timer();\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION145 // @@@ end of alternative
CONDITION146: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Fun
JavaNode Fun= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_call") )
   if (javadummy) break  CONDITION146;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Fun --- JJ.M4
Fun = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"CALL\");\n");
JavaLib.rtsEmitString
(
Fun
);
JavaLib.rtsEmitCode
("(Instructions.RunsOnComponent);\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION146 // @@@ end of alternative
CONDITION147: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative K
JavaNode K= null;
// DECLARE for alternative G
JavaNode G= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_standalone") )
   if (javadummy) break  CONDITION147;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to G --- JJ.M4
G = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"ALT\");\n");
YyProcs.
NewState
(
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to K --- JJ.M4
K = current0 ;
}
JavaLib.rtsEmitCode
("final targetcode.AltState State");
JavaLib.rtsEmitString
(
K
);
JavaLib.rtsEmitCode
(" = new targetcode.AltState();\n");
JavaLib.rtsEmitCode
("Instructions.AltConstruct(\n");
JavaLib.rtsEmitCode
("State");
JavaLib.rtsEmitString
(
K
);
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("new Lambda[] {\n");
YyProcs.
Emit_AltGuard
(
G
,
K
);
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION147 // @@@ end of alternative
CONDITION148: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative K
JavaNode K= null;
// DECLARE for alternative Gs
JavaNode Gs= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_altn") )
   if (javadummy) break  CONDITION148;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Gs --- JJ.M4
Gs = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"ALT\");\n");
YyProcs.
NewState
(
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to K --- JJ.M4
K = current0 ;
}
JavaLib.rtsEmitCode
("final targetcode.AltState State");
JavaLib.rtsEmitString
(
K
);
JavaLib.rtsEmitCode
(" = new targetcode.AltState();\n");
JavaLib.rtsEmitCode
("Instructions.AltConstruct(\n");
JavaLib.rtsEmitCode
("State");
JavaLib.rtsEmitString
(
K
);
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("new Lambda[] {\n");
YyProcs.
Emit_AltGuardList
(
Gs
,
K
);
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION148 // @@@ end of alternative
CONDITION149: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_testcaseinst") )
   if (javadummy) break  CONDITION149;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"TESTCASEINST\");\n");
JavaLib.rtsEmitCode
("Instructions.StartTestcase(\n");
YyProcs.
BeginLambda
(
);
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
("();\n");
YyProcs.
EndLambda
(
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION149 // @@@ end of alternative
CONDITION150: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_verdict") )
   if (javadummy) break  CONDITION150;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"SETVERDICT\");\n");
JavaLib.rtsEmitCode
("Instructions.SetVerdict(\n");
YyProcs.
Emit_Expression
(
X
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION150 // @@@ end of alternative
CONDITION151: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_repeat") )
   if (javadummy) break  CONDITION151;
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"REPEAT\");\n");
JavaLib.rtsEmitCode
("Instructions.Repeat();\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION151 // @@@ end of alternative
CONDITION152: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_done") )
   if (javadummy) break  CONDITION152;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"DONE\");\n");
JavaLib.rtsEmitCode
("Instructions.Done(");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION152 // @@@ end of alternative
CONDITION153: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_map") )
   if (javadummy) break  CONDITION153;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"MAP\");\n");
JavaLib.rtsEmitCode
("Instructions.Map(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION153 // @@@ end of alternative
CONDITION154: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_connect") )
   if (javadummy) break  CONDITION154;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"CONNECT\");\n");
JavaLib.rtsEmitCode
("Instructions.Connect(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION154 // @@@ end of alternative
CONDITION155: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_unmap") )
   if (javadummy) break  CONDITION155;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"UNMAP\");\n");
JavaLib.rtsEmitCode
("Instructions.Unmap(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION155 // @@@ end of alternative
CONDITION156: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id2
JavaNode Id2= null;
// DECLARE for alternative Id1
JavaNode Id1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_startcomponent") )
   if (javadummy) break  CONDITION156;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id1 --- JJ.M4
Id1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Id2 --- JJ.M4
Id2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"STARTCOMPONENT\");\n");
JavaLib.rtsEmitCode
("Instructions.StartComponent(\n");
JavaLib.rtsEmitString
(
Id1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
BeginLambda
(
);
JavaLib.rtsEmitCode
("Instructions.ComponentActivityStarts(");
JavaLib.rtsEmitString
(
Id1
);
JavaLib.rtsEmitCode
(");\n");
JavaLib.rtsEmitString
(
Id2
);
JavaLib.rtsEmitCode
("(");
JavaLib.rtsEmitString
(
Id1
);
JavaLib.rtsEmitCode
(");\n");
JavaLib.rtsEmitCode
("Instructions.ComponentActivityEnds(");
JavaLib.rtsEmitString
(
Id1
);
JavaLib.rtsEmitCode
(");\n");
YyProcs.
EndLambda
(
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION156 // @@@ end of alternative
CONDITION157: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_stopcomponent") )
   if (javadummy) break  CONDITION157;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"STOPCOMPONENT\");\n");
JavaLib.rtsEmitCode
("Instructions.StopComponent(\n");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
("\n");
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION157 // @@@ end of alternative
CONDITION158: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_starttimer") )
   if (javadummy) break  CONDITION158;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"STARTTIMER\");\n");
JavaLib.rtsEmitCode
("Instructions.StartTimer(");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION158 // @@@ end of alternative
CONDITION159: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Expr
JavaNode Expr= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_starttimerexpr") )
   if (javadummy) break  CONDITION159;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Expr --- JJ.M4
Expr = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"STARTTIMER\");\n");
JavaLib.rtsEmitCode
("Instructions.StartTimerExpr(");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("\n");
YyProcs.
Emit_Expression
(
Expr
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION159 // @@@ end of alternative
CONDITION160: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Stmt
JavaNode Stmt= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Stmt --- JJ.M4
Stmt = current0 ;
};
JavaLib.Log
(
Stmt
);
TokenStream.ReportError
(
new JavaStringValue( "emit stmt" )
,new JavaStringValue( "nopos" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION160 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=126 N=125
if (javadummy) break CONDITION125;
} // CONDLIST126 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION125
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_Stmt");
}



public
static
void
Emit_AltGuardList(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc K
JavaNode K = null;
CONDITION161:
while(javadummy) {
// ***** begin condlist 162 (in cond 161) *****
CONDLIST162: // @@@ begin of alternative group
while(javadummy) {
CONDITION163: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-ALTGUARD")
if (javadummy) break CONDITION163;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to K --- JJ.M4
K = current0 ;
};
YyProcs.
Emit_AltGuard
(
H
,
K
);
// ***** begin condlist 164 (in cond 163) *****
CONDLIST164: // @@@ begin of alternative group
while(javadummy) {
CONDITION165: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = T;
if (current0.Name
!= "NilOf-ALTGUARD")
if (javadummy) break CONDITION165;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST164;
// $$$$$$$$ 
} // CONDITION165 // @@@ end of alternative
CONDITION166: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
(",\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST164;
// $$$$$$$$ 
} // CONDITION166 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=164 N=163
if (javadummy) break CONDITION163;
} // CONDLIST164 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Emit_AltGuardList
(
T
,
K
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST162;
// $$$$$$$$ 
} // CONDITION163 // @@@ end of alternative
CONDITION167: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-ALTGUARD")
if (javadummy) break CONDITION167;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to K --- JJ.M4
K = current0 ;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST162;
// $$$$$$$$ 
} // CONDITION167 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=162 N=161
if (javadummy) break CONDITION161;
} // CONDLIST162 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION161
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_AltGuardList");
}



public
static
void
BeginLambda(
)
{
CONDITION168:
while(javadummy) {
// ***** begin condlist 169 (in cond 168) *****
CONDLIST169: // @@@ begin of alternative group
while(javadummy) {
CONDITION170: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
("new Lambda() {\n");
JavaLib.rtsEmitCode
("public void Fun() { \n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST169;
// $$$$$$$$ 
} // CONDITION170 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=169 N=168
if (javadummy) break CONDITION168;
} // CONDLIST169 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION168
// failed:
JavaLib.rtsAllAlternativesFailed("BeginLambda");
}



public
static
void
EndLambda(
)
{
CONDITION171:
while(javadummy) {
// ***** begin condlist 172 (in cond 171) *****
CONDLIST172: // @@@ begin of alternative group
while(javadummy) {
CONDITION173: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
("}\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST172;
// $$$$$$$$ 
} // CONDITION173 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=172 N=171
if (javadummy) break CONDITION171;
} // CONDLIST172 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION171
// failed:
JavaLib.rtsAllAlternativesFailed("EndLambda");
}



public
static
void
Emit_AltGuard(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc N
JavaNode N = null;
// DECLARE for proc Stmt
JavaNode Stmt = null;
// DECLARE for proc Rcv
JavaNode Rcv = null;
CONDITION174:
while(javadummy) {
// ***** begin condlist 175 (in cond 174) *****
CONDLIST175: // @@@ begin of alternative group
while(javadummy) {
CONDITION176: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "altguard") )
   if (javadummy) break  CONDITION176;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Rcv --- JJ.M4
Rcv = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Stmt --- JJ.M4
Stmt = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to N --- JJ.M4
N = current0 ;
};
JavaLib.rtsEmitCode
("// GUARD\n");
YyProcs.
BeginLambda
(
);
YyProcs.
Emit_Receive
(
Rcv
,
N
);
YyProcs.
EndLambda
(
);
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("// => \n");
YyProcs.
BeginLambda
(
);
YyProcs.
Emit_Stmt
(
Stmt
);
YyProcs.
EndLambda
(
);
JavaLib.rtsEmitCode
("// ENDGUARD\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST175;
// $$$$$$$$ 
} // CONDITION176 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=175 N=174
if (javadummy) break CONDITION174;
} // CONDLIST175 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION174
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_AltGuard");
}



public
static
void
Emit_Receive(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc K
JavaNode K = null;
CONDITION177:
while(javadummy) {
// ***** begin condlist 178 (in cond 177) *****
CONDLIST178: // @@@ begin of alternative group
while(javadummy) {
CONDITION179: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "receive_timeout") )
   if (javadummy) break  CONDITION179;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to K --- JJ.M4
K = current0 ;
};
JavaLib.rtsEmitCode
("// RECEIVETIMEOUT\n");
JavaLib.rtsEmitCode
("Instructions.Timeout(\n");
JavaLib.rtsEmitString
(
T
);
JavaLib.rtsEmitCode
("\n");
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("State");
JavaLib.rtsEmitString
(
K
);
JavaLib.rtsEmitCode
("\n");
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST178;
// $$$$$$$$ 
} // CONDITION179 // @@@ end of alternative
CONDITION180: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Redir
JavaNode Redir= null;
// DECLARE for alternative Port
JavaNode Port= null;
// DECLARE for alternative Pattern
JavaNode Pattern= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "receive_value") )
   if (javadummy) break  CONDITION180;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Pattern --- JJ.M4
Pattern = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Port --- JJ.M4
Port = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Redir --- JJ.M4
Redir = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to K --- JJ.M4
K = current0 ;
};
// ***** begin condlist 181 (in cond 180) *****
CONDLIST181: // @@@ begin of alternative group
while(javadummy) {
CONDITION182: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Redir;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"/noredirect/"))
   if (javadummy) break  CONDITION182;
};
JavaLib.rtsEmitCode
("// RECEIVE\n");
JavaLib.rtsEmitCode
("Instructions.ReceiveValue(\n");
JavaLib.rtsEmitCode
("Instructions.ComponentPort(FinalMyRunsOnC, \"");
JavaLib.rtsEmitString
(
Port
);
JavaLib.rtsEmitCode
("\")\n");
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("State");
JavaLib.rtsEmitString
(
K
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
Pattern
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST181;
// $$$$$$$$ 
} // CONDITION182 // @@@ end of alternative
CONDITION183: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
("// RECEIVE\n");
JavaLib.rtsEmitCode
("Instructions.ReceiveValueRedirect(\n");
JavaLib.rtsEmitCode
("Instructions.ComponentPort(FinalMyRunsOnC, \"");
JavaLib.rtsEmitString
(
Port
);
JavaLib.rtsEmitCode
("\")\n");
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("State");
JavaLib.rtsEmitString
(
K
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
Pattern
);
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitString
(
Redir
);
JavaLib.rtsEmitCode
("\n");
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST181;
// $$$$$$$$ 
} // CONDITION183 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=181 N=180
if (javadummy) break CONDITION180;
} // CONDLIST181 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST178;
// $$$$$$$$ 
} // CONDITION180 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=178 N=177
if (javadummy) break CONDITION177;
} // CONDLIST178 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION177
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_Receive");
}


// global variable StateIndex
static JavaNode StateIndex = null;

public
static
void
NewState(
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc K
JavaNode K = null;
CONDITION184:
while(javadummy) {
// ***** begin condlist 185 (in cond 184) *****
CONDLIST185: // @@@ begin of alternative group
while(javadummy) {
CONDITION186: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsCheckDefined(StateIndex,"/line,offset,length,file=/ 817 20078 10 Emit.g");
K = StateIndex;
StateIndex=
JavaLib.Plus(
K
,
new JavaIntValue(1)
)
;
yy_outparam_0 = 
K
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST185;
// $$$$$$$$ 
} // CONDITION186 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=185 N=184
if (javadummy) break CONDITION184;
} // CONDLIST185 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION184
// failed:
JavaLib.rtsAllAlternativesFailed("NewState");
}



public
static
void
InitEmit(
)
{
CONDITION187:
while(javadummy) {
// ***** begin condlist 188 (in cond 187) *****
CONDLIST188: // @@@ begin of alternative group
while(javadummy) {
CONDITION189: // @@@ begin of alternative
while(javadummy) {
StateIndex=
new JavaIntValue(0)
;
TestcaseTable=
NodeFactory.NewNode (
"NilOf-string"
,  new JavaNode [] {})
;
HasControlPart=
new JavaIntValue(0)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST188;
// $$$$$$$$ 
} // CONDITION189 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=188 N=187
if (javadummy) break CONDITION187;
} // CONDLIST188 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION187
// failed:
JavaLib.rtsAllAlternativesFailed("InitEmit");
}


// global variable TestcaseTable
static JavaNode TestcaseTable = null;

public
static
void
CollectTestcase(

JavaNode tc
)
{
// DECLARE for proc T
JavaNode T = null;
CONDITION190:
while(javadummy) {
// ***** begin condlist 191 (in cond 190) *****
CONDLIST191: // @@@ begin of alternative group
while(javadummy) {
CONDITION192: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsCheckDefined(TestcaseTable,"/line,offset,length,file=/ 830 20406 13 Emit.g");
T = TestcaseTable;
TestcaseTable=
NodeFactory.NewNode (
"SeqOf-string"
, new JavaNode [] {
tc
,
T
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST191;
// $$$$$$$$ 
} // CONDITION192 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=191 N=190
if (javadummy) break CONDITION190;
} // CONDLIST191 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION190
// failed:
JavaLib.rtsAllAlternativesFailed("CollectTestcase");
}



public
static
void
EmitTestcaseTable(
)
{
// DECLARE for proc L
JavaNode L = null;
CONDITION193:
while(javadummy) {
// ***** begin condlist 194 (in cond 193) *****
CONDLIST194: // @@@ begin of alternative group
while(javadummy) {
CONDITION195: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
("@Override\n");
JavaLib.rtsEmitCode
("public String[] GetTestCases()\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("   return new String[] {\n");
JavaLib.rtsCheckDefined(TestcaseTable,"/line,offset,length,file=/ 838 20613 13 Emit.g");
L = TestcaseTable;
YyProcs.
EmitTestcaseNames
(
L
);
JavaLib.rtsEmitCode
("   };\n");
JavaLib.rtsEmitCode
("}\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST194;
// $$$$$$$$ 
} // CONDITION195 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=194 N=193
if (javadummy) break CONDITION193;
} // CONDLIST194 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION193
// failed:
JavaLib.rtsAllAlternativesFailed("EmitTestcaseTable");
}



public
static
void
EmitTestcaseNames(

JavaNode yy_inparam_0
)
{
CONDITION196:
while(javadummy) {
// ***** begin condlist 197 (in cond 196) *****
CONDLIST197: // @@@ begin of alternative group
while(javadummy) {
CONDITION198: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-string")
if (javadummy) break CONDITION198;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("      \"");
JavaLib.rtsEmitString
(
H
);
JavaLib.rtsEmitCode
("\"");
// ***** begin condlist 199 (in cond 198) *****
CONDLIST199: // @@@ begin of alternative group
while(javadummy) {
CONDITION200: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = T;
if (current0.Name
!= "NilOf-string")
if (javadummy) break CONDITION200;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST199;
// $$$$$$$$ 
} // CONDITION200 // @@@ end of alternative
CONDITION201: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
(",");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST199;
// $$$$$$$$ 
} // CONDITION201 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=199 N=198
if (javadummy) break CONDITION198;
} // CONDLIST199 @@@ end of alternative group
// *** CONTINUE ***
JavaLib.rtsEmitCode
("\n");
YyProcs.
EmitTestcaseNames
(
T
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST197;
// $$$$$$$$ 
} // CONDITION198 // @@@ end of alternative
CONDITION202: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-string")
if (javadummy) break CONDITION202;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST197;
// $$$$$$$$ 
} // CONDITION202 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=197 N=196
if (javadummy) break CONDITION196;
} // CONDLIST197 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION196
// failed:
JavaLib.rtsAllAlternativesFailed("EmitTestcaseNames");
}



public
static
void
Emit_ObjectElement(

JavaNode yy_inparam_0
)
{
// DECLARE for proc Hd
JavaNode Hd = null;
// DECLARE for proc Val
JavaNode Val = null;
CONDITION203:
while(javadummy) {
// ***** begin condlist 204 (in cond 203) *****
CONDLIST204: // @@@ begin of alternative group
while(javadummy) {
CONDITION205: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Hd --- JJ.M4
Hd = current0 ;
};
// ***** begin condlist 206 (in cond 205) *****
CONDLIST206: // @@@ begin of alternative group
while(javadummy) {
CONDITION207: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Hd;
if (! current0 .Name
.equals( "spec_unnamedfield") )
   if (javadummy) break  CONDITION207;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Val --- JJ.M4
Val = current1 ;
} //)) children level 1
};
YyProcs.
Emit_Expression
(
Val
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST206;
// $$$$$$$$ 
} // CONDITION207 // @@@ end of alternative
CONDITION208: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Name
JavaNode Name= null;
{
JavaNode current0 = Hd;
if (! current0 .Name
.equals( "spec_namedfield") )
   if (javadummy) break  CONDITION208;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Name --- JJ.M4
Name = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Val --- JJ.M4
Val = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
(":\n");
YyProcs.
Emit_Expression
(
Val
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST206;
// $$$$$$$$ 
} // CONDITION208 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=206 N=205
if (javadummy) break CONDITION205;
} // CONDLIST206 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST204;
// $$$$$$$$ 
} // CONDITION205 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=204 N=203
if (javadummy) break CONDITION203;
} // CONDLIST204 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION203
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_ObjectElement");
}



public
static
void
Trafo_TemplateBody0(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc TEMPL
JavaNode TEMPL = null;
CONDITION209:
while(javadummy) {
// ***** begin condlist 210 (in cond 209) *****
CONDLIST210: // @@@ begin of alternative group
while(javadummy) {
CONDITION211: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to TEMPL --- JJ.M4
TEMPL = current0 ;
};
YyProcs.
Trafo_TemplateBody
(
TEMPL
,
NodeFactory.NewNode (
"NoneOf-ZInLineTemplate_A1_M1"
,  new JavaNode [] {}
)
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST210;
// $$$$$$$$ 
} // CONDITION211 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=210 N=209
if (javadummy) break CONDITION209;
} // CONDLIST210 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION209
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_TemplateBody0");
}



public
static
void
Trafo_TemplateBody1(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc ZPrefix
JavaNode ZPrefix = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc TEMPL
JavaNode TEMPL = null;
CONDITION212:
while(javadummy) {
// ***** begin condlist 213 (in cond 212) *****
CONDLIST213: // @@@ begin of alternative group
while(javadummy) {
CONDITION214: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to TEMPL --- JJ.M4
TEMPL = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
YyProcs.
PrefixToZPrefix
(
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ZPrefix --- JJ.M4
ZPrefix = current0 ;
}
YyProcs.
Trafo_TemplateBody
(
TEMPL
,
ZPrefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST213;
// $$$$$$$$ 
} // CONDITION214 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=213 N=212
if (javadummy) break CONDITION212;
} // CONDLIST213 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION212
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_TemplateBody1");
}



public
static
void
PrefixToZPrefix(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc ZPrefix
JavaNode ZPrefix = null;
CONDITION215:
while(javadummy) {
// ***** begin condlist 216 (in cond 215) *****
CONDLIST216: // @@@ begin of alternative group
while(javadummy) {
CONDITION217: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
// ***** begin condlist 218 (in cond 217) *****
CONDLIST218: // @@@ begin of alternative group
while(javadummy) {
CONDITION219: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Prefix;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-InLineTemplate_A1_M1")
if (javadummy) break CONDITION219;
{ //(( children level 1
} //)) children level 1
};
ZPrefix = 
NodeFactory.NewNode (
"NoneOf-ZInLineTemplate_A1_M1"
,  new JavaNode [] {}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST218;
// $$$$$$$$ 
} // CONDITION219 // @@@ end of alternative
CONDITION220: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Q
JavaNode Q= null;
{
JavaNode current0 = Prefix;
if (current0.Name
!= "OneOf-InLineTemplate_A1_M1")
if (javadummy) break CONDITION220;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to Q --- JJ.M4
Q = current1 ;
} //)) children level 1
};
ZPrefix = 
NodeFactory.NewNode (
"OneOf-ZInLineTemplate_A1_M1"
, new JavaNode [] {
NodeFactory.NewNode(
"zauberprefix"
, new JavaNode [] {
Q
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST218;
// $$$$$$$$ 
} // CONDITION220 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=218 N=217
if (javadummy) break CONDITION217;
} // CONDLIST218 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
ZPrefix
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST216;
// $$$$$$$$ 
} // CONDITION217 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=216 N=215
if (javadummy) break CONDITION215;
} // CONDLIST216 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION215
// failed:
JavaLib.rtsAllAlternativesFailed("PrefixToZPrefix");
}



public
static
void
Trafo_TemplateBody(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc TEMPL
JavaNode TEMPL = null;
// DECLARE for proc M2
JavaNode M2 = null;
// DECLARE for proc M1
JavaNode M1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION221:
while(javadummy) {
// ***** begin condlist 222 (in cond 221) *****
CONDLIST222: // @@@ begin of alternative group
while(javadummy) {
CONDITION223: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to TEMPL --- JJ.M4
TEMPL = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
// ***** begin condlist 224 (in cond 223) *****
CONDLIST224: // @@@ begin of alternative group
while(javadummy) {
CONDITION225: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TEMPL;
if (! current0 .Name
.equals( "TemplateBody_A1") )
   if (javadummy) break  CONDITION225;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to M1 --- JJ.M4
M1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to M2 --- JJ.M4
M2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 226 (in cond 225) *****
CONDLIST226: // @@@ begin of alternative group
while(javadummy) {
CONDITION227: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Res
JavaNode Res= null;
// DECLARE for alternative Simple
JavaNode Simple= null;
{
JavaNode current0 = M1;
if (! current0 .Name
.equals( "TemplateBody_A1_M1_A1") )
   if (javadummy) break  CONDITION227;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Simple --- JJ.M4
Simple = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SimpleSpec
(
Simple
,
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
RES = 
NodeFactory.NewNode(
"expr_templsimple"
, new JavaNode [] {
Res
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST226;
// $$$$$$$$ 
} // CONDITION227 // @@@ end of alternative
CONDITION228: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ResList
JavaNode ResList= null;
// DECLARE for alternative TpList
JavaNode TpList= null;
// DECLARE for alternative List
JavaNode List= null;
{
JavaNode current0 = M1;
if (! current0 .Name
.equals( "TemplateBody_A1_M1_A2") )
   if (javadummy) break  CONDITION228;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to List --- JJ.M4
List = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_FieldSpecList
(
List
,
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpList --- JJ.M4
TpList = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResList --- JJ.M4
ResList = current0 ;
}
RES = 
NodeFactory.NewNode(
"expr_templ"
, new JavaNode [] {
ResList
}
)
;
YyProcs.
NotCovered
(
new JavaStringValue( "template body of this form (field names)" )
,
M1
);
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST226;
// $$$$$$$$ 
} // CONDITION228 // @@@ end of alternative
CONDITION229: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative V
JavaNode V= null;
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative TlEx
JavaNode TlEx= null;
// DECLARE for alternative TlTp
JavaNode TlTp= null;
// DECLARE for alternative HdEx
JavaNode HdEx= null;
// DECLARE for alternative HdTp
JavaNode HdTp= null;
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = M1;
if (! current0 .Name
.equals( "TemplateBody_A1_M1_A3") )
   if (javadummy) break  CONDITION229;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to V --- JJ.M4
V = current1 ;
} //)) children level 1
};
// ***** begin condlist 230 (in cond 229) *****
CONDLIST230: // @@@ begin of alternative group
while(javadummy) {
CONDITION231: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = V;
if (! current0 .Name
.equals( "ArrayValueOrAttrib_A1") )
   if (javadummy) break  CONDITION231;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 232 (in cond 231) *****
CONDLIST232: // @@@ begin of alternative group
while(javadummy) {
CONDITION233: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ArrayElementSpecList_A1") )
   if (javadummy) break  CONDITION233;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
YyProcs.
NimmDas
(
X1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to HdTp --- JJ.M4
HdTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to HdEx --- JJ.M4
HdEx = current0 ;
}
YyProcs.
NimmDasList
(
X2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TlTp --- JJ.M4
TlTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to TlEx --- JJ.M4
TlEx = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST232;
// $$$$$$$$ 
} // CONDITION233 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=232 N=231
if (javadummy) break CONDITION231;
} // CONDLIST232 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST230;
// $$$$$$$$ 
} // CONDITION231 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=230 N=229
if (javadummy) break CONDITION229;
} // CONDLIST230 @@@ end of alternative group
// *** CONTINUE ***
Tp = 
NodeFactory.NewNode(
"tp_nimmdas"
, new JavaNode [] {
NodeFactory.NewNode (
"SeqOf-Tp"
, new JavaNode [] {
HdTp
,
TlTp
}
)
}
)
;
RES = 
NodeFactory.NewNode(
"expr_nimmdas"
, new JavaNode [] {
NodeFactory.NewNode (
"SeqOf-EXPR"
, new JavaNode [] {
HdEx
,
TlEx
}
)
}
)
;
YyProcs.
CheckPrefix
(
Prefix
,
Tp
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST226;
// $$$$$$$$ 
} // CONDITION229 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=226 N=225
if (javadummy) break CONDITION225;
} // CONDLIST226 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 234 (in cond 225) *****
CONDLIST234: // @@@ begin of alternative group
while(javadummy) {
CONDITION235: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-TemplateBody_A1_M2")
if (javadummy) break CONDITION235;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST234;
// $$$$$$$$ 
} // CONDITION235 // @@@ end of alternative
CONDITION236: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Attr
JavaNode Attr= null;
// DECLARE for alternative Extra
JavaNode Extra= null;
{
JavaNode current0 = M2;
if (current0.Name
!= "OneOf-TemplateBody_A1_M2")
if (javadummy) break CONDITION236;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to Attr --- JJ.M4
Attr = current1 ;
} //)) children level 1
};
// ***** begin condlist 237 (in cond 236) *****
CONDLIST237: // @@@ begin of alternative group
while(javadummy) {
CONDITION238: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Attr;
if (! current0 .Name
.equals( "TemplateBody_A1_M2_A1") )
   if (javadummy) break  CONDITION238;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Extra --- JJ.M4
Extra = current1 ;
} //)) children level 1
};
// ***** begin condlist 239 (in cond 238) *****
CONDLIST239: // @@@ begin of alternative group
while(javadummy) {
CONDITION240: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative StrLength
JavaNode StrLength= null;
{
JavaNode current0 = Extra;
if (! current0 .Name
.equals( "ExtraMatchingAttributes_A1") )
   if (javadummy) break  CONDITION240;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to StrLength --- JJ.M4
StrLength = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "extra matching attributes 1" )
,
Extra
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST239;
// $$$$$$$$ 
} // CONDITION240 // @@@ end of alternative
CONDITION241: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Extra;
if (! current0 .Name
.equals( "ExtraMatchingAttributes_A2") )
   if (javadummy) break  CONDITION241;
};
YyProcs.
NotCovered
(
new JavaStringValue( "extra matching attributes 2" )
,
Extra
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST239;
// $$$$$$$$ 
} // CONDITION241 // @@@ end of alternative
CONDITION242: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative StrLength
JavaNode StrLength= null;
{
JavaNode current0 = Extra;
if (! current0 .Name
.equals( "ExtraMatchingAttributes_A3") )
   if (javadummy) break  CONDITION242;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to StrLength --- JJ.M4
StrLength = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "extra matching attributes 3" )
,
Extra
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST239;
// $$$$$$$$ 
} // CONDITION242 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=239 N=238
if (javadummy) break CONDITION238;
} // CONDLIST239 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST237;
// $$$$$$$$ 
} // CONDITION238 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=237 N=236
if (javadummy) break CONDITION236;
} // CONDLIST237 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST234;
// $$$$$$$$ 
} // CONDITION236 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=234 N=225
if (javadummy) break CONDITION225;
} // CONDLIST234 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST224;
// $$$$$$$$ 
} // CONDITION225 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=224 N=223
if (javadummy) break CONDITION223;
} // CONDLIST224 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST222;
// $$$$$$$$ 
} // CONDITION223 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=222 N=221
if (javadummy) break CONDITION221;
} // CONDLIST222 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION221
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_TemplateBody");
}



public
static
void
CheckPrefix(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
CONDITION243:
while(javadummy) {
// ***** begin condlist 244 (in cond 243) *****
CONDLIST244: // @@@ begin of alternative group
while(javadummy) {
CONDITION245: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
// ***** begin condlist 246 (in cond 245) *****
CONDLIST246: // @@@ begin of alternative group
while(javadummy) {
CONDITION247: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative S3
JavaNode S3= null;
// DECLARE for alternative Id
JavaNode Id= null;
// DECLARE for alternative S1
JavaNode S1= null;
// DECLARE for alternative X4
JavaNode X4= null;
// DECLARE for alternative X3
JavaNode X3= null;
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = Prefix;
if (current0.Name
!= "OneOf-ZInLineTemplate_A1_M1")
if (javadummy) break CONDITION247;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "zauberprefix") )
   if (javadummy) break  CONDITION247;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = X2;
if (! current0 .Name
.equals( "InLineTemplate_A1_M1_A1") )
   if (javadummy) break  CONDITION247;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = X3;
if (! current0 .Name
.equals( "InLineTemplate_A1_M1_A1_M1_A2") )
   if (javadummy) break  CONDITION247;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X4 --- JJ.M4
X4 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = X4;
if (! current0 .Name
.equals( "Signature_A1") )
   if (javadummy) break  CONDITION247;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S1 --- JJ.M4
S1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to S3 --- JJ.M4
S3 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = S1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-Signature_A1_M1")
if (javadummy) break CONDITION247;
{ //(( children level 1
} //)) children level 1
};
{
JavaNode current0 = S3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-Signature_A1_M3")
if (javadummy) break CONDITION247;
{ //(( children level 1
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
GloballyDefined
(
Id
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 248 (in cond 247) *****
CONDLIST248: // @@@ begin of alternative group
while(javadummy) {
CONDITION249: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tps
JavaNode Tps= null;
// DECLARE for alternative Fields
JavaNode Fields= null;
// DECLARE for alternative Val
JavaNode Val= null;
// DECLARE for alternative RefNormalizedFieldes
JavaNode RefNormalizedFieldes= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION249;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
//assign current1 to RefNormalizedFieldes --- JJ.M4
RefNormalizedFieldes = current1 ;
} //)) children level 1
};
Val = JavaLib.rtsBoundToKey(RefNormalizedFieldes);
{
JavaNode current0 = Val;
if (! current0 .Name
.equals( "normalizedfields") )
   if (javadummy) break  CONDITION249;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Fields --- JJ.M4
Fields = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_nimmdas") )
   if (javadummy) break  CONDITION249;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tps --- JJ.M4
Tps = current1 ;
} //)) children level 1
};
YyProcs.
CheckCompoundFields
(
Fields
,
Tps
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST248;
// $$$$$$$$ 
} // CONDITION249 // @@@ end of alternative
CONDITION250: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Id
,
new JavaStringValue( "' not a compound type" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST248;
// $$$$$$$$ 
} // CONDITION250 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=248 N=247
if (javadummy) break CONDITION247;
} // CONDLIST248 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST246;
// $$$$$$$$ 
} // CONDITION247 // @@@ end of alternative
CONDITION251: // @@@ begin of alternative
while(javadummy) {
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST246;
// $$$$$$$$ 
} // CONDITION251 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=246 N=245
if (javadummy) break CONDITION245;
} // CONDLIST246 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST244;
// $$$$$$$$ 
} // CONDITION245 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=244 N=243
if (javadummy) break CONDITION243;
} // CONDLIST244 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION243
// failed:
JavaLib.rtsAllAlternativesFailed("CheckPrefix");
}



public
static
void
NimmDas(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc ArrayElementSpec
JavaNode ArrayElementSpec = null;
// DECLARE for proc Code
JavaNode Code = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION252:
while(javadummy) {
// ***** begin condlist 253 (in cond 252) *****
CONDLIST253: // @@@ begin of alternative group
while(javadummy) {
CONDITION254: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to ArrayElementSpec --- JJ.M4
ArrayElementSpec = current0 ;
};
// ***** begin condlist 255 (in cond 254) *****
CONDLIST255: // @@@ begin of alternative group
while(javadummy) {
CONDITION256: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ArrayElementSpec;
if (! current0 .Name
.equals( "ArrayElementSpec_A1") )
   if (javadummy) break  CONDITION256;
};
YyProcs.
NotCovered
(
new JavaStringValue( "array element spec 1" )
,
ArrayElementSpec
);
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
Code = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST255;
// $$$$$$$$ 
} // CONDITION256 // @@@ end of alternative
CONDITION257: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ArrayElementSpec;
if (! current0 .Name
.equals( "ArrayElementSpec_A2") )
   if (javadummy) break  CONDITION257;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "array element spec 2" )
,
ArrayElementSpec
);
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
Code = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST255;
// $$$$$$$$ 
} // CONDITION257 // @@@ end of alternative
CONDITION258: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
{
JavaNode current0 = ArrayElementSpec;
if (! current0 .Name
.equals( "ArrayElementSpec_A3") )
   if (javadummy) break  CONDITION258;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_TemplateBody0
(
T
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST255;
// $$$$$$$$ 
} // CONDITION258 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=255 N=254
if (javadummy) break CONDITION254;
} // CONDLIST255 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST253;
// $$$$$$$$ 
} // CONDITION254 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=253 N=252
if (javadummy) break CONDITION252;
} // CONDLIST253 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION252
// failed:
JavaLib.rtsAllAlternativesFailed("NimmDas");
}



public
static
void
NimmDasList(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
CONDITION259:
while(javadummy) {
// ***** begin condlist 260 (in cond 259) *****
CONDLIST260: // @@@ begin of alternative group
while(javadummy) {
CONDITION261: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative TlEx
JavaNode TlEx= null;
// DECLARE for alternative TlTp
JavaNode TlTp= null;
// DECLARE for alternative HdEx
JavaNode HdEx= null;
// DECLARE for alternative HdTp
JavaNode HdTp= null;
// DECLARE for alternative Hd
JavaNode Hd= null;
// DECLARE for alternative TlX
JavaNode TlX= null;
// DECLARE for alternative HdX
JavaNode HdX= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-ArrayElementSpecList_A1_M2")
if (javadummy) break CONDITION261;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HdX --- JJ.M4
HdX = current1 ;
current1 = current0.Child1[1];
//assign current1 to TlX --- JJ.M4
TlX = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HdX;
if (! current0 .Name
.equals( "ArrayElementSpecList_A1_M2_A1") )
   if (javadummy) break  CONDITION261;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Hd --- JJ.M4
Hd = current1 ;
} //)) children level 1
};
YyProcs.
NimmDas
(
Hd
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to HdTp --- JJ.M4
HdTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to HdEx --- JJ.M4
HdEx = current0 ;
}
YyProcs.
NimmDasList
(
TlX
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TlTp --- JJ.M4
TlTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to TlEx --- JJ.M4
TlEx = current0 ;
}
yy_outparam_0 = 
NodeFactory.NewNode (
"SeqOf-Tp"
, new JavaNode [] {
HdTp
,
TlTp
}
)
;
yy_outparam_1 = 
NodeFactory.NewNode (
"SeqOf-EXPR"
, new JavaNode [] {
HdEx
,
TlEx
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST260;
// $$$$$$$$ 
} // CONDITION261 // @@@ end of alternative
CONDITION262: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-ArrayElementSpecList_A1_M2")
if (javadummy) break CONDITION262;
};
yy_outparam_0 = 
NodeFactory.NewNode (
"NilOf-Tp"
,  new JavaNode [] {})
;
yy_outparam_1 = 
NodeFactory.NewNode (
"NilOf-EXPR"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST260;
// $$$$$$$$ 
} // CONDITION262 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=260 N=259
if (javadummy) break CONDITION259;
} // CONDLIST260 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION259
// failed:
JavaLib.rtsAllAlternativesFailed("NimmDasList");
}



public
static
void
Trafo_SimpleSpec(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc SpecAndMore
JavaNode SpecAndMore = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION263:
while(javadummy) {
// ***** begin condlist 264 (in cond 263) *****
CONDLIST264: // @@@ begin of alternative group
while(javadummy) {
CONDITION265: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
// ***** begin condlist 266 (in cond 265) *****
CONDLIST266: // @@@ begin of alternative group
while(javadummy) {
CONDITION267: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Expr
JavaNode Expr= null;
// DECLARE for alternative X1
JavaNode X1= null;
// DECLARE for alternative X1M2
JavaNode X1M2= null;
// DECLARE for alternative Single2
JavaNode Single2= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "SimpleSpec_A1") )
   if (javadummy) break  CONDITION267;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 268 (in cond 267) *****
CONDLIST268: // @@@ begin of alternative group
while(javadummy) {
CONDITION269: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "SimpleSpec_A1_M1_A1") )
   if (javadummy) break  CONDITION269;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Single2 --- JJ.M4
Single2 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X1M2 --- JJ.M4
X1M2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 270 (in cond 269) *****
CONDLIST270: // @@@ begin of alternative group
while(javadummy) {
CONDITION271: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1M2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-SimpleSpec_A1_M1_A1_M2")
if (javadummy) break CONDITION271;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST270;
// $$$$$$$$ 
} // CONDITION271 // @@@ end of alternative
CONDITION272: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1M2;
if (current0.Name
!= "OneOf-SimpleSpec_A1_M1_A1_M2")
if (javadummy) break CONDITION272;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "& SimpleTemplateSpec" )
,
X1M2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST270;
// $$$$$$$$ 
} // CONDITION272 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=270 N=269
if (javadummy) break CONDITION269;
} // CONDLIST270 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST268;
// $$$$$$$$ 
} // CONDITION269 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=268 N=267
if (javadummy) break CONDITION267;
} // CONDLIST268 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Trafo_SingleExpression
(
Single2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Expr --- JJ.M4
Expr = current0 ;
}
SpecAndMore = 
NodeFactory.NewNode(
"spec_unnamedfield"
, new JavaNode [] {
Expr
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST266;
// $$$$$$$$ 
} // CONDITION267 // @@@ end of alternative
CONDITION273: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "SimpleSpec_A2") )
   if (javadummy) break  CONDITION273;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 274 (in cond 273) *****
CONDLIST274: // @@@ begin of alternative group
while(javadummy) {
CONDITION275: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2X1
JavaNode X2X1= null;
{
JavaNode current0 = X2;
if (! current0 .Name
.equals( "SimpleTemplateSpec_A1") )
   if (javadummy) break  CONDITION275;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2X1 --- JJ.M4
X2X1 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "template spec 2" )
,
X2X1
);
SpecAndMore = 
NodeFactory.NewNode(
"spec_unfertig"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST274;
// $$$$$$$$ 
} // CONDITION275 // @@@ end of alternative
CONDITION276: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2X2
JavaNode X2X2= null;
// DECLARE for alternative E
JavaNode E= null;
// DECLARE for alternative X2X2X1b
JavaNode X2X2X1b= null;
// DECLARE for alternative X2X2X1a
JavaNode X2X2X1a= null;
{
JavaNode current0 = X2;
if (! current0 .Name
.equals( "SimpleTemplateSpec_A2") )
   if (javadummy) break  CONDITION276;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2X2 --- JJ.M4
X2X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 277 (in cond 276) *****
CONDLIST277: // @@@ begin of alternative group
while(javadummy) {
CONDITION278: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2X2;
if (! current0 .Name
.equals( "SimpleTemplateSpec_A2_M1_A1") )
   if (javadummy) break  CONDITION278;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2X2X1a --- JJ.M4
X2X2X1a = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2X2X1b --- JJ.M4
X2X2X1b = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SingleTemplateExpression
(
X2X2X1a
,
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to E --- JJ.M4
E = current0 ;
}
SpecAndMore = 
NodeFactory.NewNode(
"spec_unnamedfield"
, new JavaNode [] {
E
}
)
;
// ***** begin condlist 279 (in cond 278) *****
CONDLIST279: // @@@ begin of alternative group
while(javadummy) {
CONDITION280: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2X2X1b;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-SimpleTemplateSpec_A2_M1_A1_M2")
if (javadummy) break CONDITION280;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST279;
// $$$$$$$$ 
} // CONDITION280 // @@@ end of alternative
CONDITION281: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2X2X1b;
if (current0.Name
!= "OneOf-SimpleTemplateSpec_A2_M1_A1_M2")
if (javadummy) break CONDITION281;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "template spec 7" )
,
X2X2X1b
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST279;
// $$$$$$$$ 
} // CONDITION281 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=279 N=278
if (javadummy) break CONDITION278;
} // CONDLIST279 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST277;
// $$$$$$$$ 
} // CONDITION278 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=277 N=276
if (javadummy) break CONDITION276;
} // CONDLIST277 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST274;
// $$$$$$$$ 
} // CONDITION276 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=274 N=273
if (javadummy) break CONDITION273;
} // CONDLIST274 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST266;
// $$$$$$$$ 
} // CONDITION273 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=266 N=265
if (javadummy) break CONDITION265;
} // CONDLIST266 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
SpecAndMore
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST264;
// $$$$$$$$ 
} // CONDITION265 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=264 N=263
if (javadummy) break CONDITION263;
} // CONDLIST264 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION263
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_SimpleSpec");
}



public
static
void
Trafo_SingleTemplateExpression(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc X2X2X1a
JavaNode X2X2X1a = null;
// DECLARE for proc FinalErgTp
JavaNode FinalErgTp = null;
// DECLARE for proc Ergebnis
JavaNode Ergebnis = null;
CONDITION282:
while(javadummy) {
// ***** begin condlist 283 (in cond 282) *****
CONDLIST283: // @@@ begin of alternative group
while(javadummy) {
CONDITION284: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X2X2X1a --- JJ.M4
X2X2X1a = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
// ***** begin condlist 285 (in cond 284) *****
CONDLIST285: // @@@ begin of alternative group
while(javadummy) {
CONDITION286: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative MatchingSymbol
JavaNode MatchingSymbol= null;
{
JavaNode current0 = X2X2X1a;
if (! current0 .Name
.equals( "SingleTemplateExpression_A1") )
   if (javadummy) break  CONDITION286;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to MatchingSymbol --- JJ.M4
MatchingSymbol = current1 ;
} //)) children level 1
};
// ***** begin condlist 287 (in cond 286) *****
CONDLIST287: // @@@ begin of alternative group
while(javadummy) {
CONDITION288: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ErgTp
JavaNode ErgTp= null;
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A1") )
   if (javadummy) break  CONDITION288;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "complement" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
ErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST287;
// $$$$$$$$ 
} // CONDITION288 // @@@ end of alternative
CONDITION289: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative M
JavaNode M= null;
// DECLARE for alternative MM
JavaNode MM= null;
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A2") )
   if (javadummy) break  CONDITION289;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to M --- JJ.M4
M = current1 ;
} //)) children level 1
};
// ***** begin condlist 290 (in cond 289) *****
CONDLIST290: // @@@ begin of alternative group
while(javadummy) {
CONDITION291: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M;
if (! current0 .Name
.equals( "MatchingSymbol_A2_M1_A1") )
   if (javadummy) break  CONDITION291;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to MM --- JJ.M4
MM = current1 ;
} //)) children level 1
};
// ***** begin condlist 292 (in cond 291) *****
CONDLIST292: // @@@ begin of alternative group
while(javadummy) {
CONDITION293: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MM;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-MatchingSymbol_A2_M1_A1_M2")
if (javadummy) break CONDITION293;
{ //(( children level 1
} //)) children level 1
};
YyProcs.
JokerCode
(
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to FinalErgTp --- JJ.M4
FinalErgTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Ergebnis --- JJ.M4
Ergebnis = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST292;
// $$$$$$$$ 
} // CONDITION293 // @@@ end of alternative
CONDITION294: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative L
JavaNode L= null;
{
JavaNode current0 = MM;
if (current0.Name
!= "OneOf-MatchingSymbol_A2_M1_A1_M2")
if (javadummy) break CONDITION294;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to L --- JJ.M4
L = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "length match" )
,
L
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST292;
// $$$$$$$$ 
} // CONDITION294 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=292 N=291
if (javadummy) break CONDITION291;
} // CONDLIST292 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST290;
// $$$$$$$$ 
} // CONDITION291 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=290 N=289
if (javadummy) break CONDITION289;
} // CONDLIST290 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST287;
// $$$$$$$$ 
} // CONDITION289 // @@@ end of alternative
CONDITION295: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A3") )
   if (javadummy) break  CONDITION295;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Matching 3" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST287;
// $$$$$$$$ 
} // CONDITION295 // @@@ end of alternative
CONDITION296: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A4") )
   if (javadummy) break  CONDITION296;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Matching 4" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST287;
// $$$$$$$$ 
} // CONDITION296 // @@@ end of alternative
CONDITION297: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A5") )
   if (javadummy) break  CONDITION297;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Matching 5" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST287;
// $$$$$$$$ 
} // CONDITION297 // @@@ end of alternative
CONDITION298: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A6") )
   if (javadummy) break  CONDITION298;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Matching 6" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST287;
// $$$$$$$$ 
} // CONDITION298 // @@@ end of alternative
CONDITION299: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A7") )
   if (javadummy) break  CONDITION299;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Matching 7" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST287;
// $$$$$$$$ 
} // CONDITION299 // @@@ end of alternative
CONDITION300: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A8") )
   if (javadummy) break  CONDITION300;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Matching 8" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST287;
// $$$$$$$$ 
} // CONDITION300 // @@@ end of alternative
CONDITION301: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A9") )
   if (javadummy) break  CONDITION301;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Matching 9" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST287;
// $$$$$$$$ 
} // CONDITION301 // @@@ end of alternative
CONDITION302: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A10") )
   if (javadummy) break  CONDITION302;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Matching 10" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST287;
// $$$$$$$$ 
} // CONDITION302 // @@@ end of alternative
CONDITION303: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A11") )
   if (javadummy) break  CONDITION303;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Matching 11" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST287;
// $$$$$$$$ 
} // CONDITION303 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=287 N=286
if (javadummy) break CONDITION286;
} // CONDLIST287 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST285;
// $$$$$$$$ 
} // CONDITION286 // @@@ end of alternative
CONDITION304: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative K
JavaNode K= null;
// DECLARE for alternative K2b
JavaNode K2b= null;
// DECLARE for alternative K2a
JavaNode K2a= null;
// DECLARE for alternative K2aCode
JavaNode K2aCode= null;
// DECLARE for alternative Ausdruck
JavaNode Ausdruck= null;
// DECLARE for alternative ErgTp
JavaNode ErgTp= null;
// DECLARE for alternative Lb
JavaNode Lb= null;
// DECLARE for alternative La
JavaNode La= null;
{
JavaNode current0 = X2X2X1a;
if (! current0 .Name
.equals( "SingleTemplateExpression_A2") )
   if (javadummy) break  CONDITION304;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to K --- JJ.M4
K = current1 ;
} //)) children level 1
};
// ***** begin condlist 305 (in cond 304) *****
CONDLIST305: // @@@ begin of alternative group
while(javadummy) {
CONDITION306: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = K;
if (! current0 .Name
.equals( "SingleTemplateExpression_A2_M1_A1") )
   if (javadummy) break  CONDITION306;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to K2a --- JJ.M4
K2a = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to K2b --- JJ.M4
K2b = current1 ;
} //)) children level 1
};
// ***** begin condlist 307 (in cond 306) *****
CONDLIST307: // @@@ begin of alternative group
while(javadummy) {
CONDITION308: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = K2a;
if (! current0 .Name
.equals( "TemplateRefWithParList_A1") )
   if (javadummy) break  CONDITION308;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to La --- JJ.M4
La = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Lb --- JJ.M4
Lb = current1 ;
} //)) children level 1
};
YyProcs.
LaLa
(
La
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ErgTp --- JJ.M4
ErgTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Ausdruck --- JJ.M4
Ausdruck = current0 ;
}
K2aCode = 
Ausdruck
;
// ***** begin condlist 309 (in cond 308) *****
CONDLIST309: // @@@ begin of alternative group
while(javadummy) {
CONDITION310: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Lb;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-TemplateRefWithParList_A1_M2")
if (javadummy) break CONDITION310;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST309;
// $$$$$$$$ 
} // CONDITION310 // @@@ end of alternative
CONDITION311: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Lb;
if (current0.Name
!= "OneOf-TemplateRefWithParList_A1_M2")
if (javadummy) break CONDITION311;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "template spec 5" )
,
Lb
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST309;
// $$$$$$$$ 
} // CONDITION311 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=309 N=308
if (javadummy) break CONDITION308;
} // CONDLIST309 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST307;
// $$$$$$$$ 
} // CONDITION308 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=307 N=306
if (javadummy) break CONDITION306;
} // CONDLIST307 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 312 (in cond 306) *****
CONDLIST312: // @@@ begin of alternative group
while(javadummy) {
CONDITION313: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = K2b;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-SingleTemplateExpression_A2_M1_A1_M2")
if (javadummy) break CONDITION313;
{ //(( children level 1
} //)) children level 1
};
Ergebnis = 
Ausdruck
;
FinalErgTp = 
ErgTp
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST312;
// $$$$$$$$ 
} // CONDITION313 // @@@ end of alternative
CONDITION314: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative More
JavaNode More= null;
// DECLARE for alternative ResCode
JavaNode ResCode= null;
// DECLARE for alternative ResTp
JavaNode ResTp= null;
// DECLARE for alternative M
JavaNode M= null;
{
JavaNode current0 = K2b;
if (current0.Name
!= "OneOf-SingleTemplateExpression_A2_M1_A1_M2")
if (javadummy) break CONDITION314;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to More --- JJ.M4
More = current1 ;
} //)) children level 1
};
// ***** begin condlist 315 (in cond 314) *****
CONDLIST315: // @@@ begin of alternative group
while(javadummy) {
CONDITION316: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = More;
if (! current0 .Name
.equals( "SingleTemplateExpression_A2_M1_A1_M2_A1") )
   if (javadummy) break  CONDITION316;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to M --- JJ.M4
M = current1 ;
} //)) children level 1
};
YyProcs.
HandleExtendedFieldReference
(
M
,
ErgTp
,
K2aCode
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ResTp --- JJ.M4
ResTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResCode --- JJ.M4
ResCode = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST315;
// $$$$$$$$ 
} // CONDITION316 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=315 N=314
if (javadummy) break CONDITION314;
} // CONDLIST315 @@@ end of alternative group
// *** CONTINUE ***
Ergebnis = 
ResCode
;
FinalErgTp = 
ResTp
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST312;
// $$$$$$$$ 
} // CONDITION314 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=312 N=306
if (javadummy) break CONDITION306;
} // CONDLIST312 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST305;
// $$$$$$$$ 
} // CONDITION306 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=305 N=304
if (javadummy) break CONDITION304;
} // CONDLIST305 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST285;
// $$$$$$$$ 
} // CONDITION304 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=285 N=284
if (javadummy) break CONDITION284;
} // CONDLIST285 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
FinalErgTp
;
yy_outparam_1 = 
Ergebnis
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST283;
// $$$$$$$$ 
} // CONDITION284 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=283 N=282
if (javadummy) break CONDITION282;
} // CONDLIST283 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION282
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_SingleTemplateExpression");
}



public
static
void
LaLa(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc La
JavaNode La = null;
// DECLARE for proc Name
JavaNode Name = null;
// DECLARE for proc J
JavaNode J = null;
// DECLARE for proc Ausdruck
JavaNode Ausdruck = null;
// DECLARE for proc ErgTp
JavaNode ErgTp = null;
CONDITION317:
while(javadummy) {
// ***** begin condlist 318 (in cond 317) *****
CONDLIST318: // @@@ begin of alternative group
while(javadummy) {
CONDITION319: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to La --- JJ.M4
La = current0 ;
};
// ***** begin condlist 320 (in cond 319) *****
CONDLIST320: // @@@ begin of alternative group
while(javadummy) {
CONDITION321: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = La;
if (! current0 .Name
.equals( "ExtendedIdentifier_A1") )
   if (javadummy) break  CONDITION321;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to J --- JJ.M4
J = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Name --- JJ.M4
Name = current1 ;
} //)) children level 1
};
// ***** begin condlist 322 (in cond 321) *****
CONDLIST322: // @@@ begin of alternative group
while(javadummy) {
CONDITION323: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative JJ
JavaNode JJ= null;
// DECLARE for alternative K2aCode
JavaNode K2aCode= null;
// DECLARE for alternative PosF
JavaNode PosF= null;
// DECLARE for alternative VDef
JavaNode VDef= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Field
JavaNode Field= null;
// DECLARE for alternative Record
JavaNode Record= null;
// DECLARE for alternative V
JavaNode V= null;
// DECLARE for alternative K2aVTp
JavaNode K2aVTp= null;
{
JavaNode current0 = J;
if (current0.Name
!= "OneOf-ExtendedIdentifier_A1_M1")
if (javadummy) break CONDITION323;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to JJ --- JJ.M4
JJ = current1 ;
} //)) children level 1
};
// ***** begin condlist 324 (in cond 323) *****
CONDLIST324: // @@@ begin of alternative group
while(javadummy) {
CONDITION325: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = JJ;
if (! current0 .Name
.equals( "ExtendedIdentifier_A1_M1_A1") )
   if (javadummy) break  CONDITION325;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to V --- JJ.M4
V = current1 ;
} //)) children level 1
};
Record = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
V
}
)
;
Field = 
Name
;
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(V);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
LocallyDefined
(
V
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to VDef --- JJ.M4
VDef = current0 ;
}
// ***** begin condlist 326 (in cond 325) *****
CONDLIST326: // @@@ begin of alternative group
while(javadummy) {
CONDITION327: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative VTp
JavaNode VTp= null;
{
JavaNode current0 = VDef;
if (! current0 .Name
.equals( "localvar") )
   if (javadummy) break  CONDITION327;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to VTp --- JJ.M4
VTp = current1 ;
} //)) children level 1
};
{
JavaNode current0 = VTp;
if (! current0 .Name
.equals( "tp_referenced") )
   if (javadummy) break  CONDITION327;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
K2aVTp = 
VTp
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST326;
// $$$$$$$$ 
} // CONDITION327 // @@@ end of alternative
CONDITION328: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
V
,
new JavaStringValue( "' not a local variable" )
,
Pos
);
K2aVTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST326;
// $$$$$$$$ 
} // CONDITION328 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=326 N=325
if (javadummy) break CONDITION325;
} // CONDLIST326 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Field);
//assign current0 to PosF --- JJ.M4
PosF = current0 ;
};
YyProcs.
LookupField
(
Field
,
K2aVTp
,
PosF
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ErgTp --- JJ.M4
ErgTp = current0 ;
}
Ausdruck = 
NodeFactory.NewNode(
"fieldselection"
, new JavaNode [] {
Record
,
Field
}
)
;
K2aCode = 
Ausdruck
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST324;
// $$$$$$$$ 
} // CONDITION325 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=324 N=323
if (javadummy) break CONDITION323;
} // CONDLIST324 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST322;
// $$$$$$$$ 
} // CONDITION323 // @@@ end of alternative
CONDITION329: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative DefName
JavaNode DefName= null;
// DECLARE for alternative PosName
JavaNode PosName= null;
// DECLARE for alternative VarType
JavaNode VarType= null;
{
JavaNode current0 = J;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ExtendedIdentifier_A1_M1")
if (javadummy) break CONDITION329;
{ //(( children level 1
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Name);
//assign current0 to PosName --- JJ.M4
PosName = current0 ;
};
YyProcs.
LocallyDefined
(
Name
,
PosName
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to DefName --- JJ.M4
DefName = current0 ;
}
// ***** begin condlist 330 (in cond 329) *****
CONDLIST330: // @@@ begin of alternative group
while(javadummy) {
CONDITION331: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = DefName;
if (! current0 .Name
.equals( "localvar") )
   if (javadummy) break  CONDITION331;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to VarType --- JJ.M4
VarType = current1 ;
} //)) children level 1
};
Ausdruck = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
Name
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST330;
// $$$$$$$$ 
} // CONDITION331 // @@@ end of alternative
CONDITION332: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = DefName;
if (! current0 .Name
.equals( "componentmember_var") )
   if (javadummy) break  CONDITION332;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to VarType --- JJ.M4
VarType = current1 ;
} //)) children level 1
};
Ausdruck = 
NodeFactory.NewNode(
"compidexpr"
, new JavaNode [] {
Name
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST330;
// $$$$$$$$ 
} // CONDITION332 // @@@ end of alternative
CONDITION333: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Name);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Name
,
new JavaStringValue( "' unexpected in expression" )
,
Pos
);
Ausdruck = 
NodeFactory.NewNode(
"compidexpr"
, new JavaNode [] {
new JavaStringValue( "-" )
}
)
;
VarType = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST330;
// $$$$$$$$ 
} // CONDITION333 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=330 N=329
if (javadummy) break CONDITION329;
} // CONDLIST330 @@@ end of alternative group
// *** CONTINUE ***
ErgTp = 
VarType
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST322;
// $$$$$$$$ 
} // CONDITION329 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=322 N=321
if (javadummy) break CONDITION321;
} // CONDLIST322 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST320;
// $$$$$$$$ 
} // CONDITION321 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=320 N=319
if (javadummy) break CONDITION319;
} // CONDLIST320 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
ErgTp
;
yy_outparam_1 = 
Ausdruck
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST318;
// $$$$$$$$ 
} // CONDITION319 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=318 N=317
if (javadummy) break CONDITION317;
} // CONDLIST318 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION317
// failed:
JavaLib.rtsAllAlternativesFailed("LaLa");
}



public
static
void
JokerCode(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc Ergebnis
JavaNode Ergebnis = null;
CONDITION334:
while(javadummy) {
// ***** begin condlist 335 (in cond 334) *****
CONDLIST335: // @@@ begin of alternative group
while(javadummy) {
CONDITION336: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
// ***** begin condlist 337 (in cond 336) *****
CONDLIST337: // @@@ begin of alternative group
while(javadummy) {
CONDITION338: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Prefix;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ZInLineTemplate_A1_M1")
if (javadummy) break CONDITION338;
{ //(( children level 1
} //)) children level 1
};
Ergebnis = 
NodeFactory.NewNode(
"fragezeichen"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_joker"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST337;
// $$$$$$$$ 
} // CONDITION338 // @@@ end of alternative
CONDITION339: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Q
JavaNode Q= null;
// DECLARE for alternative Zau
JavaNode Zau= null;
// DECLARE for alternative R
JavaNode R= null;
{
JavaNode current0 = Prefix;
if (current0.Name
!= "OneOf-ZInLineTemplate_A1_M1")
if (javadummy) break CONDITION339;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to Zau --- JJ.M4
Zau = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Zau;
if (! current0 .Name
.equals( "zauberprefix") )
   if (javadummy) break  CONDITION339;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Q --- JJ.M4
Q = current1 ;
} //)) children level 1
};
// ***** begin condlist 340 (in cond 339) *****
CONDLIST340: // @@@ begin of alternative group
while(javadummy) {
CONDITION341: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Q;
if (! current0 .Name
.equals( "InLineTemplate_A1_M1_A1") )
   if (javadummy) break  CONDITION341;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to R --- JJ.M4
R = current1 ;
} //)) children level 1
};
// ***** begin condlist 342 (in cond 341) *****
CONDLIST342: // @@@ begin of alternative group
while(javadummy) {
CONDITION343: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
{
JavaNode current0 = R;
if (! current0 .Name
.equals( "InLineTemplate_A1_M1_A1_M1_A1") )
   if (javadummy) break  CONDITION343;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
// ***** begin condlist 344 (in cond 343) *****
CONDLIST344: // @@@ begin of alternative group
while(javadummy) {
CONDITION345: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = T;
if (! current0 .Name
.equals( "Type_A1") )
   if (javadummy) break  CONDITION345;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 346 (in cond 345) *****
CONDLIST346: // @@@ begin of alternative group
while(javadummy) {
CONDITION347: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A1") )
   if (javadummy) break  CONDITION347;
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST346;
// $$$$$$$$ 
} // CONDITION347 // @@@ end of alternative
CONDITION348: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A2") )
   if (javadummy) break  CONDITION348;
};
Ergebnis = 
NodeFactory.NewNode(
"fragezeichen_tp"
, new JavaNode [] {
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST346;
// $$$$$$$$ 
} // CONDITION348 // @@@ end of alternative
CONDITION349: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A3") )
   if (javadummy) break  CONDITION349;
};
Ergebnis = 
NodeFactory.NewNode(
"fragezeichen_tp"
, new JavaNode [] {
NodeFactory.NewNode(
"tp_charstring"
, new JavaNode [] {
}
)
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_charstring"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST346;
// $$$$$$$$ 
} // CONDITION349 // @@@ end of alternative
CONDITION350: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A4") )
   if (javadummy) break  CONDITION350;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST346;
// $$$$$$$$ 
} // CONDITION350 // @@@ end of alternative
CONDITION351: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A5") )
   if (javadummy) break  CONDITION351;
};
Ergebnis = 
NodeFactory.NewNode(
"fragezeichen_tp"
, new JavaNode [] {
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST346;
// $$$$$$$$ 
} // CONDITION351 // @@@ end of alternative
CONDITION352: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A6") )
   if (javadummy) break  CONDITION352;
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST346;
// $$$$$$$$ 
} // CONDITION352 // @@@ end of alternative
CONDITION353: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A7") )
   if (javadummy) break  CONDITION353;
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST346;
// $$$$$$$$ 
} // CONDITION353 // @@@ end of alternative
CONDITION354: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A8") )
   if (javadummy) break  CONDITION354;
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST346;
// $$$$$$$$ 
} // CONDITION354 // @@@ end of alternative
CONDITION355: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A9") )
   if (javadummy) break  CONDITION355;
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST346;
// $$$$$$$$ 
} // CONDITION355 // @@@ end of alternative
CONDITION356: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A10") )
   if (javadummy) break  CONDITION356;
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST346;
// $$$$$$$$ 
} // CONDITION356 // @@@ end of alternative
CONDITION357: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A11") )
   if (javadummy) break  CONDITION357;
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST346;
// $$$$$$$$ 
} // CONDITION357 // @@@ end of alternative
CONDITION358: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A12") )
   if (javadummy) break  CONDITION358;
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST346;
// $$$$$$$$ 
} // CONDITION358 // @@@ end of alternative
CONDITION359: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A13") )
   if (javadummy) break  CONDITION359;
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST346;
// $$$$$$$$ 
} // CONDITION359 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=346 N=345
if (javadummy) break CONDITION345;
} // CONDLIST346 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST344;
// $$$$$$$$ 
} // CONDITION345 // @@@ end of alternative
CONDITION360: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative Y5
JavaNode Y5= null;
// DECLARE for alternative Y4
JavaNode Y4= null;
// DECLARE for alternative Y3
JavaNode Y3= null;
// DECLARE for alternative Y2
JavaNode Y2= null;
// DECLARE for alternative Y1
JavaNode Y1= null;
{
JavaNode current0 = T;
if (! current0 .Name
.equals( "Type_A2") )
   if (javadummy) break  CONDITION360;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 361 (in cond 360) *****
CONDLIST361: // @@@ begin of alternative group
while(javadummy) {
CONDITION362: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (! current0 .Name
.equals( "ReferencedType_A1") )
   if (javadummy) break  CONDITION362;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Y1 --- JJ.M4
Y1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Y2 --- JJ.M4
Y2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Y3 --- JJ.M4
Y3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to Y4 --- JJ.M4
Y4 = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to Y5 --- JJ.M4
Y5 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST361;
// $$$$$$$$ 
} // CONDITION362 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=361 N=360
if (javadummy) break CONDITION360;
} // CONDLIST361 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST344;
// $$$$$$$$ 
} // CONDITION360 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=344 N=343
if (javadummy) break CONDITION343;
} // CONDLIST344 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST342;
// $$$$$$$$ 
} // CONDITION343 // @@@ end of alternative
CONDITION363: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Sig
JavaNode Sig= null;
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Name
JavaNode Name= null;
// DECLARE for alternative M3
JavaNode M3= null;
// DECLARE for alternative M2
JavaNode M2= null;
// DECLARE for alternative M1
JavaNode M1= null;
{
JavaNode current0 = R;
if (! current0 .Name
.equals( "InLineTemplate_A1_M1_A1_M1_A2") )
   if (javadummy) break  CONDITION363;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Sig --- JJ.M4
Sig = current1 ;
} //)) children level 1
};
// ***** begin condlist 364 (in cond 363) *****
CONDLIST364: // @@@ begin of alternative group
while(javadummy) {
CONDITION365: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Sig;
if (! current0 .Name
.equals( "Signature_A1") )
   if (javadummy) break  CONDITION365;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to M1 --- JJ.M4
M1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to M2 --- JJ.M4
M2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to M3 --- JJ.M4
M3 = current1 ;
} //)) children level 1
};
// ***** begin condlist 366 (in cond 365) *****
CONDLIST366: // @@@ begin of alternative group
while(javadummy) {
CONDITION367: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-Signature_A1_M1")
if (javadummy) break CONDITION367;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST366;
// $$$$$$$$ 
} // CONDITION367 // @@@ end of alternative
CONDITION368: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative I
JavaNode I= null;
{
JavaNode current0 = M1;
if (current0.Name
!= "OneOf-Signature_A1_M1")
if (javadummy) break CONDITION368;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to I --- JJ.M4
I = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "id.id" )
,
I
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST366;
// $$$$$$$$ 
} // CONDITION368 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=366 N=365
if (javadummy) break CONDITION365;
} // CONDLIST366 @@@ end of alternative group
// *** CONTINUE ***
Name = 
M2
;
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Name);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
GloballyDefined
(
Name
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 369 (in cond 365) *****
CONDLIST369: // @@@ begin of alternative group
while(javadummy) {
CONDITION370: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION370;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
} //)) children level 1
};
Ergebnis = 
NodeFactory.NewNode(
"fragezeichen_record"
, new JavaNode [] {
Name
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_referenced"
, new JavaNode [] {
Def
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST369;
// $$$$$$$$ 
} // CONDITION370 // @@@ end of alternative
CONDITION371: // @@@ begin of alternative
while(javadummy) {
YyProcs.
NotCovered
(
new JavaStringValue( "this kind of prefix" )
,
Name
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST369;
// $$$$$$$$ 
} // CONDITION371 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=369 N=365
if (javadummy) break CONDITION365;
} // CONDLIST369 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 372 (in cond 365) *****
CONDLIST372: // @@@ begin of alternative group
while(javadummy) {
CONDITION373: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-Signature_A1_M3")
if (javadummy) break CONDITION373;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST372;
// $$$$$$$$ 
} // CONDITION373 // @@@ end of alternative
CONDITION374: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative P
JavaNode P= null;
{
JavaNode current0 = M3;
if (current0.Name
!= "OneOf-Signature_A1_M3")
if (javadummy) break CONDITION374;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to P --- JJ.M4
P = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "parameters" )
,
Name
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST372;
// $$$$$$$$ 
} // CONDITION374 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=372 N=365
if (javadummy) break CONDITION365;
} // CONDLIST372 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST364;
// $$$$$$$$ 
} // CONDITION365 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=364 N=363
if (javadummy) break CONDITION363;
} // CONDLIST364 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST342;
// $$$$$$$$ 
} // CONDITION363 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=342 N=341
if (javadummy) break CONDITION341;
} // CONDLIST342 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST340;
// $$$$$$$$ 
} // CONDITION341 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=340 N=339
if (javadummy) break CONDITION339;
} // CONDLIST340 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST337;
// $$$$$$$$ 
} // CONDITION339 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=337 N=336
if (javadummy) break CONDITION336;
} // CONDLIST337 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
Ergebnis
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST335;
// $$$$$$$$ 
} // CONDITION336 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=335 N=334
if (javadummy) break CONDITION334;
} // CONDLIST335 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION334
// failed:
JavaLib.rtsAllAlternativesFailed("JokerCode");
}



public
static
void
Trafo_FieldSpecList(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc List
JavaNode List = null;
// DECLARE for proc M2
JavaNode M2 = null;
// DECLARE for proc TpList
JavaNode TpList = null;
// DECLARE for proc ResList
JavaNode ResList = null;
CONDITION375:
while(javadummy) {
// ***** begin condlist 376 (in cond 375) *****
CONDLIST376: // @@@ begin of alternative group
while(javadummy) {
CONDITION377: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to List --- JJ.M4
List = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
// ***** begin condlist 378 (in cond 377) *****
CONDLIST378: // @@@ begin of alternative group
while(javadummy) {
CONDITION379: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = List;
if (! current0 .Name
.equals( "FieldSpecList_A1") )
   if (javadummy) break  CONDITION379;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to M2 --- JJ.M4
M2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 380 (in cond 379) *****
CONDLIST380: // @@@ begin of alternative group
while(javadummy) {
CONDITION381: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FieldSpecList_A1_M2")
if (javadummy) break CONDITION381;
{ //(( children level 1
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "xxx" )
,
M2
);
ResList = 
NodeFactory.NewNode (
"NilOf-FIELDSPEC"
,  new JavaNode [] {})
;
TpList = 
NodeFactory.NewNode (
"NilOf-Tp"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST380;
// $$$$$$$$ 
} // CONDITION381 // @@@ end of alternative
CONDITION382: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Spec
JavaNode Spec= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
// DECLARE for alternative Rest
JavaNode Rest= null;
// DECLARE for alternative First
JavaNode First= null;
// DECLARE for alternative FirstRest
JavaNode FirstRest= null;
{
JavaNode current0 = M2;
if (current0.Name
!= "OneOf-FieldSpecList_A1_M2")
if (javadummy) break CONDITION382;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to FirstRest --- JJ.M4
FirstRest = current1 ;
} //)) children level 1
};
{
JavaNode current0 = FirstRest;
if (! current0 .Name
.equals( "FieldSpecList_A1_M2_A1") )
   if (javadummy) break  CONDITION382;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to First --- JJ.M4
First = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Rest --- JJ.M4
Rest = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_FieldSpec
(
First
,
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Spec --- JJ.M4
Spec = current0 ;
}
// ***** begin condlist 383 (in cond 382) *****
CONDLIST383: // @@@ begin of alternative group
while(javadummy) {
CONDITION384: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Spec2
JavaNode Spec2= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative Tl
JavaNode Tl= null;
// DECLARE for alternative Hd
JavaNode Hd= null;
{
JavaNode current0 = Rest;
if (current0.Name
!= "SeqOf-FieldSpecList_A1_M2_A1_M2")
if (javadummy) break CONDITION384;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Hd --- JJ.M4
Hd = current1 ;
current1 = current0.Child1[1];
//assign current1 to Tl --- JJ.M4
Tl = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_FieldSpecList_A1_M2_A1_M2
(
Hd
,
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Spec2 --- JJ.M4
Spec2 = current0 ;
}
ResList = 
NodeFactory.NewNode (
"SeqOf-FIELDSPEC"
, new JavaNode [] {
Spec2
,
NodeFactory.NewNode (
"NilOf-FIELDSPEC"
,  new JavaNode [] {})
}
)
;
TpList = 
NodeFactory.NewNode (
"SeqOf-Tp"
, new JavaNode [] {
Tp2
,
NodeFactory.NewNode (
"NilOf-Tp"
,  new JavaNode [] {})
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST383;
// $$$$$$$$ 
} // CONDITION384 // @@@ end of alternative
CONDITION385: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Rest;
if (current0.Name
!= "NilOf-FieldSpecList_A1_M2_A1_M2")
if (javadummy) break CONDITION385;
};
ResList = 
NodeFactory.NewNode (
"NilOf-FIELDSPEC"
,  new JavaNode [] {})
;
TpList = 
NodeFactory.NewNode (
"NilOf-Tp"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST383;
// $$$$$$$$ 
} // CONDITION385 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=383 N=382
if (javadummy) break CONDITION382;
} // CONDLIST383 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST380;
// $$$$$$$$ 
} // CONDITION382 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=380 N=379
if (javadummy) break CONDITION379;
} // CONDLIST380 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST378;
// $$$$$$$$ 
} // CONDITION379 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=378 N=377
if (javadummy) break CONDITION377;
} // CONDLIST378 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
TpList
;
yy_outparam_1 = 
ResList
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST376;
// $$$$$$$$ 
} // CONDITION377 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=376 N=375
if (javadummy) break CONDITION375;
} // CONDLIST376 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION375
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_FieldSpecList");
}



public
static
void
Trafo_FieldSpecList_A1_M2_A1_M2(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Sp
JavaNode Sp = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc X1
JavaNode X1 = null;
CONDITION386:
while(javadummy) {
// ***** begin condlist 387 (in cond 386) *****
CONDLIST387: // @@@ begin of alternative group
while(javadummy) {
CONDITION388: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
// ***** begin condlist 389 (in cond 388) *****
CONDLIST389: // @@@ begin of alternative group
while(javadummy) {
CONDITION390: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "FieldSpecList_A1_M2_A1_M2_A1") )
   if (javadummy) break  CONDITION390;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_FieldSpec
(
X1
,
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Sp --- JJ.M4
Sp = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST389;
// $$$$$$$$ 
} // CONDITION390 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=389 N=388
if (javadummy) break CONDITION388;
} // CONDLIST389 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
Sp
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST387;
// $$$$$$$$ 
} // CONDITION388 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=387 N=386
if (javadummy) break CONDITION386;
} // CONDLIST387 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION386
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_FieldSpecList_A1_M2_A1_M2");
}



public
static
void
Trafo_FieldSpec(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Val
JavaNode Val = null;
// DECLARE for proc Ref
JavaNode Ref = null;
// DECLARE for proc Sp
JavaNode Sp = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION391:
while(javadummy) {
// ***** begin condlist 392 (in cond 391) *****
CONDLIST392: // @@@ begin of alternative group
while(javadummy) {
CONDITION393: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
// ***** begin condlist 394 (in cond 393) *****
CONDLIST394: // @@@ begin of alternative group
while(javadummy) {
CONDITION395: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "FieldSpec_A1") )
   if (javadummy) break  CONDITION395;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Ref --- JJ.M4
Ref = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Val --- JJ.M4
Val = current1 ;
} //)) children level 1
};
// ***** begin condlist 396 (in cond 395) *****
CONDLIST396: // @@@ begin of alternative group
while(javadummy) {
CONDITION397: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative StructField
JavaNode StructField= null;
{
JavaNode current0 = Ref;
if (! current0 .Name
.equals( "FieldReference_A1") )
   if (javadummy) break  CONDITION397;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to StructField --- JJ.M4
StructField = current1 ;
} //)) children level 1
};
// ***** begin condlist 398 (in cond 397) *****
CONDLIST398: // @@@ begin of alternative group
while(javadummy) {
CONDITION399: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ValRes
JavaNode ValRes= null;
// DECLARE for alternative Name
JavaNode Name= null;
{
JavaNode current0 = StructField;
if (! current0 .Name
.equals( "StructFieldRef_A1") )
   if (javadummy) break  CONDITION399;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Name --- JJ.M4
Name = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_TemplateBody
(
Val
,
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ValRes --- JJ.M4
ValRes = current0 ;
}
Sp = 
NodeFactory.NewNode(
"spec_namedfield"
, new JavaNode [] {
Name
,
ValRes
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST398;
// $$$$$$$$ 
} // CONDITION399 // @@@ end of alternative
CONDITION400: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = StructField;
if (! current0 .Name
.equals( "StructFieldRef_A2") )
   if (javadummy) break  CONDITION400;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "struct field ref 2" )
,
StructField
);
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
Sp = 
NodeFactory.NewNode(
"spec_namedfield"
, new JavaNode [] {
new JavaStringValue( "-" )
,
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST398;
// $$$$$$$$ 
} // CONDITION400 // @@@ end of alternative
CONDITION401: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = StructField;
if (! current0 .Name
.equals( "StructFieldRef_A3") )
   if (javadummy) break  CONDITION401;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "struct field ref 3" )
,
StructField
);
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
Sp = 
NodeFactory.NewNode(
"spec_namedfield"
, new JavaNode [] {
new JavaStringValue( "-" )
,
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST398;
// $$$$$$$$ 
} // CONDITION401 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=398 N=397
if (javadummy) break CONDITION397;
} // CONDLIST398 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST396;
// $$$$$$$$ 
} // CONDITION397 // @@@ end of alternative
CONDITION402: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Ref;
if (! current0 .Name
.equals( "FieldReference_A2") )
   if (javadummy) break  CONDITION402;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "field ref 2" )
,
Ref
);
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
Sp = 
NodeFactory.NewNode(
"spec_namedfield"
, new JavaNode [] {
new JavaStringValue( "-" )
,
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST396;
// $$$$$$$$ 
} // CONDITION402 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=396 N=395
if (javadummy) break CONDITION395;
} // CONDLIST396 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST394;
// $$$$$$$$ 
} // CONDITION395 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=394 N=393
if (javadummy) break CONDITION393;
} // CONDLIST394 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
Sp
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST392;
// $$$$$$$$ 
} // CONDITION393 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=392 N=391
if (javadummy) break CONDITION391;
} // CONDLIST392 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION391
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_FieldSpec");
}



public
static
void
Trafo_CompoundExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Tps
JavaNode Tps = null;
// DECLARE for proc RES
JavaNode RES = null;
CONDITION403:
while(javadummy) {
// ***** begin condlist 404 (in cond 403) *****
CONDLIST404: // @@@ begin of alternative group
while(javadummy) {
CONDITION405: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 406 (in cond 405) *****
CONDLIST406: // @@@ begin of alternative group
while(javadummy) {
CONDITION407: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
// DECLARE for alternative Tl
JavaNode Tl= null;
// DECLARE for alternative TpTl
JavaNode TpTl= null;
// DECLARE for alternative Hd
JavaNode Hd= null;
// DECLARE for alternative TpHd
JavaNode TpHd= null;
// DECLARE for alternative Others
JavaNode Others= null;
// DECLARE for alternative First
JavaNode First= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "CompoundExpression_A1") )
   if (javadummy) break  CONDITION407;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 408 (in cond 407) *****
CONDLIST408: // @@@ begin of alternative group
while(javadummy) {
CONDITION409: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "FieldExpressionList_A1") )
   if (javadummy) break  CONDITION409;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to First --- JJ.M4
First = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Others --- JJ.M4
Others = current1 ;
} //)) children level 1
};
YyProcs.
coxTrafo_FieldExpressionSpec
(
First
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpHd --- JJ.M4
TpHd = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Hd --- JJ.M4
Hd = current0 ;
}
YyProcs.
coxTrafo_FieldExpressionSpec_LIST
(
Others
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpTl --- JJ.M4
TpTl = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Tl --- JJ.M4
Tl = current0 ;
}
RES = 
NodeFactory.NewNode(
"expr_compound"
, new JavaNode [] {
NodeFactory.NewNode (
"SeqOf-FIELDSPEC"
, new JavaNode [] {
Hd
,
Tl
}
)
}
)
;
Tps = 
NodeFactory.NewNode (
"SeqOf-Tp"
, new JavaNode [] {
TpHd
,
TpTl
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST408;
// $$$$$$$$ 
} // CONDITION409 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=408 N=407
if (javadummy) break CONDITION407;
} // CONDLIST408 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST406;
// $$$$$$$$ 
} // CONDITION407 // @@@ end of alternative
CONDITION410: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Arr
JavaNode Arr= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "CompoundExpression_A2") )
   if (javadummy) break  CONDITION410;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Arr --- JJ.M4
Arr = current1 ;
} //)) children level 1
};
YyProcs.
coxTrafo_ArrayExpression
(
Arr
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tps --- JJ.M4
Tps = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST406;
// $$$$$$$$ 
} // CONDITION410 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=406 N=405
if (javadummy) break CONDITION405;
} // CONDLIST406 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tps
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST404;
// $$$$$$$$ 
} // CONDITION405 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=404 N=403
if (javadummy) break CONDITION403;
} // CONDLIST404 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION403
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_CompoundExpression");
}



public
static
void
coxTrafo_ArrayExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Arr
JavaNode Arr = null;
// DECLARE for proc A
JavaNode A = null;
// DECLARE for proc Tps
JavaNode Tps = null;
// DECLARE for proc RES
JavaNode RES = null;
CONDITION411:
while(javadummy) {
// ***** begin condlist 412 (in cond 411) *****
CONDLIST412: // @@@ begin of alternative group
while(javadummy) {
CONDITION413: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Arr --- JJ.M4
Arr = current0 ;
};
// ***** begin condlist 414 (in cond 413) *****
CONDLIST414: // @@@ begin of alternative group
while(javadummy) {
CONDITION415: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Arr;
if (! current0 .Name
.equals( "ArrayExpression_A1") )
   if (javadummy) break  CONDITION415;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to A --- JJ.M4
A = current1 ;
} //)) children level 1
};
// ***** begin condlist 416 (in cond 415) *****
CONDLIST416: // @@@ begin of alternative group
while(javadummy) {
CONDITION417: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative A2
JavaNode A2= null;
// DECLARE for alternative A3
JavaNode A3= null;
// DECLARE for alternative RestRes
JavaNode RestRes= null;
// DECLARE for alternative RestTp
JavaNode RestTp= null;
// DECLARE for alternative FirstRes
JavaNode FirstRes= null;
// DECLARE for alternative FirstTp
JavaNode FirstTp= null;
// DECLARE for alternative Rest
JavaNode Rest= null;
// DECLARE for alternative First
JavaNode First= null;
{
JavaNode current0 = A;
if (current0.Name
!= "OneOf-ArrayExpression_A1_M2")
if (javadummy) break CONDITION417;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to A2 --- JJ.M4
A2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 418 (in cond 417) *****
CONDLIST418: // @@@ begin of alternative group
while(javadummy) {
CONDITION419: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = A2;
if (! current0 .Name
.equals( "ArrayExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION419;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to A3 --- JJ.M4
A3 = current1 ;
} //)) children level 1
};
// ***** begin condlist 420 (in cond 419) *****
CONDLIST420: // @@@ begin of alternative group
while(javadummy) {
CONDITION421: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = A3;
if (! current0 .Name
.equals( "ArrayElementExpressionList_A1") )
   if (javadummy) break  CONDITION421;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to First --- JJ.M4
First = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Rest --- JJ.M4
Rest = current1 ;
} //)) children level 1
};
YyProcs.
coxTrafo_NotUsedOrExpression
(
First
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to FirstTp --- JJ.M4
FirstTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to FirstRes --- JJ.M4
FirstRes = current0 ;
}
YyProcs.
coxTrafo_ArrayElementExpressionList_A1_M2_SEQ
(
Rest
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to RestTp --- JJ.M4
RestTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RestRes --- JJ.M4
RestRes = current0 ;
}
RES = 
NodeFactory.NewNode(
"expr_array"
, new JavaNode [] {
NodeFactory.NewNode (
"SeqOf-EXPR"
, new JavaNode [] {
FirstRes
,
RestRes
}
)
}
)
;
Tps = 
NodeFactory.NewNode (
"SeqOf-Tp"
, new JavaNode [] {
FirstTp
,
RestTp
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST420;
// $$$$$$$$ 
} // CONDITION421 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=420 N=419
if (javadummy) break CONDITION419;
} // CONDLIST420 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST418;
// $$$$$$$$ 
} // CONDITION419 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=418 N=417
if (javadummy) break CONDITION417;
} // CONDLIST418 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST416;
// $$$$$$$$ 
} // CONDITION417 // @@@ end of alternative
CONDITION422: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = A;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ArrayExpression_A1_M2")
if (javadummy) break CONDITION422;
{ //(( children level 1
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"expr_array"
, new JavaNode [] {
NodeFactory.NewNode (
"NilOf-EXPR"
,  new JavaNode [] {})
}
)
;
Tps = 
NodeFactory.NewNode (
"NilOf-Tp"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST416;
// $$$$$$$$ 
} // CONDITION422 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=416 N=415
if (javadummy) break CONDITION415;
} // CONDLIST416 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST414;
// $$$$$$$$ 
} // CONDITION415 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=414 N=413
if (javadummy) break CONDITION413;
} // CONDLIST414 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tps
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST412;
// $$$$$$$$ 
} // CONDITION413 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=412 N=411
if (javadummy) break CONDITION411;
} // CONDLIST412 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION411
// failed:
JavaLib.rtsAllAlternativesFailed("coxTrafo_ArrayExpression");
}



public
static
void
coxTrafo_ArrayElementExpressionList_A1_M2_SEQ(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
CONDITION423:
while(javadummy) {
// ***** begin condlist 424 (in cond 423) *****
CONDLIST424: // @@@ begin of alternative group
while(javadummy) {
CONDITION425: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ResT
JavaNode ResT= null;
// DECLARE for alternative TpT
JavaNode TpT= null;
// DECLARE for alternative ResH
JavaNode ResH= null;
// DECLARE for alternative TpH
JavaNode TpH= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-ArrayElementExpressionList_A1_M2")
if (javadummy) break CONDITION425;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
coxTrafo_ArrayElementExpressionList_A1_M2
(
H
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpH --- JJ.M4
TpH = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResH --- JJ.M4
ResH = current0 ;
}
YyProcs.
coxTrafo_ArrayElementExpressionList_A1_M2_SEQ
(
T
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpT --- JJ.M4
TpT = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResT --- JJ.M4
ResT = current0 ;
}
yy_outparam_0 = 
NodeFactory.NewNode (
"SeqOf-Tp"
, new JavaNode [] {
TpH
,
TpT
}
)
;
yy_outparam_1 = 
NodeFactory.NewNode (
"SeqOf-EXPR"
, new JavaNode [] {
ResH
,
ResT
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST424;
// $$$$$$$$ 
} // CONDITION425 // @@@ end of alternative
CONDITION426: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-ArrayElementExpressionList_A1_M2")
if (javadummy) break CONDITION426;
};
yy_outparam_0 = 
NodeFactory.NewNode (
"NilOf-Tp"
,  new JavaNode [] {})
;
yy_outparam_1 = 
NodeFactory.NewNode (
"NilOf-EXPR"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST424;
// $$$$$$$$ 
} // CONDITION426 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=424 N=423
if (javadummy) break CONDITION423;
} // CONDLIST424 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION423
// failed:
JavaLib.rtsAllAlternativesFailed("coxTrafo_ArrayElementExpressionList_A1_M2_SEQ");
}



public
static
void
coxTrafo_ArrayElementExpressionList_A1_M2(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc H
JavaNode H = null;
// DECLARE for proc ResH
JavaNode ResH = null;
// DECLARE for proc TpH
JavaNode TpH = null;
// DECLARE for proc X
JavaNode X = null;
CONDITION427:
while(javadummy) {
// ***** begin condlist 428 (in cond 427) *****
CONDLIST428: // @@@ begin of alternative group
while(javadummy) {
CONDITION429: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to H --- JJ.M4
H = current0 ;
};
// ***** begin condlist 430 (in cond 429) *****
CONDLIST430: // @@@ begin of alternative group
while(javadummy) {
CONDITION431: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "ArrayElementExpressionList_A1_M2_A1") )
   if (javadummy) break  CONDITION431;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
YyProcs.
coxTrafo_NotUsedOrExpression
(
X
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpH --- JJ.M4
TpH = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResH --- JJ.M4
ResH = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST430;
// $$$$$$$$ 
} // CONDITION431 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=430 N=429
if (javadummy) break CONDITION429;
} // CONDLIST430 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
TpH
;
yy_outparam_1 = 
ResH
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST428;
// $$$$$$$$ 
} // CONDITION429 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=428 N=427
if (javadummy) break CONDITION427;
} // CONDLIST428 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION427
// failed:
JavaLib.rtsAllAlternativesFailed("coxTrafo_ArrayElementExpressionList_A1_M2");
}



public
static
void
coxTrafo_NotUsedOrExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc NotUsedOrExpression
JavaNode NotUsedOrExpression = null;
// DECLARE for proc Res
JavaNode Res = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION432:
while(javadummy) {
// ***** begin condlist 433 (in cond 432) *****
CONDLIST433: // @@@ begin of alternative group
while(javadummy) {
CONDITION434: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NotUsedOrExpression --- JJ.M4
NotUsedOrExpression = current0 ;
};
// ***** begin condlist 435 (in cond 434) *****
CONDLIST435: // @@@ begin of alternative group
while(javadummy) {
CONDITION436: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Expr
JavaNode Expr= null;
{
JavaNode current0 = NotUsedOrExpression;
if (! current0 .Name
.equals( "NotUsedOrExpression_A1") )
   if (javadummy) break  CONDITION436;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Expr --- JJ.M4
Expr = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_Expression
(
Expr
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST435;
// $$$$$$$$ 
} // CONDITION436 // @@@ end of alternative
CONDITION437: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = NotUsedOrExpression;
if (! current0 .Name
.equals( "NotUsedOrExpression_A2") )
   if (javadummy) break  CONDITION437;
};
YyProcs.
NotCovered
(
new JavaStringValue( "NotUsed value" )
,
NotUsedOrExpression
);
Tp = 
NodeFactory.NewNode(
"tp_skip"
, new JavaNode [] {
}
)
;
Res = 
NodeFactory.NewNode(
"expr_skip"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST435;
// $$$$$$$$ 
} // CONDITION437 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=435 N=434
if (javadummy) break CONDITION434;
} // CONDLIST435 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
Res
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST433;
// $$$$$$$$ 
} // CONDITION434 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=433 N=432
if (javadummy) break CONDITION432;
} // CONDLIST433 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION432
// failed:
JavaLib.rtsAllAlternativesFailed("coxTrafo_NotUsedOrExpression");
}



public
static
void
coxTrafo_FieldExpressionSpec_ELEM(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc FIELDSPEC
JavaNode FIELDSPEC = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc X1
JavaNode X1 = null;
CONDITION438:
while(javadummy) {
// ***** begin condlist 439 (in cond 438) *****
CONDLIST439: // @@@ begin of alternative group
while(javadummy) {
CONDITION440: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 441 (in cond 440) *****
CONDLIST441: // @@@ begin of alternative group
while(javadummy) {
CONDITION442: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "FieldExpressionList_A1_M3_A1") )
   if (javadummy) break  CONDITION442;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
YyProcs.
coxTrafo_FieldExpressionSpec
(
X1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to FIELDSPEC --- JJ.M4
FIELDSPEC = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST441;
// $$$$$$$$ 
} // CONDITION442 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=441 N=440
if (javadummy) break CONDITION440;
} // CONDLIST441 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
FIELDSPEC
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST439;
// $$$$$$$$ 
} // CONDITION440 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=439 N=438
if (javadummy) break CONDITION438;
} // CONDLIST439 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION438
// failed:
JavaLib.rtsAllAlternativesFailed("coxTrafo_FieldExpressionSpec_ELEM");
}



public
static
void
coxTrafo_FieldExpressionSpec_LIST(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
CONDITION443:
while(javadummy) {
// ***** begin condlist 444 (in cond 443) *****
CONDLIST444: // @@@ begin of alternative group
while(javadummy) {
CONDITION445: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RT
JavaNode RT= null;
// DECLARE for alternative TpT
JavaNode TpT= null;
// DECLARE for alternative RH
JavaNode RH= null;
// DECLARE for alternative TpH
JavaNode TpH= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-FieldExpressionList_A1_M3")
if (javadummy) break CONDITION445;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
coxTrafo_FieldExpressionSpec_ELEM
(
H
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpH --- JJ.M4
TpH = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RH --- JJ.M4
RH = current0 ;
}
YyProcs.
coxTrafo_FieldExpressionSpec_LIST
(
T
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpT --- JJ.M4
TpT = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RT --- JJ.M4
RT = current0 ;
}
yy_outparam_0 = 
NodeFactory.NewNode (
"SeqOf-Tp"
, new JavaNode [] {
TpH
,
TpT
}
)
;
yy_outparam_1 = 
NodeFactory.NewNode (
"SeqOf-FIELDSPEC"
, new JavaNode [] {
RH
,
RT
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST444;
// $$$$$$$$ 
} // CONDITION445 // @@@ end of alternative
CONDITION446: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-FieldExpressionList_A1_M3")
if (javadummy) break CONDITION446;
};
yy_outparam_0 = 
NodeFactory.NewNode (
"NilOf-Tp"
,  new JavaNode [] {})
;
yy_outparam_1 = 
NodeFactory.NewNode (
"NilOf-FIELDSPEC"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST444;
// $$$$$$$$ 
} // CONDITION446 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=444 N=443
if (javadummy) break CONDITION443;
} // CONDLIST444 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION443
// failed:
JavaLib.rtsAllAlternativesFailed("coxTrafo_FieldExpressionSpec_LIST");
}



public
static
void
coxTrafo_FieldExpressionSpec(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc NotUsedOrExpr
JavaNode NotUsedOrExpr = null;
// DECLARE for proc Ref
JavaNode Ref = null;
// DECLARE for proc Res
JavaNode Res = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION447:
while(javadummy) {
// ***** begin condlist 448 (in cond 447) *****
CONDLIST448: // @@@ begin of alternative group
while(javadummy) {
CONDITION449: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 450 (in cond 449) *****
CONDLIST450: // @@@ begin of alternative group
while(javadummy) {
CONDITION451: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "FieldExpressionSpec_A1") )
   if (javadummy) break  CONDITION451;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Ref --- JJ.M4
Ref = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to NotUsedOrExpr --- JJ.M4
NotUsedOrExpr = current1 ;
} //)) children level 1
};
// ***** begin condlist 452 (in cond 451) *****
CONDLIST452: // @@@ begin of alternative group
while(javadummy) {
CONDITION453: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Name
JavaNode Name= null;
// DECLARE for alternative StructField
JavaNode StructField= null;
// DECLARE for alternative Val
JavaNode Val= null;
{
JavaNode current0 = Ref;
if (! current0 .Name
.equals( "FieldReference_A1") )
   if (javadummy) break  CONDITION453;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to StructField --- JJ.M4
StructField = current1 ;
} //)) children level 1
};
{
JavaNode current0 = StructField;
if (! current0 .Name
.equals( "StructFieldRef_A1") )
   if (javadummy) break  CONDITION453;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Name --- JJ.M4
Name = current1 ;
} //)) children level 1
};
// ***** begin condlist 454 (in cond 453) *****
CONDLIST454: // @@@ begin of alternative group
while(javadummy) {
CONDITION455: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Expr
JavaNode Expr= null;
{
JavaNode current0 = NotUsedOrExpr;
if (! current0 .Name
.equals( "NotUsedOrExpression_A1") )
   if (javadummy) break  CONDITION455;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Expr --- JJ.M4
Expr = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_Expression
(
Expr
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Val --- JJ.M4
Val = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST454;
// $$$$$$$$ 
} // CONDITION455 // @@@ end of alternative
CONDITION456: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = NotUsedOrExpr;
if (! current0 .Name
.equals( "NotUsedOrExpression_A2") )
   if (javadummy) break  CONDITION456;
};
YyProcs.
NotCovered
(
new JavaStringValue( "NotUsed value" )
,
NotUsedOrExpr
);
Val = 
NodeFactory.NewNode(
"expr_skip"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_skip"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST454;
// $$$$$$$$ 
} // CONDITION456 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=454 N=453
if (javadummy) break CONDITION453;
} // CONDLIST454 @@@ end of alternative group
// *** CONTINUE ***
Res = 
NodeFactory.NewNode(
"spec_namedfield"
, new JavaNode [] {
Name
,
Val
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST452;
// $$$$$$$$ 
} // CONDITION453 // @@@ end of alternative
CONDITION457: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Ref;
if (! current0 .Name
.equals( "FieldReference_A2") )
   if (javadummy) break  CONDITION457;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "field reference 2" )
,
Ref
);
Tp = 
NodeFactory.NewNode(
"tp_skip"
, new JavaNode [] {
}
)
;
Res = 
NodeFactory.NewNode(
"spec_namedfield"
, new JavaNode [] {
new JavaStringValue( "-" )
,
NodeFactory.NewNode(
"expr_skip"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST452;
// $$$$$$$$ 
} // CONDITION457 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=452 N=451
if (javadummy) break CONDITION451;
} // CONDLIST452 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST450;
// $$$$$$$$ 
} // CONDITION451 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=450 N=449
if (javadummy) break CONDITION449;
} // CONDLIST450 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
Res
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST448;
// $$$$$$$$ 
} // CONDITION449 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=448 N=447
if (javadummy) break CONDITION447;
} // CONDLIST448 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION447
// failed:
JavaLib.rtsAllAlternativesFailed("coxTrafo_FieldExpressionSpec");
}



public
static
void
Trafo_Primary(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc PRIMARY
JavaNode PRIMARY = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION458:
while(javadummy) {
// ***** begin condlist 459 (in cond 458) *****
CONDLIST459: // @@@ begin of alternative group
while(javadummy) {
CONDITION460: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to PRIMARY --- JJ.M4
PRIMARY = current0 ;
};
// ***** begin condlist 461 (in cond 460) *****
CONDLIST461: // @@@ begin of alternative group
while(javadummy) {
CONDITION462: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative CALL
JavaNode CALL= null;
{
JavaNode current0 = PRIMARY;
if (! current0 .Name
.equals( "Primary_A1") )
   if (javadummy) break  CONDITION462;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to CALL --- JJ.M4
CALL = current1 ;
} //)) children level 1
};
// ***** begin condlist 463 (in cond 462) *****
CONDLIST463: // @@@ begin of alternative group
while(javadummy) {
CONDITION464: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A1") )
   if (javadummy) break  CONDITION464;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 465 (in cond 464) *****
CONDLIST465: // @@@ begin of alternative group
while(javadummy) {
CONDITION466: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative CreateOp
JavaNode CreateOp= null;
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative XX3
JavaNode XX3= null;
// DECLARE for alternative XX2
JavaNode XX2= null;
// DECLARE for alternative XX1
JavaNode XX1= null;
// DECLARE for alternative XXX4
JavaNode XXX4= null;
// DECLARE for alternative XXX3
JavaNode XXX3= null;
// DECLARE for alternative Id
JavaNode Id= null;
// DECLARE for alternative XXX1
JavaNode XXX1= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ConfigurationOps_A1") )
   if (javadummy) break  CONDITION466;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to CreateOp --- JJ.M4
CreateOp = current1 ;
} //)) children level 1
};
// ***** begin condlist 467 (in cond 466) *****
CONDLIST467: // @@@ begin of alternative group
while(javadummy) {
CONDITION468: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CreateOp;
if (! current0 .Name
.equals( "CreateOp_A1") )
   if (javadummy) break  CONDITION468;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX1 --- JJ.M4
XX1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to XX2 --- JJ.M4
XX2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to XX3 --- JJ.M4
XX3 = current1 ;
} //)) children level 1
};
// ***** begin condlist 469 (in cond 468) *****
CONDLIST469: // @@@ begin of alternative group
while(javadummy) {
CONDITION470: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX1;
if (! current0 .Name
.equals( "ComponentType_A1") )
   if (javadummy) break  CONDITION470;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XXX1 --- JJ.M4
XXX1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to XXX3 --- JJ.M4
XXX3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to XXX4 --- JJ.M4
XXX4 = current1 ;
} //)) children level 1
};
// ***** begin condlist 471 (in cond 470) *****
CONDLIST471: // @@@ begin of alternative group
while(javadummy) {
CONDITION472: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentType_A1_M1")
if (javadummy) break CONDITION472;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST471;
// $$$$$$$$ 
} // CONDITION472 // @@@ end of alternative
CONDITION473: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX1;
if (current0.Name
!= "OneOf-ComponentType_A1_M1")
if (javadummy) break CONDITION473;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "xxx1" )
,
XXX1
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST471;
// $$$$$$$$ 
} // CONDITION473 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=471 N=470
if (javadummy) break CONDITION470;
} // CONDLIST471 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 474 (in cond 470) *****
CONDLIST474: // @@@ begin of alternative group
while(javadummy) {
CONDITION475: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentType_A1_M3")
if (javadummy) break CONDITION475;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST474;
// $$$$$$$$ 
} // CONDITION475 // @@@ end of alternative
CONDITION476: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX3;
if (current0.Name
!= "OneOf-ComponentType_A1_M3")
if (javadummy) break CONDITION476;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "xxx3" )
,
XXX3
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST474;
// $$$$$$$$ 
} // CONDITION476 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=474 N=470
if (javadummy) break CONDITION470;
} // CONDLIST474 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 477 (in cond 470) *****
CONDLIST477: // @@@ begin of alternative group
while(javadummy) {
CONDITION478: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX4;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentType_A1_M4")
if (javadummy) break CONDITION478;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST477;
// $$$$$$$$ 
} // CONDITION478 // @@@ end of alternative
CONDITION479: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX4;
if (current0.Name
!= "OneOf-ComponentType_A1_M4")
if (javadummy) break CONDITION479;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "xxx4" )
,
XXX4
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST477;
// $$$$$$$$ 
} // CONDITION479 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=477 N=470
if (javadummy) break CONDITION470;
} // CONDLIST477 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST469;
// $$$$$$$$ 
} // CONDITION470 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=469 N=468
if (javadummy) break CONDITION468;
} // CONDLIST469 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 480 (in cond 468) *****
CONDLIST480: // @@@ begin of alternative group
while(javadummy) {
CONDITION481: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-CreateOp_A1_M4")
if (javadummy) break CONDITION481;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST480;
// $$$$$$$$ 
} // CONDITION481 // @@@ end of alternative
CONDITION482: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX2;
if (current0.Name
!= "OneOf-CreateOp_A1_M4")
if (javadummy) break CONDITION482;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "xx2" )
,
XX2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST480;
// $$$$$$$$ 
} // CONDITION482 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=480 N=468
if (javadummy) break CONDITION468;
} // CONDLIST480 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 483 (in cond 468) *****
CONDLIST483: // @@@ begin of alternative group
while(javadummy) {
CONDITION484: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-CreateOp_A1_M5")
if (javadummy) break CONDITION484;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST483;
// $$$$$$$$ 
} // CONDITION484 // @@@ end of alternative
CONDITION485: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX3;
if (current0.Name
!= "OneOf-CreateOp_A1_M5")
if (javadummy) break CONDITION485;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "xx3" )
,
XX3
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST483;
// $$$$$$$$ 
} // CONDITION485 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=483 N=468
if (javadummy) break CONDITION468;
} // CONDLIST483 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
GloballyDefined
(
Id
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 486 (in cond 468) *****
CONDLIST486: // @@@ begin of alternative group
while(javadummy) {
CONDITION487: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION487;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST486;
// $$$$$$$$ 
} // CONDITION487 // @@@ end of alternative
CONDITION488: // @@@ begin of alternative
while(javadummy) {
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "component type expected" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST486;
// $$$$$$$$ 
} // CONDITION488 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=486 N=468
if (javadummy) break CONDITION468;
} // CONDLIST486 @@@ end of alternative group
// *** CONTINUE ***
Tp = 
NodeFactory.NewNode(
"tp_referenced"
, new JavaNode [] {
Def
}
)
;
RES = 
NodeFactory.NewNode(
"createcomponent"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST467;
// $$$$$$$$ 
} // CONDITION468 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=467 N=466
if (javadummy) break CONDITION466;
} // CONDLIST467 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST465;
// $$$$$$$$ 
} // CONDITION466 // @@@ end of alternative
CONDITION489: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ConfigurationOps_A2") )
   if (javadummy) break  CONDITION489;
};
YyProcs.
NotCovered
(
new JavaStringValue( "configuration op 2" )
,
X
);
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST465;
// $$$$$$$$ 
} // CONDITION489 // @@@ end of alternative
CONDITION490: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ConfigurationOps_A3") )
   if (javadummy) break  CONDITION490;
};
YyProcs.
NotCovered
(
new JavaStringValue( "configuration op 3" )
,
X
);
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST465;
// $$$$$$$$ 
} // CONDITION490 // @@@ end of alternative
CONDITION491: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ConfigurationOps_A4") )
   if (javadummy) break  CONDITION491;
};
YyProcs.
NotCovered
(
new JavaStringValue( "configuration op 4" )
,
X
);
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST465;
// $$$$$$$$ 
} // CONDITION491 // @@@ end of alternative
CONDITION492: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ConfigurationOps_A5") )
   if (javadummy) break  CONDITION492;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "configuration op 5" )
,
X
);
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST465;
// $$$$$$$$ 
} // CONDITION492 // @@@ end of alternative
CONDITION493: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ConfigurationOps_A6") )
   if (javadummy) break  CONDITION493;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "configuration op 6" )
,
X
);
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST465;
// $$$$$$$$ 
} // CONDITION493 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=465 N=464
if (javadummy) break CONDITION464;
} // CONDLIST465 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST463;
// $$$$$$$$ 
} // CONDITION464 // @@@ end of alternative
CONDITION494: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A2") )
   if (javadummy) break  CONDITION494;
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A2" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST463;
// $$$$$$$$ 
} // CONDITION494 // @@@ end of alternative
CONDITION495: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A3") )
   if (javadummy) break  CONDITION495;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A3" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST463;
// $$$$$$$$ 
} // CONDITION495 // @@@ end of alternative
CONDITION496: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A4") )
   if (javadummy) break  CONDITION496;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A4" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST463;
// $$$$$$$$ 
} // CONDITION496 // @@@ end of alternative
CONDITION497: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A5") )
   if (javadummy) break  CONDITION497;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A5" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST463;
// $$$$$$$$ 
} // CONDITION497 // @@@ end of alternative
CONDITION498: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X62
JavaNode X62= null;
// DECLARE for alternative X61
JavaNode X61= null;
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A6") )
   if (javadummy) break  CONDITION498;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X61 --- JJ.M4
X61 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X62 --- JJ.M4
X62 = current1 ;
} //)) children level 1
};
// ***** begin condlist 499 (in cond 498) *****
CONDLIST499: // @@@ begin of alternative group
while(javadummy) {
CONDITION500: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X611
JavaNode X611= null;
// DECLARE for alternative Pattern
JavaNode Pattern= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative Value
JavaNode Value= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative X6112
JavaNode X6112= null;
// DECLARE for alternative X6111
JavaNode X6111= null;
{
JavaNode current0 = X61;
if (! current0 .Name
.equals( "TemplateOps_A1") )
   if (javadummy) break  CONDITION500;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X611 --- JJ.M4
X611 = current1 ;
} //)) children level 1
};
// ***** begin condlist 501 (in cond 500) *****
CONDLIST501: // @@@ begin of alternative group
while(javadummy) {
CONDITION502: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X611;
if (! current0 .Name
.equals( "MatchOp_A1") )
   if (javadummy) break  CONDITION502;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X6111 --- JJ.M4
X6111 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X6112 --- JJ.M4
X6112 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_Expression
(
X6111
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Value --- JJ.M4
Value = current0 ;
}
YyProcs.
primaTrafo_InLineTemplate
(
X6112
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Pattern --- JJ.M4
Pattern = current0 ;
}
// ***** begin condlist 503 (in cond 502) *****
CONDLIST503: // @@@ begin of alternative group
while(javadummy) {
CONDITION504: // @@@ begin of alternative
while(javadummy) {
{
if (! JavaLib.rtsEqualNode(
Tp1
,
Tp2
)
)
   if (javadummy) break  CONDITION504;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST503;
// $$$$$$$$ 
} // CONDITION504 // @@@ end of alternative
CONDITION505: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Fields
JavaNode Fields= null;
// DECLARE for alternative Val
JavaNode Val= null;
// DECLARE for alternative Ref
JavaNode Ref= null;
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative Tps
JavaNode Tps= null;
{
JavaNode current0 = Tp2;
if (! current0 .Name
.equals( "tp_nimmdas") )
   if (javadummy) break  CONDITION505;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tps --- JJ.M4
Tps = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Tp1;
if (! current0 .Name
.equals( "tp_referenced") )
   if (javadummy) break  CONDITION505;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Def --- JJ.M4
Def = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION505;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
//assign current1 to Ref --- JJ.M4
Ref = current1 ;
} //)) children level 1
};
Val = JavaLib.rtsBoundToKey(Ref);
{
JavaNode current0 = Val;
if (! current0 .Name
.equals( "normalizedfields") )
   if (javadummy) break  CONDITION505;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Fields --- JJ.M4
Fields = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(X611);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
CheckCompoundFields
(
Fields
,
Tps
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST503;
// $$$$$$$$ 
} // CONDITION505 // @@@ end of alternative
CONDITION506: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(X611);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "Types are not compatible" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST503;
// $$$$$$$$ 
} // CONDITION506 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=503 N=502
if (javadummy) break CONDITION502;
} // CONDLIST503 @@@ end of alternative group
// *** CONTINUE ***
RES = 
NodeFactory.NewNode(
"expr_match"
, new JavaNode [] {
Value
,
Pattern
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST501;
// $$$$$$$$ 
} // CONDITION502 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=501 N=500
if (javadummy) break CONDITION500;
} // CONDLIST501 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST499;
// $$$$$$$$ 
} // CONDITION500 // @@@ end of alternative
CONDITION507: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X61;
if (! current0 .Name
.equals( "TemplateOps_A2") )
   if (javadummy) break  CONDITION507;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this variant of 'match'" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST499;
// $$$$$$$$ 
} // CONDITION507 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=499 N=498
if (javadummy) break CONDITION498;
} // CONDLIST499 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST463;
// $$$$$$$$ 
} // CONDITION498 // @@@ end of alternative
CONDITION508: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A7") )
   if (javadummy) break  CONDITION508;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A7" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST463;
// $$$$$$$$ 
} // CONDITION508 // @@@ end of alternative
CONDITION509: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A8") )
   if (javadummy) break  CONDITION509;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A8" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST463;
// $$$$$$$$ 
} // CONDITION509 // @@@ end of alternative
CONDITION510: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A9") )
   if (javadummy) break  CONDITION510;
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A9" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST463;
// $$$$$$$$ 
} // CONDITION510 // @@@ end of alternative
CONDITION511: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A10") )
   if (javadummy) break  CONDITION511;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A10" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST463;
// $$$$$$$$ 
} // CONDITION511 // @@@ end of alternative
CONDITION512: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A11") )
   if (javadummy) break  CONDITION512;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A11" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST463;
// $$$$$$$$ 
} // CONDITION512 // @@@ end of alternative
CONDITION513: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A12") )
   if (javadummy) break  CONDITION513;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A12" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST463;
// $$$$$$$$ 
} // CONDITION513 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=463 N=462
if (javadummy) break CONDITION462;
} // CONDLIST463 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST461;
// $$$$$$$$ 
} // CONDITION462 // @@@ end of alternative
CONDITION514: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative VALUE
JavaNode VALUE= null;
{
JavaNode current0 = PRIMARY;
if (! current0 .Name
.equals( "Primary_A2") )
   if (javadummy) break  CONDITION514;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to VALUE --- JJ.M4
VALUE = current1 ;
} //)) children level 1
};
YyProcs.
prima_Trafo_Value
(
VALUE
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST461;
// $$$$$$$$ 
} // CONDITION514 // @@@ end of alternative
CONDITION515: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative SINGLE
JavaNode SINGLE= null;
{
JavaNode current0 = PRIMARY;
if (! current0 .Name
.equals( "Primary_A3") )
   if (javadummy) break  CONDITION515;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to SINGLE --- JJ.M4
SINGLE = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SingleExpression
(
SINGLE
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST461;
// $$$$$$$$ 
} // CONDITION515 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=461 N=460
if (javadummy) break CONDITION460;
} // CONDLIST461 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST459;
// $$$$$$$$ 
} // CONDITION460 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=459 N=458
if (javadummy) break CONDITION458;
} // CONDLIST459 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION458
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_Primary");
}



public
static
void
primaTrafo_InLineTemplate(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Templ
JavaNode Templ = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc TemplateBody
JavaNode TemplateBody = null;
// DECLARE for proc Modifies
JavaNode Modifies = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
CONDITION516:
while(javadummy) {
// ***** begin condlist 517 (in cond 516) *****
CONDLIST517: // @@@ begin of alternative group
while(javadummy) {
CONDITION518: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Templ --- JJ.M4
Templ = current0 ;
};
// ***** begin condlist 519 (in cond 518) *****
CONDLIST519: // @@@ begin of alternative group
while(javadummy) {
CONDITION520: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Templ;
if (! current0 .Name
.equals( "InLineTemplate_A1") )
   if (javadummy) break  CONDITION520;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Prefix --- JJ.M4
Prefix = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Modifies --- JJ.M4
Modifies = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to TemplateBody --- JJ.M4
TemplateBody = current1 ;
} //)) children level 1
};
// ***** begin condlist 521 (in cond 520) *****
CONDLIST521: // @@@ begin of alternative group
while(javadummy) {
CONDITION522: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Modifies;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-InLineTemplate_A1_M2")
if (javadummy) break CONDITION522;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST521;
// $$$$$$$$ 
} // CONDITION522 // @@@ end of alternative
CONDITION523: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Modifies;
if (current0.Name
!= "OneOf-InLineTemplate_A1_M2")
if (javadummy) break CONDITION523;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "modifies" )
,
Modifies
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST521;
// $$$$$$$$ 
} // CONDITION523 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=521 N=520
if (javadummy) break CONDITION520;
} // CONDLIST521 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Trafo_TemplateBody1
(
TemplateBody
,
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST519;
// $$$$$$$$ 
} // CONDITION520 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=519 N=518
if (javadummy) break CONDITION518;
} // CONDLIST519 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST517;
// $$$$$$$$ 
} // CONDITION518 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=517 N=516
if (javadummy) break CONDITION516;
} // CONDLIST517 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION516
// failed:
JavaLib.rtsAllAlternativesFailed("primaTrafo_InLineTemplate");
}



public
static
void
prima_Trafo_Value(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc VALUE
JavaNode VALUE = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION524:
while(javadummy) {
// ***** begin condlist 525 (in cond 524) *****
CONDLIST525: // @@@ begin of alternative group
while(javadummy) {
CONDITION526: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to VALUE --- JJ.M4
VALUE = current0 ;
};
// ***** begin condlist 527 (in cond 526) *****
CONDLIST527: // @@@ begin of alternative group
while(javadummy) {
CONDITION528: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative PREDEF
JavaNode PREDEF= null;
{
JavaNode current0 = VALUE;
if (! current0 .Name
.equals( "Value_A1") )
   if (javadummy) break  CONDITION528;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to PREDEF --- JJ.M4
PREDEF = current1 ;
} //)) children level 1
};
YyProcs.
prima_Trafo_PredefinedValue
(
PREDEF
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST527;
// $$$$$$$$ 
} // CONDITION528 // @@@ end of alternative
CONDITION529: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative REFERENCE
JavaNode REFERENCE= null;
{
JavaNode current0 = VALUE;
if (! current0 .Name
.equals( "Value_A2") )
   if (javadummy) break  CONDITION529;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to REFERENCE --- JJ.M4
REFERENCE = current1 ;
} //)) children level 1
};
YyProcs.
prima_Trafo_ReferencedValue
(
REFERENCE
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST527;
// $$$$$$$$ 
} // CONDITION529 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=527 N=526
if (javadummy) break CONDITION526;
} // CONDLIST527 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST525;
// $$$$$$$$ 
} // CONDITION526 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=525 N=524
if (javadummy) break CONDITION524;
} // CONDLIST525 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION524
// failed:
JavaLib.rtsAllAlternativesFailed("prima_Trafo_Value");
}



public
static
void
prima_Trafo_ReferencedValue(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc REFERENCE
JavaNode REFERENCE = null;
// DECLARE for proc FinalRES
JavaNode FinalRES = null;
// DECLARE for proc FinalTp
JavaNode FinalTp = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc SUB
JavaNode SUB = null;
// DECLARE for proc X1
JavaNode X1 = null;
CONDITION530:
while(javadummy) {
// ***** begin condlist 531 (in cond 530) *****
CONDLIST531: // @@@ begin of alternative group
while(javadummy) {
CONDITION532: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to REFERENCE --- JJ.M4
REFERENCE = current0 ;
};
// ***** begin condlist 533 (in cond 532) *****
CONDLIST533: // @@@ begin of alternative group
while(javadummy) {
CONDITION534: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = REFERENCE;
if (! current0 .Name
.equals( "ReferencedValue_A1") )
   if (javadummy) break  CONDITION534;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to SUB --- JJ.M4
SUB = current1 ;
} //)) children level 1
};
YyProcs.
LaLa
(
X1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
YyProcs.
LaSub
(
SUB
,
Tp
,
RES
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to FinalTp --- JJ.M4
FinalTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to FinalRES --- JJ.M4
FinalRES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST533;
// $$$$$$$$ 
} // CONDITION534 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=533 N=532
if (javadummy) break CONDITION532;
} // CONDLIST533 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
FinalTp
;
yy_outparam_1 = 
FinalRES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST531;
// $$$$$$$$ 
} // CONDITION532 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=531 N=530
if (javadummy) break CONDITION530;
} // CONDLIST531 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION530
// failed:
JavaLib.rtsAllAlternativesFailed("prima_Trafo_ReferencedValue");
}



public
static
void
LaSub(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Code0
JavaNode Code0 = null;
// DECLARE for proc Tp0
JavaNode Tp0 = null;
// DECLARE for proc SUB
JavaNode SUB = null;
// DECLARE for proc FinalRES
JavaNode FinalRES = null;
// DECLARE for proc FinalTp
JavaNode FinalTp = null;
CONDITION535:
while(javadummy) {
// ***** begin condlist 536 (in cond 535) *****
CONDLIST536: // @@@ begin of alternative group
while(javadummy) {
CONDITION537: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SUB --- JJ.M4
SUB = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Code0 --- JJ.M4
Code0 = current0 ;
};
// ***** begin condlist 538 (in cond 537) *****
CONDLIST538: // @@@ begin of alternative group
while(javadummy) {
CONDITION539: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = SUB;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ReferencedValue_A1_M2")
if (javadummy) break CONDITION539;
{ //(( children level 1
} //)) children level 1
};
FinalTp = 
Tp0
;
FinalRES = 
Code0
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST538;
// $$$$$$$$ 
} // CONDITION539 // @@@ end of alternative
CONDITION540: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative XX
JavaNode XX= null;
{
JavaNode current0 = SUB;
if (current0.Name
!= "OneOf-ReferencedValue_A1_M2")
if (javadummy) break CONDITION540;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 541 (in cond 540) *****
CONDLIST541: // @@@ begin of alternative group
while(javadummy) {
CONDITION542: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ReferencedValue_A1_M2_A1") )
   if (javadummy) break  CONDITION542;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX --- JJ.M4
XX = current1 ;
} //)) children level 1
};
YyProcs.
HandleExtendedFieldReference
(
XX
,
Tp0
,
Code0
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to FinalTp --- JJ.M4
FinalTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to FinalRES --- JJ.M4
FinalRES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST541;
// $$$$$$$$ 
} // CONDITION542 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=541 N=540
if (javadummy) break CONDITION540;
} // CONDLIST541 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST538;
// $$$$$$$$ 
} // CONDITION540 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=538 N=537
if (javadummy) break CONDITION537;
} // CONDLIST538 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
FinalTp
;
yy_outparam_1 = 
FinalRES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST536;
// $$$$$$$$ 
} // CONDITION537 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=536 N=535
if (javadummy) break CONDITION535;
} // CONDLIST536 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION535
// failed:
JavaLib.rtsAllAlternativesFailed("LaSub");
}



public
static
void
prima_Trafo_PredefinedValue(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc PREDEF
JavaNode PREDEF = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc RES
JavaNode RES = null;
CONDITION543:
while(javadummy) {
// ***** begin condlist 544 (in cond 543) *****
CONDLIST544: // @@@ begin of alternative group
while(javadummy) {
CONDITION545: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to PREDEF --- JJ.M4
PREDEF = current0 ;
};
// ***** begin condlist 546 (in cond 545) *****
CONDLIST546: // @@@ begin of alternative group
while(javadummy) {
CONDITION547: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
// DECLARE for alternative BSTRING
JavaNode BSTRING= null;
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A1") )
   if (javadummy) break  CONDITION547;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to BSTRING --- JJ.M4
BSTRING = current1 ;
} //)) children level 1
};
{
JavaNode current0 = BSTRING;
if (! current0 .Name
.equals( "Bstring_A1") )
   if (javadummy) break  CONDITION547;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"expr_bstring"
, new JavaNode [] {
str
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST546;
// $$$$$$$$ 
} // CONDITION547 // @@@ end of alternative
CONDITION548: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative BV
JavaNode BV= null;
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A2") )
   if (javadummy) break  CONDITION548;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to BV --- JJ.M4
BV = current1 ;
} //)) children level 1
};
// ***** begin condlist 549 (in cond 548) *****
CONDLIST549: // @@@ begin of alternative group
while(javadummy) {
CONDITION550: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = BV;
if (! current0 .Name
.equals( "BooleanValue_A1") )
   if (javadummy) break  CONDITION550;
};
RES = 
NodeFactory.NewNode(
"expr_true"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST549;
// $$$$$$$$ 
} // CONDITION550 // @@@ end of alternative
CONDITION551: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = BV;
if (! current0 .Name
.equals( "BooleanValue_A2") )
   if (javadummy) break  CONDITION551;
};
RES = 
NodeFactory.NewNode(
"expr_false"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST549;
// $$$$$$$$ 
} // CONDITION551 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=549 N=548
if (javadummy) break CONDITION548;
} // CONDLIST549 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST546;
// $$$$$$$$ 
} // CONDITION548 // @@@ end of alternative
CONDITION552: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative CSTRING
JavaNode CSTRING= null;
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A3") )
   if (javadummy) break  CONDITION552;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to CSTRING --- JJ.M4
CSTRING = current1 ;
} //)) children level 1
};
// ***** begin condlist 553 (in cond 552) *****
CONDLIST553: // @@@ begin of alternative group
while(javadummy) {
CONDITION554: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
// DECLARE for alternative str00
JavaNode str00= null;
{
JavaNode current0 = CSTRING;
if (! current0 .Name
.equals( "CharStringValue_A1") )
   if (javadummy) break  CONDITION554;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str00 --- JJ.M4
str00 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = str00;
if (! current0 .Name
.equals( "Cstring_A1") )
   if (javadummy) break  CONDITION554;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"expr_cstring"
, new JavaNode [] {
str
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_charstring"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST553;
// $$$$$$$$ 
} // CONDITION554 // @@@ end of alternative
CONDITION555: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative m4
JavaNode m4= null;
// DECLARE for alternative m3
JavaNode m3= null;
// DECLARE for alternative m2
JavaNode m2= null;
// DECLARE for alternative m1
JavaNode m1= null;
// DECLARE for alternative n4
JavaNode n4= null;
// DECLARE for alternative n3
JavaNode n3= null;
// DECLARE for alternative n2
JavaNode n2= null;
// DECLARE for alternative n1
JavaNode n1= null;
// DECLARE for alternative str0
JavaNode str0= null;
{
JavaNode current0 = CSTRING;
if (! current0 .Name
.equals( "CharStringValue_A2") )
   if (javadummy) break  CONDITION555;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str0 --- JJ.M4
str0 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = str0;
if (! current0 .Name
.equals( "Quadruple_A1") )
   if (javadummy) break  CONDITION555;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to n1 --- JJ.M4
n1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to n2 --- JJ.M4
n2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to n3 --- JJ.M4
n3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to n4 --- JJ.M4
n4 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = n1;
if (! current0 .Name
.equals( "Number_A1") )
   if (javadummy) break  CONDITION555;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to m1 --- JJ.M4
m1 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = n2;
if (! current0 .Name
.equals( "Number_A1") )
   if (javadummy) break  CONDITION555;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to m2 --- JJ.M4
m2 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = n3;
if (! current0 .Name
.equals( "Number_A1") )
   if (javadummy) break  CONDITION555;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to m3 --- JJ.M4
m3 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = n4;
if (! current0 .Name
.equals( "Number_A1") )
   if (javadummy) break  CONDITION555;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to m4 --- JJ.M4
m4 = current1 ;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"expr_quadrupel"
, new JavaNode [] {
m1
,
m2
,
m3
,
m4
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_charstring"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST553;
// $$$$$$$$ 
} // CONDITION555 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=553 N=552
if (javadummy) break CONDITION552;
} // CONDLIST553 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST546;
// $$$$$$$$ 
} // CONDITION552 // @@@ end of alternative
CONDITION556: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative NUMBER
JavaNode NUMBER= null;
// DECLARE for alternative N
JavaNode N= null;
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A4") )
   if (javadummy) break  CONDITION556;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N --- JJ.M4
N = current1 ;
} //)) children level 1
};
{
JavaNode current0 = N;
if (! current0 .Name
.equals( "Number_A1") )
   if (javadummy) break  CONDITION556;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NUMBER --- JJ.M4
NUMBER = current1 ;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"intexpr"
, new JavaNode [] {
NUMBER
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST546;
// $$$$$$$$ 
} // CONDITION556 // @@@ end of alternative
CONDITION557: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
// DECLARE for alternative OSTRING
JavaNode OSTRING= null;
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A5") )
   if (javadummy) break  CONDITION557;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to OSTRING --- JJ.M4
OSTRING = current1 ;
} //)) children level 1
};
{
JavaNode current0 = OSTRING;
if (! current0 .Name
.equals( "Ostring_A1") )
   if (javadummy) break  CONDITION557;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"expr_ostring"
, new JavaNode [] {
str
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST546;
// $$$$$$$$ 
} // CONDITION557 // @@@ end of alternative
CONDITION558: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
// DECLARE for alternative HSTRING
JavaNode HSTRING= null;
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A6") )
   if (javadummy) break  CONDITION558;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to HSTRING --- JJ.M4
HSTRING = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HSTRING;
if (! current0 .Name
.equals( "Hstring_A1") )
   if (javadummy) break  CONDITION558;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"expr_hstring"
, new JavaNode [] {
str
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST546;
// $$$$$$$$ 
} // CONDITION558 // @@@ end of alternative
CONDITION559: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative VERDICT
JavaNode VERDICT= null;
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A7") )
   if (javadummy) break  CONDITION559;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to VERDICT --- JJ.M4
VERDICT = current1 ;
} //)) children level 1
};
// ***** begin condlist 560 (in cond 559) *****
CONDLIST560: // @@@ begin of alternative group
while(javadummy) {
CONDITION561: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = VERDICT;
if (! current0 .Name
.equals( "VerdictTypeValue_A1") )
   if (javadummy) break  CONDITION561;
};
RES = 
NodeFactory.NewNode(
"expr_verdict"
, new JavaNode [] {
new JavaStringValue( "pass" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST560;
// $$$$$$$$ 
} // CONDITION561 // @@@ end of alternative
CONDITION562: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = VERDICT;
if (! current0 .Name
.equals( "VerdictTypeValue_A2") )
   if (javadummy) break  CONDITION562;
};
RES = 
NodeFactory.NewNode(
"expr_verdict"
, new JavaNode [] {
new JavaStringValue( "fail" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST560;
// $$$$$$$$ 
} // CONDITION562 // @@@ end of alternative
CONDITION563: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = VERDICT;
if (! current0 .Name
.equals( "VerdictTypeValue_A3") )
   if (javadummy) break  CONDITION563;
};
RES = 
NodeFactory.NewNode(
"expr_verdict"
, new JavaNode [] {
new JavaStringValue( "inconc" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST560;
// $$$$$$$$ 
} // CONDITION563 // @@@ end of alternative
CONDITION564: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = VERDICT;
if (! current0 .Name
.equals( "VerdictTypeValue_A4") )
   if (javadummy) break  CONDITION564;
};
RES = 
NodeFactory.NewNode(
"expr_verdict"
, new JavaNode [] {
new JavaStringValue( "none" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST560;
// $$$$$$$$ 
} // CONDITION564 // @@@ end of alternative
CONDITION565: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = VERDICT;
if (! current0 .Name
.equals( "VerdictTypeValue_A5") )
   if (javadummy) break  CONDITION565;
};
RES = 
NodeFactory.NewNode(
"expr_verdict"
, new JavaNode [] {
new JavaStringValue( "error" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST560;
// $$$$$$$$ 
} // CONDITION565 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=560 N=559
if (javadummy) break CONDITION559;
} // CONDLIST560 @@@ end of alternative group
// *** CONTINUE ***
Tp = 
NodeFactory.NewNode(
"tp_verdict"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST546;
// $$$$$$$$ 
} // CONDITION559 // @@@ end of alternative
CONDITION566: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
// DECLARE for alternative F
JavaNode F= null;
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A8") )
   if (javadummy) break  CONDITION566;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to F --- JJ.M4
F = current1 ;
} //)) children level 1
};
{
JavaNode current0 = F;
if (! current0 .Name
.equals( "FloatValue_A1") )
   if (javadummy) break  CONDITION566;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"expr_float"
, new JavaNode [] {
str
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_float"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST546;
// $$$$$$$$ 
} // CONDITION566 // @@@ end of alternative
CONDITION567: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A9") )
   if (javadummy) break  CONDITION567;
};
RES = 
NodeFactory.NewNode(
"expr_omit"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST546;
// $$$$$$$$ 
} // CONDITION567 // @@@ end of alternative
CONDITION568: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative BEHAVIOUR
JavaNode BEHAVIOUR= null;
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A10") )
   if (javadummy) break  CONDITION568;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to BEHAVIOUR --- JJ.M4
BEHAVIOUR = current1 ;
} //)) children level 1
};
// ***** begin condlist 569 (in cond 568) *****
CONDLIST569: // @@@ begin of alternative group
while(javadummy) {
CONDITION570: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative I2
JavaNode I2= null;
// DECLARE for alternative I1
JavaNode I1= null;
{
JavaNode current0 = BEHAVIOUR;
if (! current0 .Name
.equals( "BehaviourValue_A1") )
   if (javadummy) break  CONDITION570;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to I1 --- JJ.M4
I1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to I2 --- JJ.M4
I2 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Behaviour" )
,
BEHAVIOUR
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST569;
// $$$$$$$$ 
} // CONDITION570 // @@@ end of alternative
CONDITION571: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = BEHAVIOUR;
if (! current0 .Name
.equals( "BehaviourValue_A2") )
   if (javadummy) break  CONDITION571;
};
YyProcs.
NotCovered
(
new JavaStringValue( "Behaviour" )
,
BEHAVIOUR
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST569;
// $$$$$$$$ 
} // CONDITION571 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=569 N=568
if (javadummy) break CONDITION568;
} // CONDLIST569 @@@ end of alternative group
// *** CONTINUE ***
RES = 
NodeFactory.NewNode(
"expr_omit"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST546;
// $$$$$$$$ 
} // CONDITION568 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=546 N=545
if (javadummy) break CONDITION545;
} // CONDLIST546 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST544;
// $$$$$$$$ 
} // CONDITION545 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=544 N=543
if (javadummy) break CONDITION543;
} // CONDLIST544 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION543
// failed:
JavaLib.rtsAllAlternativesFailed("prima_Trafo_PredefinedValue");
}



public
static
void
Trafo_SingleExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc RES0
JavaNode RES0 = null;
// DECLARE for proc Tp0
JavaNode Tp0 = null;
// DECLARE for proc Rest
JavaNode Rest = null;
// DECLARE for proc XOR
JavaNode XOR = null;
CONDITION572:
while(javadummy) {
// ***** begin condlist 573 (in cond 572) *****
CONDLIST573: // @@@ begin of alternative group
while(javadummy) {
CONDITION574: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 575 (in cond 574) *****
CONDLIST575: // @@@ begin of alternative group
while(javadummy) {
CONDITION576: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "SingleExpression_A1") )
   if (javadummy) break  CONDITION576;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XOR --- JJ.M4
XOR = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Rest --- JJ.M4
Rest = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_XorExpression
(
XOR
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES0 --- JJ.M4
RES0 = current0 ;
}
YyProcs.
Trafo_OrRest
(
Rest
,
Tp0
,
RES0
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST575;
// $$$$$$$$ 
} // CONDITION576 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=575 N=574
if (javadummy) break CONDITION574;
} // CONDLIST575 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST573;
// $$$$$$$$ 
} // CONDITION574 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=573 N=572
if (javadummy) break CONDITION572;
} // CONDLIST573 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION572
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_SingleExpression");
}



public
static
void
Trafo_OrRest(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc EXPR0
JavaNode EXPR0 = null;
// DECLARE for proc Tp0
JavaNode Tp0 = null;
CONDITION577:
while(javadummy) {
// ***** begin condlist 578 (in cond 577) *****
CONDLIST578: // @@@ begin of alternative group
while(javadummy) {
CONDITION579: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-SingleExpression_A1_M2")
if (javadummy) break CONDITION579;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to EXPR0 --- JJ.M4
EXPR0 = current0 ;
};
yy_outparam_0 = 
Tp0
;
yy_outparam_1 = 
EXPR0
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST578;
// $$$$$$$$ 
} // CONDITION579 // @@@ end of alternative
CONDITION580: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES3
JavaNode RES3= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
// DECLARE for alternative RES1
JavaNode RES1= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative Tl
JavaNode Tl= null;
// DECLARE for alternative Hd
JavaNode Hd= null;
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-SingleExpression_A1_M2")
if (javadummy) break CONDITION580;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Hd --- JJ.M4
Hd = current1 ;
current1 = current0.Child1[1];
//assign current1 to Tl --- JJ.M4
Tl = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to EXPR0 --- JJ.M4
EXPR0 = current0 ;
};
// ***** begin condlist 581 (in cond 580) *****
CONDLIST581: // @@@ begin of alternative group
while(javadummy) {
CONDITION582: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Hd;
if (! current0 .Name
.equals( "SingleExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION582;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST581;
// $$$$$$$$ 
} // CONDITION582 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=581 N=580
if (javadummy) break CONDITION580;
} // CONDLIST581 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Trafo_XorExpression
(
X
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES1 --- JJ.M4
RES1 = current0 ;
}
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "or" )
,
EXPR0
,
RES1
}
)
;
YyProcs.
CheckExpr
(
new JavaStringValue( "and" )
,
Hd
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
YyProcs.
Trafo_OrRest
(
Tl
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES3 --- JJ.M4
RES3 = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES3
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST578;
// $$$$$$$$ 
} // CONDITION580 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=578 N=577
if (javadummy) break CONDITION577;
} // CONDLIST578 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION577
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_OrRest");
}



public
static
void
Trafo_XorExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc XOR
JavaNode XOR = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc RES2
JavaNode RES2 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc TAIL
JavaNode TAIL = null;
// DECLARE for proc AND
JavaNode AND = null;
CONDITION583:
while(javadummy) {
// ***** begin condlist 584 (in cond 583) *****
CONDLIST584: // @@@ begin of alternative group
while(javadummy) {
CONDITION585: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to XOR --- JJ.M4
XOR = current0 ;
};
// ***** begin condlist 586 (in cond 585) *****
CONDLIST586: // @@@ begin of alternative group
while(javadummy) {
CONDITION587: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XOR;
if (! current0 .Name
.equals( "XorExpression_A1") )
   if (javadummy) break  CONDITION587;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to AND --- JJ.M4
AND = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_AndExpression
(
AND
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
YyProcs.
Trafo_XorSequence
(
TAIL
,
Tp1
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST586;
// $$$$$$$$ 
} // CONDITION587 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=586 N=585
if (javadummy) break CONDITION585;
} // CONDLIST586 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST584;
// $$$$$$$$ 
} // CONDITION585 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=584 N=583
if (javadummy) break CONDITION583;
} // CONDLIST584 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION583
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_XorExpression");
}



public
static
void
Trafo_XorSequence(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
CONDITION588:
while(javadummy) {
// ***** begin condlist 589 (in cond 588) *****
CONDLIST589: // @@@ begin of alternative group
while(javadummy) {
CONDITION590: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "NilOf-XorExpression_A1_M2")
if (javadummy) break CONDITION590;
};
yy_outparam_0 = 
Tp1
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST589;
// $$$$$$$$ 
} // CONDITION590 // @@@ end of alternative
CONDITION591: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES
JavaNode RES= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
// DECLARE for alternative ARG2
JavaNode ARG2= null;
// DECLARE for alternative AND
JavaNode AND= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "SeqOf-XorExpression_A1_M2")
if (javadummy) break CONDITION591;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "XorExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION591;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to AND --- JJ.M4
AND = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_AndExpression
(
AND
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ARG2 --- JJ.M4
ARG2 = current0 ;
}
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "xor" )
,
LEFT
,
ARG2
}
)
;
YyProcs.
CheckExpr
(
new JavaStringValue( "and" )
,
HEAD
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
YyProcs.
Trafo_XorSequence
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST589;
// $$$$$$$$ 
} // CONDITION591 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=589 N=588
if (javadummy) break CONDITION588;
} // CONDLIST589 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION588
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_XorSequence");
}



public
static
void
Trafo_AndExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc RES2
JavaNode RES2 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
// DECLARE for proc NOT
JavaNode NOT = null;
// DECLARE for proc AND
JavaNode AND = null;
CONDITION592:
while(javadummy) {
// ***** begin condlist 593 (in cond 592) *****
CONDLIST593: // @@@ begin of alternative group
while(javadummy) {
CONDITION594: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to AND --- JJ.M4
AND = current0 ;
};
{
JavaNode current0 = AND;
if (! current0 .Name
.equals( "AndExpression_A1") )
   if (javadummy) break  CONDITION594;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NOT --- JJ.M4
NOT = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to SEQ --- JJ.M4
SEQ = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_NotExpression
(
NOT
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
YyProcs.
Trafo_AndSequence
(
SEQ
,
Tp1
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST593;
// $$$$$$$$ 
} // CONDITION594 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=593 N=592
if (javadummy) break CONDITION592;
} // CONDLIST593 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION592
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_AndExpression");
}



public
static
void
Trafo_AndSequence(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
CONDITION595:
while(javadummy) {
// ***** begin condlist 596 (in cond 595) *****
CONDLIST596: // @@@ begin of alternative group
while(javadummy) {
CONDITION597: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "NilOf-AndExpression_A1_M2")
if (javadummy) break CONDITION597;
};
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST596;
// $$$$$$$$ 
} // CONDITION597 // @@@ end of alternative
CONDITION598: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES
JavaNode RES= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
// DECLARE for alternative ARG2
JavaNode ARG2= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative NOT
JavaNode NOT= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "SeqOf-AndExpression_A1_M2")
if (javadummy) break CONDITION598;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "AndExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION598;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NOT --- JJ.M4
NOT = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_NotExpression
(
NOT
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ARG2 --- JJ.M4
ARG2 = current0 ;
}
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "and" )
,
LEFT
,
ARG2
}
)
;
YyProcs.
CheckExpr
(
new JavaStringValue( "and" )
,
HEAD
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
YyProcs.
Trafo_AndSequence
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST596;
// $$$$$$$$ 
} // CONDITION598 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=596 N=595
if (javadummy) break CONDITION595;
} // CONDLIST596 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION595
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_AndSequence");
}



public
static
void
Trafo_NotExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES2
JavaNode RES2 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc EQUAL
JavaNode EQUAL = null;
// DECLARE for proc OP
JavaNode OP = null;
// DECLARE for proc NOT
JavaNode NOT = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc RES
JavaNode RES = null;
CONDITION599:
while(javadummy) {
// ***** begin condlist 600 (in cond 599) *****
CONDLIST600: // @@@ begin of alternative group
while(javadummy) {
CONDITION601: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NOT --- JJ.M4
NOT = current0 ;
};
{
JavaNode current0 = NOT;
if (! current0 .Name
.equals( "NotExpression_A1") )
   if (javadummy) break  CONDITION601;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to OP --- JJ.M4
OP = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to EQUAL --- JJ.M4
EQUAL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_EqualExpression
(
EQUAL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
// ***** begin condlist 602 (in cond 601) *****
CONDLIST602: // @@@ begin of alternative group
while(javadummy) {
CONDITION603: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-NotExpression_A1_M1")
if (javadummy) break CONDITION603;
{ //(( children level 1
} //)) children level 1
};
RES = 
RES2
;
Tp2 = 
Tp1
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST602;
// $$$$$$$$ 
} // CONDITION603 // @@@ end of alternative
CONDITION604: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (current0.Name
!= "OneOf-NotExpression_A1_M1")
if (javadummy) break CONDITION604;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
if (! current1 .Name
.equals( "NotExpression_A1_M1_A1") )
   if (javadummy) break  CONDITION604;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"monexpr"
, new JavaNode [] {
new JavaStringValue( "not" )
,
RES2
}
)
;
YyProcs.
CheckExpr1
(
new JavaStringValue( "not" )
,
OP
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST602;
// $$$$$$$$ 
} // CONDITION604 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=602 N=601
if (javadummy) break CONDITION601;
} // CONDLIST602 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST600;
// $$$$$$$$ 
} // CONDITION601 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=600 N=599
if (javadummy) break CONDITION599;
} // CONDLIST600 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION599
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_NotExpression");
}



public
static
void
Trafo_EqualExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc RES2
JavaNode RES2 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc TAIL
JavaNode TAIL = null;
// DECLARE for proc REL
JavaNode REL = null;
// DECLARE for proc EQUAL
JavaNode EQUAL = null;
CONDITION605:
while(javadummy) {
// ***** begin condlist 606 (in cond 605) *****
CONDLIST606: // @@@ begin of alternative group
while(javadummy) {
CONDITION607: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to EQUAL --- JJ.M4
EQUAL = current0 ;
};
{
JavaNode current0 = EQUAL;
if (! current0 .Name
.equals( "EqualExpression_A1") )
   if (javadummy) break  CONDITION607;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to REL --- JJ.M4
REL = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_RelExpression
(
REL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
YyProcs.
Trafo_EqualSequence
(
TAIL
,
Tp1
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST606;
// $$$$$$$$ 
} // CONDITION607 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=606 N=605
if (javadummy) break CONDITION605;
} // CONDLIST606 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION605
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_EqualExpression");
}



public
static
void
Trafo_EqualSequence(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
CONDITION608:
while(javadummy) {
// ***** begin condlist 609 (in cond 608) *****
CONDLIST609: // @@@ begin of alternative group
while(javadummy) {
CONDITION610: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "NilOf-EqualExpression_A1_M2")
if (javadummy) break CONDITION610;
};
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST609;
// $$$$$$$$ 
} // CONDITION610 // @@@ end of alternative
CONDITION611: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES
JavaNode RES= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative ARG2
JavaNode ARG2= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative REL
JavaNode REL= null;
// DECLARE for alternative OP
JavaNode OP= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "SeqOf-EqualExpression_A1_M2")
if (javadummy) break CONDITION611;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "EqualExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION611;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to OP --- JJ.M4
OP = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to REL --- JJ.M4
REL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_RelExpression
(
REL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ARG2 --- JJ.M4
ARG2 = current0 ;
}
// ***** begin condlist 612 (in cond 611) *****
CONDLIST612: // @@@ begin of alternative group
while(javadummy) {
CONDITION613: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "EqualOp_A1") )
   if (javadummy) break  CONDITION613;
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "equal" )
,
LEFT
,
ARG2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST612;
// $$$$$$$$ 
} // CONDITION613 // @@@ end of alternative
CONDITION614: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "EqualOp_A2") )
   if (javadummy) break  CONDITION614;
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "notequal" )
,
LEFT
,
ARG2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST612;
// $$$$$$$$ 
} // CONDITION614 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=612 N=611
if (javadummy) break CONDITION611;
} // CONDLIST612 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
CheckExpr
(
new JavaStringValue( "equal" )
,
OP
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
YyProcs.
Trafo_EqualSequence
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST609;
// $$$$$$$$ 
} // CONDITION611 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=609 N=608
if (javadummy) break CONDITION608;
} // CONDLIST609 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION608
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_EqualSequence");
}



public
static
void
Trafo_RelExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc REL
JavaNode REL = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
CONDITION615:
while(javadummy) {
// ***** begin condlist 616 (in cond 615) *****
CONDLIST616: // @@@ begin of alternative group
while(javadummy) {
CONDITION617: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to REL --- JJ.M4
REL = current0 ;
};
// ***** begin condlist 618 (in cond 617) *****
CONDLIST618: // @@@ begin of alternative group
while(javadummy) {
CONDITION619: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES2
JavaNode RES2= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative SHIFT
JavaNode SHIFT= null;
{
JavaNode current0 = REL;
if (! current0 .Name
.equals( "RelExpression_A1") )
   if (javadummy) break  CONDITION619;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to SHIFT --- JJ.M4
SHIFT = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ShiftExpression
(
SHIFT
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
YyProcs.
Trafo_RelSequence
(
TAIL
,
Tp1
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST618;
// $$$$$$$$ 
} // CONDITION619 // @@@ end of alternative
CONDITION620: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tps
JavaNode Tps= null;
// DECLARE for alternative Compound
JavaNode Compound= null;
{
JavaNode current0 = REL;
if (! current0 .Name
.equals( "RelExpression_A2") )
   if (javadummy) break  CONDITION620;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Compound --- JJ.M4
Compound = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_CompoundExpression
(
Compound
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tps --- JJ.M4
Tps = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
Tp2 = 
NodeFactory.NewNode(
"tp_compound"
, new JavaNode [] {
Tps
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST618;
// $$$$$$$$ 
} // CONDITION620 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=618 N=617
if (javadummy) break CONDITION617;
} // CONDLIST618 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST616;
// $$$$$$$$ 
} // CONDITION617 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=616 N=615
if (javadummy) break CONDITION615;
} // CONDLIST616 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION615
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_RelExpression");
}



public
static
void
Trafo_RelSequence(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc HEAD
JavaNode HEAD = null;
CONDITION621:
while(javadummy) {
// ***** begin condlist 622 (in cond 621) *****
CONDLIST622: // @@@ begin of alternative group
while(javadummy) {
CONDITION623: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to HEAD --- JJ.M4
HEAD = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = HEAD;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-RelExpression_A1_M2")
if (javadummy) break CONDITION623;
{ //(( children level 1
} //)) children level 1
};
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST622;
// $$$$$$$$ 
} // CONDITION623 // @@@ end of alternative
CONDITION624: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative ARG2
JavaNode ARG2= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative REL
JavaNode REL= null;
// DECLARE for alternative OP
JavaNode OP= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
// DECLARE for alternative RES
JavaNode RES= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to HEAD --- JJ.M4
HEAD = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = HEAD;
if (current0.Name
!= "OneOf-RelExpression_A1_M2")
if (javadummy) break CONDITION624;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
if (! current1 .Name
.equals( "RelExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION624;
{ //(( children level 2
JavaNode current2 =
   current1 . Child1[0];
JavaNode kurrent1 = current1;
//assign current2 to OP --- JJ.M4
OP = current2 ;
current2 = kurrent1.Child1[1];
//assign current2 to REL --- JJ.M4
REL = current2 ;
} //)) children level 2
} //)) children level 1
};
YyProcs.
Trafo_ShiftExpression
(
REL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ARG2 --- JJ.M4
ARG2 = current0 ;
}
// ***** begin condlist 625 (in cond 624) *****
CONDLIST625: // @@@ begin of alternative group
while(javadummy) {
CONDITION626: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "RelOp_A1") )
   if (javadummy) break  CONDITION626;
};
RES = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "less" )
,
LEFT
,
ARG2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST625;
// $$$$$$$$ 
} // CONDITION626 // @@@ end of alternative
CONDITION627: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "RelOp_A2") )
   if (javadummy) break  CONDITION627;
};
RES = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "greater" )
,
LEFT
,
ARG2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST625;
// $$$$$$$$ 
} // CONDITION627 // @@@ end of alternative
CONDITION628: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "RelOp_A3") )
   if (javadummy) break  CONDITION628;
};
RES = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "greaterequal" )
,
LEFT
,
ARG2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST625;
// $$$$$$$$ 
} // CONDITION628 // @@@ end of alternative
CONDITION629: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "RelOp_A4") )
   if (javadummy) break  CONDITION629;
};
RES = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "lessequal" )
,
LEFT
,
ARG2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST625;
// $$$$$$$$ 
} // CONDITION629 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=625 N=624
if (javadummy) break CONDITION624;
} // CONDLIST625 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
CheckExpr
(
new JavaStringValue( "less" )
,
OP
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST622;
// $$$$$$$$ 
} // CONDITION624 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=622 N=621
if (javadummy) break CONDITION621;
} // CONDLIST622 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION621
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_RelSequence");
}



public
static
void
Trafo_ShiftExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc RES2
JavaNode RES2 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc TAIL
JavaNode TAIL = null;
// DECLARE for proc BITOR
JavaNode BITOR = null;
// DECLARE for proc SHIFT
JavaNode SHIFT = null;
CONDITION630:
while(javadummy) {
// ***** begin condlist 631 (in cond 630) *****
CONDLIST631: // @@@ begin of alternative group
while(javadummy) {
CONDITION632: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SHIFT --- JJ.M4
SHIFT = current0 ;
};
{
JavaNode current0 = SHIFT;
if (! current0 .Name
.equals( "ShiftExpression_A1") )
   if (javadummy) break  CONDITION632;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to BITOR --- JJ.M4
BITOR = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BitOrExpression
(
BITOR
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
YyProcs.
Trafo_ShiftSequence
(
TAIL
,
Tp1
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST631;
// $$$$$$$$ 
} // CONDITION632 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=631 N=630
if (javadummy) break CONDITION630;
} // CONDLIST631 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION630
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ShiftExpression");
}



public
static
void
Trafo_ShiftSequence(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc X
JavaNode X = null;
CONDITION633:
while(javadummy) {
// ***** begin condlist 634 (in cond 633) *****
CONDLIST634: // @@@ begin of alternative group
while(javadummy) {
CONDITION635: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = X;
if (current0.Name
!= "NilOf-ShiftExpression_A1_M2")
if (javadummy) break CONDITION635;
};
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST634;
// $$$$$$$$ 
} // CONDITION635 // @@@ end of alternative
CONDITION636: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES
JavaNode RES= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative ARG2
JavaNode ARG2= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative SHIFT
JavaNode SHIFT= null;
// DECLARE for alternative OP
JavaNode OP= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = X;
if (current0.Name
!= "SeqOf-ShiftExpression_A1_M2")
if (javadummy) break CONDITION636;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "ShiftExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION636;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to OP --- JJ.M4
OP = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to SHIFT --- JJ.M4
SHIFT = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BitOrExpression
(
SHIFT
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ARG2 --- JJ.M4
ARG2 = current0 ;
}
// ***** begin condlist 637 (in cond 636) *****
CONDLIST637: // @@@ begin of alternative group
while(javadummy) {
CONDITION638: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "ShiftOp_A1") )
   if (javadummy) break  CONDITION638;
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "shiftleft" )
,
LEFT
,
ARG2
}
)
;
YyProcs.
NotCovered
(
new JavaStringValue( "shift left operator" )
,
OP
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST637;
// $$$$$$$$ 
} // CONDITION638 // @@@ end of alternative
CONDITION639: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "ShiftOp_A2") )
   if (javadummy) break  CONDITION639;
};
YyProcs.
NotCovered
(
new JavaStringValue( "shift right operator" )
,
OP
);
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "shiftright" )
,
LEFT
,
ARG2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST637;
// $$$$$$$$ 
} // CONDITION639 // @@@ end of alternative
CONDITION640: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "ShiftOp_A3") )
   if (javadummy) break  CONDITION640;
};
YyProcs.
NotCovered
(
new JavaStringValue( "rotate left operator" )
,
OP
);
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "rotateleft" )
,
LEFT
,
ARG2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST637;
// $$$$$$$$ 
} // CONDITION640 // @@@ end of alternative
CONDITION641: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "ShiftOp_A4") )
   if (javadummy) break  CONDITION641;
};
YyProcs.
NotCovered
(
new JavaStringValue( "rotate right operator" )
,
OP
);
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "rotateright" )
,
LEFT
,
ARG2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST637;
// $$$$$$$$ 
} // CONDITION641 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=637 N=636
if (javadummy) break CONDITION636;
} // CONDLIST637 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
CheckExpr
(
new JavaStringValue( "rotate" )
,
OP
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
YyProcs.
Trafo_ShiftSequence
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST634;
// $$$$$$$$ 
} // CONDITION636 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=634 N=633
if (javadummy) break CONDITION633;
} // CONDLIST634 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION633
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ShiftSequence");
}



public
static
void
Trafo_BitOrExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc RES2
JavaNode RES2 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc TAIL
JavaNode TAIL = null;
// DECLARE for proc BITXOR
JavaNode BITXOR = null;
// DECLARE for proc BITOR
JavaNode BITOR = null;
CONDITION642:
while(javadummy) {
// ***** begin condlist 643 (in cond 642) *****
CONDLIST643: // @@@ begin of alternative group
while(javadummy) {
CONDITION644: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to BITOR --- JJ.M4
BITOR = current0 ;
};
{
JavaNode current0 = BITOR;
if (! current0 .Name
.equals( "BitOrExpression_A1") )
   if (javadummy) break  CONDITION644;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to BITXOR --- JJ.M4
BITXOR = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BitXorExpression
(
BITXOR
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
YyProcs.
Trafo_BitOrSequence
(
TAIL
,
Tp1
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST643;
// $$$$$$$$ 
} // CONDITION644 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=643 N=642
if (javadummy) break CONDITION642;
} // CONDLIST643 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION642
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_BitOrExpression");
}



public
static
void
Trafo_BitOrSequence(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
CONDITION645:
while(javadummy) {
// ***** begin condlist 646 (in cond 645) *****
CONDLIST646: // @@@ begin of alternative group
while(javadummy) {
CONDITION647: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "NilOf-BitOrExpression_A1_M2")
if (javadummy) break CONDITION647;
};
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST646;
// $$$$$$$$ 
} // CONDITION647 // @@@ end of alternative
CONDITION648: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES
JavaNode RES= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
// DECLARE for alternative ARG2
JavaNode ARG2= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative XOR
JavaNode XOR= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "SeqOf-BitOrExpression_A1_M2")
if (javadummy) break CONDITION648;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "BitOrExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION648;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XOR --- JJ.M4
XOR = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BitXorExpression
(
XOR
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ARG2 --- JJ.M4
ARG2 = current0 ;
}
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "bitor" )
,
LEFT
,
ARG2
}
)
;
YyProcs.
CheckExpr
(
new JavaStringValue( "bitor" )
,
HEAD
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
YyProcs.
NotCovered
(
new JavaStringValue( "or4b operator" )
,
HEAD
);
YyProcs.
Trafo_BitOrSequence
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST646;
// $$$$$$$$ 
} // CONDITION648 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=646 N=645
if (javadummy) break CONDITION645;
} // CONDLIST646 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION645
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_BitOrSequence");
}



public
static
void
Trafo_BitXorExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc RES2
JavaNode RES2 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc TAIL
JavaNode TAIL = null;
// DECLARE for proc BITAND
JavaNode BITAND = null;
// DECLARE for proc BITXOR
JavaNode BITXOR = null;
CONDITION649:
while(javadummy) {
// ***** begin condlist 650 (in cond 649) *****
CONDLIST650: // @@@ begin of alternative group
while(javadummy) {
CONDITION651: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to BITXOR --- JJ.M4
BITXOR = current0 ;
};
{
JavaNode current0 = BITXOR;
if (! current0 .Name
.equals( "BitXorExpression_A1") )
   if (javadummy) break  CONDITION651;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to BITAND --- JJ.M4
BITAND = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BitAndExpression
(
BITAND
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
YyProcs.
Trafo_BitXorSequence
(
TAIL
,
Tp1
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST650;
// $$$$$$$$ 
} // CONDITION651 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=650 N=649
if (javadummy) break CONDITION649;
} // CONDLIST650 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION649
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_BitXorExpression");
}



public
static
void
Trafo_BitXorSequence(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
CONDITION652:
while(javadummy) {
// ***** begin condlist 653 (in cond 652) *****
CONDLIST653: // @@@ begin of alternative group
while(javadummy) {
CONDITION654: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "NilOf-BitXorExpression_A1_M2")
if (javadummy) break CONDITION654;
};
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST653;
// $$$$$$$$ 
} // CONDITION654 // @@@ end of alternative
CONDITION655: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES
JavaNode RES= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
// DECLARE for alternative ARG2
JavaNode ARG2= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative AND
JavaNode AND= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "SeqOf-BitXorExpression_A1_M2")
if (javadummy) break CONDITION655;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "BitXorExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION655;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to AND --- JJ.M4
AND = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BitAndExpression
(
AND
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ARG2 --- JJ.M4
ARG2 = current0 ;
}
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "bitxor" )
,
LEFT
,
ARG2
}
)
;
YyProcs.
CheckExpr
(
new JavaStringValue( "bitxor" )
,
HEAD
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
YyProcs.
NotCovered
(
new JavaStringValue( "xor4b operator" )
,
HEAD
);
YyProcs.
Trafo_BitXorSequence
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST653;
// $$$$$$$$ 
} // CONDITION655 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=653 N=652
if (javadummy) break CONDITION652;
} // CONDLIST653 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION652
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_BitXorSequence");
}



public
static
void
Trafo_BitAndExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp3
JavaNode Tp3 = null;
// DECLARE for proc RES2
JavaNode RES2 = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc TAIL
JavaNode TAIL = null;
// DECLARE for proc BITNOT
JavaNode BITNOT = null;
// DECLARE for proc BITAND
JavaNode BITAND = null;
CONDITION656:
while(javadummy) {
// ***** begin condlist 657 (in cond 656) *****
CONDLIST657: // @@@ begin of alternative group
while(javadummy) {
CONDITION658: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to BITAND --- JJ.M4
BITAND = current0 ;
};
{
JavaNode current0 = BITAND;
if (! current0 .Name
.equals( "BitAndExpression_A1") )
   if (javadummy) break  CONDITION658;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to BITNOT --- JJ.M4
BITNOT = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BitNotExpression
(
BITNOT
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
YyProcs.
Trafo_BitAndSequence
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST657;
// $$$$$$$$ 
} // CONDITION658 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=657 N=656
if (javadummy) break CONDITION656;
} // CONDLIST657 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION656
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_BitAndExpression");
}



public
static
void
Trafo_BitAndSequence(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
CONDITION659:
while(javadummy) {
// ***** begin condlist 660 (in cond 659) *****
CONDLIST660: // @@@ begin of alternative group
while(javadummy) {
CONDITION661: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "NilOf-BitAndExpression_A1_M2")
if (javadummy) break CONDITION661;
};
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST660;
// $$$$$$$$ 
} // CONDITION661 // @@@ end of alternative
CONDITION662: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES
JavaNode RES= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
// DECLARE for alternative ARG2
JavaNode ARG2= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative NOT
JavaNode NOT= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "SeqOf-BitAndExpression_A1_M2")
if (javadummy) break CONDITION662;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "BitAndExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION662;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NOT --- JJ.M4
NOT = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BitNotExpression
(
NOT
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ARG2 --- JJ.M4
ARG2 = current0 ;
}
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "bitand" )
,
LEFT
,
ARG2
}
)
;
YyProcs.
NotCovered
(
new JavaStringValue( "and4b operator" )
,
HEAD
);
YyProcs.
CheckExpr
(
new JavaStringValue( "bitand" )
,
HEAD
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
YyProcs.
Trafo_BitAndSequence
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST660;
// $$$$$$$$ 
} // CONDITION662 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=660 N=659
if (javadummy) break CONDITION659;
} // CONDLIST660 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION659
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_BitAndSequence");
}



public
static
void
Trafo_BitNotExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES2
JavaNode RES2 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc ADD
JavaNode ADD = null;
// DECLARE for proc OP
JavaNode OP = null;
// DECLARE for proc BITNOT
JavaNode BITNOT = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc RES
JavaNode RES = null;
CONDITION663:
while(javadummy) {
// ***** begin condlist 664 (in cond 663) *****
CONDLIST664: // @@@ begin of alternative group
while(javadummy) {
CONDITION665: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to BITNOT --- JJ.M4
BITNOT = current0 ;
};
{
JavaNode current0 = BITNOT;
if (! current0 .Name
.equals( "BitNotExpression_A1") )
   if (javadummy) break  CONDITION665;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to OP --- JJ.M4
OP = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to ADD --- JJ.M4
ADD = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ADD
(
ADD
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
// ***** begin condlist 666 (in cond 665) *****
CONDLIST666: // @@@ begin of alternative group
while(javadummy) {
CONDITION667: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-BitNotExpression_A1_M1")
if (javadummy) break CONDITION667;
{ //(( children level 1
} //)) children level 1
};
RES = 
RES2
;
Tp2 = 
Tp1
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST666;
// $$$$$$$$ 
} // CONDITION667 // @@@ end of alternative
CONDITION668: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (current0.Name
!= "OneOf-BitNotExpression_A1_M1")
if (javadummy) break CONDITION668;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
if (! current1 .Name
.equals( "BitNotExpression_A1_M1_A1") )
   if (javadummy) break  CONDITION668;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"monexpr"
, new JavaNode [] {
new JavaStringValue( "bitnot" )
,
RES2
}
)
;
YyProcs.
NotCovered
(
new JavaStringValue( "bit4b operator" )
,
OP
);
YyProcs.
CheckExpr1
(
new JavaStringValue( "bitnot" )
,
OP
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST666;
// $$$$$$$$ 
} // CONDITION668 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=666 N=665
if (javadummy) break CONDITION665;
} // CONDLIST666 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST664;
// $$$$$$$$ 
} // CONDITION665 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=664 N=663
if (javadummy) break CONDITION663;
} // CONDLIST664 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION663
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_BitNotExpression");
}



public
static
void
Trafo_ADD(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc RES1
JavaNode RES1 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
// DECLARE for proc MUL
JavaNode MUL = null;
// DECLARE for proc ADD
JavaNode ADD = null;
CONDITION669:
while(javadummy) {
// ***** begin condlist 670 (in cond 669) *****
CONDLIST670: // @@@ begin of alternative group
while(javadummy) {
CONDITION671: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to ADD --- JJ.M4
ADD = current0 ;
};
{
JavaNode current0 = ADD;
if (! current0 .Name
.equals( "AddExpression_A1") )
   if (javadummy) break  CONDITION671;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to MUL --- JJ.M4
MUL = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to SEQ --- JJ.M4
SEQ = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_MUL
(
MUL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES1 --- JJ.M4
RES1 = current0 ;
}
YyProcs.
Trafo_ADDSEQ
(
SEQ
,
Tp1
,
RES1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST670;
// $$$$$$$$ 
} // CONDITION671 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=670 N=669
if (javadummy) break CONDITION669;
} // CONDLIST670 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION669
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ADD");
}



public
static
void
Trafo_ADDSEQ(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
CONDITION672:
while(javadummy) {
// ***** begin condlist 673 (in cond 672) *****
CONDLIST673: // @@@ begin of alternative group
while(javadummy) {
CONDITION674: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "NilOf-AddExpression_A1_M2")
if (javadummy) break CONDITION674;
};
yy_outparam_0 = 
Tp1
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST673;
// $$$$$$$$ 
} // CONDITION674 // @@@ end of alternative
CONDITION675: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES
JavaNode RES= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative ARG1
JavaNode ARG1= null;
// DECLARE for alternative MUL
JavaNode MUL= null;
// DECLARE for alternative OP
JavaNode OP= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "SeqOf-AddExpression_A1_M2")
if (javadummy) break CONDITION675;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "AddExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION675;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to OP --- JJ.M4
OP = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to MUL --- JJ.M4
MUL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_MUL
(
MUL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ARG1 --- JJ.M4
ARG1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(OP);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
// ***** begin condlist 676 (in cond 675) *****
CONDLIST676: // @@@ begin of alternative group
while(javadummy) {
CONDITION677: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "AddOp_A1") )
   if (javadummy) break  CONDITION677;
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "add" )
,
LEFT
,
ARG1
}
)
;
YyProcs.
CheckExpr
(
new JavaStringValue( "add" )
,
OP
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST676;
// $$$$$$$$ 
} // CONDITION677 // @@@ end of alternative
CONDITION678: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "AddOp_A2") )
   if (javadummy) break  CONDITION678;
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "sub" )
,
LEFT
,
ARG1
}
)
;
YyProcs.
CheckExpr
(
new JavaStringValue( "add" )
,
OP
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST676;
// $$$$$$$$ 
} // CONDITION678 // @@@ end of alternative
CONDITION679: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "AddOp_A3") )
   if (javadummy) break  CONDITION679;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "concat" )
,
LEFT
,
ARG1
}
)
;
YyProcs.
CheckExpr
(
new JavaStringValue( "concat" )
,
OP
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST676;
// $$$$$$$$ 
} // CONDITION679 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=676 N=675
if (javadummy) break CONDITION675;
} // CONDLIST676 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Trafo_ADDSEQ
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST673;
// $$$$$$$$ 
} // CONDITION675 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=673 N=672
if (javadummy) break CONDITION672;
} // CONDLIST673 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION672
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ADDSEQ");
}



public
static
void
Trafo_UnaryExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc UNARY
JavaNode UNARY = null;
// DECLARE for proc PRIMARY
JavaNode PRIMARY = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc ResUnary
JavaNode ResUnary = null;
// DECLARE for proc TpUnary
JavaNode TpUnary = null;
CONDITION680:
while(javadummy) {
// ***** begin condlist 681 (in cond 680) *****
CONDLIST681: // @@@ begin of alternative group
while(javadummy) {
CONDITION682: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to UNARY --- JJ.M4
UNARY = current0 ;
};
// ***** begin condlist 683 (in cond 682) *****
CONDLIST683: // @@@ begin of alternative group
while(javadummy) {
CONDITION684: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = UNARY;
if (! current0 .Name
.equals( "UnaryExpression_A1") )
   if (javadummy) break  CONDITION684;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to PRIMARY --- JJ.M4
PRIMARY = current1 ;
} //)) children level 1
};
// ***** begin condlist 685 (in cond 684) *****
CONDLIST685: // @@@ begin of alternative group
while(javadummy) {
CONDITION686: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-UnaryExpression_A1_M1")
if (javadummy) break CONDITION686;
{ //(( children level 1
} //)) children level 1
};
YyProcs.
Trafo_Primary
(
PRIMARY
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpUnary --- JJ.M4
TpUnary = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResUnary --- JJ.M4
ResUnary = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST685;
// $$$$$$$$ 
} // CONDITION686 // @@@ end of alternative
CONDITION687: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative XX1
JavaNode XX1= null;
// DECLARE for alternative XXX1
JavaNode XXX1= null;
{
JavaNode current0 = X1;
if (current0.Name
!= "OneOf-UnaryExpression_A1_M1")
if (javadummy) break CONDITION687;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to XX1 --- JJ.M4
XX1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 688 (in cond 687) *****
CONDLIST688: // @@@ begin of alternative group
while(javadummy) {
CONDITION689: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX1;
if (! current0 .Name
.equals( "UnaryExpression_A1_M1_A1") )
   if (javadummy) break  CONDITION689;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XXX1 --- JJ.M4
XXX1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 690 (in cond 689) *****
CONDLIST690: // @@@ begin of alternative group
while(javadummy) {
CONDITION691: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX1;
if (! current0 .Name
.equals( "UnaryOp_A1") )
   if (javadummy) break  CONDITION691;
};
YyProcs.
Trafo_Primary
(
PRIMARY
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpUnary --- JJ.M4
TpUnary = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResUnary --- JJ.M4
ResUnary = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST690;
// $$$$$$$$ 
} // CONDITION691 // @@@ end of alternative
CONDITION692: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ResUnary0
JavaNode ResUnary0= null;
// DECLARE for alternative TpUnary0
JavaNode TpUnary0= null;
{
JavaNode current0 = XXX1;
if (! current0 .Name
.equals( "UnaryOp_A2") )
   if (javadummy) break  CONDITION692;
};
YyProcs.
Trafo_Primary
(
PRIMARY
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpUnary0 --- JJ.M4
TpUnary0 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResUnary0 --- JJ.M4
ResUnary0 = current0 ;
}
YyProcs.
CheckExpr1
(
new JavaStringValue( "minus" )
,
XX1
,
TpUnary0
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpUnary --- JJ.M4
TpUnary = current0 ;
}
ResUnary = 
NodeFactory.NewNode(
"monexpr"
, new JavaNode [] {
new JavaStringValue( "minus" )
,
ResUnary0
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST690;
// $$$$$$$$ 
} // CONDITION692 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=690 N=689
if (javadummy) break CONDITION689;
} // CONDLIST690 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST688;
// $$$$$$$$ 
} // CONDITION689 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=688 N=687
if (javadummy) break CONDITION687;
} // CONDLIST688 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST685;
// $$$$$$$$ 
} // CONDITION687 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=685 N=684
if (javadummy) break CONDITION684;
} // CONDLIST685 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST683;
// $$$$$$$$ 
} // CONDITION684 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=683 N=682
if (javadummy) break CONDITION682;
} // CONDLIST683 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
TpUnary
;
yy_outparam_1 = 
ResUnary
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST681;
// $$$$$$$$ 
} // CONDITION682 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=681 N=680
if (javadummy) break CONDITION680;
} // CONDLIST681 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION680
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_UnaryExpression");
}



public
static
void
Trafo_MUL(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc MUL
JavaNode MUL = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION693:
while(javadummy) {
// ***** begin condlist 694 (in cond 693) *****
CONDLIST694: // @@@ begin of alternative group
while(javadummy) {
CONDITION695: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to MUL --- JJ.M4
MUL = current0 ;
};
// ***** begin condlist 696 (in cond 695) *****
CONDLIST696: // @@@ begin of alternative group
while(javadummy) {
CONDITION697: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ResUnary
JavaNode ResUnary= null;
// DECLARE for alternative TpUnary
JavaNode TpUnary= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative UNARY
JavaNode UNARY= null;
{
JavaNode current0 = MUL;
if (! current0 .Name
.equals( "MulExpression_A1") )
   if (javadummy) break  CONDITION697;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to UNARY --- JJ.M4
UNARY = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_UnaryExpression
(
UNARY
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpUnary --- JJ.M4
TpUnary = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResUnary --- JJ.M4
ResUnary = current0 ;
}
YyProcs.
Trafo_MulSEQ
(
TAIL
,
TpUnary
,
ResUnary
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST696;
// $$$$$$$$ 
} // CONDITION697 // @@@ end of alternative
CONDITION698: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MUL;
if (! current0 .Name
.equals( "MulExpression_A2") )
   if (javadummy) break  CONDITION698;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "///" )
,
MUL
);
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
RES = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST696;
// $$$$$$$$ 
} // CONDITION698 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=696 N=695
if (javadummy) break CONDITION695;
} // CONDLIST696 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST694;
// $$$$$$$$ 
} // CONDITION695 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=694 N=693
if (javadummy) break CONDITION693;
} // CONDLIST694 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION693
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_MUL");
}



public
static
void
Trafo_MulSEQ(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
CONDITION699:
while(javadummy) {
// ***** begin condlist 700 (in cond 699) *****
CONDLIST700: // @@@ begin of alternative group
while(javadummy) {
CONDITION701: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "NilOf-MulExpression_A1_M2")
if (javadummy) break CONDITION701;
};
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST700;
// $$$$$$$$ 
} // CONDITION701 // @@@ end of alternative
CONDITION702: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES
JavaNode RES= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
// DECLARE for alternative ResUnary
JavaNode ResUnary= null;
// DECLARE for alternative TpUnary
JavaNode TpUnary= null;
// DECLARE for alternative UNARY
JavaNode UNARY= null;
// DECLARE for alternative OP
JavaNode OP= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "SeqOf-MulExpression_A1_M2")
if (javadummy) break CONDITION702;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
// ***** begin condlist 703 (in cond 702) *****
CONDLIST703: // @@@ begin of alternative group
while(javadummy) {
CONDITION704: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "MulExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION704;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to OP --- JJ.M4
OP = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to UNARY --- JJ.M4
UNARY = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_UnaryExpression
(
UNARY
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpUnary --- JJ.M4
TpUnary = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResUnary --- JJ.M4
ResUnary = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST703;
// $$$$$$$$ 
} // CONDITION704 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=703 N=702
if (javadummy) break CONDITION702;
} // CONDLIST703 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 705 (in cond 702) *****
CONDLIST705: // @@@ begin of alternative group
while(javadummy) {
CONDITION706: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "MultiplyOp_A1") )
   if (javadummy) break  CONDITION706;
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "mul" )
,
LEFT
,
ResUnary
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST705;
// $$$$$$$$ 
} // CONDITION706 // @@@ end of alternative
CONDITION707: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "MultiplyOp_A2") )
   if (javadummy) break  CONDITION707;
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "div" )
,
LEFT
,
ResUnary
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST705;
// $$$$$$$$ 
} // CONDITION707 // @@@ end of alternative
CONDITION708: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "MultiplyOp_A3") )
   if (javadummy) break  CONDITION708;
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "mod" )
,
LEFT
,
ResUnary
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST705;
// $$$$$$$$ 
} // CONDITION708 // @@@ end of alternative
CONDITION709: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "MultiplyOp_A4") )
   if (javadummy) break  CONDITION709;
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "rem" )
,
LEFT
,
ResUnary
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST705;
// $$$$$$$$ 
} // CONDITION709 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=705 N=702
if (javadummy) break CONDITION702;
} // CONDLIST705 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
CheckExpr
(
new JavaStringValue( "mul" )
,
OP
,
Tp0
,
TpUnary
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
YyProcs.
Trafo_MulSEQ
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST700;
// $$$$$$$$ 
} // CONDITION702 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=700 N=699
if (javadummy) break CONDITION699;
} // CONDLIST700 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION699
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_MulSEQ");
}



public
static
void
CheckExpr1(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X
JavaNode X = null;
CONDITION710:
while(javadummy) {
// ***** begin condlist 711 (in cond 710) *****
CONDLIST711: // @@@ begin of alternative group
while(javadummy) {
CONDITION712: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"not"))
   if (javadummy) break  CONDITION712;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
if (! current0 .Name
.equals( "tp_boolean") )
   if (javadummy) break  CONDITION712;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST711;
// $$$$$$$$ 
} // CONDITION712 // @@@ end of alternative
CONDITION713: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"bitnot"))
   if (javadummy) break  CONDITION713;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
if (! current0 .Name
.equals( "tp_boolean") )
   if (javadummy) break  CONDITION713;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST711;
// $$$$$$$$ 
} // CONDITION713 // @@@ end of alternative
CONDITION714: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"minus"))
   if (javadummy) break  CONDITION714;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION714;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST711;
// $$$$$$$$ 
} // CONDITION714 // @@@ end of alternative
CONDITION715: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
// DECLARE for alternative Operator
JavaNode Operator= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Operator --- JJ.M4
Operator = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(X);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "invalid type of argument" )
,
Pos
);
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST711;
// $$$$$$$$ 
} // CONDITION715 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=711 N=710
if (javadummy) break CONDITION710;
} // CONDLIST711 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION710
// failed:
JavaLib.rtsAllAlternativesFailed("CheckExpr1");
}



public
static
void
CheckExpr(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
,

JavaNode yy_inparam_3
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X
JavaNode X = null;
CONDITION716:
while(javadummy) {
// ***** begin condlist 717 (in cond 716) *****
CONDLIST717: // @@@ begin of alternative group
while(javadummy) {
CONDITION718: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"and"))
   if (javadummy) break  CONDITION718;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
if (! current0 .Name
.equals( "tp_boolean") )
   if (javadummy) break  CONDITION718;
};
{
JavaNode current0 = yy_inparam_3;
if (! current0 .Name
.equals( "tp_boolean") )
   if (javadummy) break  CONDITION718;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST717;
// $$$$$$$$ 
} // CONDITION718 // @@@ end of alternative
CONDITION719: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"equal"))
   if (javadummy) break  CONDITION719;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION719;
};
{
JavaNode current0 = yy_inparam_3;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION719;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST717;
// $$$$$$$$ 
} // CONDITION719 // @@@ end of alternative
CONDITION720: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"less"))
   if (javadummy) break  CONDITION720;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION720;
};
{
JavaNode current0 = yy_inparam_3;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION720;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST717;
// $$$$$$$$ 
} // CONDITION720 // @@@ end of alternative
CONDITION721: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"rotate"))
   if (javadummy) break  CONDITION721;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_3;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST717;
// $$$$$$$$ 
} // CONDITION721 // @@@ end of alternative
CONDITION722: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"bitor"))
   if (javadummy) break  CONDITION722;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_3;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST717;
// $$$$$$$$ 
} // CONDITION722 // @@@ end of alternative
CONDITION723: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"bitxor"))
   if (javadummy) break  CONDITION723;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_3;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST717;
// $$$$$$$$ 
} // CONDITION723 // @@@ end of alternative
CONDITION724: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"bitand"))
   if (javadummy) break  CONDITION724;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_3;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST717;
// $$$$$$$$ 
} // CONDITION724 // @@@ end of alternative
CONDITION725: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"add"))
   if (javadummy) break  CONDITION725;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION725;
};
{
JavaNode current0 = yy_inparam_3;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION725;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST717;
// $$$$$$$$ 
} // CONDITION725 // @@@ end of alternative
CONDITION726: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"concat"))
   if (javadummy) break  CONDITION726;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
if (! current0 .Name
.equals( "tp_charstring") )
   if (javadummy) break  CONDITION726;
};
{
JavaNode current0 = yy_inparam_3;
if (! current0 .Name
.equals( "tp_charstring") )
   if (javadummy) break  CONDITION726;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_charstring"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST717;
// $$$$$$$$ 
} // CONDITION726 // @@@ end of alternative
CONDITION727: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"mul"))
   if (javadummy) break  CONDITION727;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION727;
};
{
JavaNode current0 = yy_inparam_3;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION727;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST717;
// $$$$$$$$ 
} // CONDITION727 // @@@ end of alternative
CONDITION728: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative Operator
JavaNode Operator= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Operator --- JJ.M4
Operator = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
{
JavaNode current0 = yy_inparam_3;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(X);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "invalid type of argument" )
,
Pos
);
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST717;
// $$$$$$$$ 
} // CONDITION728 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=717 N=716
if (javadummy) break CONDITION716;
} // CONDLIST717 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION716
// failed:
JavaLib.rtsAllAlternativesFailed("CheckExpr");
}



public
static
void
Trafo_Expression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION729:
while(javadummy) {
// ***** begin condlist 730 (in cond 729) *****
CONDLIST730: // @@@ begin of alternative group
while(javadummy) {
CONDITION731: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 732 (in cond 731) *****
CONDLIST732: // @@@ begin of alternative group
while(javadummy) {
CONDITION733: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "Expression_A1") )
   if (javadummy) break  CONDITION733;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SingleExpression
(
X1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST732;
// $$$$$$$$ 
} // CONDITION733 // @@@ end of alternative
CONDITION734: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tps
JavaNode Tps= null;
// DECLARE for alternative X2
JavaNode X2= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "Expression_A2") )
   if (javadummy) break  CONDITION734;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_CompoundExpression
(
X2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tps --- JJ.M4
Tps = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
Tp = 
NodeFactory.NewNode(
"tp_compound"
, new JavaNode [] {
Tps
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST732;
// $$$$$$$$ 
} // CONDITION734 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=732 N=731
if (javadummy) break CONDITION731;
} // CONDLIST732 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST730;
// $$$$$$$$ 
} // CONDITION731 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=730 N=729
if (javadummy) break CONDITION729;
} // CONDLIST730 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION729
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_Expression");
}



public
static
void
HandleExtendedFieldReference(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Code1
JavaNode Code1 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Code2
JavaNode Code2 = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
CONDITION735:
while(javadummy) {
// ***** begin condlist 736 (in cond 735) *****
CONDLIST736: // @@@ begin of alternative group
while(javadummy) {
CONDITION737: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Code1 --- JJ.M4
Code1 = current0 ;
};
// ***** begin condlist 738 (in cond 737) *****
CONDLIST738: // @@@ begin of alternative group
while(javadummy) {
CONDITION739: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ExtendedFieldReference_A1") )
   if (javadummy) break  CONDITION739;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
YyProcs.
HandleExtendedFieldReferences
(
X1
,
Tp1
,
Code1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Code2 --- JJ.M4
Code2 = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST738;
// $$$$$$$$ 
} // CONDITION739 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=738 N=737
if (javadummy) break CONDITION737;
} // CONDLIST738 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
Code2
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST736;
// $$$$$$$$ 
} // CONDITION737 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=736 N=735
if (javadummy) break CONDITION735;
} // CONDLIST736 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION735
// failed:
JavaLib.rtsAllAlternativesFailed("HandleExtendedFieldReference");
}



public
static
void
HandleExtendedFieldReferences(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
CONDITION740:
while(javadummy) {
// ***** begin condlist 741 (in cond 740) *****
CONDLIST741: // @@@ begin of alternative group
while(javadummy) {
CONDITION742: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Code3
JavaNode Code3= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Code1
JavaNode Code1= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative Code2
JavaNode Code2= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-ExtendedFieldReference_A1_M1")
if (javadummy) break CONDITION742;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Code1 --- JJ.M4
Code1 = current0 ;
};
// ***** begin condlist 743 (in cond 742) *****
CONDLIST743: // @@@ begin of alternative group
while(javadummy) {
CONDITION744: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "ExtendedFieldReference_A1_M1_A1") )
   if (javadummy) break  CONDITION744;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 745 (in cond 744) *****
CONDLIST745: // @@@ begin of alternative group
while(javadummy) {
CONDITION746: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
// DECLARE for alternative X1X1
JavaNode X1X1= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ExtendedFieldReference_A1_M1_A1_M1_A1") )
   if (javadummy) break  CONDITION746;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 747 (in cond 746) *****
CONDLIST747: // @@@ begin of alternative group
while(javadummy) {
CONDITION748: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1") )
   if (javadummy) break  CONDITION748;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1X1 --- JJ.M4
X1X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 749 (in cond 748) *****
CONDLIST749: // @@@ begin of alternative group
while(javadummy) {
CONDITION750: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative N
JavaNode N= null;
{
JavaNode current0 = X1X1;
if (! current0 .Name
.equals( "ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1_M2_A1") )
   if (javadummy) break  CONDITION750;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N --- JJ.M4
N = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(X1X1);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
LookupField
(
N
,
Tp1
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
Code2 = 
NodeFactory.NewNode(
"fieldselection"
, new JavaNode [] {
Code1
,
N
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST749;
// $$$$$$$$ 
} // CONDITION750 // @@@ end of alternative
CONDITION751: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Q
JavaNode Q= null;
{
JavaNode current0 = X1X1;
if (! current0 .Name
.equals( "ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1_M2_A2") )
   if (javadummy) break  CONDITION751;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Q --- JJ.M4
Q = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "primitive type in selection" )
,
Q
);
Tp2 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
Code2 = 
Code1
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST749;
// $$$$$$$$ 
} // CONDITION751 // @@@ end of alternative
CONDITION752: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative P
JavaNode P= null;
{
JavaNode current0 = X1X1;
if (! current0 .Name
.equals( "ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1_M2_A3") )
   if (javadummy) break  CONDITION752;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to P --- JJ.M4
P = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "type parameters in selection" )
,
P
);
Tp2 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
Code2 = 
Code1
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST749;
// $$$$$$$$ 
} // CONDITION752 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=749 N=748
if (javadummy) break CONDITION748;
} // CONDLIST749 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST747;
// $$$$$$$$ 
} // CONDITION748 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=747 N=746
if (javadummy) break CONDITION746;
} // CONDLIST747 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST745;
// $$$$$$$$ 
} // CONDITION746 // @@@ end of alternative
CONDITION753: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ArrayOrBitRef
JavaNode ArrayOrBitRef= null;
// DECLARE for alternative X2X1
JavaNode X2X1= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ExtendedFieldReference_A1_M1_A1_M1_A2") )
   if (javadummy) break  CONDITION753;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ArrayOrBitRef --- JJ.M4
ArrayOrBitRef = current1 ;
} //)) children level 1
};
// ***** begin condlist 754 (in cond 753) *****
CONDLIST754: // @@@ begin of alternative group
while(javadummy) {
CONDITION755: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ArrayOrBitRef;
if (! current0 .Name
.equals( "ArrayOrBitRef_A1") )
   if (javadummy) break  CONDITION755;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2X1 --- JJ.M4
X2X1 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "array or bit reference" )
,
X2X1
);
Tp2 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
Code2 = 
Code1
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST754;
// $$$$$$$$ 
} // CONDITION755 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=754 N=753
if (javadummy) break CONDITION753;
} // CONDLIST754 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST745;
// $$$$$$$$ 
} // CONDITION753 // @@@ end of alternative
CONDITION756: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Z
JavaNode Z= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ExtendedFieldReference_A1_M1_A1_M1_A3") )
   if (javadummy) break  CONDITION756;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Z --- JJ.M4
Z = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "'[ - ]'" )
,
Z
);
Tp2 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
Code2 = 
Code1
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST745;
// $$$$$$$$ 
} // CONDITION756 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=745 N=744
if (javadummy) break CONDITION744;
} // CONDLIST745 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST743;
// $$$$$$$$ 
} // CONDITION744 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=743 N=742
if (javadummy) break CONDITION742;
} // CONDLIST743 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
HandleExtendedFieldReferences
(
T
,
Tp2
,
Code2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Code3 --- JJ.M4
Code3 = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
Code3
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST741;
// $$$$$$$$ 
} // CONDITION742 // @@@ end of alternative
CONDITION757: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Code
JavaNode Code= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-ExtendedFieldReference_A1_M1")
if (javadummy) break CONDITION757;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Code --- JJ.M4
Code = current0 ;
};
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST741;
// $$$$$$$$ 
} // CONDITION757 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=741 N=740
if (javadummy) break CONDITION740;
} // CONDLIST741 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION740
// failed:
JavaLib.rtsAllAlternativesFailed("HandleExtendedFieldReferences");
}



public
static
void
LookupField(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc N
JavaNode N = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
CONDITION758:
while(javadummy) {
// ***** begin condlist 759 (in cond 758) *****
CONDLIST759: // @@@ begin of alternative group
while(javadummy) {
CONDITION760: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to N --- JJ.M4
N = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
// ***** begin condlist 761 (in cond 760) *****
CONDLIST761: // @@@ begin of alternative group
while(javadummy) {
CONDITION762: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Flds
JavaNode Flds= null;
// DECLARE for alternative QQ
JavaNode QQ= null;
// DECLARE for alternative RefNormalizedFields
JavaNode RefNormalizedFields= null;
// DECLARE for alternative X4
JavaNode X4= null;
// DECLARE for alternative N2
JavaNode N2= null;
// DECLARE for alternative RecordType
JavaNode RecordType= null;
{
JavaNode current0 = Tp1;
if (! current0 .Name
.equals( "tp_referenced") )
   if (javadummy) break  CONDITION762;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RecordType --- JJ.M4
RecordType = current1 ;
} //)) children level 1
};
{
JavaNode current0 = RecordType;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION762;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N2 --- JJ.M4
N2 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X4 --- JJ.M4
X4 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to RefNormalizedFields --- JJ.M4
RefNormalizedFields = current1 ;
} //)) children level 1
};
QQ = JavaLib.rtsBoundToKey(RefNormalizedFields);
{
JavaNode current0 = QQ;
if (! current0 .Name
.equals( "normalizedfields") )
   if (javadummy) break  CONDITION762;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Flds --- JJ.M4
Flds = current1 ;
} //)) children level 1
};
// ***** begin condlist 763 (in cond 762) *****
CONDLIST763: // @@@ begin of alternative group
while(javadummy) {
CONDITION764: // @@@ begin of alternative
while(javadummy) {
if (! 
YyProcs.
LookupFields_R
(
N
,
Flds
)
)
if (javadummy) break CONDITION764;
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST763;
// $$$$$$$$ 
} // CONDITION764 // @@@ end of alternative
CONDITION765: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "no field '" )
,
N
,
new JavaStringValue( "'" )
,
Pos
);
Tp2 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST763;
// $$$$$$$$ 
} // CONDITION765 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=763 N=762
if (javadummy) break CONDITION762;
} // CONDLIST763 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST761;
// $$$$$$$$ 
} // CONDITION762 // @@@ end of alternative
CONDITION766: // @@@ begin of alternative
while(javadummy) {
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "field selection for non-record type" )
,
Pos
);
Tp2 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST761;
// $$$$$$$$ 
} // CONDITION766 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=761 N=760
if (javadummy) break CONDITION760;
} // CONDLIST761 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp2
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST759;
// $$$$$$$$ 
} // CONDITION760 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=759 N=758
if (javadummy) break CONDITION758;
} // CONDLIST759 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION758
// failed:
JavaLib.rtsAllAlternativesFailed("LookupField");
}



public
static
boolean
LookupFields_R(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc T
JavaNode T = null;
// DECLARE for proc H
JavaNode H = null;
// DECLARE for proc N
JavaNode N = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION767:
while(javadummy) {
// ***** begin condlist 768 (in cond 767) *****
CONDLIST768: // @@@ begin of alternative group
while(javadummy) {
CONDITION769: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to N --- JJ.M4
N = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
if (current0.Name
!= "SeqOf-FIELD")
if (javadummy) break CONDITION769;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
// ***** begin condlist 770 (in cond 769) *****
CONDLIST770: // @@@ begin of alternative group
while(javadummy) {
CONDITION771: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative N2
JavaNode N2= null;
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "field") )
   if (javadummy) break  CONDITION771;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N2 --- JJ.M4
N2 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Tp --- JJ.M4
Tp = current1 ;
} //)) children level 1
};
{
if (! JavaLib.rtsEqualString(
N
,
N2
)
)
   if (javadummy) break  CONDITION771;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST770;
// $$$$$$$$ 
} // CONDITION771 // @@@ end of alternative
CONDITION772: // @@@ begin of alternative
while(javadummy) {
if (! 
YyProcs.
LookupFields_R
(
N
,
T
)
)
if (javadummy) break CONDITION772;
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST770;
// $$$$$$$$ 
} // CONDITION772 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=770 N=769
if (javadummy) break CONDITION769;
} // CONDLIST770 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST768;
// $$$$$$$$ 
} // CONDITION769 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=768 N=767
if (javadummy) break CONDITION767;
} // CONDLIST768 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
return true;
} // CONDITION767
// failed:
return false;
}



public
static
void
Stmt_StartTCStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc StartTCStatement
JavaNode StartTCStatement = null;
// DECLARE for proc Code
JavaNode Code = null;
// DECLARE for proc Fun
JavaNode Fun = null;
// DECLARE for proc Comp
JavaNode Comp = null;
// DECLARE for proc Id1
JavaNode Id1 = null;
// DECLARE for proc Id2
JavaNode Id2 = null;
CONDITION773:
while(javadummy) {
// ***** begin condlist 774 (in cond 773) *****
CONDLIST774: // @@@ begin of alternative group
while(javadummy) {
CONDITION775: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to StartTCStatement --- JJ.M4
StartTCStatement = current0 ;
};
// ***** begin condlist 776 (in cond 775) *****
CONDLIST776: // @@@ begin of alternative group
while(javadummy) {
CONDITION777: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = StartTCStatement;
if (! current0 .Name
.equals( "StartTCStatement_A1") )
   if (javadummy) break  CONDITION777;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Comp --- JJ.M4
Comp = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Fun --- JJ.M4
Fun = current1 ;
} //)) children level 1
};
// ***** begin condlist 778 (in cond 777) *****
CONDLIST778: // @@@ begin of alternative group
while(javadummy) {
CONDITION779: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Def1
JavaNode Def1= null;
// DECLARE for alternative Pos1
JavaNode Pos1= null;
// DECLARE for alternative Z1
JavaNode Z1= null;
// DECLARE for alternative Var
JavaNode Var= null;
{
JavaNode current0 = Comp;
if (! current0 .Name
.equals( "ComponentOrDefaultReference_A1") )
   if (javadummy) break  CONDITION779;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Var --- JJ.M4
Var = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Var;
if (! current0 .Name
.equals( "VariableRef_A1") )
   if (javadummy) break  CONDITION779;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id1 --- JJ.M4
Id1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Z1 --- JJ.M4
Z1 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Z1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-VariableRef_A1_M2")
if (javadummy) break CONDITION779;
{ //(( children level 1
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id1);
//assign current0 to Pos1 --- JJ.M4
Pos1 = current0 ;
};
YyProcs.
LocallyDefined
(
Id1
,
Pos1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def1 --- JJ.M4
Def1 = current0 ;
}
// ***** begin condlist 780 (in cond 779) *****
CONDLIST780: // @@@ begin of alternative group
while(javadummy) {
CONDITION781: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Ref
JavaNode Ref= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = Def1;
if (! current0 .Name
.equals( "localvar") )
   if (javadummy) break  CONDITION781;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tp --- JJ.M4
Tp = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_referenced") )
   if (javadummy) break  CONDITION781;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Ref --- JJ.M4
Ref = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Ref;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION781;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST780;
// $$$$$$$$ 
} // CONDITION781 // @@@ end of alternative
CONDITION782: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Id1
,
new JavaStringValue( "' is not defined as component" )
,
Pos1
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST780;
// $$$$$$$$ 
} // CONDITION782 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=780 N=779
if (javadummy) break CONDITION779;
} // CONDLIST780 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST778;
// $$$$$$$$ 
} // CONDITION779 // @@@ end of alternative
CONDITION783: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Comp;
if (! current0 .Name
.equals( "ComponentOrDefaultReference_A2") )
   if (javadummy) break  CONDITION783;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "comp ref" )
,
Comp
);
Id1 = 
new JavaStringValue( "-" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST778;
// $$$$$$$$ 
} // CONDITION783 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=778 N=777
if (javadummy) break CONDITION777;
} // CONDLIST778 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 784 (in cond 777) *****
CONDLIST784: // @@@ begin of alternative group
while(javadummy) {
CONDITION785: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Def2
JavaNode Def2= null;
// DECLARE for alternative Pos2
JavaNode Pos2= null;
// DECLARE for alternative Z2
JavaNode Z2= null;
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
// DECLARE for alternative FunRef
JavaNode FunRef= null;
{
JavaNode current0 = Fun;
if (! current0 .Name
.equals( "FunctionInstance_A1") )
   if (javadummy) break  CONDITION785;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FunRef --- JJ.M4
FunRef = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = FunRef;
if (! current0 .Name
.equals( "FunctionRef_A1") )
   if (javadummy) break  CONDITION785;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Z2 --- JJ.M4
Z2 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Id2 --- JJ.M4
Id2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 786 (in cond 785) *****
CONDLIST786: // @@@ begin of alternative group
while(javadummy) {
CONDITION787: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionRef_A1_M1")
if (javadummy) break CONDITION787;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST786;
// $$$$$$$$ 
} // CONDITION787 // @@@ end of alternative
CONDITION788: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z2;
if (current0.Name
!= "OneOf-FunctionRef_A1_M1")
if (javadummy) break CONDITION788;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "function ref 1" )
,
Z2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST786;
// $$$$$$$$ 
} // CONDITION788 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=786 N=785
if (javadummy) break CONDITION785;
} // CONDLIST786 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 789 (in cond 785) *****
CONDLIST789: // @@@ begin of alternative group
while(javadummy) {
CONDITION790: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionInstance_A1_M2")
if (javadummy) break CONDITION790;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST789;
// $$$$$$$$ 
} // CONDITION790 // @@@ end of alternative
CONDITION791: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (current0.Name
!= "OneOf-FunctionInstance_A1_M2")
if (javadummy) break CONDITION791;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "function ref 2" )
,
X1
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST789;
// $$$$$$$$ 
} // CONDITION791 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=789 N=785
if (javadummy) break CONDITION785;
} // CONDLIST789 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 792 (in cond 785) *****
CONDLIST792: // @@@ begin of alternative group
while(javadummy) {
CONDITION793: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionInstance_A1_M4")
if (javadummy) break CONDITION793;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST792;
// $$$$$$$$ 
} // CONDITION793 // @@@ end of alternative
CONDITION794: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
!= "OneOf-FunctionInstance_A1_M4")
if (javadummy) break CONDITION794;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "function ref 3" )
,
X2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST792;
// $$$$$$$$ 
} // CONDITION794 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=792 N=785
if (javadummy) break CONDITION785;
} // CONDLIST792 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id2);
//assign current0 to Pos2 --- JJ.M4
Pos2 = current0 ;
};
YyProcs.
GloballyDefined
(
Id2
,
Pos2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def2 --- JJ.M4
Def2 = current0 ;
}
// ***** begin condlist 795 (in cond 785) *****
CONDLIST795: // @@@ begin of alternative group
while(javadummy) {
CONDITION796: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Def2;
if (! current0 .Name
.equals( "functiondefinition") )
   if (javadummy) break  CONDITION796;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST795;
// $$$$$$$$ 
} // CONDITION796 // @@@ end of alternative
CONDITION797: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Id2
,
new JavaStringValue( "' is not defined as function" )
,
Pos2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST795;
// $$$$$$$$ 
} // CONDITION797 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=795 N=785
if (javadummy) break CONDITION785;
} // CONDLIST795 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST784;
// $$$$$$$$ 
} // CONDITION785 // @@@ end of alternative
CONDITION798: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Fun;
if (! current0 .Name
.equals( "FunctionInstance_A2") )
   if (javadummy) break  CONDITION798;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "function instance" )
,
Fun
);
Id2 = 
new JavaStringValue( "-" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST784;
// $$$$$$$$ 
} // CONDITION798 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=784 N=777
if (javadummy) break CONDITION777;
} // CONDLIST784 @@@ end of alternative group
// *** CONTINUE ***
Code = 
NodeFactory.NewNode(
"stmt_startcomponent"
, new JavaNode [] {
Id1
,
Id2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST776;
// $$$$$$$$ 
} // CONDITION777 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=776 N=775
if (javadummy) break CONDITION775;
} // CONDLIST776 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST774;
// $$$$$$$$ 
} // CONDITION775 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=774 N=773
if (javadummy) break CONDITION773;
} // CONDLIST774 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION773
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_StartTCStatement");
}



public
static
void
Stmt_StartTimerStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc StartTimerStatement
JavaNode StartTimerStatement = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc Def
JavaNode Def = null;
// DECLARE for proc PosId
JavaNode PosId = null;
// DECLARE for proc A
JavaNode A = null;
// DECLARE for proc Id
JavaNode Id = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION799:
while(javadummy) {
// ***** begin condlist 800 (in cond 799) *****
CONDLIST800: // @@@ begin of alternative group
while(javadummy) {
CONDITION801: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to StartTimerStatement --- JJ.M4
StartTimerStatement = current0 ;
};
// ***** begin condlist 802 (in cond 801) *****
CONDLIST802: // @@@ begin of alternative group
while(javadummy) {
CONDITION803: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = StartTimerStatement;
if (! current0 .Name
.equals( "StartTimerStatement_A1") )
   if (javadummy) break  CONDITION803;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 804 (in cond 803) *****
CONDLIST804: // @@@ begin of alternative group
while(javadummy) {
CONDITION805: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ArrayIdentifierRef_A1") )
   if (javadummy) break  CONDITION805;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to A --- JJ.M4
A = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to PosId --- JJ.M4
PosId = current0 ;
};
YyProcs.
LocallyDefined
(
Id
,
PosId
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 806 (in cond 805) *****
CONDLIST806: // @@@ begin of alternative group
while(javadummy) {
CONDITION807: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "localtimer") )
   if (javadummy) break  CONDITION807;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST806;
// $$$$$$$$ 
} // CONDITION807 // @@@ end of alternative
CONDITION808: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Id
,
new JavaStringValue( "' is not defined as timer" )
,
PosId
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST806;
// $$$$$$$$ 
} // CONDITION808 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=806 N=805
if (javadummy) break CONDITION805;
} // CONDLIST806 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 809 (in cond 805) *****
CONDLIST809: // @@@ begin of alternative group
while(javadummy) {
CONDITION810: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = A;
if (current0.Name
!= "NilOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION810;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST809;
// $$$$$$$$ 
} // CONDITION810 // @@@ end of alternative
CONDITION811: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = A;
if (current0.Name
!= "SeqOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION811;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "start timer array" )
,
A
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST809;
// $$$$$$$$ 
} // CONDITION811 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=809 N=805
if (javadummy) break CONDITION805;
} // CONDLIST809 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST804;
// $$$$$$$$ 
} // CONDITION805 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=804 N=803
if (javadummy) break CONDITION803;
} // CONDLIST804 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 812 (in cond 803) *****
CONDLIST812: // @@@ begin of alternative group
while(javadummy) {
CONDITION813: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X21
JavaNode X21= null;
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
// DECLARE for alternative X211
JavaNode X211= null;
{
JavaNode current0 = X2;
if (current0.Name
!= "OneOf-StartTimerStatement_A1_M4")
if (javadummy) break CONDITION813;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to X21 --- JJ.M4
X21 = current1 ;
} //)) children level 1
};
// ***** begin condlist 814 (in cond 813) *****
CONDLIST814: // @@@ begin of alternative group
while(javadummy) {
CONDITION815: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X21;
if (! current0 .Name
.equals( "StartTimerStatement_A1_M4_A1") )
   if (javadummy) break  CONDITION815;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X211 --- JJ.M4
X211 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_Expression
(
X211
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to X --- JJ.M4
X = current0 ;
}
Code = 
NodeFactory.NewNode(
"stmt_starttimerexpr"
, new JavaNode [] {
Id
,
X
}
)
;
// ***** begin condlist 816 (in cond 815) *****
CONDLIST816: // @@@ begin of alternative group
while(javadummy) {
CONDITION817: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_float") )
   if (javadummy) break  CONDITION817;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST816;
// $$$$$$$$ 
} // CONDITION817 // @@@ end of alternative
CONDITION818: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(X211);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "float value required" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST816;
// $$$$$$$$ 
} // CONDITION818 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=816 N=815
if (javadummy) break CONDITION815;
} // CONDLIST816 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST814;
// $$$$$$$$ 
} // CONDITION815 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=814 N=813
if (javadummy) break CONDITION813;
} // CONDLIST814 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST812;
// $$$$$$$$ 
} // CONDITION813 // @@@ end of alternative
CONDITION819: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-StartTimerStatement_A1_M4")
if (javadummy) break CONDITION819;
{ //(( children level 1
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "start timer a1 m4" )
,
X2
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST812;
// $$$$$$$$ 
} // CONDITION819 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=812 N=803
if (javadummy) break CONDITION803;
} // CONDLIST812 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST802;
// $$$$$$$$ 
} // CONDITION803 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=802 N=801
if (javadummy) break CONDITION801;
} // CONDLIST802 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST800;
// $$$$$$$$ 
} // CONDITION801 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=800 N=799
if (javadummy) break CONDITION799;
} // CONDLIST800 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION799
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_StartTimerStatement");
}



public
static
void
Stmt_StopTimerStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Def
JavaNode Def = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc StopTimerStatement
JavaNode StopTimerStatement = null;
// DECLARE for proc Timer
JavaNode Timer = null;
// DECLARE for proc Str
JavaNode Str = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION820:
while(javadummy) {
// ***** begin condlist 821 (in cond 820) *****
CONDLIST821: // @@@ begin of alternative group
while(javadummy) {
CONDITION822: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to StopTimerStatement --- JJ.M4
StopTimerStatement = current0 ;
};
// ***** begin condlist 823 (in cond 822) *****
CONDLIST823: // @@@ begin of alternative group
while(javadummy) {
CONDITION824: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = StopTimerStatement;
if (! current0 .Name
.equals( "StopTimerStatement_A1") )
   if (javadummy) break  CONDITION824;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Timer --- JJ.M4
Timer = current1 ;
} //)) children level 1
};
// ***** begin condlist 825 (in cond 824) *****
CONDLIST825: // @@@ begin of alternative group
while(javadummy) {
CONDITION826: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative Z
JavaNode Z= null;
{
JavaNode current0 = Timer;
if (! current0 .Name
.equals( "TimerRefOrAll_A1") )
   if (javadummy) break  CONDITION826;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 827 (in cond 826) *****
CONDLIST827: // @@@ begin of alternative group
while(javadummy) {
CONDITION828: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ArrayIdentifierRef_A1") )
   if (javadummy) break  CONDITION828;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Str --- JJ.M4
Str = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Z --- JJ.M4
Z = current1 ;
} //)) children level 1
};
// ***** begin condlist 829 (in cond 828) *****
CONDLIST829: // @@@ begin of alternative group
while(javadummy) {
CONDITION830: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z;
if (current0.Name
!= "NilOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION830;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST829;
// $$$$$$$$ 
} // CONDITION830 // @@@ end of alternative
CONDITION831: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z;
if (current0.Name
!= "SeqOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION831;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "timer ref 1" )
,
Z
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST829;
// $$$$$$$$ 
} // CONDITION831 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=829 N=828
if (javadummy) break CONDITION828;
} // CONDLIST829 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST827;
// $$$$$$$$ 
} // CONDITION828 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=827 N=826
if (javadummy) break CONDITION826;
} // CONDLIST827 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST825;
// $$$$$$$$ 
} // CONDITION826 // @@@ end of alternative
CONDITION832: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Timer;
if (! current0 .Name
.equals( "TimerRefOrAll_A2") )
   if (javadummy) break  CONDITION832;
};
YyProcs.
NotCovered
(
new JavaStringValue( "timer ref 2" )
,
Timer
);
Str = 
new JavaStringValue( "-" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST825;
// $$$$$$$$ 
} // CONDITION832 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=825 N=824
if (javadummy) break CONDITION824;
} // CONDLIST825 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST823;
// $$$$$$$$ 
} // CONDITION824 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=823 N=822
if (javadummy) break CONDITION822;
} // CONDLIST823 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Str);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
LocallyDefined
(
Str
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 833 (in cond 822) *****
CONDLIST833: // @@@ begin of alternative group
while(javadummy) {
CONDITION834: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "localtimer") )
   if (javadummy) break  CONDITION834;
};
YyProcs.
NotCovered
(
new JavaStringValue( "stop timer" )
,
Str
);
Code = 
NodeFactory.NewNode(
"stmt_stopcomponent"
, new JavaNode [] {
Str
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST833;
// $$$$$$$$ 
} // CONDITION834 // @@@ end of alternative
CONDITION835: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "localvar") )
   if (javadummy) break  CONDITION835;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tp --- JJ.M4
Tp = current1 ;
} //)) children level 1
};
// ***** begin condlist 836 (in cond 835) *****
CONDLIST836: // @@@ begin of alternative group
while(javadummy) {
CONDITION837: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Ref
JavaNode Ref= null;
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_referenced") )
   if (javadummy) break  CONDITION837;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Ref --- JJ.M4
Ref = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Ref;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION837;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST836;
// $$$$$$$$ 
} // CONDITION837 // @@@ end of alternative
CONDITION838: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Str
,
new JavaStringValue( "' is not defined as component" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST836;
// $$$$$$$$ 
} // CONDITION838 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=836 N=835
if (javadummy) break CONDITION835;
} // CONDLIST836 @@@ end of alternative group
// *** CONTINUE ***
Code = 
NodeFactory.NewNode(
"stmt_stopcomponent"
, new JavaNode [] {
Str
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST833;
// $$$$$$$$ 
} // CONDITION835 // @@@ end of alternative
CONDITION839: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Str
,
new JavaStringValue( "': timer or component expected" )
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_stopcomponent"
, new JavaNode [] {
Str
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST833;
// $$$$$$$$ 
} // CONDITION839 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=833 N=822
if (javadummy) break CONDITION822;
} // CONDLIST833 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST821;
// $$$$$$$$ 
} // CONDITION822 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=821 N=820
if (javadummy) break CONDITION820;
} // CONDLIST821 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION820
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_StopTimerStatement");
}



public
static
void
Trafo_SendStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc SendStmt
JavaNode SendStmt = null;
// DECLARE for proc Code
JavaNode Code = null;
// DECLARE for proc Port2
JavaNode Port2 = null;
// DECLARE for proc Res
JavaNode Res = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc Def
JavaNode Def = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Arg2
JavaNode Arg2 = null;
// DECLARE for proc Arg1
JavaNode Arg1 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc PortId
JavaNode PortId = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc Body
JavaNode Body = null;
// DECLARE for proc X12
JavaNode X12 = null;
// DECLARE for proc X11
JavaNode X11 = null;
CONDITION840:
while(javadummy) {
// ***** begin condlist 841 (in cond 840) *****
CONDLIST841: // @@@ begin of alternative group
while(javadummy) {
CONDITION842: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SendStmt --- JJ.M4
SendStmt = current0 ;
};
// ***** begin condlist 843 (in cond 842) *****
CONDLIST843: // @@@ begin of alternative group
while(javadummy) {
CONDITION844: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = SendStmt;
if (! current0 .Name
.equals( "SendStatement_A1") )
   if (javadummy) break  CONDITION844;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Arg1 --- JJ.M4
Arg1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Arg2 --- JJ.M4
Arg2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 845 (in cond 844) *****
CONDLIST845: // @@@ begin of alternative group
while(javadummy) {
CONDITION846: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Arg1;
if (! current0 .Name
.equals( "ArrayIdentifierRef_A1") )
   if (javadummy) break  CONDITION846;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to PortId --- JJ.M4
PortId = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 847 (in cond 846) *****
CONDLIST847: // @@@ begin of alternative group
while(javadummy) {
CONDITION848: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (current0.Name
!= "NilOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION848;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST847;
// $$$$$$$$ 
} // CONDITION848 // @@@ end of alternative
CONDITION849: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (current0.Name
!= "SeqOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION849;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "port indices" )
,
X
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST847;
// $$$$$$$$ 
} // CONDITION849 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=847 N=846
if (javadummy) break CONDITION846;
} // CONDLIST847 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST845;
// $$$$$$$$ 
} // CONDITION846 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=845 N=844
if (javadummy) break CONDITION844;
} // CONDLIST845 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 850 (in cond 844) *****
CONDLIST850: // @@@ begin of alternative group
while(javadummy) {
CONDITION851: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Arg2;
if (! current0 .Name
.equals( "PortSendOp_A1") )
   if (javadummy) break  CONDITION851;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 852 (in cond 851) *****
CONDLIST852: // @@@ begin of alternative group
while(javadummy) {
CONDITION853: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "InLineTemplate_A1") )
   if (javadummy) break  CONDITION853;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X11 --- JJ.M4
X11 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X12 --- JJ.M4
X12 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Body --- JJ.M4
Body = current1 ;
} //)) children level 1
};
// ***** begin condlist 854 (in cond 853) *****
CONDLIST854: // @@@ begin of alternative group
while(javadummy) {
CONDITION855: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X11;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-InLineTemplate_A1_M1")
if (javadummy) break CONDITION855;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST854;
// $$$$$$$$ 
} // CONDITION855 // @@@ end of alternative
CONDITION856: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X11;
if (current0.Name
!= "OneOf-InLineTemplate_A1_M1")
if (javadummy) break CONDITION856;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "xxx" )
,
X11
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST854;
// $$$$$$$$ 
} // CONDITION856 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=854 N=853
if (javadummy) break CONDITION853;
} // CONDLIST854 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 857 (in cond 853) *****
CONDLIST857: // @@@ begin of alternative group
while(javadummy) {
CONDITION858: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X12;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-InLineTemplate_A1_M2")
if (javadummy) break CONDITION858;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST857;
// $$$$$$$$ 
} // CONDITION858 // @@@ end of alternative
CONDITION859: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X12;
if (current0.Name
!= "OneOf-InLineTemplate_A1_M2")
if (javadummy) break CONDITION859;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "xxx" )
,
X12
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST857;
// $$$$$$$$ 
} // CONDITION859 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=857 N=853
if (javadummy) break CONDITION853;
} // CONDLIST857 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST852;
// $$$$$$$$ 
} // CONDITION853 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=852 N=851
if (javadummy) break CONDITION851;
} // CONDLIST852 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 860 (in cond 851) *****
CONDLIST860: // @@@ begin of alternative group
while(javadummy) {
CONDITION861: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-PortSendOp_A1_M5")
if (javadummy) break CONDITION861;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST860;
// $$$$$$$$ 
} // CONDITION861 // @@@ end of alternative
CONDITION862: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
!= "OneOf-PortSendOp_A1_M5")
if (javadummy) break CONDITION862;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "xxx" )
,
X2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST860;
// $$$$$$$$ 
} // CONDITION862 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=860 N=851
if (javadummy) break CONDITION851;
} // CONDLIST860 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST850;
// $$$$$$$$ 
} // CONDITION851 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=850 N=844
if (javadummy) break CONDITION844;
} // CONDLIST850 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(PortId);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
LocallyDefined
(
PortId
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 863 (in cond 844) *****
CONDLIST863: // @@@ begin of alternative group
while(javadummy) {
CONDITION864: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "componentmember_port") )
   if (javadummy) break  CONDITION864;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST863;
// $$$$$$$$ 
} // CONDITION864 // @@@ end of alternative
CONDITION865: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
PortId
,
new JavaStringValue( "' not declared as port" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST863;
// $$$$$$$$ 
} // CONDITION865 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=863 N=844
if (javadummy) break CONDITION844;
} // CONDLIST863 @@@ end of alternative group
// *** CONTINUE ***
Prefix = 
NodeFactory.NewNode (
"NoneOf-ZInLineTemplate_A1_M1"
,  new JavaNode [] {}
)
;
YyProcs.
Trafo_TemplateBody
(
Body
,
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
Port2 = 
NodeFactory.NewNode(
"expr_runsonc_port"
, new JavaNode [] {
PortId
}
)
;
Code = 
NodeFactory.NewNode(
"stmt_send"
, new JavaNode [] {
Port2
,
Res
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST843;
// $$$$$$$$ 
} // CONDITION844 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=843 N=842
if (javadummy) break CONDITION842;
} // CONDLIST843 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST841;
// $$$$$$$$ 
} // CONDITION842 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=841 N=840
if (javadummy) break CONDITION840;
} // CONDLIST841 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION840
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_SendStatement");
}



public
static
void
Stmt_DoneStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc DoneStatement
JavaNode DoneStatement = null;
// DECLARE for proc Comp
JavaNode Comp = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION866:
while(javadummy) {
// ***** begin condlist 867 (in cond 866) *****
CONDLIST867: // @@@ begin of alternative group
while(javadummy) {
CONDITION868: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to DoneStatement --- JJ.M4
DoneStatement = current0 ;
};
// ***** begin condlist 869 (in cond 868) *****
CONDLIST869: // @@@ begin of alternative group
while(javadummy) {
CONDITION870: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = DoneStatement;
if (! current0 .Name
.equals( "DoneStatement_A1") )
   if (javadummy) break  CONDITION870;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Comp --- JJ.M4
Comp = current1 ;
} //)) children level 1
};
// ***** begin condlist 871 (in cond 870) *****
CONDLIST871: // @@@ begin of alternative group
while(javadummy) {
CONDITION872: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = Comp;
if (! current0 .Name
.equals( "ComponentId_A1") )
   if (javadummy) break  CONDITION872;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 873 (in cond 872) *****
CONDLIST873: // @@@ begin of alternative group
while(javadummy) {
CONDITION874: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
// DECLARE for alternative Ref
JavaNode Ref= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ComponentOrDefaultReference_A1") )
   if (javadummy) break  CONDITION874;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 875 (in cond 874) *****
CONDLIST875: // @@@ begin of alternative group
while(javadummy) {
CONDITION876: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "VariableRef_A1") )
   if (javadummy) break  CONDITION876;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Ref --- JJ.M4
Ref = current1 ;
} //)) children level 1
};
// ***** begin condlist 877 (in cond 876) *****
CONDLIST877: // @@@ begin of alternative group
while(javadummy) {
CONDITION878: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Ref;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-VariableRef_A1_M2")
if (javadummy) break CONDITION878;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST877;
// $$$$$$$$ 
} // CONDITION878 // @@@ end of alternative
CONDITION879: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Ref;
if (current0.Name
!= "OneOf-VariableRef_A1_M2")
if (javadummy) break CONDITION879;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "component id a1 m2" )
,
Ref
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST877;
// $$$$$$$$ 
} // CONDITION879 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=877 N=876
if (javadummy) break CONDITION876;
} // CONDLIST877 @@@ end of alternative group
// *** CONTINUE ***
Code = 
NodeFactory.NewNode(
"stmt_done"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST875;
// $$$$$$$$ 
} // CONDITION876 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=875 N=874
if (javadummy) break CONDITION874;
} // CONDLIST875 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST873;
// $$$$$$$$ 
} // CONDITION874 // @@@ end of alternative
CONDITION880: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ComponentOrDefaultReference_A2") )
   if (javadummy) break  CONDITION880;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "component or default reference" )
,
X
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST873;
// $$$$$$$$ 
} // CONDITION880 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=873 N=872
if (javadummy) break CONDITION872;
} // CONDLIST873 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST871;
// $$$$$$$$ 
} // CONDITION872 // @@@ end of alternative
CONDITION881: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Comp;
if (! current0 .Name
.equals( "ComponentId_A2") )
   if (javadummy) break  CONDITION881;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "component id a2" )
,
Comp
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST871;
// $$$$$$$$ 
} // CONDITION881 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=871 N=870
if (javadummy) break CONDITION870;
} // CONDLIST871 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST869;
// $$$$$$$$ 
} // CONDITION870 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=869 N=868
if (javadummy) break CONDITION868;
} // CONDLIST869 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST867;
// $$$$$$$$ 
} // CONDITION868 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=867 N=866
if (javadummy) break CONDITION866;
} // CONDLIST867 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION866
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_DoneStatement");
}



public
static
void
Trafo_SetLocalVerdict(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc S6
JavaNode S6 = null;
// DECLARE for proc Code
JavaNode Code = null;
// DECLARE for proc Res
JavaNode Res = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc EXPR
JavaNode EXPR = null;
CONDITION882:
while(javadummy) {
// ***** begin condlist 883 (in cond 882) *****
CONDLIST883: // @@@ begin of alternative group
while(javadummy) {
CONDITION884: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to S6 --- JJ.M4
S6 = current0 ;
};
// ***** begin condlist 885 (in cond 884) *****
CONDLIST885: // @@@ begin of alternative group
while(javadummy) {
CONDITION886: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S6;
if (! current0 .Name
.equals( "SetLocalVerdict_A1") )
   if (javadummy) break  CONDITION886;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to EXPR --- JJ.M4
EXPR = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 887 (in cond 886) *****
CONDLIST887: // @@@ begin of alternative group
while(javadummy) {
CONDITION888: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (current0.Name
!= "NilOf-SetLocalVerdict_A1_M4")
if (javadummy) break CONDITION888;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST887;
// $$$$$$$$ 
} // CONDITION888 // @@@ end of alternative
CONDITION889: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (current0.Name
!= "SeqOf-SetLocalVerdict_A1_M4")
if (javadummy) break CONDITION889;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST887;
// $$$$$$$$ 
} // CONDITION889 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=887 N=886
if (javadummy) break CONDITION886;
} // CONDLIST887 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Trafo_SingleExpression
(
EXPR
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// ***** begin condlist 890 (in cond 886) *****
CONDLIST890: // @@@ begin of alternative group
while(javadummy) {
CONDITION891: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_verdict") )
   if (javadummy) break  CONDITION891;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST890;
// $$$$$$$$ 
} // CONDITION891 // @@@ end of alternative
CONDITION892: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(EXPR);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "verdict value required" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST890;
// $$$$$$$$ 
} // CONDITION892 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=890 N=886
if (javadummy) break CONDITION886;
} // CONDLIST890 @@@ end of alternative group
// *** CONTINUE ***
Code = 
NodeFactory.NewNode(
"stmt_verdict"
, new JavaNode [] {
Res
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST885;
// $$$$$$$$ 
} // CONDITION886 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=885 N=884
if (javadummy) break CONDITION884;
} // CONDLIST885 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST883;
// $$$$$$$$ 
} // CONDITION884 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=883 N=882
if (javadummy) break CONDITION882;
} // CONDLIST883 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION882
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_SetLocalVerdict");
}



public
static
void
Trafo_SUTStatements(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc S7
JavaNode S7 = null;
// DECLARE for proc QQQ
JavaNode QQQ = null;
// DECLARE for proc AT
JavaNode AT = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION893:
while(javadummy) {
// ***** begin condlist 894 (in cond 893) *****
CONDLIST894: // @@@ begin of alternative group
while(javadummy) {
CONDITION895: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to S7 --- JJ.M4
S7 = current0 ;
};
// ***** begin condlist 896 (in cond 895) *****
CONDLIST896: // @@@ begin of alternative group
while(javadummy) {
CONDITION897: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S7;
if (! current0 .Name
.equals( "SUTStatements_A1") )
   if (javadummy) break  CONDITION897;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to AT --- JJ.M4
AT = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to QQQ --- JJ.M4
QQQ = current1 ;
} //)) children level 1
};
// ***** begin condlist 898 (in cond 897) *****
CONDLIST898: // @@@ begin of alternative group
while(javadummy) {
CONDITION899: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative FT
JavaNode FT= null;
// DECLARE for alternative FT2
JavaNode FT2= null;
// DECLARE for alternative Str
JavaNode Str= null;
{
JavaNode current0 = AT;
if (! current0 .Name
.equals( "ActionText_A1") )
   if (javadummy) break  CONDITION899;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FT --- JJ.M4
FT = current1 ;
} //)) children level 1
};
// ***** begin condlist 900 (in cond 899) *****
CONDLIST900: // @@@ begin of alternative group
while(javadummy) {
CONDITION901: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FT;
if (! current0 .Name
.equals( "FreeText_A1") )
   if (javadummy) break  CONDITION901;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FT2 --- JJ.M4
FT2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 902 (in cond 901) *****
CONDLIST902: // @@@ begin of alternative group
while(javadummy) {
CONDITION903: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FT2;
if (! current0 .Name
.equals( "FREETEXT_A1") )
   if (javadummy) break  CONDITION903;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Str --- JJ.M4
Str = current1 ;
} //)) children level 1
};
Code = 
NodeFactory.NewNode(
"stmt_action"
, new JavaNode [] {
Str
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST902;
// $$$$$$$$ 
} // CONDITION903 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=902 N=901
if (javadummy) break CONDITION901;
} // CONDLIST902 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST900;
// $$$$$$$$ 
} // CONDITION901 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=900 N=899
if (javadummy) break CONDITION899;
} // CONDLIST900 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST898;
// $$$$$$$$ 
} // CONDITION899 // @@@ end of alternative
CONDITION904: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = AT;
if (! current0 .Name
.equals( "ActionText_A2") )
   if (javadummy) break  CONDITION904;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "action text a2" )
,
AT
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST898;
// $$$$$$$$ 
} // CONDITION904 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=898 N=897
if (javadummy) break CONDITION897;
} // CONDLIST898 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 905 (in cond 897) *****
CONDLIST905: // @@@ begin of alternative group
while(javadummy) {
CONDITION906: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = QQQ;
if (current0.Name
!= "NilOf-SUTStatements_A1_M4")
if (javadummy) break CONDITION906;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST905;
// $$$$$$$$ 
} // CONDITION906 // @@@ end of alternative
CONDITION907: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = QQQ;
if (current0.Name
!= "SeqOf-SUTStatements_A1_M4")
if (javadummy) break CONDITION907;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "action text extended" )
,
QQQ
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST905;
// $$$$$$$$ 
} // CONDITION907 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=905 N=897
if (javadummy) break CONDITION897;
} // CONDLIST905 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST896;
// $$$$$$$$ 
} // CONDITION897 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=896 N=895
if (javadummy) break CONDITION895;
} // CONDLIST896 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST894;
// $$$$$$$$ 
} // CONDITION895 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=894 N=893
if (javadummy) break CONDITION893;
} // CONDLIST894 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION893
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_SUTStatements");
}



public
static
void
Trafo_LogStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc E
JavaNode E = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
CONDITION908:
while(javadummy) {
// ***** begin condlist 909 (in cond 908) *****
CONDLIST909: // @@@ begin of alternative group
while(javadummy) {
CONDITION910: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 911 (in cond 910) *****
CONDLIST911: // @@@ begin of alternative group
while(javadummy) {
CONDITION912: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "LogStatement_A1") )
   if (javadummy) break  CONDITION912;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_LogItem
(
X1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to E --- JJ.M4
E = current0 ;
}
// ***** begin condlist 913 (in cond 912) *****
CONDLIST913: // @@@ begin of alternative group
while(javadummy) {
CONDITION914: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
!= "NilOf-LogStatement_A1_M4")
if (javadummy) break CONDITION914;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST913;
// $$$$$$$$ 
} // CONDITION914 // @@@ end of alternative
CONDITION915: // @@@ begin of alternative
while(javadummy) {
YyProcs.
NotCovered
(
new JavaStringValue( "multiple items in log" )
,
X2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST913;
// $$$$$$$$ 
} // CONDITION915 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=913 N=912
if (javadummy) break CONDITION912;
} // CONDLIST913 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST911;
// $$$$$$$$ 
} // CONDITION912 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=911 N=910
if (javadummy) break CONDITION910;
} // CONDLIST911 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
NodeFactory.NewNode(
"stmt_log"
, new JavaNode [] {
E
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST909;
// $$$$$$$$ 
} // CONDITION910 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=909 N=908
if (javadummy) break CONDITION908;
} // CONDLIST909 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION908
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_LogStatement");
}



public
static
void
Trafo_LogItem(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc RES
JavaNode RES = null;
CONDITION916:
while(javadummy) {
// ***** begin condlist 917 (in cond 916) *****
CONDLIST917: // @@@ begin of alternative group
while(javadummy) {
CONDITION918: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 919 (in cond 918) *****
CONDLIST919: // @@@ begin of alternative group
while(javadummy) {
CONDITION920: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Text
JavaNode Text= null;
// DECLARE for alternative FT
JavaNode FT= null;
// DECLARE for alternative Str
JavaNode Str= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "LogItem_A1") )
   if (javadummy) break  CONDITION920;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Text --- JJ.M4
Text = current1 ;
} //)) children level 1
};
// ***** begin condlist 921 (in cond 920) *****
CONDLIST921: // @@@ begin of alternative group
while(javadummy) {
CONDITION922: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Text;
if (! current0 .Name
.equals( "FreeText_A1") )
   if (javadummy) break  CONDITION922;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FT --- JJ.M4
FT = current1 ;
} //)) children level 1
};
// ***** begin condlist 923 (in cond 922) *****
CONDLIST923: // @@@ begin of alternative group
while(javadummy) {
CONDITION924: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FT;
if (! current0 .Name
.equals( "FREETEXT_A1") )
   if (javadummy) break  CONDITION924;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Str --- JJ.M4
Str = current1 ;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"expr_cstring"
, new JavaNode [] {
Str
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST923;
// $$$$$$$$ 
} // CONDITION924 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=923 N=922
if (javadummy) break CONDITION922;
} // CONDLIST923 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST921;
// $$$$$$$$ 
} // CONDITION922 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=921 N=920
if (javadummy) break CONDITION920;
} // CONDLIST921 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST919;
// $$$$$$$$ 
} // CONDITION920 // @@@ end of alternative
CONDITION925: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
// DECLARE for alternative Templ
JavaNode Templ= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "LogItem_A2") )
   if (javadummy) break  CONDITION925;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Templ --- JJ.M4
Templ = current1 ;
} //)) children level 1
};
YyProcs.
primaTrafo_InLineTemplate
(
Templ
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST919;
// $$$$$$$$ 
} // CONDITION925 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=919 N=918
if (javadummy) break CONDITION918;
} // CONDLIST919 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST917;
// $$$$$$$$ 
} // CONDITION918 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=917 N=916
if (javadummy) break CONDITION916;
} // CONDLIST917 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION916
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_LogItem");
}



public
static
void
Stmt_Loop(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Loop
JavaNode Loop = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION926:
while(javadummy) {
// ***** begin condlist 927 (in cond 926) *****
CONDLIST927: // @@@ begin of alternative group
while(javadummy) {
CONDITION928: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Loop --- JJ.M4
Loop = current0 ;
};
// ***** begin condlist 929 (in cond 928) *****
CONDLIST929: // @@@ begin of alternative group
while(javadummy) {
CONDITION930: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative For
JavaNode For= null;
{
JavaNode current0 = Loop;
if (! current0 .Name
.equals( "LoopConstruct_A1") )
   if (javadummy) break  CONDITION930;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to For --- JJ.M4
For = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "for statement" )
,
For
);
Code = 
NodeFactory.NewNode(
"stmt_error"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST929;
// $$$$$$$$ 
} // CONDITION930 // @@@ end of alternative
CONDITION931: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ResBlock
JavaNode ResBlock= null;
// DECLARE for alternative Res
JavaNode Res= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
// DECLARE for alternative Expr
JavaNode Expr= null;
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
// DECLARE for alternative While
JavaNode While= null;
{
JavaNode current0 = Loop;
if (! current0 .Name
.equals( "LoopConstruct_A2") )
   if (javadummy) break  CONDITION931;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to While --- JJ.M4
While = current1 ;
} //)) children level 1
};
{
JavaNode current0 = While;
if (! current0 .Name
.equals( "WhileStatement_A1") )
   if (javadummy) break  CONDITION931;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BooleanExpression_A1") )
   if (javadummy) break  CONDITION931;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Expr --- JJ.M4
Expr = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SingleExpression
(
Expr
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// ***** begin condlist 932 (in cond 931) *****
CONDLIST932: // @@@ begin of alternative group
while(javadummy) {
CONDITION933: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_boolean") )
   if (javadummy) break  CONDITION933;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST932;
// $$$$$$$$ 
} // CONDITION933 // @@@ end of alternative
CONDITION934: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Expr);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "boolean expression required" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST932;
// $$$$$$$$ 
} // CONDITION934 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=932 N=931
if (javadummy) break CONDITION931;
} // CONDLIST932 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Trafo_StatementBlock
(
X2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ResBlock --- JJ.M4
ResBlock = current0 ;
}
Code = 
NodeFactory.NewNode(
"stmt_while"
, new JavaNode [] {
Res
,
ResBlock
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST929;
// $$$$$$$$ 
} // CONDITION931 // @@@ end of alternative
CONDITION935: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative DoWhile
JavaNode DoWhile= null;
{
JavaNode current0 = Loop;
if (! current0 .Name
.equals( "LoopConstruct_A3") )
   if (javadummy) break  CONDITION935;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to DoWhile --- JJ.M4
DoWhile = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "do while statement" )
,
DoWhile
);
Code = 
NodeFactory.NewNode(
"stmt_error"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST929;
// $$$$$$$$ 
} // CONDITION935 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=929 N=928
if (javadummy) break CONDITION928;
} // CONDLIST929 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST927;
// $$$$$$$$ 
} // CONDITION928 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=927 N=926
if (javadummy) break CONDITION926;
} // CONDLIST927 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION926
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_Loop");
}



public
static
void
Stmt_Conditional(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Conditional
JavaNode Conditional = null;
// DECLARE for proc Code
JavaNode Code = null;
// DECLARE for proc CodeElsifs
JavaNode CodeElsifs = null;
// DECLARE for proc CodeThenPart
JavaNode CodeThenPart = null;
// DECLARE for proc ElsePart
JavaNode ElsePart = null;
// DECLARE for proc Elsifs
JavaNode Elsifs = null;
// DECLARE for proc ThenPart
JavaNode ThenPart = null;
// DECLARE for proc Condition
JavaNode Condition = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc CodeCondition
JavaNode CodeCondition = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc Expr
JavaNode Expr = null;
// DECLARE for proc CodeElsePart
JavaNode CodeElsePart = null;
CONDITION936:
while(javadummy) {
// ***** begin condlist 937 (in cond 936) *****
CONDLIST937: // @@@ begin of alternative group
while(javadummy) {
CONDITION938: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Conditional --- JJ.M4
Conditional = current0 ;
};
// ***** begin condlist 939 (in cond 938) *****
CONDLIST939: // @@@ begin of alternative group
while(javadummy) {
CONDITION940: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Conditional;
if (! current0 .Name
.equals( "ConditionalConstruct_A1") )
   if (javadummy) break  CONDITION940;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Condition --- JJ.M4
Condition = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to ThenPart --- JJ.M4
ThenPart = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Elsifs --- JJ.M4
Elsifs = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to ElsePart --- JJ.M4
ElsePart = current1 ;
} //)) children level 1
};
// ***** begin condlist 941 (in cond 940) *****
CONDLIST941: // @@@ begin of alternative group
while(javadummy) {
CONDITION942: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Condition;
if (! current0 .Name
.equals( "BooleanExpression_A1") )
   if (javadummy) break  CONDITION942;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Expr --- JJ.M4
Expr = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SingleExpression
(
Expr
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to CodeCondition --- JJ.M4
CodeCondition = current0 ;
}
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Expr);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
CheckBool
(
Tp
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST941;
// $$$$$$$$ 
} // CONDITION942 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=941 N=940
if (javadummy) break CONDITION940;
} // CONDLIST941 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Trafo_StatementBlock
(
ThenPart
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeThenPart --- JJ.M4
CodeThenPart = current0 ;
}
YyProcs.
Trafo_Elsifs
(
Elsifs
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeElsifs --- JJ.M4
CodeElsifs = current0 ;
}
// ***** begin condlist 943 (in cond 940) *****
CONDLIST943: // @@@ begin of alternative group
while(javadummy) {
CONDITION944: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Else
JavaNode Else= null;
// DECLARE for alternative Else2
JavaNode Else2= null;
// DECLARE for alternative Block
JavaNode Block= null;
{
JavaNode current0 = ElsePart;
if (current0.Name
!= "OneOf-ConditionalConstruct_A1_M7")
if (javadummy) break CONDITION944;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to Else --- JJ.M4
Else = current1 ;
} //)) children level 1
};
// ***** begin condlist 945 (in cond 944) *****
CONDLIST945: // @@@ begin of alternative group
while(javadummy) {
CONDITION946: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Else;
if (! current0 .Name
.equals( "ConditionalConstruct_A1_M7_A1") )
   if (javadummy) break  CONDITION946;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Else2 --- JJ.M4
Else2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 947 (in cond 946) *****
CONDLIST947: // @@@ begin of alternative group
while(javadummy) {
CONDITION948: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Else2;
if (! current0 .Name
.equals( "ElseClause_A1") )
   if (javadummy) break  CONDITION948;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Block --- JJ.M4
Block = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_StatementBlock
(
Block
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeElsePart --- JJ.M4
CodeElsePart = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST947;
// $$$$$$$$ 
} // CONDITION948 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=947 N=946
if (javadummy) break CONDITION946;
} // CONDLIST947 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST945;
// $$$$$$$$ 
} // CONDITION946 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=945 N=944
if (javadummy) break CONDITION944;
} // CONDLIST945 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST943;
// $$$$$$$$ 
} // CONDITION944 // @@@ end of alternative
CONDITION949: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ElsePart;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ConditionalConstruct_A1_M7")
if (javadummy) break CONDITION949;
{ //(( children level 1
} //)) children level 1
};
CodeElsePart = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST943;
// $$$$$$$$ 
} // CONDITION949 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=943 N=940
if (javadummy) break CONDITION940;
} // CONDLIST943 @@@ end of alternative group
// *** CONTINUE ***
Code = 
NodeFactory.NewNode(
"stmt_if"
, new JavaNode [] {
CodeCondition
,
CodeThenPart
,
CodeElsifs
,
CodeElsePart
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST939;
// $$$$$$$$ 
} // CONDITION940 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=939 N=938
if (javadummy) break CONDITION938;
} // CONDLIST939 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST937;
// $$$$$$$$ 
} // CONDITION938 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=937 N=936
if (javadummy) break CONDITION936;
} // CONDLIST937 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION936
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_Conditional");
}



public
static
void
Trafo_Elsifs(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
CONDITION950:
while(javadummy) {
// ***** begin condlist 951 (in cond 950) *****
CONDLIST951: // @@@ begin of alternative group
while(javadummy) {
CONDITION952: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative CodeTl
JavaNode CodeTl= null;
// DECLARE for alternative Tl
JavaNode Tl= null;
// DECLARE for alternative Hd
JavaNode Hd= null;
// DECLARE for alternative ElsifCl
JavaNode ElsifCl= null;
// DECLARE for alternative Block
JavaNode Block= null;
// DECLARE for alternative Cond
JavaNode Cond= null;
// DECLARE for alternative CodeHd
JavaNode CodeHd= null;
// DECLARE for alternative ThenPartCode
JavaNode ThenPartCode= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative CodeCondition
JavaNode CodeCondition= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
// DECLARE for alternative Expr
JavaNode Expr= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-ConditionalConstruct_A1_M6")
if (javadummy) break CONDITION952;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Hd --- JJ.M4
Hd = current1 ;
current1 = current0.Child1[1];
//assign current1 to Tl --- JJ.M4
Tl = current1 ;
} //)) children level 1
};
// ***** begin condlist 953 (in cond 952) *****
CONDLIST953: // @@@ begin of alternative group
while(javadummy) {
CONDITION954: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Hd;
if (! current0 .Name
.equals( "ConditionalConstruct_A1_M6_A1") )
   if (javadummy) break  CONDITION954;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ElsifCl --- JJ.M4
ElsifCl = current1 ;
} //)) children level 1
};
// ***** begin condlist 955 (in cond 954) *****
CONDLIST955: // @@@ begin of alternative group
while(javadummy) {
CONDITION956: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ElsifCl;
if (! current0 .Name
.equals( "ElseIfClause_A1") )
   if (javadummy) break  CONDITION956;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Cond --- JJ.M4
Cond = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Block --- JJ.M4
Block = current1 ;
} //)) children level 1
};
// ***** begin condlist 957 (in cond 956) *****
CONDLIST957: // @@@ begin of alternative group
while(javadummy) {
CONDITION958: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Cond;
if (! current0 .Name
.equals( "BooleanExpression_A1") )
   if (javadummy) break  CONDITION958;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Expr --- JJ.M4
Expr = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SingleExpression
(
Expr
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to CodeCondition --- JJ.M4
CodeCondition = current0 ;
}
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Expr);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
CheckBool
(
Tp
,
Pos
);
YyProcs.
Trafo_StatementBlock
(
Block
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ThenPartCode --- JJ.M4
ThenPartCode = current0 ;
}
CodeHd = 
NodeFactory.NewNode(
"elseif"
, new JavaNode [] {
CodeCondition
,
ThenPartCode
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST957;
// $$$$$$$$ 
} // CONDITION958 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=957 N=956
if (javadummy) break CONDITION956;
} // CONDLIST957 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST955;
// $$$$$$$$ 
} // CONDITION956 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=955 N=954
if (javadummy) break CONDITION954;
} // CONDLIST955 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST953;
// $$$$$$$$ 
} // CONDITION954 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=953 N=952
if (javadummy) break CONDITION952;
} // CONDLIST953 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Trafo_Elsifs
(
Tl
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeTl --- JJ.M4
CodeTl = current0 ;
}
yy_outparam_0 = 
NodeFactory.NewNode (
"SeqOf-ELSEIF"
, new JavaNode [] {
CodeHd
,
CodeTl
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST951;
// $$$$$$$$ 
} // CONDITION952 // @@@ end of alternative
CONDITION959: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-ConditionalConstruct_A1_M6")
if (javadummy) break CONDITION959;
};
yy_outparam_0 = 
NodeFactory.NewNode (
"NilOf-ELSEIF"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST951;
// $$$$$$$$ 
} // CONDITION959 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=951 N=950
if (javadummy) break CONDITION950;
} // CONDLIST951 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION950
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_Elsifs");
}



public
static
void
CheckBool(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION960:
while(javadummy) {
// ***** begin condlist 961 (in cond 960) *****
CONDLIST961: // @@@ begin of alternative group
while(javadummy) {
CONDITION962: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
// ***** begin condlist 963 (in cond 962) *****
CONDLIST963: // @@@ begin of alternative group
while(javadummy) {
CONDITION964: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_boolean") )
   if (javadummy) break  CONDITION964;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST963;
// $$$$$$$$ 
} // CONDITION964 // @@@ end of alternative
CONDITION965: // @@@ begin of alternative
while(javadummy) {
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "boolean expected" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST963;
// $$$$$$$$ 
} // CONDITION965 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=963 N=962
if (javadummy) break CONDITION962;
} // CONDLIST963 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST961;
// $$$$$$$$ 
} // CONDITION962 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=961 N=960
if (javadummy) break CONDITION960;
} // CONDLIST961 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION960
// failed:
JavaLib.rtsAllAlternativesFailed("CheckBool");
}



public
static
void
Stmt_TestcaseInstance(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc ZZ11
JavaNode ZZ11 = null;
// DECLARE for proc ZZ112
JavaNode ZZ112 = null;
// DECLARE for proc ZZ111
JavaNode ZZ111 = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION966:
while(javadummy) {
// ***** begin condlist 967 (in cond 966) *****
CONDLIST967: // @@@ begin of alternative group
while(javadummy) {
CONDITION968: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to ZZ11 --- JJ.M4
ZZ11 = current0 ;
};
// ***** begin condlist 969 (in cond 968) *****
CONDLIST969: // @@@ begin of alternative group
while(javadummy) {
CONDITION970: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ZZ11;
if (! current0 .Name
.equals( "TestcaseInstance_A1") )
   if (javadummy) break  CONDITION970;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ZZ111 --- JJ.M4
ZZ111 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to ZZ112 --- JJ.M4
ZZ112 = current1 ;
} //)) children level 1
};
// ***** begin condlist 971 (in cond 970) *****
CONDLIST971: // @@@ begin of alternative group
while(javadummy) {
CONDITION972: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X3
JavaNode X3= null;
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
// DECLARE for alternative Id
JavaNode Id= null;
// DECLARE for alternative X11
JavaNode X11= null;
{
JavaNode current0 = ZZ111;
if (! current0 .Name
.equals( "TestcaseInstance_A1_M3_A1") )
   if (javadummy) break  CONDITION972;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
} //)) children level 1
};
// ***** begin condlist 973 (in cond 972) *****
CONDLIST973: // @@@ begin of alternative group
while(javadummy) {
CONDITION974: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ExtendedIdentifier_A1") )
   if (javadummy) break  CONDITION974;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X11 --- JJ.M4
X11 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST973;
// $$$$$$$$ 
} // CONDITION974 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=973 N=972
if (javadummy) break CONDITION972;
} // CONDLIST973 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 975 (in cond 972) *****
CONDLIST975: // @@@ begin of alternative group
while(javadummy) {
CONDITION976: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X11;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ExtendedIdentifier_A1_M1")
if (javadummy) break CONDITION976;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST975;
// $$$$$$$$ 
} // CONDITION976 // @@@ end of alternative
CONDITION977: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X11;
if (current0.Name
!= "OneOf-ExtendedIdentifier_A1_M1")
if (javadummy) break CONDITION977;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "TestCase extended identifier a1 m1" )
,
X11
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST975;
// $$$$$$$$ 
} // CONDITION977 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=975 N=972
if (javadummy) break CONDITION972;
} // CONDLIST975 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 978 (in cond 972) *****
CONDLIST978: // @@@ begin of alternative group
while(javadummy) {
CONDITION979: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-TestcaseInstance_A1_M3_A1_M2")
if (javadummy) break CONDITION979;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST978;
// $$$$$$$$ 
} // CONDITION979 // @@@ end of alternative
CONDITION980: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
!= "OneOf-TestcaseInstance_A1_M3_A1_M2")
if (javadummy) break CONDITION980;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "TestCase extended identifier a1 m3 a1 m2" )
,
X11
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST978;
// $$$$$$$$ 
} // CONDITION980 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=978 N=972
if (javadummy) break CONDITION972;
} // CONDLIST978 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 981 (in cond 972) *****
CONDLIST981: // @@@ begin of alternative group
while(javadummy) {
CONDITION982: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-TestcaseInstance_A1_M3_A1_M4")
if (javadummy) break CONDITION982;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST981;
// $$$$$$$$ 
} // CONDITION982 // @@@ end of alternative
CONDITION983: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X3;
if (current0.Name
!= "OneOf-TestcaseInstance_A1_M3_A1_M4")
if (javadummy) break CONDITION983;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "TestCase extended identifier a1 m3 a1 m4" )
,
X11
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST981;
// $$$$$$$$ 
} // CONDITION983 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=981 N=972
if (javadummy) break CONDITION972;
} // CONDLIST981 @@@ end of alternative group
// *** CONTINUE ***
Code = 
NodeFactory.NewNode(
"stmt_testcaseinst"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST971;
// $$$$$$$$ 
} // CONDITION972 // @@@ end of alternative
CONDITION984: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ZZ111;
if (! current0 .Name
.equals( "TestcaseInstance_A1_M3_A2") )
   if (javadummy) break  CONDITION984;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "TestCase extended identifier a1 m3 a2" )
,
ZZ111
);
Code = 
NodeFactory.NewNode(
"stmt_testcaseinst"
, new JavaNode [] {
new JavaStringValue( "" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST971;
// $$$$$$$$ 
} // CONDITION984 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=971 N=970
if (javadummy) break CONDITION970;
} // CONDLIST971 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 985 (in cond 970) *****
CONDLIST985: // @@@ begin of alternative group
while(javadummy) {
CONDITION986: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ZZ112;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-TestcaseInstance_A1_M4")
if (javadummy) break CONDITION986;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST985;
// $$$$$$$$ 
} // CONDITION986 // @@@ end of alternative
CONDITION987: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ZZ112;
if (current0.Name
!= "OneOf-TestcaseInstance_A1_M4")
if (javadummy) break CONDITION987;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "TestCase extended identifier a1 m4" )
,
ZZ112
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST985;
// $$$$$$$$ 
} // CONDITION987 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=985 N=970
if (javadummy) break CONDITION970;
} // CONDLIST985 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST969;
// $$$$$$$$ 
} // CONDITION970 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=969 N=968
if (javadummy) break CONDITION968;
} // CONDLIST969 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST967;
// $$$$$$$$ 
} // CONDITION968 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=967 N=966
if (javadummy) break CONDITION966;
} // CONDLIST967 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION966
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_TestcaseInstance");
}



public
static
void
Stmt_FunctionInstance(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X11
JavaNode X11 = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION988:
while(javadummy) {
// ***** begin condlist 989 (in cond 988) *****
CONDLIST989: // @@@ begin of alternative group
while(javadummy) {
CONDITION990: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X11 --- JJ.M4
X11 = current0 ;
};
// ***** begin condlist 991 (in cond 990) *****
CONDLIST991: // @@@ begin of alternative group
while(javadummy) {
CONDITION992: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative X113
JavaNode X113= null;
// DECLARE for alternative X112
JavaNode X112= null;
// DECLARE for alternative FR
JavaNode FR= null;
// DECLARE for alternative Fun
JavaNode Fun= null;
// DECLARE for alternative X111
JavaNode X111= null;
{
JavaNode current0 = X11;
if (! current0 .Name
.equals( "FunctionInstance_A1") )
   if (javadummy) break  CONDITION992;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FR --- JJ.M4
FR = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X112 --- JJ.M4
X112 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X113 --- JJ.M4
X113 = current1 ;
} //)) children level 1
};
// ***** begin condlist 993 (in cond 992) *****
CONDLIST993: // @@@ begin of alternative group
while(javadummy) {
CONDITION994: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FR;
if (! current0 .Name
.equals( "FunctionRef_A1") )
   if (javadummy) break  CONDITION994;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X111 --- JJ.M4
X111 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Fun --- JJ.M4
Fun = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST993;
// $$$$$$$$ 
} // CONDITION994 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=993 N=992
if (javadummy) break CONDITION992;
} // CONDLIST993 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 995 (in cond 992) *****
CONDLIST995: // @@@ begin of alternative group
while(javadummy) {
CONDITION996: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X111;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionRef_A1_M1")
if (javadummy) break CONDITION996;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST995;
// $$$$$$$$ 
} // CONDITION996 // @@@ end of alternative
CONDITION997: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X111;
if (current0.Name
!= "OneOf-FunctionRef_A1_M1")
if (javadummy) break CONDITION997;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Functionref a1 m1" )
,
X111
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST995;
// $$$$$$$$ 
} // CONDITION997 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=995 N=992
if (javadummy) break CONDITION992;
} // CONDLIST995 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 998 (in cond 992) *****
CONDLIST998: // @@@ begin of alternative group
while(javadummy) {
CONDITION999: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X112;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionInstance_A1_M2")
if (javadummy) break CONDITION999;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST998;
// $$$$$$$$ 
} // CONDITION999 // @@@ end of alternative
CONDITION1000: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X112;
if (current0.Name
!= "OneOf-FunctionInstance_A1_M2")
if (javadummy) break CONDITION1000;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Functionref a1 m2" )
,
X112
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST998;
// $$$$$$$$ 
} // CONDITION1000 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=998 N=992
if (javadummy) break CONDITION992;
} // CONDLIST998 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1001 (in cond 992) *****
CONDLIST1001: // @@@ begin of alternative group
while(javadummy) {
CONDITION1002: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X113;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionInstance_A1_M4")
if (javadummy) break CONDITION1002;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1001;
// $$$$$$$$ 
} // CONDITION1002 // @@@ end of alternative
CONDITION1003: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X113;
if (current0.Name
!= "OneOf-FunctionInstance_A1_M4")
if (javadummy) break CONDITION1003;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Functionref a1 m4" )
,
X113
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1001;
// $$$$$$$$ 
} // CONDITION1003 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1001 N=992
if (javadummy) break CONDITION992;
} // CONDLIST1001 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Fun);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
GloballyDefined
(
Fun
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 1004 (in cond 992) *****
CONDLIST1004: // @@@ begin of alternative group
while(javadummy) {
CONDITION1005: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative CallerRunsOnC
JavaNode CallerRunsOnC= null;
// DECLARE for alternative Block
JavaNode Block= null;
// DECLARE for alternative RunsOnC
JavaNode RunsOnC= null;
// DECLARE for alternative Val
JavaNode Val= null;
// DECLARE for alternative RefNormalizedFunction
JavaNode RefNormalizedFunction= null;
// DECLARE for alternative D
JavaNode D= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "functiondefinition") )
   if (javadummy) break  CONDITION1005;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D --- JJ.M4
D = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedFunction --- JJ.M4
RefNormalizedFunction = current1 ;
} //)) children level 1
};
Val = JavaLib.rtsBoundToKey(RefNormalizedFunction);
{
JavaNode current0 = Val;
if (! current0 .Name
.equals( "normalizedfunction") )
   if (javadummy) break  CONDITION1005;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RunsOnC --- JJ.M4
RunsOnC = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Block --- JJ.M4
Block = current1 ;
} //)) children level 1
};
JavaLib.rtsCheckDefined(ActiveRunsOnComponent,"/line,offset,length,file=/ 642 17776 21 Stmt_Div.g");
CallerRunsOnC = ActiveRunsOnComponent;
// ***** begin condlist 1006 (in cond 1005) *****
CONDLIST1006: // @@@ begin of alternative group
while(javadummy) {
CONDITION1007: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = RunsOnC;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"(none)"))
   if (javadummy) break  CONDITION1007;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1006;
// $$$$$$$$ 
} // CONDITION1007 // @@@ end of alternative
CONDITION1008: // @@@ begin of alternative
while(javadummy) {
{
if (! JavaLib.rtsEqualString(
CallerRunsOnC
,
RunsOnC
)
)
   if (javadummy) break  CONDITION1008;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1006;
// $$$$$$$$ 
} // CONDITION1008 // @@@ end of alternative
CONDITION1009: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "caller must run on '" )
,
RunsOnC
,
new JavaStringValue( "'" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1006;
// $$$$$$$$ 
} // CONDITION1009 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1006 N=1005
if (javadummy) break CONDITION1005;
} // CONDLIST1006 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1004;
// $$$$$$$$ 
} // CONDITION1005 // @@@ end of alternative
CONDITION1010: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Fun
,
new JavaStringValue( "' not defined as function" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1004;
// $$$$$$$$ 
} // CONDITION1010 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1004 N=992
if (javadummy) break CONDITION992;
} // CONDLIST1004 @@@ end of alternative group
// *** CONTINUE ***
Code = 
NodeFactory.NewNode(
"stmt_call"
, new JavaNode [] {
Fun
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST991;
// $$$$$$$$ 
} // CONDITION992 // @@@ end of alternative
CONDITION1011: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X11;
if (! current0 .Name
.equals( "FunctionInstance_A2") )
   if (javadummy) break  CONDITION1011;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "/call 2/" )
,
X11
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST991;
// $$$$$$$$ 
} // CONDITION1011 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=991 N=990
if (javadummy) break CONDITION990;
} // CONDLIST991 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST989;
// $$$$$$$$ 
} // CONDITION990 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=989 N=988
if (javadummy) break CONDITION988;
} // CONDLIST989 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION988
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_FunctionInstance");
}



public
static
void
Stmt_MapStatement_A1(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc MapStatement
JavaNode MapStatement = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc PORTCODE2
JavaNode PORTCODE2 = null;
// DECLARE for proc PORTCODE1
JavaNode PORTCODE1 = null;
// DECLARE for proc X3
JavaNode X3 = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1012:
while(javadummy) {
// ***** begin condlist 1013 (in cond 1012) *****
CONDLIST1013: // @@@ begin of alternative group
while(javadummy) {
CONDITION1014: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to MapStatement --- JJ.M4
MapStatement = current0 ;
};
// ***** begin condlist 1015 (in cond 1014) *****
CONDLIST1015: // @@@ begin of alternative group
while(javadummy) {
CONDITION1016: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MapStatement;
if (! current0 .Name
.equals( "MapStatement_A1") )
   if (javadummy) break  CONDITION1016;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
} //)) children level 1
};
YyProcs.
SingleConnection
(
X1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to PORTCODE1 --- JJ.M4
PORTCODE1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to PORTCODE2 --- JJ.M4
PORTCODE2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(MapStatement);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
// ***** begin condlist 1017 (in cond 1016) *****
CONDLIST1017: // @@@ begin of alternative group
while(javadummy) {
CONDITION1018: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PORTCODE1;
if (! current0 .Name
.equals( "expr_compportref") )
   if (javadummy) break  CONDITION1018;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
{
JavaNode current0 = PORTCODE2;
if (! current0 .Name
.equals( "expr_systemc_port") )
   if (javadummy) break  CONDITION1018;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
Code = 
NodeFactory.NewNode(
"stmt_map"
, new JavaNode [] {
PORTCODE1
,
PORTCODE2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1017;
// $$$$$$$$ 
} // CONDITION1018 // @@@ end of alternative
CONDITION1019: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PORTCODE1;
if (! current0 .Name
.equals( "expr_systemc_port") )
   if (javadummy) break  CONDITION1019;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
{
JavaNode current0 = PORTCODE2;
if (! current0 .Name
.equals( "expr_compportref") )
   if (javadummy) break  CONDITION1019;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
Code = 
NodeFactory.NewNode(
"stmt_map"
, new JavaNode [] {
PORTCODE2
,
PORTCODE1
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1017;
// $$$$$$$$ 
} // CONDITION1019 // @@@ end of alternative
CONDITION1020: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PORTCODE1;
if (! current0 .Name
.equals( "expr_systemc_port") )
   if (javadummy) break  CONDITION1020;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
{
JavaNode current0 = PORTCODE2;
if (! current0 .Name
.equals( "expr_systemc_port") )
   if (javadummy) break  CONDITION1020;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "Cannot map system port onto system port" )
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1017;
// $$$$$$$$ 
} // CONDITION1020 // @@@ end of alternative
CONDITION1021: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PORTCODE1;
if (! current0 .Name
.equals( "expr_compportref") )
   if (javadummy) break  CONDITION1021;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
{
JavaNode current0 = PORTCODE2;
if (! current0 .Name
.equals( "expr_compportref") )
   if (javadummy) break  CONDITION1021;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "Cannot map component port onto component port" )
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1017;
// $$$$$$$$ 
} // CONDITION1021 // @@@ end of alternative
CONDITION1022: // @@@ begin of alternative
while(javadummy) {
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "One of the ports must a system port" )
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1017;
// $$$$$$$$ 
} // CONDITION1022 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1017 N=1016
if (javadummy) break CONDITION1016;
} // CONDLIST1017 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1023 (in cond 1016) *****
CONDLIST1023: // @@@ begin of alternative group
while(javadummy) {
CONDITION1024: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-MapStatement_A1_M3")
if (javadummy) break CONDITION1024;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1023;
// $$$$$$$$ 
} // CONDITION1024 // @@@ end of alternative
CONDITION1025: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
!= "OneOf-MapStatement_A1_M3")
if (javadummy) break CONDITION1025;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of map" )
,
X2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1023;
// $$$$$$$$ 
} // CONDITION1025 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1023 N=1016
if (javadummy) break CONDITION1016;
} // CONDLIST1023 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1026 (in cond 1016) *****
CONDLIST1026: // @@@ begin of alternative group
while(javadummy) {
CONDITION1027: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-MapStatement_A1_M4")
if (javadummy) break CONDITION1027;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1026;
// $$$$$$$$ 
} // CONDITION1027 // @@@ end of alternative
CONDITION1028: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X3;
if (current0.Name
!= "OneOf-MapStatement_A1_M4")
if (javadummy) break CONDITION1028;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of map" )
,
X3
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1026;
// $$$$$$$$ 
} // CONDITION1028 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1026 N=1016
if (javadummy) break CONDITION1016;
} // CONDLIST1026 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1015;
// $$$$$$$$ 
} // CONDITION1016 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1015 N=1014
if (javadummy) break CONDITION1014;
} // CONDLIST1015 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1013;
// $$$$$$$$ 
} // CONDITION1014 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1013 N=1012
if (javadummy) break CONDITION1012;
} // CONDLIST1013 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1012
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_MapStatement_A1");
}



public
static
void
Stmt_UnmapStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc UnmapStatement
JavaNode UnmapStatement = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1029:
while(javadummy) {
// ***** begin condlist 1030 (in cond 1029) *****
CONDLIST1030: // @@@ begin of alternative group
while(javadummy) {
CONDITION1031: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to UnmapStatement --- JJ.M4
UnmapStatement = current0 ;
};
// ***** begin condlist 1032 (in cond 1031) *****
CONDLIST1032: // @@@ begin of alternative group
while(javadummy) {
CONDITION1033: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = UnmapStatement;
if (! current0 .Name
.equals( "UnmapStatement_A1") )
   if (javadummy) break  CONDITION1033;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 1034 (in cond 1033) *****
CONDLIST1034: // @@@ begin of alternative group
while(javadummy) {
CONDITION1035: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = X;
if (current0.Name
!= "OneOf-UnmapStatement_A1_M2")
if (javadummy) break CONDITION1035;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1036 (in cond 1035) *****
CONDLIST1036: // @@@ begin of alternative group
while(javadummy) {
CONDITION1037: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative PORTCODE2
JavaNode PORTCODE2= null;
// DECLARE for alternative PORTCODE1
JavaNode PORTCODE1= null;
// DECLARE for alternative X12
JavaNode X12= null;
// DECLARE for alternative X11
JavaNode X11= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "UnmapStatement_A1_M2_A1") )
   if (javadummy) break  CONDITION1037;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X11 --- JJ.M4
X11 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X12 --- JJ.M4
X12 = current1 ;
} //)) children level 1
};
YyProcs.
SingleConnection
(
X11
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to PORTCODE1 --- JJ.M4
PORTCODE1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to PORTCODE2 --- JJ.M4
PORTCODE2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(UnmapStatement);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
// ***** begin condlist 1038 (in cond 1037) *****
CONDLIST1038: // @@@ begin of alternative group
while(javadummy) {
CONDITION1039: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PORTCODE1;
if (! current0 .Name
.equals( "expr_compportref") )
   if (javadummy) break  CONDITION1039;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
{
JavaNode current0 = PORTCODE2;
if (! current0 .Name
.equals( "expr_systemc_port") )
   if (javadummy) break  CONDITION1039;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
Code = 
NodeFactory.NewNode(
"stmt_unmap"
, new JavaNode [] {
PORTCODE1
,
PORTCODE2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1038;
// $$$$$$$$ 
} // CONDITION1039 // @@@ end of alternative
CONDITION1040: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PORTCODE1;
if (! current0 .Name
.equals( "expr_systemc_port") )
   if (javadummy) break  CONDITION1040;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
{
JavaNode current0 = PORTCODE2;
if (! current0 .Name
.equals( "expr_compportref") )
   if (javadummy) break  CONDITION1040;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
Code = 
NodeFactory.NewNode(
"stmt_unmap"
, new JavaNode [] {
PORTCODE2
,
PORTCODE1
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1038;
// $$$$$$$$ 
} // CONDITION1040 // @@@ end of alternative
CONDITION1041: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PORTCODE1;
if (! current0 .Name
.equals( "expr_systemc_port") )
   if (javadummy) break  CONDITION1041;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
{
JavaNode current0 = PORTCODE2;
if (! current0 .Name
.equals( "expr_systemc_port") )
   if (javadummy) break  CONDITION1041;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "Cannot unmap system port from system port" )
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1038;
// $$$$$$$$ 
} // CONDITION1041 // @@@ end of alternative
CONDITION1042: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PORTCODE1;
if (! current0 .Name
.equals( "expr_compportref") )
   if (javadummy) break  CONDITION1042;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
{
JavaNode current0 = PORTCODE2;
if (! current0 .Name
.equals( "expr_compportref") )
   if (javadummy) break  CONDITION1042;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "Cannot unmap component port from component port" )
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1038;
// $$$$$$$$ 
} // CONDITION1042 // @@@ end of alternative
CONDITION1043: // @@@ begin of alternative
while(javadummy) {
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "One of the ports must a system port" )
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1038;
// $$$$$$$$ 
} // CONDITION1043 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1038 N=1037
if (javadummy) break CONDITION1037;
} // CONDLIST1038 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1044 (in cond 1037) *****
CONDLIST1044: // @@@ begin of alternative group
while(javadummy) {
CONDITION1045: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X12;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-UnmapStatement_A1_M2_A1_M2")
if (javadummy) break CONDITION1045;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1044;
// $$$$$$$$ 
} // CONDITION1045 // @@@ end of alternative
CONDITION1046: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X12;
if (current0.Name
!= "OneOf-UnmapStatement_A1_M2_A1_M2")
if (javadummy) break CONDITION1046;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of unmap" )
,
X12
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1044;
// $$$$$$$$ 
} // CONDITION1046 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1044 N=1037
if (javadummy) break CONDITION1037;
} // CONDLIST1044 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1036;
// $$$$$$$$ 
} // CONDITION1037 // @@@ end of alternative
CONDITION1047: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "UnmapStatement_A1_M2_A2") )
   if (javadummy) break  CONDITION1047;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of unmap" )
,
X1
);
Code = 
NodeFactory.NewNode(
"stmt_error"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1036;
// $$$$$$$$ 
} // CONDITION1047 // @@@ end of alternative
CONDITION1048: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "UnmapStatement_A1_M2_A3") )
   if (javadummy) break  CONDITION1048;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of unmap" )
,
X1
);
Code = 
NodeFactory.NewNode(
"stmt_error"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1036;
// $$$$$$$$ 
} // CONDITION1048 // @@@ end of alternative
CONDITION1049: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "UnmapStatement_A1_M2_A4") )
   if (javadummy) break  CONDITION1049;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of unmap" )
,
X1
);
Code = 
NodeFactory.NewNode(
"stmt_error"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1036;
// $$$$$$$$ 
} // CONDITION1049 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1036 N=1035
if (javadummy) break CONDITION1035;
} // CONDLIST1036 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1034;
// $$$$$$$$ 
} // CONDITION1035 // @@@ end of alternative
CONDITION1050: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-UnmapStatement_A1_M2")
if (javadummy) break CONDITION1050;
{ //(( children level 1
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of unmap" )
,
X
);
Code = 
NodeFactory.NewNode(
"stmt_error"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1034;
// $$$$$$$$ 
} // CONDITION1050 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1034 N=1033
if (javadummy) break CONDITION1033;
} // CONDLIST1034 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1032;
// $$$$$$$$ 
} // CONDITION1033 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1032 N=1031
if (javadummy) break CONDITION1031;
} // CONDLIST1032 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1030;
// $$$$$$$$ 
} // CONDITION1031 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1030 N=1029
if (javadummy) break CONDITION1029;
} // CONDLIST1030 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1029
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_UnmapStatement");
}



public
static
void
Stmt_ConnectStatement_A1(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc ConnectStatement
JavaNode ConnectStatement = null;
// DECLARE for proc Code
JavaNode Code = null;
// DECLARE for proc PORTCODE2
JavaNode PORTCODE2 = null;
// DECLARE for proc PORTCODE1
JavaNode PORTCODE1 = null;
// DECLARE for proc CST
JavaNode CST = null;
// DECLARE for proc X
JavaNode X = null;
CONDITION1051:
while(javadummy) {
// ***** begin condlist 1052 (in cond 1051) *****
CONDLIST1052: // @@@ begin of alternative group
while(javadummy) {
CONDITION1053: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to ConnectStatement --- JJ.M4
ConnectStatement = current0 ;
};
// ***** begin condlist 1054 (in cond 1053) *****
CONDLIST1054: // @@@ begin of alternative group
while(javadummy) {
CONDITION1055: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ConnectStatement;
if (! current0 .Name
.equals( "ConnectStatement_A1") )
   if (javadummy) break  CONDITION1055;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to CST --- JJ.M4
CST = current1 ;
} //)) children level 1
};
YyProcs.
SingleConnection
(
X
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to PORTCODE1 --- JJ.M4
PORTCODE1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to PORTCODE2 --- JJ.M4
PORTCODE2 = current0 ;
}
// ***** begin condlist 1056 (in cond 1055) *****
CONDLIST1056: // @@@ begin of alternative group
while(javadummy) {
CONDITION1057: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CST;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ConnectStatement_A1_M3")
if (javadummy) break CONDITION1057;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1056;
// $$$$$$$$ 
} // CONDITION1057 // @@@ end of alternative
CONDITION1058: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CST;
if (current0.Name
!= "OneOf-ConnectStatement_A1_M3")
if (javadummy) break CONDITION1058;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of connect" )
,
CST
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1056;
// $$$$$$$$ 
} // CONDITION1058 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1056 N=1055
if (javadummy) break CONDITION1055;
} // CONDLIST1056 @@@ end of alternative group
// *** CONTINUE ***
Code = 
NodeFactory.NewNode(
"stmt_connect"
, new JavaNode [] {
PORTCODE1
,
PORTCODE2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1054;
// $$$$$$$$ 
} // CONDITION1055 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1054 N=1053
if (javadummy) break CONDITION1053;
} // CONDLIST1054 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1052;
// $$$$$$$$ 
} // CONDITION1053 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1052 N=1051
if (javadummy) break CONDITION1051;
} // CONDLIST1052 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1051
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_ConnectStatement_A1");
}



public
static
void
SingleConnection(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc PORTCODE2
JavaNode PORTCODE2 = null;
// DECLARE for proc PORTCODE1
JavaNode PORTCODE1 = null;
// DECLARE for proc PORT2
JavaNode PORT2 = null;
// DECLARE for proc PORT1
JavaNode PORT1 = null;
CONDITION1059:
while(javadummy) {
// ***** begin condlist 1060 (in cond 1059) *****
CONDLIST1060: // @@@ begin of alternative group
while(javadummy) {
CONDITION1061: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 1062 (in cond 1061) *****
CONDLIST1062: // @@@ begin of alternative group
while(javadummy) {
CONDITION1063: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "SingleConnectionSpec_A1") )
   if (javadummy) break  CONDITION1063;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to PORT1 --- JJ.M4
PORT1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to PORT2 --- JJ.M4
PORT2 = current1 ;
} //)) children level 1
};
YyProcs.
PortReference
(
PORT1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to PORTCODE1 --- JJ.M4
PORTCODE1 = current0 ;
}
YyProcs.
PortReference
(
PORT2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to PORTCODE2 --- JJ.M4
PORTCODE2 = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1062;
// $$$$$$$$ 
} // CONDITION1063 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1062 N=1061
if (javadummy) break CONDITION1061;
} // CONDLIST1062 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
PORTCODE1
;
yy_outparam_1 = 
PORTCODE2
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1060;
// $$$$$$$$ 
} // CONDITION1061 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1060 N=1059
if (javadummy) break CONDITION1059;
} // CONDLIST1060 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1059
// failed:
JavaLib.rtsAllAlternativesFailed("SingleConnection");
}



public
static
void
PortReference(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc PORT
JavaNode PORT = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc X22
JavaNode X22 = null;
// DECLARE for proc PortId
JavaNode PortId = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1064:
while(javadummy) {
// ***** begin condlist 1065 (in cond 1064) *****
CONDLIST1065: // @@@ begin of alternative group
while(javadummy) {
CONDITION1066: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to PORT --- JJ.M4
PORT = current0 ;
};
// ***** begin condlist 1067 (in cond 1066) *****
CONDLIST1067: // @@@ begin of alternative group
while(javadummy) {
CONDITION1068: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PORT;
if (! current0 .Name
.equals( "PortRef_A1") )
   if (javadummy) break  CONDITION1068;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1069 (in cond 1068) *****
CONDLIST1069: // @@@ begin of alternative group
while(javadummy) {
CONDITION1070: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (! current0 .Name
.equals( "ArrayIdentifierRef_A1") )
   if (javadummy) break  CONDITION1070;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to PortId --- JJ.M4
PortId = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X22 --- JJ.M4
X22 = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1069;
// $$$$$$$$ 
} // CONDITION1070 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1069 N=1068
if (javadummy) break CONDITION1068;
} // CONDLIST1069 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1071 (in cond 1068) *****
CONDLIST1071: // @@@ begin of alternative group
while(javadummy) {
CONDITION1072: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X22;
if (current0.Name
!= "NilOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION1072;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1071;
// $$$$$$$$ 
} // CONDITION1072 // @@@ end of alternative
CONDITION1073: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X22;
if (current0.Name
!= "SeqOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION1073;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of port specification" )
,
X22
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1071;
// $$$$$$$$ 
} // CONDITION1073 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1071 N=1068
if (javadummy) break CONDITION1068;
} // CONDLIST1071 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1074 (in cond 1068) *****
CONDLIST1074: // @@@ begin of alternative group
while(javadummy) {
CONDITION1075: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X11
JavaNode X11= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ComponentRef_A1") )
   if (javadummy) break  CONDITION1075;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X11 --- JJ.M4
X11 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1076 (in cond 1075) *****
CONDLIST1076: // @@@ begin of alternative group
while(javadummy) {
CONDITION1077: // @@@ begin of alternative
while(javadummy) {
// ***** begin condlist 1078 (in cond 1077) *****
CONDLIST1078: // @@@ begin of alternative group
while(javadummy) {
CONDITION1079: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative XX
JavaNode XX= null;
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative XXX
JavaNode XXX= null;
// DECLARE for alternative ComponentId
JavaNode ComponentId= null;
{
JavaNode current0 = X11;
if (! current0 .Name
.equals( "ComponentOrDefaultReference_A1") )
   if (javadummy) break  CONDITION1079;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX --- JJ.M4
XX = current1 ;
} //)) children level 1
};
// ***** begin condlist 1080 (in cond 1079) *****
CONDLIST1080: // @@@ begin of alternative group
while(javadummy) {
CONDITION1081: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX;
if (! current0 .Name
.equals( "VariableRef_A1") )
   if (javadummy) break  CONDITION1081;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ComponentId --- JJ.M4
ComponentId = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to XXX --- JJ.M4
XXX = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(ComponentId);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
LocallyDefined
(
ComponentId
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 1082 (in cond 1081) *****
CONDLIST1082: // @@@ begin of alternative group
while(javadummy) {
CONDITION1083: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative C
JavaNode C= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "localvar") )
   if (javadummy) break  CONDITION1083;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tp --- JJ.M4
Tp = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_referenced") )
   if (javadummy) break  CONDITION1083;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to C --- JJ.M4
C = current1 ;
} //)) children level 1
};
{
JavaNode current0 = C;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION1083;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1082;
// $$$$$$$$ 
} // CONDITION1083 // @@@ end of alternative
CONDITION1084: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
ComponentId
,
new JavaStringValue( "' not declared as component" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1082;
// $$$$$$$$ 
} // CONDITION1084 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1082 N=1081
if (javadummy) break CONDITION1081;
} // CONDLIST1082 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1085 (in cond 1081) *****
CONDLIST1085: // @@@ begin of alternative group
while(javadummy) {
CONDITION1086: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-VariableRef_A1_M2")
if (javadummy) break CONDITION1086;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1085;
// $$$$$$$$ 
} // CONDITION1086 // @@@ end of alternative
CONDITION1087: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX;
if (current0.Name
!= "OneOf-VariableRef_A1_M2")
if (javadummy) break CONDITION1087;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of port spec" )
,
XXX
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1085;
// $$$$$$$$ 
} // CONDITION1087 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1085 N=1081
if (javadummy) break CONDITION1081;
} // CONDLIST1085 @@@ end of alternative group
// *** CONTINUE ***
Code = 
NodeFactory.NewNode(
"expr_compportref"
, new JavaNode [] {
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
ComponentId
}
)
,
PortId
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1080;
// $$$$$$$$ 
} // CONDITION1081 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1080 N=1079
if (javadummy) break CONDITION1079;
} // CONDLIST1080 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1078;
// $$$$$$$$ 
} // CONDITION1079 // @@@ end of alternative
CONDITION1088: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X11;
if (! current0 .Name
.equals( "ComponentOrDefaultReference_A2") )
   if (javadummy) break  CONDITION1088;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this port spec" )
,
X11
);
Code = 
NodeFactory.NewNode(
"expr_systemc_port"
, new JavaNode [] {
new JavaStringValue( "-" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1078;
// $$$$$$$$ 
} // CONDITION1088 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1078 N=1077
if (javadummy) break CONDITION1077;
} // CONDLIST1078 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1076;
// $$$$$$$$ 
} // CONDITION1077 // @@@ end of alternative
CONDITION1089: // @@@ begin of alternative
while(javadummy) {
YyProcs.
NotCovered
(
new JavaStringValue( "this port spec" )
,
X1
);
Code = 
NodeFactory.NewNode(
"expr_systemc_port"
, new JavaNode [] {
new JavaStringValue( "-" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1076;
// $$$$$$$$ 
} // CONDITION1089 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1076 N=1075
if (javadummy) break CONDITION1075;
} // CONDLIST1076 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1074;
// $$$$$$$$ 
} // CONDITION1075 // @@@ end of alternative
CONDITION1090: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ComponentRef_A2") )
   if (javadummy) break  CONDITION1090;
};
Code = 
NodeFactory.NewNode(
"expr_systemc_port"
, new JavaNode [] {
PortId
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1074;
// $$$$$$$$ 
} // CONDITION1090 // @@@ end of alternative
CONDITION1091: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ComponentRef_A3") )
   if (javadummy) break  CONDITION1091;
};
YyProcs.
NotCovered
(
new JavaStringValue( "self port" )
,
X1
);
Code = 
NodeFactory.NewNode(
"expr_systemc_port"
, new JavaNode [] {
new JavaStringValue( "-" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1074;
// $$$$$$$$ 
} // CONDITION1091 // @@@ end of alternative
CONDITION1092: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ComponentRef_A4") )
   if (javadummy) break  CONDITION1092;
};
YyProcs.
NotCovered
(
new JavaStringValue( "mtc port" )
,
X1
);
Code = 
NodeFactory.NewNode(
"expr_systemc_port"
, new JavaNode [] {
new JavaStringValue( "-" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1074;
// $$$$$$$$ 
} // CONDITION1092 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1074 N=1068
if (javadummy) break CONDITION1068;
} // CONDLIST1074 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1067;
// $$$$$$$$ 
} // CONDITION1068 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1067 N=1066
if (javadummy) break CONDITION1066;
} // CONDLIST1067 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1065;
// $$$$$$$$ 
} // CONDITION1066 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1065 N=1064
if (javadummy) break CONDITION1064;
} // CONDLIST1065 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1064
// failed:
JavaLib.rtsAllAlternativesFailed("PortReference");
}



public
static
void
Stmt_ReceiveStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc RECEIVE
JavaNode RECEIVE = null;
// DECLARE for proc Code
JavaNode Code = null;
// DECLARE for proc Cd
JavaNode Cd = null;
// DECLARE for proc ResBlock
JavaNode ResBlock = null;
// DECLARE for proc CodeRECEIVE
JavaNode CodeRECEIVE = null;
// DECLARE for proc Arg2
JavaNode Arg2 = null;
// DECLARE for proc Arg1
JavaNode Arg1 = null;
CONDITION1093:
while(javadummy) {
// ***** begin condlist 1094 (in cond 1093) *****
CONDLIST1094: // @@@ begin of alternative group
while(javadummy) {
CONDITION1095: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to RECEIVE --- JJ.M4
RECEIVE = current0 ;
};
// ***** begin condlist 1096 (in cond 1095) *****
CONDLIST1096: // @@@ begin of alternative group
while(javadummy) {
CONDITION1097: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = RECEIVE;
if (! current0 .Name
.equals( "ReceiveStatement_A1") )
   if (javadummy) break  CONDITION1097;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Arg1 --- JJ.M4
Arg1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Arg2 --- JJ.M4
Arg2 = current1 ;
} //)) children level 1
};
YyProcs.
HandleReceive
(
RECEIVE
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeRECEIVE --- JJ.M4
CodeRECEIVE = current0 ;
}
ResBlock = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
Cd = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
CodeRECEIVE
,
ResBlock
}
)
;
Code = 
NodeFactory.NewNode(
"stmt_standalone"
, new JavaNode [] {
Cd
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1096;
// $$$$$$$$ 
} // CONDITION1097 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1096 N=1095
if (javadummy) break CONDITION1095;
} // CONDLIST1096 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1094;
// $$$$$$$$ 
} // CONDITION1095 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1094 N=1093
if (javadummy) break CONDITION1093;
} // CONDLIST1094 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1093
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_ReceiveStatement");
}



public
static
void
HandleReceive(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc R
JavaNode R = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc Port
JavaNode Port = null;
// DECLARE for proc PortId
JavaNode PortId = null;
// DECLARE for proc Umlenk
JavaNode Umlenk = null;
// DECLARE for proc M3
JavaNode M3 = null;
// DECLARE for proc M2
JavaNode M2 = null;
// DECLARE for proc CodeR
JavaNode CodeR = null;
CONDITION1098:
while(javadummy) {
// ***** begin condlist 1099 (in cond 1098) *****
CONDLIST1099: // @@@ begin of alternative group
while(javadummy) {
CONDITION1100: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to R --- JJ.M4
R = current0 ;
};
// ***** begin condlist 1101 (in cond 1100) *****
CONDLIST1101: // @@@ begin of alternative group
while(javadummy) {
CONDITION1102: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = R;
if (! current0 .Name
.equals( "ReceiveStatement_A1") )
   if (javadummy) break  CONDITION1102;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Port --- JJ.M4
Port = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1103 (in cond 1102) *****
CONDLIST1103: // @@@ begin of alternative group
while(javadummy) {
CONDITION1104: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Port1
JavaNode Port1= null;
// DECLARE for alternative Array
JavaNode Array= null;
{
JavaNode current0 = Port;
if (! current0 .Name
.equals( "PortOrAny_A1") )
   if (javadummy) break  CONDITION1104;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Port1 --- JJ.M4
Port1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1105 (in cond 1104) *****
CONDLIST1105: // @@@ begin of alternative group
while(javadummy) {
CONDITION1106: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Port1;
if (! current0 .Name
.equals( "ArrayIdentifierRef_A1") )
   if (javadummy) break  CONDITION1106;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to PortId --- JJ.M4
PortId = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Array --- JJ.M4
Array = current1 ;
} //)) children level 1
};
// ***** begin condlist 1107 (in cond 1106) *****
CONDLIST1107: // @@@ begin of alternative group
while(javadummy) {
CONDITION1108: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Array;
if (current0.Name
!= "NilOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION1108;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1107;
// $$$$$$$$ 
} // CONDITION1108 // @@@ end of alternative
CONDITION1109: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Array;
if (current0.Name
!= "SeqOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION1109;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "port array" )
,
Array
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1107;
// $$$$$$$$ 
} // CONDITION1109 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1107 N=1106
if (javadummy) break CONDITION1106;
} // CONDLIST1107 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1105;
// $$$$$$$$ 
} // CONDITION1106 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1105 N=1104
if (javadummy) break CONDITION1104;
} // CONDLIST1105 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1103;
// $$$$$$$$ 
} // CONDITION1104 // @@@ end of alternative
CONDITION1110: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Port;
if (! current0 .Name
.equals( "PortOrAny_A2") )
   if (javadummy) break  CONDITION1110;
};
YyProcs.
NotCovered
(
new JavaStringValue( "any port" )
,
Port
);
PortId = 
new JavaStringValue( "unused" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1103;
// $$$$$$$$ 
} // CONDITION1110 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1103 N=1102
if (javadummy) break CONDITION1102;
} // CONDLIST1103 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1111 (in cond 1102) *****
CONDLIST1111: // @@@ begin of alternative group
while(javadummy) {
CONDITION1112: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (! current0 .Name
.equals( "PortReceiveOp_A1") )
   if (javadummy) break  CONDITION1112;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to M2 --- JJ.M4
M2 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to M3 --- JJ.M4
M3 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Umlenk --- JJ.M4
Umlenk = current1 ;
} //)) children level 1
};
// ***** begin condlist 1113 (in cond 1112) *****
CONDLIST1113: // @@@ begin of alternative group
while(javadummy) {
CONDITION1114: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Redir
JavaNode Redir= null;
// DECLARE for alternative TEMPLATE
JavaNode TEMPLATE= null;
// DECLARE for alternative M2X
JavaNode M2X= null;
{
JavaNode current0 = M2;
if (current0.Name
!= "OneOf-PortReceiveOp_A1_M2")
if (javadummy) break CONDITION1114;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to M2X --- JJ.M4
M2X = current1 ;
} //)) children level 1
};
{
JavaNode current0 = M2X;
if (! current0 .Name
.equals( "PortReceiveOp_A1_M2_A1") )
   if (javadummy) break  CONDITION1114;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to TEMPLATE --- JJ.M4
TEMPLATE = current1 ;
} //)) children level 1
};
// ***** begin condlist 1115 (in cond 1114) *****
CONDLIST1115: // @@@ begin of alternative group
while(javadummy) {
CONDITION1116: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-PortReceiveOp_A1_M3")
if (javadummy) break CONDITION1116;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1115;
// $$$$$$$$ 
} // CONDITION1116 // @@@ end of alternative
CONDITION1117: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M3;
if (current0.Name
!= "OneOf-PortReceiveOp_A1_M3")
if (javadummy) break CONDITION1117;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "from sender" )
,
M2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1115;
// $$$$$$$$ 
} // CONDITION1117 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1115 N=1114
if (javadummy) break CONDITION1114;
} // CONDLIST1115 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Redirection
(
Umlenk
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Redir --- JJ.M4
Redir = current0 ;
}
YyProcs.
InLineTemplateInReceive
(
TEMPLATE
,
PortId
,
Redir
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeR --- JJ.M4
CodeR = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1113;
// $$$$$$$$ 
} // CONDITION1114 // @@@ end of alternative
CONDITION1118: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-PortReceiveOp_A1_M2")
if (javadummy) break CONDITION1118;
{ //(( children level 1
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "missing template" )
,
M2
);
CodeR = 
NodeFactory.NewNode(
"receive_unused"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1113;
// $$$$$$$$ 
} // CONDITION1118 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1113 N=1112
if (javadummy) break CONDITION1112;
} // CONDLIST1113 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1111;
// $$$$$$$$ 
} // CONDITION1112 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1111 N=1102
if (javadummy) break CONDITION1102;
} // CONDLIST1111 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1101;
// $$$$$$$$ 
} // CONDITION1102 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1101 N=1100
if (javadummy) break CONDITION1100;
} // CONDLIST1101 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
CodeR
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1099;
// $$$$$$$$ 
} // CONDITION1100 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1099 N=1098
if (javadummy) break CONDITION1098;
} // CONDLIST1099 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1098
// failed:
JavaLib.rtsAllAlternativesFailed("HandleReceive");
}



public
static
void
Redirection(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Umlenk
JavaNode Umlenk = null;
// DECLARE for proc Redir
JavaNode Redir = null;
CONDITION1119:
while(javadummy) {
// ***** begin condlist 1120 (in cond 1119) *****
CONDLIST1120: // @@@ begin of alternative group
while(javadummy) {
CONDITION1121: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Umlenk --- JJ.M4
Umlenk = current0 ;
};
// ***** begin condlist 1122 (in cond 1121) *****
CONDLIST1122: // @@@ begin of alternative group
while(javadummy) {
CONDITION1123: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Umlenk;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-PortReceiveOp_A1_M4")
if (javadummy) break CONDITION1123;
{ //(( children level 1
} //)) children level 1
};
Redir = 
new JavaStringValue( "/noredirect/" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1122;
// $$$$$$$$ 
} // CONDITION1123 // @@@ end of alternative
CONDITION1124: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X3
JavaNode X3= null;
{
JavaNode current0 = Umlenk;
if (current0.Name
!= "OneOf-PortReceiveOp_A1_M4")
if (javadummy) break CONDITION1124;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 1125 (in cond 1124) *****
CONDLIST1125: // @@@ begin of alternative group
while(javadummy) {
CONDITION1126: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "PortReceiveOp_A1_M4_A1") )
   if (javadummy) break  CONDITION1126;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1127 (in cond 1126) *****
CONDLIST1127: // @@@ begin of alternative group
while(javadummy) {
CONDITION1128: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (! current0 .Name
.equals( "PortRedirect_A1") )
   if (javadummy) break  CONDITION1128;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1129 (in cond 1128) *****
CONDLIST1129: // @@@ begin of alternative group
while(javadummy) {
CONDITION1130: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X3;
if (! current0 .Name
.equals( "PortRedirect_A1_M2_A3") )
   if (javadummy) break  CONDITION1130;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "redirect timestamp" )
,
X3
);
Redir = 
new JavaStringValue( "" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1129;
// $$$$$$$$ 
} // CONDITION1130 // @@@ end of alternative
CONDITION1131: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X3;
if (! current0 .Name
.equals( "PortRedirect_A1_M2_A2") )
   if (javadummy) break  CONDITION1131;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "redirect sender" )
,
X2
);
Redir = 
new JavaStringValue( "" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1129;
// $$$$$$$$ 
} // CONDITION1131 // @@@ end of alternative
CONDITION1132: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X4c
JavaNode X4c= null;
// DECLARE for alternative X4b
JavaNode X4b= null;
// DECLARE for alternative X4a
JavaNode X4a= null;
// DECLARE for alternative X4aa
JavaNode X4aa= null;
// DECLARE for alternative MSG
JavaNode MSG= null;
{
JavaNode current0 = X3;
if (! current0 .Name
.equals( "PortRedirect_A1_M2_A1") )
   if (javadummy) break  CONDITION1132;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X4a --- JJ.M4
X4a = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X4b --- JJ.M4
X4b = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X4c --- JJ.M4
X4c = current1 ;
} //)) children level 1
};
// ***** begin condlist 1133 (in cond 1132) *****
CONDLIST1133: // @@@ begin of alternative group
while(javadummy) {
CONDITION1134: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X4a;
if (! current0 .Name
.equals( "ValueSpec_A1") )
   if (javadummy) break  CONDITION1134;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X4aa --- JJ.M4
X4aa = current1 ;
} //)) children level 1
};
// ***** begin condlist 1135 (in cond 1134) *****
CONDLIST1135: // @@@ begin of alternative group
while(javadummy) {
CONDITION1136: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X4aaa
JavaNode X4aaa= null;
// DECLARE for alternative Rest
JavaNode Rest= null;
{
JavaNode current0 = X4aa;
if (! current0 .Name
.equals( "ValueSpec_A1_M2_A1") )
   if (javadummy) break  CONDITION1136;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X4aaa --- JJ.M4
X4aaa = current1 ;
} //)) children level 1
};
// ***** begin condlist 1137 (in cond 1136) *****
CONDLIST1137: // @@@ begin of alternative group
while(javadummy) {
CONDITION1138: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X4aaa;
if (! current0 .Name
.equals( "VariableRef_A1") )
   if (javadummy) break  CONDITION1138;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to MSG --- JJ.M4
MSG = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Rest --- JJ.M4
Rest = current1 ;
} //)) children level 1
};
// ***** begin condlist 1139 (in cond 1138) *****
CONDLIST1139: // @@@ begin of alternative group
while(javadummy) {
CONDITION1140: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Rest;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-VariableRef_A1_M2")
if (javadummy) break CONDITION1140;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1139;
// $$$$$$$$ 
} // CONDITION1140 // @@@ end of alternative
CONDITION1141: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Rest;
if (current0.Name
!= "OneOf-VariableRef_A1_M2")
if (javadummy) break CONDITION1141;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "variable suffix" )
,
Rest
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1139;
// $$$$$$$$ 
} // CONDITION1141 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1139 N=1138
if (javadummy) break CONDITION1138;
} // CONDLIST1139 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1137;
// $$$$$$$$ 
} // CONDITION1138 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1137 N=1136
if (javadummy) break CONDITION1136;
} // CONDLIST1137 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1135;
// $$$$$$$$ 
} // CONDITION1136 // @@@ end of alternative
CONDITION1142: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X4aa;
if (! current0 .Name
.equals( "ValueSpec_A1_M2_A2") )
   if (javadummy) break  CONDITION1142;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
TokenStream.ReportError
(
new JavaStringValue( "cover" )
,new JavaStringValue( "nopos" )
);
MSG = 
new JavaStringValue( "" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1135;
// $$$$$$$$ 
} // CONDITION1142 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1135 N=1134
if (javadummy) break CONDITION1134;
} // CONDLIST1135 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1133;
// $$$$$$$$ 
} // CONDITION1134 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1133 N=1132
if (javadummy) break CONDITION1132;
} // CONDLIST1133 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1143 (in cond 1132) *****
CONDLIST1143: // @@@ begin of alternative group
while(javadummy) {
CONDITION1144: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X4b;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-PortRedirect_A1_M2_A1_M2")
if (javadummy) break CONDITION1144;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1143;
// $$$$$$$$ 
} // CONDITION1144 // @@@ end of alternative
CONDITION1145: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X4b;
if (current0.Name
!= "OneOf-PortRedirect_A1_M2_A1_M2")
if (javadummy) break CONDITION1145;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "redirect sender" )
,
X4b
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1143;
// $$$$$$$$ 
} // CONDITION1145 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1143 N=1132
if (javadummy) break CONDITION1132;
} // CONDLIST1143 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1146 (in cond 1132) *****
CONDLIST1146: // @@@ begin of alternative group
while(javadummy) {
CONDITION1147: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X4c;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-PortRedirect_A1_M2_A1_M3")
if (javadummy) break CONDITION1147;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1146;
// $$$$$$$$ 
} // CONDITION1147 // @@@ end of alternative
CONDITION1148: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X4c;
if (current0.Name
!= "OneOf-PortRedirect_A1_M2_A1_M3")
if (javadummy) break CONDITION1148;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "redirect irgendwas" )
,
X4c
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1146;
// $$$$$$$$ 
} // CONDITION1148 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1146 N=1132
if (javadummy) break CONDITION1132;
} // CONDLIST1146 @@@ end of alternative group
// *** CONTINUE ***
Redir = 
MSG
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1129;
// $$$$$$$$ 
} // CONDITION1132 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1129 N=1128
if (javadummy) break CONDITION1128;
} // CONDLIST1129 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1127;
// $$$$$$$$ 
} // CONDITION1128 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1127 N=1126
if (javadummy) break CONDITION1126;
} // CONDLIST1127 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1125;
// $$$$$$$$ 
} // CONDITION1126 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1125 N=1124
if (javadummy) break CONDITION1124;
} // CONDLIST1125 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1122;
// $$$$$$$$ 
} // CONDITION1124 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1122 N=1121
if (javadummy) break CONDITION1121;
} // CONDLIST1122 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Redir
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1120;
// $$$$$$$$ 
} // CONDITION1121 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1120 N=1119
if (javadummy) break CONDITION1119;
} // CONDLIST1120 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1119
// failed:
JavaLib.rtsAllAlternativesFailed("Redirection");
}



public
static
void
InLineTemplateInReceive(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc CodeR2
JavaNode CodeR2 = null;
// DECLARE for proc EXPR
JavaNode EXPR = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc Redir
JavaNode Redir = null;
// DECLARE for proc PortId
JavaNode PortId = null;
// DECLARE for proc TEMPLATE
JavaNode TEMPLATE = null;
CONDITION1149:
while(javadummy) {
// ***** begin condlist 1150 (in cond 1149) *****
CONDLIST1150: // @@@ begin of alternative group
while(javadummy) {
CONDITION1151: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to TEMPLATE --- JJ.M4
TEMPLATE = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to PortId --- JJ.M4
PortId = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Redir --- JJ.M4
Redir = current0 ;
};
YyProcs.
primaTrafo_InLineTemplate
(
TEMPLATE
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to EXPR --- JJ.M4
EXPR = current0 ;
}
CodeR2 = 
NodeFactory.NewNode(
"receive_value"
, new JavaNode [] {
EXPR
,
PortId
,
Redir
}
)
;
yy_outparam_0 = 
CodeR2
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1150;
// $$$$$$$$ 
} // CONDITION1151 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1150 N=1149
if (javadummy) break CONDITION1149;
} // CONDLIST1150 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1149
// failed:
JavaLib.rtsAllAlternativesFailed("InLineTemplateInReceive");
}



public
static
void
Stmt_AltConstruct(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc AltConstruct
JavaNode AltConstruct = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Code
JavaNode Code = null;
// DECLARE for proc ALTGUARDLIST
JavaNode ALTGUARDLIST = null;
// DECLARE for proc LIST
JavaNode LIST = null;
CONDITION1152:
while(javadummy) {
// ***** begin condlist 1153 (in cond 1152) *****
CONDLIST1153: // @@@ begin of alternative group
while(javadummy) {
CONDITION1154: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to AltConstruct --- JJ.M4
AltConstruct = current0 ;
};
// ***** begin condlist 1155 (in cond 1154) *****
CONDLIST1155: // @@@ begin of alternative group
while(javadummy) {
CONDITION1156: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = AltConstruct;
if (! current0 .Name
.equals( "AltConstruct_A1") )
   if (javadummy) break  CONDITION1156;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 1157 (in cond 1156) *****
CONDLIST1157: // @@@ begin of alternative group
while(javadummy) {
CONDITION1158: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "AltGuardList_A1") )
   if (javadummy) break  CONDITION1158;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to LIST --- JJ.M4
LIST = current1 ;
} //)) children level 1
};
YyProcs.
BuildAltGuardList
(
LIST
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ALTGUARDLIST --- JJ.M4
ALTGUARDLIST = current0 ;
}
Code = 
NodeFactory.NewNode(
"stmt_altn"
, new JavaNode [] {
ALTGUARDLIST
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1157;
// $$$$$$$$ 
} // CONDITION1158 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1157 N=1156
if (javadummy) break CONDITION1156;
} // CONDLIST1157 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1155;
// $$$$$$$$ 
} // CONDITION1156 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1155 N=1154
if (javadummy) break CONDITION1154;
} // CONDLIST1155 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1153;
// $$$$$$$$ 
} // CONDITION1154 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1153 N=1152
if (javadummy) break CONDITION1152;
} // CONDLIST1153 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1152
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_AltConstruct");
}



public
static
void
BuildAltGuardList(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
CONDITION1159:
while(javadummy) {
// ***** begin condlist 1160 (in cond 1159) *****
CONDLIST1160: // @@@ begin of alternative group
while(javadummy) {
CONDITION1161: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative CT
JavaNode CT= null;
// DECLARE for alternative CH
JavaNode CH= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-AltGuardList_A1_M1")
if (javadummy) break CONDITION1161;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
HandleAltGuard
(
H
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CH --- JJ.M4
CH = current0 ;
}
YyProcs.
BuildAltGuardList
(
T
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CT --- JJ.M4
CT = current0 ;
}
yy_outparam_0 = 
NodeFactory.NewNode (
"SeqOf-ALTGUARD"
, new JavaNode [] {
CH
,
CT
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1160;
// $$$$$$$$ 
} // CONDITION1161 // @@@ end of alternative
CONDITION1162: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-AltGuardList_A1_M1")
if (javadummy) break CONDITION1162;
};
yy_outparam_0 = 
NodeFactory.NewNode (
"NilOf-ALTGUARD"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1160;
// $$$$$$$$ 
} // CONDITION1162 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1160 N=1159
if (javadummy) break CONDITION1159;
} // CONDLIST1160 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1159
// failed:
JavaLib.rtsAllAlternativesFailed("BuildAltGuardList");
}



public
static
void
HandleAltGuard(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc M1
JavaNode M1 = null;
// DECLARE for proc GUARDSTMT
JavaNode GUARDSTMT = null;
// DECLARE for proc ALTGUARDCHAR
JavaNode ALTGUARDCHAR = null;
// DECLARE for proc XX
JavaNode XX = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1163:
while(javadummy) {
// ***** begin condlist 1164 (in cond 1163) *****
CONDLIST1164: // @@@ begin of alternative group
while(javadummy) {
CONDITION1165: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to M1 --- JJ.M4
M1 = current0 ;
};
// ***** begin condlist 1166 (in cond 1165) *****
CONDLIST1166: // @@@ begin of alternative group
while(javadummy) {
CONDITION1167: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = M1;
if (! current0 .Name
.equals( "AltGuardList_A1_M1_A1") )
   if (javadummy) break  CONDITION1167;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 1168 (in cond 1167) *****
CONDLIST1168: // @@@ begin of alternative group
while(javadummy) {
CONDITION1169: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "GuardStatement_A1") )
   if (javadummy) break  CONDITION1169;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ALTGUARDCHAR --- JJ.M4
ALTGUARDCHAR = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to GUARDSTMT --- JJ.M4
GUARDSTMT = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1168;
// $$$$$$$$ 
} // CONDITION1169 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1168 N=1167
if (javadummy) break CONDITION1167;
} // CONDLIST1168 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1166;
// $$$$$$$$ 
} // CONDITION1167 // @@@ end of alternative
CONDITION1170: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M1;
if (! current0 .Name
.equals( "AltGuardList_A1_M1_A2") )
   if (javadummy) break  CONDITION1170;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "alt guard list" )
,
M1
);
{
JavaNode current0 = M1;
if (! current0 .Name
.equals( "AltGuardList_A1_M1_A1") )
   if (javadummy) break  CONDITION1170;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
if (! current1 .Name
.equals( "GuardStatement_A1") )
   if (javadummy) break  CONDITION1170;
{ //(( children level 2
JavaNode current2 =
   current1 . Child1[0];
JavaNode kurrent1 = current1;
//assign current2 to ALTGUARDCHAR --- JJ.M4
ALTGUARDCHAR = current2 ;
current2 = kurrent1.Child1[1];
//assign current2 to GUARDSTMT --- JJ.M4
GUARDSTMT = current2 ;
} //)) children level 2
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1166;
// $$$$$$$$ 
} // CONDITION1170 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1166 N=1165
if (javadummy) break CONDITION1165;
} // CONDLIST1166 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1171 (in cond 1165) *****
CONDLIST1171: // @@@ begin of alternative group
while(javadummy) {
CONDITION1172: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ALTGUARDCHAR;
if (! current0 .Name
.equals( "AltGuardChar_A1") )
   if (javadummy) break  CONDITION1172;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX --- JJ.M4
XX = current1 ;
} //)) children level 1
};
// ***** begin condlist 1173 (in cond 1172) *****
CONDLIST1173: // @@@ begin of alternative group
while(javadummy) {
CONDITION1174: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-AltGuardChar_A1_M2")
if (javadummy) break CONDITION1174;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1173;
// $$$$$$$$ 
} // CONDITION1174 // @@@ end of alternative
CONDITION1175: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX;
if (current0.Name
!= "OneOf-AltGuardChar_A1_M2")
if (javadummy) break CONDITION1175;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "alt guard char" )
,
XX
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1173;
// $$$$$$$$ 
} // CONDITION1175 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1173 N=1172
if (javadummy) break CONDITION1172;
} // CONDLIST1173 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1171;
// $$$$$$$$ 
} // CONDITION1172 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1171 N=1165
if (javadummy) break CONDITION1165;
} // CONDLIST1171 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1176 (in cond 1165) *****
CONDLIST1176: // @@@ begin of alternative group
while(javadummy) {
CONDITION1177: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = GUARDSTMT;
if (! current0 .Name
.equals( "GuardStatement_A1_M2_A1") )
   if (javadummy) break  CONDITION1177;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "guard statement a1 m2 a1" )
,
GUARDSTMT
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1176;
// $$$$$$$$ 
} // CONDITION1177 // @@@ end of alternative
CONDITION1178: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative BLOCK
JavaNode BLOCK= null;
// DECLARE for alternative GUARDOP
JavaNode GUARDOP= null;
{
JavaNode current0 = GUARDSTMT;
if (! current0 .Name
.equals( "GuardStatement_A1_M2_A2") )
   if (javadummy) break  CONDITION1178;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to GUARDOP --- JJ.M4
GUARDOP = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to BLOCK --- JJ.M4
BLOCK = current1 ;
} //)) children level 1
};
// ***** begin condlist 1179 (in cond 1178) *****
CONDLIST1179: // @@@ begin of alternative group
while(javadummy) {
CONDITION1180: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative TS
JavaNode TS= null;
// DECLARE for alternative TS1
JavaNode TS1= null;
{
JavaNode current0 = GUARDOP;
if (! current0 .Name
.equals( "GuardOp_A1") )
   if (javadummy) break  CONDITION1180;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to TS --- JJ.M4
TS = current1 ;
} //)) children level 1
};
// ***** begin condlist 1181 (in cond 1180) *****
CONDLIST1181: // @@@ begin of alternative group
while(javadummy) {
CONDITION1182: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TS;
if (! current0 .Name
.equals( "TimeoutStatement_A1") )
   if (javadummy) break  CONDITION1182;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to TS1 --- JJ.M4
TS1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1183 (in cond 1182) *****
CONDLIST1183: // @@@ begin of alternative group
while(javadummy) {
CONDITION1184: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative TS2
JavaNode TS2= null;
// DECLARE for alternative TS3
JavaNode TS3= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = TS1;
if (! current0 .Name
.equals( "TimerRefOrAny_A1") )
   if (javadummy) break  CONDITION1184;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to TS2 --- JJ.M4
TS2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1185 (in cond 1184) *****
CONDLIST1185: // @@@ begin of alternative group
while(javadummy) {
CONDITION1186: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TS2;
if (! current0 .Name
.equals( "ArrayIdentifierRef_A1") )
   if (javadummy) break  CONDITION1186;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TS3 --- JJ.M4
TS3 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1187 (in cond 1186) *****
CONDLIST1187: // @@@ begin of alternative group
while(javadummy) {
CONDITION1188: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ResBlock
JavaNode ResBlock= null;
{
JavaNode current0 = TS3;
if (current0.Name
!= "NilOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION1188;
};
YyProcs.
Trafo_StatementBlock
(
BLOCK
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ResBlock --- JJ.M4
ResBlock = current0 ;
}
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
Id
}
)
,
ResBlock
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1187;
// $$$$$$$$ 
} // CONDITION1188 // @@@ end of alternative
CONDITION1189: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TS3;
if (current0.Name
!= "SeqOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION1189;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
if (current1.Name
!= "NilOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION1189;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "array" )
,
TS3
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1187;
// $$$$$$$$ 
} // CONDITION1189 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1187 N=1186
if (javadummy) break CONDITION1186;
} // CONDLIST1187 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1185;
// $$$$$$$$ 
} // CONDITION1186 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1185 N=1184
if (javadummy) break CONDITION1184;
} // CONDLIST1185 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1183;
// $$$$$$$$ 
} // CONDITION1184 // @@@ end of alternative
CONDITION1190: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TS1;
if (! current0 .Name
.equals( "TimerRefOrAny_A2") )
   if (javadummy) break  CONDITION1190;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "timer ref or any 2" )
,
TS1
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1183;
// $$$$$$$$ 
} // CONDITION1190 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1183 N=1182
if (javadummy) break CONDITION1182;
} // CONDLIST1183 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1181;
// $$$$$$$$ 
} // CONDITION1182 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1181 N=1180
if (javadummy) break CONDITION1180;
} // CONDLIST1181 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1179;
// $$$$$$$$ 
} // CONDITION1180 // @@@ end of alternative
CONDITION1191: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ResBlock
JavaNode ResBlock= null;
// DECLARE for alternative CodeRECEIVE
JavaNode CodeRECEIVE= null;
// DECLARE for alternative RECEIVE
JavaNode RECEIVE= null;
{
JavaNode current0 = GUARDOP;
if (! current0 .Name
.equals( "GuardOp_A2") )
   if (javadummy) break  CONDITION1191;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RECEIVE --- JJ.M4
RECEIVE = current1 ;
} //)) children level 1
};
YyProcs.
HandleReceive
(
RECEIVE
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeRECEIVE --- JJ.M4
CodeRECEIVE = current0 ;
}
YyProcs.
Trafo_StatementBlock
(
BLOCK
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ResBlock --- JJ.M4
ResBlock = current0 ;
}
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
CodeRECEIVE
,
ResBlock
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1179;
// $$$$$$$$ 
} // CONDITION1191 // @@@ end of alternative
CONDITION1192: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = GUARDOP;
if (! current0 .Name
.equals( "GuardOp_A3") )
   if (javadummy) break  CONDITION1192;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "guard op 3" )
,
GUARDOP
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1179;
// $$$$$$$$ 
} // CONDITION1192 // @@@ end of alternative
CONDITION1193: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = GUARDOP;
if (! current0 .Name
.equals( "GuardOp_A4") )
   if (javadummy) break  CONDITION1193;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "guard op 4" )
,
GUARDOP
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1179;
// $$$$$$$$ 
} // CONDITION1193 // @@@ end of alternative
CONDITION1194: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = GUARDOP;
if (! current0 .Name
.equals( "GuardOp_A5") )
   if (javadummy) break  CONDITION1194;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "guard op 5" )
,
GUARDOP
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1179;
// $$$$$$$$ 
} // CONDITION1194 // @@@ end of alternative
CONDITION1195: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = GUARDOP;
if (! current0 .Name
.equals( "GuardOp_A6") )
   if (javadummy) break  CONDITION1195;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "guard op 6" )
,
GUARDOP
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1179;
// $$$$$$$$ 
} // CONDITION1195 // @@@ end of alternative
CONDITION1196: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = GUARDOP;
if (! current0 .Name
.equals( "GuardOp_A7") )
   if (javadummy) break  CONDITION1196;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "guard op 7" )
,
GUARDOP
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1179;
// $$$$$$$$ 
} // CONDITION1196 // @@@ end of alternative
CONDITION1197: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = GUARDOP;
if (! current0 .Name
.equals( "GuardOp_A8") )
   if (javadummy) break  CONDITION1197;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "guard op 8" )
,
GUARDOP
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1179;
// $$$$$$$$ 
} // CONDITION1197 // @@@ end of alternative
CONDITION1198: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = GUARDOP;
if (! current0 .Name
.equals( "GuardOp_A9") )
   if (javadummy) break  CONDITION1198;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "guard op 9" )
,
GUARDOP
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1179;
// $$$$$$$$ 
} // CONDITION1198 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1179 N=1178
if (javadummy) break CONDITION1178;
} // CONDLIST1179 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1176;
// $$$$$$$$ 
} // CONDITION1178 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1176 N=1165
if (javadummy) break CONDITION1165;
} // CONDLIST1176 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1164;
// $$$$$$$$ 
} // CONDITION1165 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1164 N=1163
if (javadummy) break CONDITION1163;
} // CONDLIST1164 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1163
// failed:
JavaLib.rtsAllAlternativesFailed("HandleAltGuard");
}



public
static
void
Trafo_Assignment(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc ASSIGN
JavaNode ASSIGN = null;
// DECLARE for proc RhsCode
JavaNode RhsCode = null;
// DECLARE for proc RhsType
JavaNode RhsType = null;
// DECLARE for proc LhsCode
JavaNode LhsCode = null;
// DECLARE for proc LhsType
JavaNode LhsType = null;
// DECLARE for proc RHS
JavaNode RHS = null;
// DECLARE for proc LHS
JavaNode LHS = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1199:
while(javadummy) {
// ***** begin condlist 1200 (in cond 1199) *****
CONDLIST1200: // @@@ begin of alternative group
while(javadummy) {
CONDITION1201: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to ASSIGN --- JJ.M4
ASSIGN = current0 ;
};
// ***** begin condlist 1202 (in cond 1201) *****
CONDLIST1202: // @@@ begin of alternative group
while(javadummy) {
CONDITION1203: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ASSIGN;
if (! current0 .Name
.equals( "Assignment_A1") )
   if (javadummy) break  CONDITION1203;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to LHS --- JJ.M4
LHS = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RHS --- JJ.M4
RHS = current1 ;
} //)) children level 1
};
YyProcs.
Handle_Lhs
(
LHS
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to LhsType --- JJ.M4
LhsType = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to LhsCode --- JJ.M4
LhsCode = current0 ;
}
YyProcs.
Handle_Rhs
(
RHS
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to RhsType --- JJ.M4
RhsType = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RhsCode --- JJ.M4
RhsCode = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1202;
// $$$$$$$$ 
} // CONDITION1203 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1202 N=1201
if (javadummy) break CONDITION1201;
} // CONDLIST1202 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1204 (in cond 1201) *****
CONDLIST1204: // @@@ begin of alternative group
while(javadummy) {
CONDITION1205: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Exprs
JavaNode Exprs= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Tps
JavaNode Tps= null;
{
JavaNode current0 = RhsType;
if (! current0 .Name
.equals( "tp_compound") )
   if (javadummy) break  CONDITION1205;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tps --- JJ.M4
Tps = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(RHS);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
CheckCompoundType
(
RhsType
,
LhsType
,
Pos
);
{
JavaNode current0 = RhsCode;
if (! current0 .Name
.equals( "expr_array") )
   if (javadummy) break  CONDITION1205;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Exprs --- JJ.M4
Exprs = current1 ;
} //)) children level 1
};
Code = 
NodeFactory.NewNode(
"stmt_assigncompound1"
, new JavaNode [] {
LhsCode
,
Exprs
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1204;
// $$$$$$$$ 
} // CONDITION1205 // @@@ end of alternative
CONDITION1206: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Fields
JavaNode Fields= null;
// DECLARE for alternative Tps
JavaNode Tps= null;
{
JavaNode current0 = RhsType;
if (! current0 .Name
.equals( "tp_compound") )
   if (javadummy) break  CONDITION1206;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tps --- JJ.M4
Tps = current1 ;
} //)) children level 1
};
{
JavaNode current0 = RhsCode;
if (! current0 .Name
.equals( "expr_compound") )
   if (javadummy) break  CONDITION1206;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Fields --- JJ.M4
Fields = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "record literals with field names" )
,
RHS
);
Code = 
NodeFactory.NewNode(
"stmt_assigncompound2"
, new JavaNode [] {
LhsCode
,
Fields
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1204;
// $$$$$$$$ 
} // CONDITION1206 // @@@ end of alternative
CONDITION1207: // @@@ begin of alternative
while(javadummy) {
{
if (! JavaLib.rtsEqualNode(
RhsType
,
LhsType
)
)
   if (javadummy) break  CONDITION1207;
};
Code = 
NodeFactory.NewNode(
"stmt_assign"
, new JavaNode [] {
LhsCode
,
RhsCode
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1204;
// $$$$$$$$ 
} // CONDITION1207 // @@@ end of alternative
CONDITION1208: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(LHS);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "types are not compatible" )
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_assign"
, new JavaNode [] {
LhsCode
,
RhsCode
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1204;
// $$$$$$$$ 
} // CONDITION1208 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1204 N=1201
if (javadummy) break CONDITION1201;
} // CONDLIST1204 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1200;
// $$$$$$$$ 
} // CONDITION1201 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1200 N=1199
if (javadummy) break CONDITION1199;
} // CONDLIST1200 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1199
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_Assignment");
}



public
static
void
Handle_Lhs(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LHS
JavaNode LHS = null;
// DECLARE for proc Meaning
JavaNode Meaning = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Access
JavaNode Access = null;
// DECLARE for proc Id
JavaNode Id = null;
// DECLARE for proc LhsCode
JavaNode LhsCode = null;
// DECLARE for proc LhsType
JavaNode LhsType = null;
// DECLARE for proc LhsCode2
JavaNode LhsCode2 = null;
// DECLARE for proc LhsType2
JavaNode LhsType2 = null;
CONDITION1209:
while(javadummy) {
// ***** begin condlist 1210 (in cond 1209) *****
CONDLIST1210: // @@@ begin of alternative group
while(javadummy) {
CONDITION1211: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to LHS --- JJ.M4
LHS = current0 ;
};
// ***** begin condlist 1212 (in cond 1211) *****
CONDLIST1212: // @@@ begin of alternative group
while(javadummy) {
CONDITION1213: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = LHS;
if (! current0 .Name
.equals( "VariableRef_A1") )
   if (javadummy) break  CONDITION1213;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Access --- JJ.M4
Access = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
LocallyDefined
(
Id
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Meaning --- JJ.M4
Meaning = current0 ;
}
// ***** begin condlist 1214 (in cond 1213) *****
CONDLIST1214: // @@@ begin of alternative group
while(javadummy) {
CONDITION1215: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "componentmember_port") )
   if (javadummy) break  CONDITION1215;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "Assigment to port not allowed" )
,
Pos
);
LhsType = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
LhsCode = 
NodeFactory.NewNode(
"compidexpr"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1214;
// $$$$$$$$ 
} // CONDITION1215 // @@@ end of alternative
CONDITION1216: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "componentmember_var") )
   if (javadummy) break  CONDITION1216;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tp --- JJ.M4
Tp = current1 ;
} //)) children level 1
};
LhsType = 
Tp
;
LhsCode = 
NodeFactory.NewNode(
"compidexpr"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1214;
// $$$$$$$$ 
} // CONDITION1216 // @@@ end of alternative
CONDITION1217: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "localtimer") )
   if (javadummy) break  CONDITION1217;
};
LhsType = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
LhsCode = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1214;
// $$$$$$$$ 
} // CONDITION1217 // @@@ end of alternative
CONDITION1218: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "localvar") )
   if (javadummy) break  CONDITION1218;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tp --- JJ.M4
Tp = current1 ;
} //)) children level 1
};
LhsType = 
Tp
;
LhsCode = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1214;
// $$$$$$$$ 
} // CONDITION1218 // @@@ end of alternative
CONDITION1219: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedTestcase
JavaNode RefNormalizedTestcase= null;
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "testcasedefinition") )
   if (javadummy) break  CONDITION1219;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedTestcase --- JJ.M4
RefNormalizedTestcase = current1 ;
} //)) children level 1
};
YyProcs.
ErrorI
(
new JavaStringValue( "Cannot assign to testcase '" )
,
Id
,
new JavaStringValue( "'" )
,
Pos
);
LhsType = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
LhsCode = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
new JavaStringValue( "/error/" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1214;
// $$$$$$$$ 
} // CONDITION1219 // @@@ end of alternative
CONDITION1220: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedFunction
JavaNode RefNormalizedFunction= null;
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "functiondefinition") )
   if (javadummy) break  CONDITION1220;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedFunction --- JJ.M4
RefNormalizedFunction = current1 ;
} //)) children level 1
};
YyProcs.
ErrorI
(
new JavaStringValue( "Cannot assign to function '" )
,
Id
,
new JavaStringValue( "'" )
,
Pos
);
LhsType = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
LhsCode = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
new JavaStringValue( "/error/" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1214;
// $$$$$$$$ 
} // CONDITION1220 // @@@ end of alternative
CONDITION1221: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Zusatz
JavaNode Zusatz= null;
// DECLARE for alternative X4
JavaNode X4= null;
// DECLARE for alternative N
JavaNode N= null;
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION1221;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N --- JJ.M4
N = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X4 --- JJ.M4
X4 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Zusatz --- JJ.M4
Zusatz = current1 ;
} //)) children level 1
};
YyProcs.
ErrorI
(
new JavaStringValue( "Cannot assign to record type '" )
,
Id
,
new JavaStringValue( "'" )
,
Pos
);
LhsType = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
LhsCode = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
new JavaStringValue( "/error/" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1214;
// $$$$$$$$ 
} // CONDITION1221 // @@@ end of alternative
CONDITION1222: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative N
JavaNode N= null;
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "porttype") )
   if (javadummy) break  CONDITION1222;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N --- JJ.M4
N = current1 ;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
} //)) children level 1
};
YyProcs.
ErrorI
(
new JavaStringValue( "Cannot assign to port type '" )
,
Id
,
new JavaStringValue( "'" )
,
Pos
);
LhsType = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
LhsCode = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
new JavaStringValue( "/error/" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1214;
// $$$$$$$$ 
} // CONDITION1222 // @@@ end of alternative
CONDITION1223: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION1223;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
ErrorI
(
new JavaStringValue( "Cannot assign to component type '" )
,
Id
,
new JavaStringValue( "'" )
,
Pos
);
LhsType = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
LhsCode = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
new JavaStringValue( "/error/" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1214;
// $$$$$$$$ 
} // CONDITION1223 // @@@ end of alternative
CONDITION1224: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "nodefinition") )
   if (javadummy) break  CONDITION1224;
};
YyProcs.
ErrorI
(
new JavaStringValue( "Cannot assign to '" )
,
Id
,
new JavaStringValue( "'" )
,
Pos
);
LhsType = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
LhsCode = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
new JavaStringValue( "/error/" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1214;
// $$$$$$$$ 
} // CONDITION1224 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1214 N=1213
if (javadummy) break CONDITION1213;
} // CONDLIST1214 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1225 (in cond 1213) *****
CONDLIST1225: // @@@ begin of alternative group
while(javadummy) {
CONDITION1226: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Access;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-VariableRef_A1_M2")
if (javadummy) break CONDITION1226;
{ //(( children level 1
} //)) children level 1
};
LhsType2 = 
LhsType
;
LhsCode2 = 
LhsCode
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1225;
// $$$$$$$$ 
} // CONDITION1226 // @@@ end of alternative
CONDITION1227: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = Access;
if (current0.Name
!= "OneOf-VariableRef_A1_M2")
if (javadummy) break CONDITION1227;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 1228 (in cond 1227) *****
CONDLIST1228: // @@@ begin of alternative group
while(javadummy) {
CONDITION1229: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "VariableRef_A1_M2_A1") )
   if (javadummy) break  CONDITION1229;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
YyProcs.
HandleExtendedFieldReference
(
X1
,
LhsType
,
LhsCode
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to LhsType2 --- JJ.M4
LhsType2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to LhsCode2 --- JJ.M4
LhsCode2 = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1228;
// $$$$$$$$ 
} // CONDITION1229 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1228 N=1227
if (javadummy) break CONDITION1227;
} // CONDLIST1228 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1225;
// $$$$$$$$ 
} // CONDITION1227 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1225 N=1213
if (javadummy) break CONDITION1213;
} // CONDLIST1225 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1212;
// $$$$$$$$ 
} // CONDITION1213 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1212 N=1211
if (javadummy) break CONDITION1211;
} // CONDLIST1212 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
LhsType2
;
yy_outparam_1 = 
LhsCode2
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1210;
// $$$$$$$$ 
} // CONDITION1211 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1210 N=1209
if (javadummy) break CONDITION1209;
} // CONDLIST1210 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1209
// failed:
JavaLib.rtsAllAlternativesFailed("Handle_Lhs");
}



public
static
void
Handle_Rhs(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RHS
JavaNode RHS = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION1230:
while(javadummy) {
// ***** begin condlist 1231 (in cond 1230) *****
CONDLIST1231: // @@@ begin of alternative group
while(javadummy) {
CONDITION1232: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to RHS --- JJ.M4
RHS = current0 ;
};
// ***** begin condlist 1233 (in cond 1232) *****
CONDLIST1233: // @@@ begin of alternative group
while(javadummy) {
CONDITION1234: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = RHS;
if (! current0 .Name
.equals( "Assignment_A1_M3_A1") )
   if (javadummy) break  CONDITION1234;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_Expression
(
X
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1233;
// $$$$$$$$ 
} // CONDITION1234 // @@@ end of alternative
CONDITION1235: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative TEMPL
JavaNode TEMPL= null;
{
JavaNode current0 = RHS;
if (! current0 .Name
.equals( "Assignment_A1_M3_A2") )
   if (javadummy) break  CONDITION1235;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to TEMPL --- JJ.M4
TEMPL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_TemplateBody0
(
TEMPL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1233;
// $$$$$$$$ 
} // CONDITION1235 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1233 N=1232
if (javadummy) break CONDITION1232;
} // CONDLIST1233 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1231;
// $$$$$$$$ 
} // CONDITION1232 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1231 N=1230
if (javadummy) break CONDITION1230;
} // CONDLIST1231 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1230
// failed:
JavaLib.rtsAllAlternativesFailed("Handle_Rhs");
}



public
static
void
CheckCompoundType(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc LhsType
JavaNode LhsType = null;
// DECLARE for proc RhsType
JavaNode RhsType = null;
CONDITION1236:
while(javadummy) {
// ***** begin condlist 1237 (in cond 1236) *****
CONDLIST1237: // @@@ begin of alternative group
while(javadummy) {
CONDITION1238: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Fields
JavaNode Fields= null;
// DECLARE for alternative Val
JavaNode Val= null;
// DECLARE for alternative Ref
JavaNode Ref= null;
// DECLARE for alternative R
JavaNode R= null;
// DECLARE for alternative Tps
JavaNode Tps= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to RhsType --- JJ.M4
RhsType = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to LhsType --- JJ.M4
LhsType = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
{
JavaNode current0 = RhsType;
if (! current0 .Name
.equals( "tp_compound") )
   if (javadummy) break  CONDITION1238;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tps --- JJ.M4
Tps = current1 ;
} //)) children level 1
};
{
JavaNode current0 = LhsType;
if (! current0 .Name
.equals( "tp_referenced") )
   if (javadummy) break  CONDITION1238;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to R --- JJ.M4
R = current1 ;
} //)) children level 1
};
{
JavaNode current0 = R;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION1238;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
//assign current1 to Ref --- JJ.M4
Ref = current1 ;
} //)) children level 1
};
Val = JavaLib.rtsBoundToKey(Ref);
{
JavaNode current0 = Val;
if (! current0 .Name
.equals( "normalizedfields") )
   if (javadummy) break  CONDITION1238;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Fields --- JJ.M4
Fields = current1 ;
} //)) children level 1
};
YyProcs.
CheckCompoundFields
(
Fields
,
Tps
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1237;
// $$$$$$$$ 
} // CONDITION1238 // @@@ end of alternative
CONDITION1239: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to RhsType --- JJ.M4
RhsType = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to LhsType --- JJ.M4
LhsType = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "type of literal is not compatble" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1237;
// $$$$$$$$ 
} // CONDITION1239 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1237 N=1236
if (javadummy) break CONDITION1236;
} // CONDLIST1237 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1236
// failed:
JavaLib.rtsAllAlternativesFailed("CheckCompoundType");
}



public
static
void
CheckCompoundFields(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
CONDITION1240:
while(javadummy) {
// ***** begin condlist 1241 (in cond 1240) *****
CONDLIST1241: // @@@ begin of alternative group
while(javadummy) {
CONDITION1242: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative TTp
JavaNode TTp= null;
// DECLARE for alternative HTp
JavaNode HTp= null;
// DECLARE for alternative TFd
JavaNode TFd= null;
// DECLARE for alternative HFd
JavaNode HFd= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-FIELD")
if (javadummy) break CONDITION1242;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HFd --- JJ.M4
HFd = current1 ;
current1 = current0.Child1[1];
//assign current1 to TFd --- JJ.M4
TFd = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_1;
if (current0.Name
!= "SeqOf-Tp")
if (javadummy) break CONDITION1242;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HTp --- JJ.M4
HTp = current1 ;
current1 = current0.Child1[1];
//assign current1 to TTp --- JJ.M4
TTp = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
CheckCompoundField
(
HFd
,
HTp
,
Pos
);
YyProcs.
CheckCompoundFields
(
TFd
,
TTp
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1241;
// $$$$$$$$ 
} // CONDITION1242 // @@@ end of alternative
CONDITION1243: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-FIELD")
if (javadummy) break CONDITION1243;
};
{
JavaNode current0 = yy_inparam_1;
if (current0.Name
!= "NilOf-Tp")
if (javadummy) break CONDITION1243;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1241;
// $$$$$$$$ 
} // CONDITION1243 // @@@ end of alternative
CONDITION1244: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Fields
JavaNode Fields= null;
// DECLARE for alternative Tps
JavaNode Tps= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Tps --- JJ.M4
Tps = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Fields --- JJ.M4
Fields = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "types are not compatible (number of fields)" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1241;
// $$$$$$$$ 
} // CONDITION1244 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1241 N=1240
if (javadummy) break CONDITION1240;
} // CONDLIST1241 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1240
// failed:
JavaLib.rtsAllAlternativesFailed("CheckCompoundFields");
}



public
static
void
CheckCompoundField(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc FieldTp
JavaNode FieldTp = null;
// DECLARE for proc FieldName
JavaNode FieldName = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc FIELD
JavaNode FIELD = null;
CONDITION1245:
while(javadummy) {
// ***** begin condlist 1246 (in cond 1245) *****
CONDLIST1246: // @@@ begin of alternative group
while(javadummy) {
CONDITION1247: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to FIELD --- JJ.M4
FIELD = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
{
JavaNode current0 = FIELD;
if (! current0 .Name
.equals( "field") )
   if (javadummy) break  CONDITION1247;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FieldName --- JJ.M4
FieldName = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to FieldTp --- JJ.M4
FieldTp = current1 ;
} //)) children level 1
};
// ***** begin condlist 1248 (in cond 1247) *****
CONDLIST1248: // @@@ begin of alternative group
while(javadummy) {
CONDITION1249: // @@@ begin of alternative
while(javadummy) {
{
if (! JavaLib.rtsEqualNode(
FieldTp
,
Tp
)
)
   if (javadummy) break  CONDITION1249;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1248;
// $$$$$$$$ 
} // CONDITION1249 // @@@ end of alternative
CONDITION1250: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "types are not compatible (field '" )
,
FieldName
,
new JavaStringValue( "')" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1248;
// $$$$$$$$ 
} // CONDITION1250 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1248 N=1247
if (javadummy) break CONDITION1247;
} // CONDLIST1248 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1246;
// $$$$$$$$ 
} // CONDITION1247 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1246 N=1245
if (javadummy) break CONDITION1245;
} // CONDLIST1246 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1245
// failed:
JavaLib.rtsAllAlternativesFailed("CheckCompoundField");
}



public
static
void
Trafo_FunctionStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc FunctionSt
JavaNode FunctionSt = null;
// DECLARE for proc Res
JavaNode Res = null;
CONDITION1251:
while(javadummy) {
// ***** begin condlist 1252 (in cond 1251) *****
CONDLIST1252: // @@@ begin of alternative group
while(javadummy) {
CONDITION1253: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to FunctionSt --- JJ.M4
FunctionSt = current0 ;
};
// ***** begin condlist 1254 (in cond 1253) *****
CONDLIST1254: // @@@ begin of alternative group
while(javadummy) {
CONDITION1255: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S1
JavaNode S1= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A1") )
   if (javadummy) break  CONDITION1255;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S1 --- JJ.M4
S1 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ConfigurationStatements
(
S1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1254;
// $$$$$$$$ 
} // CONDITION1255 // @@@ end of alternative
CONDITION1256: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S2
JavaNode S2= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A2") )
   if (javadummy) break  CONDITION1256;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S2 --- JJ.M4
S2 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_TimerStatements
(
S2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1254;
// $$$$$$$$ 
} // CONDITION1256 // @@@ end of alternative
CONDITION1257: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S3
JavaNode S3= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A3") )
   if (javadummy) break  CONDITION1257;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S3 --- JJ.M4
S3 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_CommunicationStatements
(
S3
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1254;
// $$$$$$$$ 
} // CONDITION1257 // @@@ end of alternative
CONDITION1258: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S4
JavaNode S4= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A4") )
   if (javadummy) break  CONDITION1258;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S4 --- JJ.M4
S4 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BasicStatements
(
S4
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1254;
// $$$$$$$$ 
} // CONDITION1258 // @@@ end of alternative
CONDITION1259: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S5
JavaNode S5= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A5") )
   if (javadummy) break  CONDITION1259;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S5 --- JJ.M4
S5 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BehaviourStatements
(
S5
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1254;
// $$$$$$$$ 
} // CONDITION1259 // @@@ end of alternative
CONDITION1260: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S6
JavaNode S6= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A6") )
   if (javadummy) break  CONDITION1260;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S6 --- JJ.M4
S6 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SetLocalVerdict
(
S6
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1254;
// $$$$$$$$ 
} // CONDITION1260 // @@@ end of alternative
CONDITION1261: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S7
JavaNode S7= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A7") )
   if (javadummy) break  CONDITION1261;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S7 --- JJ.M4
S7 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SUTStatements
(
S7
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1254;
// $$$$$$$$ 
} // CONDITION1261 // @@@ end of alternative
CONDITION1262: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S8
JavaNode S8= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A8") )
   if (javadummy) break  CONDITION1262;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S8 --- JJ.M4
S8 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "TestcaseOperation" )
,
FunctionSt
);
Res = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1254;
// $$$$$$$$ 
} // CONDITION1262 // @@@ end of alternative
CONDITION1263: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S9
JavaNode S9= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A9") )
   if (javadummy) break  CONDITION1263;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S9 --- JJ.M4
S9 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "RealtimeStatement" )
,
FunctionSt
);
Res = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1254;
// $$$$$$$$ 
} // CONDITION1263 // @@@ end of alternative
CONDITION1264: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S10
JavaNode S10= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A10") )
   if (javadummy) break  CONDITION1264;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S10 --- JJ.M4
S10 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "AssertStatement" )
,
FunctionSt
);
Res = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1254;
// $$$$$$$$ 
} // CONDITION1264 // @@@ end of alternative
CONDITION1265: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S11
JavaNode S11= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A11") )
   if (javadummy) break  CONDITION1265;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S11 --- JJ.M4
S11 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "WaitStatement" )
,
FunctionSt
);
Res = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1254;
// $$$$$$$$ 
} // CONDITION1265 // @@@ end of alternative
CONDITION1266: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S12
JavaNode S12= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A12") )
   if (javadummy) break  CONDITION1266;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S12 --- JJ.M4
S12 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "ModeSpecification" )
,
FunctionSt
);
Res = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1254;
// $$$$$$$$ 
} // CONDITION1266 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1254 N=1253
if (javadummy) break CONDITION1253;
} // CONDLIST1254 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Res
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1252;
// $$$$$$$$ 
} // CONDITION1253 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1252 N=1251
if (javadummy) break CONDITION1251;
} // CONDLIST1252 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1251
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_FunctionStatement");
}



public
static
void
Trafo_ControlStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc ZWEIDREI
JavaNode ZWEIDREI = null;
// DECLARE for proc Res
JavaNode Res = null;
CONDITION1267:
while(javadummy) {
// ***** begin condlist 1268 (in cond 1267) *****
CONDLIST1268: // @@@ begin of alternative group
while(javadummy) {
CONDITION1269: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to ZWEIDREI --- JJ.M4
ZWEIDREI = current0 ;
};
// ***** begin condlist 1270 (in cond 1269) *****
CONDLIST1270: // @@@ begin of alternative group
while(javadummy) {
CONDITION1271: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S1
JavaNode S1= null;
{
JavaNode current0 = ZWEIDREI;
if (! current0 .Name
.equals( "ControlStatement_A1") )
   if (javadummy) break  CONDITION1271;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S1 --- JJ.M4
S1 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_TimerStatements
(
S1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1270;
// $$$$$$$$ 
} // CONDITION1271 // @@@ end of alternative
CONDITION1272: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S2
JavaNode S2= null;
{
JavaNode current0 = ZWEIDREI;
if (! current0 .Name
.equals( "ControlStatement_A2") )
   if (javadummy) break  CONDITION1272;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S2 --- JJ.M4
S2 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BasicStatements
(
S2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1270;
// $$$$$$$$ 
} // CONDITION1272 // @@@ end of alternative
CONDITION1273: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S3
JavaNode S3= null;
{
JavaNode current0 = ZWEIDREI;
if (! current0 .Name
.equals( "ControlStatement_A3") )
   if (javadummy) break  CONDITION1273;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S3 --- JJ.M4
S3 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BehaviourStatements
(
S3
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1270;
// $$$$$$$$ 
} // CONDITION1273 // @@@ end of alternative
CONDITION1274: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S4
JavaNode S4= null;
{
JavaNode current0 = ZWEIDREI;
if (! current0 .Name
.equals( "ControlStatement_A4") )
   if (javadummy) break  CONDITION1274;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S4 --- JJ.M4
S4 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SUTStatements
(
S4
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1270;
// $$$$$$$$ 
} // CONDITION1274 // @@@ end of alternative
CONDITION1275: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ZWEIDREI;
if (! current0 .Name
.equals( "ControlStatement_A5") )
   if (javadummy) break  CONDITION1275;
};
YyProcs.
NotCovered
(
new JavaStringValue( "StopStatement" )
,
ZWEIDREI
);
Res = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1270;
// $$$$$$$$ 
} // CONDITION1275 // @@@ end of alternative
CONDITION1276: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S6
JavaNode S6= null;
{
JavaNode current0 = ZWEIDREI;
if (! current0 .Name
.equals( "ControlStatement_A6") )
   if (javadummy) break  CONDITION1276;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S6 --- JJ.M4
S6 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "KillStatement" )
,
ZWEIDREI
);
Res = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1270;
// $$$$$$$$ 
} // CONDITION1276 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1270 N=1269
if (javadummy) break CONDITION1269;
} // CONDLIST1270 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Res
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1268;
// $$$$$$$$ 
} // CONDITION1269 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1268 N=1267
if (javadummy) break CONDITION1267;
} // CONDLIST1268 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1267
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ControlStatement");
}



public
static
void
Trafo_ConfigurationStatements(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc S
JavaNode S = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1277:
while(javadummy) {
// ***** begin condlist 1278 (in cond 1277) *****
CONDLIST1278: // @@@ begin of alternative group
while(javadummy) {
CONDITION1279: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to S --- JJ.M4
S = current0 ;
};
// ***** begin condlist 1280 (in cond 1279) *****
CONDLIST1280: // @@@ begin of alternative group
while(javadummy) {
CONDITION1281: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Map_Statement_A1
JavaNode Map_Statement_A1= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "ConfigurationStatements_A2") )
   if (javadummy) break  CONDITION1281;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Map_Statement_A1 --- JJ.M4
Map_Statement_A1 = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_MapStatement_A1
(
Map_Statement_A1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1280;
// $$$$$$$$ 
} // CONDITION1281 // @@@ end of alternative
CONDITION1282: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ConnectStatement_A1
JavaNode ConnectStatement_A1= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "ConfigurationStatements_A1") )
   if (javadummy) break  CONDITION1282;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ConnectStatement_A1 --- JJ.M4
ConnectStatement_A1 = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_ConnectStatement_A1
(
ConnectStatement_A1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1280;
// $$$$$$$$ 
} // CONDITION1282 // @@@ end of alternative
CONDITION1283: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative StartTCStatement
JavaNode StartTCStatement= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "ConfigurationStatements_A7") )
   if (javadummy) break  CONDITION1283;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to StartTCStatement --- JJ.M4
StartTCStatement = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_StartTCStatement
(
StartTCStatement
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1280;
// $$$$$$$$ 
} // CONDITION1283 // @@@ end of alternative
CONDITION1284: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative DoneStatement
JavaNode DoneStatement= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "ConfigurationStatements_A5") )
   if (javadummy) break  CONDITION1284;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to DoneStatement --- JJ.M4
DoneStatement = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_DoneStatement
(
DoneStatement
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1280;
// $$$$$$$$ 
} // CONDITION1284 // @@@ end of alternative
CONDITION1285: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative UnmapStatement
JavaNode UnmapStatement= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "ConfigurationStatements_A4") )
   if (javadummy) break  CONDITION1285;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to UnmapStatement --- JJ.M4
UnmapStatement = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_UnmapStatement
(
UnmapStatement
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1280;
// $$$$$$$$ 
} // CONDITION1285 // @@@ end of alternative
CONDITION1286: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X3
JavaNode X3= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "ConfigurationStatements_A3") )
   if (javadummy) break  CONDITION1286;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "disconnect statement" )
,
X3
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1280;
// $$$$$$$$ 
} // CONDITION1286 // @@@ end of alternative
CONDITION1287: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X6
JavaNode X6= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "ConfigurationStatements_A6") )
   if (javadummy) break  CONDITION1287;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X6 --- JJ.M4
X6 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "killed statement" )
,
X6
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1280;
// $$$$$$$$ 
} // CONDITION1287 // @@@ end of alternative
CONDITION1288: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X8
JavaNode X8= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "ConfigurationStatements_A8") )
   if (javadummy) break  CONDITION1288;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X8 --- JJ.M4
X8 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "stop component" )
,
X8
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1280;
// $$$$$$$$ 
} // CONDITION1288 // @@@ end of alternative
CONDITION1289: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X9
JavaNode X9= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "ConfigurationStatements_A9") )
   if (javadummy) break  CONDITION1289;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X9 --- JJ.M4
X9 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "kill component" )
,
X9
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1280;
// $$$$$$$$ 
} // CONDITION1289 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1280 N=1279
if (javadummy) break CONDITION1279;
} // CONDLIST1280 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1278;
// $$$$$$$$ 
} // CONDITION1279 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1278 N=1277
if (javadummy) break CONDITION1277;
} // CONDLIST1278 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1277
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ConfigurationStatements");
}



public
static
void
Trafo_TimerStatements(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc S
JavaNode S = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1290:
while(javadummy) {
// ***** begin condlist 1291 (in cond 1290) *****
CONDLIST1291: // @@@ begin of alternative group
while(javadummy) {
CONDITION1292: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to S --- JJ.M4
S = current0 ;
};
// ***** begin condlist 1293 (in cond 1292) *****
CONDLIST1293: // @@@ begin of alternative group
while(javadummy) {
CONDITION1294: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative StartTimerStatement
JavaNode StartTimerStatement= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "TimerStatements_A1") )
   if (javadummy) break  CONDITION1294;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to StartTimerStatement --- JJ.M4
StartTimerStatement = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_StartTimerStatement
(
StartTimerStatement
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1293;
// $$$$$$$$ 
} // CONDITION1294 // @@@ end of alternative
CONDITION1295: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "TimerStatements_A3") )
   if (javadummy) break  CONDITION1295;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "standalone timeout (use alt)" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1293;
// $$$$$$$$ 
} // CONDITION1295 // @@@ end of alternative
CONDITION1296: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative StopTimerStatement
JavaNode StopTimerStatement= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "TimerStatements_A2") )
   if (javadummy) break  CONDITION1296;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to StopTimerStatement --- JJ.M4
StopTimerStatement = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_StopTimerStatement
(
StopTimerStatement
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1293;
// $$$$$$$$ 
} // CONDITION1296 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1293 N=1292
if (javadummy) break CONDITION1292;
} // CONDLIST1293 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1291;
// $$$$$$$$ 
} // CONDITION1292 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1291 N=1290
if (javadummy) break CONDITION1290;
} // CONDLIST1291 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1290
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_TimerStatements");
}



public
static
void
Trafo_CommunicationStatements(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc S
JavaNode S = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1297:
while(javadummy) {
// ***** begin condlist 1298 (in cond 1297) *****
CONDLIST1298: // @@@ begin of alternative group
while(javadummy) {
CONDITION1299: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to S --- JJ.M4
S = current0 ;
};
// ***** begin condlist 1300 (in cond 1299) *****
CONDLIST1300: // @@@ begin of alternative group
while(javadummy) {
CONDITION1301: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative SendStmt
JavaNode SendStmt= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A1") )
   if (javadummy) break  CONDITION1301;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to SendStmt --- JJ.M4
SendStmt = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SendStatement
(
SendStmt
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1300;
// $$$$$$$$ 
} // CONDITION1301 // @@@ end of alternative
CONDITION1302: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A2") )
   if (javadummy) break  CONDITION1302;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 2" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1300;
// $$$$$$$$ 
} // CONDITION1302 // @@@ end of alternative
CONDITION1303: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A3") )
   if (javadummy) break  CONDITION1303;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 3" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1300;
// $$$$$$$$ 
} // CONDITION1303 // @@@ end of alternative
CONDITION1304: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A4") )
   if (javadummy) break  CONDITION1304;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 4" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1300;
// $$$$$$$$ 
} // CONDITION1304 // @@@ end of alternative
CONDITION1305: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RECEIVE
JavaNode RECEIVE= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A5") )
   if (javadummy) break  CONDITION1305;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RECEIVE --- JJ.M4
RECEIVE = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_ReceiveStatement
(
RECEIVE
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1300;
// $$$$$$$$ 
} // CONDITION1305 // @@@ end of alternative
CONDITION1306: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A6") )
   if (javadummy) break  CONDITION1306;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 6" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1300;
// $$$$$$$$ 
} // CONDITION1306 // @@@ end of alternative
CONDITION1307: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A7") )
   if (javadummy) break  CONDITION1307;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 7" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1300;
// $$$$$$$$ 
} // CONDITION1307 // @@@ end of alternative
CONDITION1308: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A8") )
   if (javadummy) break  CONDITION1308;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 8" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1300;
// $$$$$$$$ 
} // CONDITION1308 // @@@ end of alternative
CONDITION1309: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A9") )
   if (javadummy) break  CONDITION1309;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 9" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1300;
// $$$$$$$$ 
} // CONDITION1309 // @@@ end of alternative
CONDITION1310: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A10") )
   if (javadummy) break  CONDITION1310;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 10" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1300;
// $$$$$$$$ 
} // CONDITION1310 // @@@ end of alternative
CONDITION1311: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A11") )
   if (javadummy) break  CONDITION1311;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 11" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1300;
// $$$$$$$$ 
} // CONDITION1311 // @@@ end of alternative
CONDITION1312: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A12") )
   if (javadummy) break  CONDITION1312;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
JavaLib.Log
(
S
);
YyProcs.
NotCovered
(
new JavaStringValue( "start statement" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1300;
// $$$$$$$$ 
} // CONDITION1312 // @@@ end of alternative
CONDITION1313: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A13") )
   if (javadummy) break  CONDITION1313;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 13" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1300;
// $$$$$$$$ 
} // CONDITION1313 // @@@ end of alternative
CONDITION1314: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A14") )
   if (javadummy) break  CONDITION1314;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 14" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1300;
// $$$$$$$$ 
} // CONDITION1314 // @@@ end of alternative
CONDITION1315: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A15") )
   if (javadummy) break  CONDITION1315;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 15" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1300;
// $$$$$$$$ 
} // CONDITION1315 // @@@ end of alternative
CONDITION1316: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A16") )
   if (javadummy) break  CONDITION1316;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 16" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1300;
// $$$$$$$$ 
} // CONDITION1316 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1300 N=1299
if (javadummy) break CONDITION1299;
} // CONDLIST1300 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1298;
// $$$$$$$$ 
} // CONDITION1299 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1298 N=1297
if (javadummy) break CONDITION1297;
} // CONDLIST1298 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1297
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_CommunicationStatements");
}



public
static
void
Trafo_BasicStatements(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Res
JavaNode Res = null;
CONDITION1317:
while(javadummy) {
// ***** begin condlist 1318 (in cond 1317) *****
CONDLIST1318: // @@@ begin of alternative group
while(javadummy) {
CONDITION1319: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 1320 (in cond 1319) *****
CONDLIST1320: // @@@ begin of alternative group
while(javadummy) {
CONDITION1321: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ASSIGN
JavaNode ASSIGN= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "BasicStatements_A1") )
   if (javadummy) break  CONDITION1321;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ASSIGN --- JJ.M4
ASSIGN = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_Assignment
(
ASSIGN
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1320;
// $$$$$$$$ 
} // CONDITION1321 // @@@ end of alternative
CONDITION1322: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative LOG
JavaNode LOG= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "BasicStatements_A2") )
   if (javadummy) break  CONDITION1322;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to LOG --- JJ.M4
LOG = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_LogStatement
(
LOG
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1320;
// $$$$$$$$ 
} // CONDITION1322 // @@@ end of alternative
CONDITION1323: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Loop
JavaNode Loop= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "BasicStatements_A3") )
   if (javadummy) break  CONDITION1323;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Loop --- JJ.M4
Loop = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_Loop
(
Loop
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1320;
// $$$$$$$$ 
} // CONDITION1323 // @@@ end of alternative
CONDITION1324: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Conditional
JavaNode Conditional= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "BasicStatements_A4") )
   if (javadummy) break  CONDITION1324;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Conditional --- JJ.M4
Conditional = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_Conditional
(
Conditional
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1320;
// $$$$$$$$ 
} // CONDITION1324 // @@@ end of alternative
CONDITION1325: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "BasicStatements_A5") )
   if (javadummy) break  CONDITION1325;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "BasicStatement 5" )
,
X
);
Res = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1320;
// $$$$$$$$ 
} // CONDITION1325 // @@@ end of alternative
CONDITION1326: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "BasicStatements_A6") )
   if (javadummy) break  CONDITION1326;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "BasicStatement 6" )
,
X
);
Res = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1320;
// $$$$$$$$ 
} // CONDITION1326 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1320 N=1319
if (javadummy) break CONDITION1319;
} // CONDLIST1320 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Res
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1318;
// $$$$$$$$ 
} // CONDITION1319 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1318 N=1317
if (javadummy) break CONDITION1317;
} // CONDLIST1318 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1317
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_BasicStatements");
}



public
static
void
Trafo_BehaviourStatements(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1327:
while(javadummy) {
// ***** begin condlist 1328 (in cond 1327) *****
CONDLIST1328: // @@@ begin of alternative group
while(javadummy) {
CONDITION1329: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X1 --- JJ.M4
X1 = current0 ;
};
// ***** begin condlist 1330 (in cond 1329) *****
CONDLIST1330: // @@@ begin of alternative group
while(javadummy) {
CONDITION1331: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ZZ11
JavaNode ZZ11= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A1") )
   if (javadummy) break  CONDITION1331;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ZZ11 --- JJ.M4
ZZ11 = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_TestcaseInstance
(
ZZ11
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1330;
// $$$$$$$$ 
} // CONDITION1331 // @@@ end of alternative
CONDITION1332: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X11
JavaNode X11= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A2") )
   if (javadummy) break  CONDITION1332;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X11 --- JJ.M4
X11 = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_FunctionInstance
(
X11
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1330;
// $$$$$$$$ 
} // CONDITION1332 // @@@ end of alternative
CONDITION1333: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ReturnStatement
JavaNode ReturnStatement= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A3") )
   if (javadummy) break  CONDITION1333;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ReturnStatement --- JJ.M4
ReturnStatement = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "return" )
,
X1
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1330;
// $$$$$$$$ 
} // CONDITION1333 // @@@ end of alternative
CONDITION1334: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative AltConstruct
JavaNode AltConstruct= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A4") )
   if (javadummy) break  CONDITION1334;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to AltConstruct --- JJ.M4
AltConstruct = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_AltConstruct
(
AltConstruct
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1330;
// $$$$$$$$ 
} // CONDITION1334 // @@@ end of alternative
CONDITION1335: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative InterleaveStatement
JavaNode InterleaveStatement= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A5") )
   if (javadummy) break  CONDITION1335;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to InterleaveStatement --- JJ.M4
InterleaveStatement = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "interleave" )
,
X1
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1330;
// $$$$$$$$ 
} // CONDITION1335 // @@@ end of alternative
CONDITION1336: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative LabelStatement
JavaNode LabelStatement= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A6") )
   if (javadummy) break  CONDITION1336;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to LabelStatement --- JJ.M4
LabelStatement = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "label" )
,
X1
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1330;
// $$$$$$$$ 
} // CONDITION1336 // @@@ end of alternative
CONDITION1337: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative GotoStatement
JavaNode GotoStatement= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A7") )
   if (javadummy) break  CONDITION1337;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to GotoStatement --- JJ.M4
GotoStatement = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "goto" )
,
X1
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1330;
// $$$$$$$$ 
} // CONDITION1337 // @@@ end of alternative
CONDITION1338: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A8") )
   if (javadummy) break  CONDITION1338;
};
Code = 
NodeFactory.NewNode(
"stmt_repeat"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1330;
// $$$$$$$$ 
} // CONDITION1338 // @@@ end of alternative
CONDITION1339: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative DeactivateStatement
JavaNode DeactivateStatement= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A9") )
   if (javadummy) break  CONDITION1339;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to DeactivateStatement --- JJ.M4
DeactivateStatement = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "deactivate" )
,
X1
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1330;
// $$$$$$$$ 
} // CONDITION1339 // @@@ end of alternative
CONDITION1340: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative AltstepInstance
JavaNode AltstepInstance= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A10") )
   if (javadummy) break  CONDITION1340;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to AltstepInstance --- JJ.M4
AltstepInstance = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "altstep" )
,
X1
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1330;
// $$$$$$$$ 
} // CONDITION1340 // @@@ end of alternative
CONDITION1341: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ActivateOp
JavaNode ActivateOp= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A11") )
   if (javadummy) break  CONDITION1341;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ActivateOp --- JJ.M4
ActivateOp = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "activate" )
,
X1
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1330;
// $$$$$$$$ 
} // CONDITION1341 // @@@ end of alternative
CONDITION1342: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A12") )
   if (javadummy) break  CONDITION1342;
};
YyProcs.
NotCovered
(
new JavaStringValue( "break" )
,
X1
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1330;
// $$$$$$$$ 
} // CONDITION1342 // @@@ end of alternative
CONDITION1343: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A13") )
   if (javadummy) break  CONDITION1343;
};
YyProcs.
NotCovered
(
new JavaStringValue( "continue" )
,
X1
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1330;
// $$$$$$$$ 
} // CONDITION1343 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1330 N=1329
if (javadummy) break CONDITION1329;
} // CONDLIST1330 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1328;
// $$$$$$$$ 
} // CONDITION1329 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1328 N=1327
if (javadummy) break CONDITION1327;
} // CONDLIST1328 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1327
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_BehaviourStatements");
}



public
static
void
ProcessControlPart(

JavaNode yy_inparam_0
)
{
// DECLARE for proc X
JavaNode X = null;
CONDITION1344:
while(javadummy) {
// ***** begin condlist 1345 (in cond 1344) *****
CONDLIST1345: // @@@ begin of alternative group
while(javadummy) {
CONDITION1346: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 1347 (in cond 1346) *****
CONDLIST1347: // @@@ begin of alternative group
while(javadummy) {
CONDITION1348: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative CP
JavaNode CP= null;
// DECLARE for alternative MCP
JavaNode MCP= null;
// DECLARE for alternative Code
JavaNode Code= null;
// DECLARE for alternative Semicolon
JavaNode Semicolon= null;
// DECLARE for alternative With
JavaNode With= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = X;
if (current0.Name
!= "OneOf-yyControlPart")
if (javadummy) break CONDITION1348;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to CP --- JJ.M4
CP = current1 ;
} //)) children level 1
};
// ***** begin condlist 1349 (in cond 1348) *****
CONDLIST1349: // @@@ begin of alternative group
while(javadummy) {
CONDITION1350: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CP;
if (! current0 .Name
.equals( "yyControlPart_A1") )
   if (javadummy) break  CONDITION1350;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to MCP --- JJ.M4
MCP = current1 ;
} //)) children level 1
};
// ***** begin condlist 1351 (in cond 1350) *****
CONDLIST1351: // @@@ begin of alternative group
while(javadummy) {
CONDITION1352: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MCP;
if (! current0 .Name
.equals( "ModuleControlPart_A1") )
   if (javadummy) break  CONDITION1352;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to With --- JJ.M4
With = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Semicolon --- JJ.M4
Semicolon = current1 ;
} //)) children level 1
};
YyProcs.
BeginLocalScope
(
);
YyProcs.
ZzPriCtl_Trafo_ModuleControlBody
(
X1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
YyProcs.
EndLocalScope
(
);
YyProcs.
Emit_ControlPart
(
Code
);
// ***** begin condlist 1353 (in cond 1352) *****
CONDLIST1353: // @@@ begin of alternative group
while(javadummy) {
CONDITION1354: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = With;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ModuleControlPart_A1_M5")
if (javadummy) break CONDITION1354;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1353;
// $$$$$$$$ 
} // CONDITION1354 // @@@ end of alternative
CONDITION1355: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative W
JavaNode W= null;
{
JavaNode current0 = With;
if (current0.Name
!= "OneOf-ModuleControlPart_A1_M5")
if (javadummy) break CONDITION1355;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to W --- JJ.M4
W = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "'with' for control part" )
,
W
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1353;
// $$$$$$$$ 
} // CONDITION1355 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1353 N=1352
if (javadummy) break CONDITION1352;
} // CONDLIST1353 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1351;
// $$$$$$$$ 
} // CONDITION1352 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1351 N=1350
if (javadummy) break CONDITION1350;
} // CONDLIST1351 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1349;
// $$$$$$$$ 
} // CONDITION1350 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1349 N=1348
if (javadummy) break CONDITION1348;
} // CONDLIST1349 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1347;
// $$$$$$$$ 
} // CONDITION1348 // @@@ end of alternative
CONDITION1356: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-yyControlPart")
if (javadummy) break CONDITION1356;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1347;
// $$$$$$$$ 
} // CONDITION1356 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1347 N=1346
if (javadummy) break CONDITION1346;
} // CONDLIST1347 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1345;
// $$$$$$$$ 
} // CONDITION1346 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1345 N=1344
if (javadummy) break CONDITION1344;
} // CONDLIST1345 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1344
// failed:
JavaLib.rtsAllAlternativesFailed("ProcessControlPart");
}



public
static
void
ZzPriCtl_Trafo_ModuleControlBody(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1357:
while(javadummy) {
// ***** begin condlist 1358 (in cond 1357) *****
CONDLIST1358: // @@@ begin of alternative group
while(javadummy) {
CONDITION1359: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ModuleControlBody_A1") )
   if (javadummy) break  CONDITION1359;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1360 (in cond 1359) *****
CONDLIST1360: // @@@ begin of alternative group
while(javadummy) {
CONDITION1361: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative B
JavaNode B= null;
// DECLARE for alternative B2
JavaNode B2= null;
// DECLARE for alternative LIST
JavaNode LIST= null;
{
JavaNode current0 = X1;
if (current0.Name
!= "OneOf-ModuleControlBody_A1_M1")
if (javadummy) break CONDITION1361;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to B --- JJ.M4
B = current1 ;
} //)) children level 1
};
// ***** begin condlist 1362 (in cond 1361) *****
CONDLIST1362: // @@@ begin of alternative group
while(javadummy) {
CONDITION1363: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = B;
if (! current0 .Name
.equals( "ModuleControlBody_A1_M1_A1") )
   if (javadummy) break  CONDITION1363;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to B2 --- JJ.M4
B2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1364 (in cond 1363) *****
CONDLIST1364: // @@@ begin of alternative group
while(javadummy) {
CONDITION1365: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = B2;
if (! current0 .Name
.equals( "ControlStatementOrDefList_A1") )
   if (javadummy) break  CONDITION1365;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to LIST --- JJ.M4
LIST = current1 ;
} //)) children level 1
};
YyProcs.
ZzPriCtl_Trafo_LIST
(
LIST
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1364;
// $$$$$$$$ 
} // CONDITION1365 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1364 N=1363
if (javadummy) break CONDITION1363;
} // CONDLIST1364 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1362;
// $$$$$$$$ 
} // CONDITION1363 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1362 N=1361
if (javadummy) break CONDITION1361;
} // CONDLIST1362 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1360;
// $$$$$$$$ 
} // CONDITION1361 // @@@ end of alternative
CONDITION1366: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ModuleControlBody_A1_M1")
if (javadummy) break CONDITION1366;
{ //(( children level 1
} //)) children level 1
};
Code = 
NodeFactory.NewNode(
"stmt_nolist"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1360;
// $$$$$$$$ 
} // CONDITION1366 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1360 N=1359
if (javadummy) break CONDITION1359;
} // CONDLIST1360 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1358;
// $$$$$$$$ 
} // CONDITION1359 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1358 N=1357
if (javadummy) break CONDITION1357;
} // CONDLIST1358 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1357
// failed:
JavaLib.rtsAllAlternativesFailed("ZzPriCtl_Trafo_ModuleControlBody");
}



public
static
void
ZzPriCtl_Trafo_LIST(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc LIST
JavaNode LIST = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1367:
while(javadummy) {
// ***** begin condlist 1368 (in cond 1367) *****
CONDLIST1368: // @@@ begin of alternative group
while(javadummy) {
CONDITION1369: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to LIST --- JJ.M4
LIST = current0 ;
};
// ***** begin condlist 1370 (in cond 1369) *****
CONDLIST1370: // @@@ begin of alternative group
while(javadummy) {
CONDITION1371: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative CodeTail
JavaNode CodeTail= null;
// DECLARE for alternative CodeHead
JavaNode CodeHead= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
{
JavaNode current0 = LIST;
if (current0.Name
!= "SeqOf-ControlStatementOrDefList_A1_M1")
if (javadummy) break CONDITION1371;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
ZzProcess_Head
(
HEAD
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeHead --- JJ.M4
CodeHead = current0 ;
}
YyProcs.
ZzPriCtl_Trafo_LIST
(
TAIL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeTail --- JJ.M4
CodeTail = current0 ;
}
Code = 
NodeFactory.NewNode(
"stmt_seq"
, new JavaNode [] {
CodeHead
,
CodeTail
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1370;
// $$$$$$$$ 
} // CONDITION1371 // @@@ end of alternative
CONDITION1372: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = LIST;
if (current0.Name
!= "NilOf-ControlStatementOrDefList_A1_M1")
if (javadummy) break CONDITION1372;
};
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1370;
// $$$$$$$$ 
} // CONDITION1372 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1370 N=1369
if (javadummy) break CONDITION1369;
} // CONDLIST1370 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1368;
// $$$$$$$$ 
} // CONDITION1369 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1368 N=1367
if (javadummy) break CONDITION1367;
} // CONDLIST1368 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1367
// failed:
JavaLib.rtsAllAlternativesFailed("ZzPriCtl_Trafo_LIST");
}



public
static
void
ZzProcess_Head(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc HEAD
JavaNode HEAD = null;
// DECLARE for proc Semicolon
JavaNode Semicolon = null;
// DECLARE for proc K
JavaNode K = null;
// DECLARE for proc CodeHead
JavaNode CodeHead = null;
CONDITION1373:
while(javadummy) {
// ***** begin condlist 1374 (in cond 1373) *****
CONDLIST1374: // @@@ begin of alternative group
while(javadummy) {
CONDITION1375: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to HEAD --- JJ.M4
HEAD = current0 ;
};
// ***** begin condlist 1376 (in cond 1375) *****
CONDLIST1376: // @@@ begin of alternative group
while(javadummy) {
CONDITION1377: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "ControlStatementOrDefList_A1_M1_A1") )
   if (javadummy) break  CONDITION1377;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to K --- JJ.M4
K = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Semicolon --- JJ.M4
Semicolon = current1 ;
} //)) children level 1
};
// ***** begin condlist 1378 (in cond 1377) *****
CONDLIST1378: // @@@ begin of alternative group
while(javadummy) {
CONDITION1379: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative With
JavaNode With= null;
// DECLARE for alternative S2
JavaNode S2= null;
{
JavaNode current0 = K;
if (! current0 .Name
.equals( "ControlStatementOrDef_A1") )
   if (javadummy) break  CONDITION1379;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S2 --- JJ.M4
S2 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to With --- JJ.M4
With = current1 ;
} //)) children level 1
};
// ***** begin condlist 1380 (in cond 1379) *****
CONDLIST1380: // @@@ begin of alternative group
while(javadummy) {
CONDITION1381: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S3
JavaNode S3= null;
{
JavaNode current0 = S2;
if (! current0 .Name
.equals( "ControlStatementOrDef_A1_M1_A2") )
   if (javadummy) break  CONDITION1381;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S3 --- JJ.M4
S3 = current1 ;
} //)) children level 1
};
YyProcs.
LOCALDECL
(
S3
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeHead --- JJ.M4
CodeHead = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1380;
// $$$$$$$$ 
} // CONDITION1381 // @@@ end of alternative
CONDITION1382: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S2;
if (! current0 .Name
.equals( "ControlStatementOrDef_A1_M1_A1") )
   if (javadummy) break  CONDITION1382;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
TokenStream.ReportError
(
new JavaStringValue( "cover" )
,new JavaStringValue( "nopos" )
);
CodeHead = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1380;
// $$$$$$$$ 
} // CONDITION1382 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1380 N=1379
if (javadummy) break CONDITION1379;
} // CONDLIST1380 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1383 (in cond 1379) *****
CONDLIST1383: // @@@ begin of alternative group
while(javadummy) {
CONDITION1384: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = With;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ControlStatementOrDef_A1_M2")
if (javadummy) break CONDITION1384;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1383;
// $$$$$$$$ 
} // CONDITION1384 // @@@ end of alternative
CONDITION1385: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative W
JavaNode W= null;
{
JavaNode current0 = With;
if (current0.Name
!= "OneOf-ControlStatementOrDef_A1_M2")
if (javadummy) break CONDITION1385;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to W --- JJ.M4
W = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "'with' for declaration inside control part" )
,
W
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1383;
// $$$$$$$$ 
} // CONDITION1385 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1383 N=1379
if (javadummy) break CONDITION1379;
} // CONDLIST1383 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1378;
// $$$$$$$$ 
} // CONDITION1379 // @@@ end of alternative
CONDITION1386: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S
JavaNode S= null;
{
JavaNode current0 = K;
if (! current0 .Name
.equals( "ControlStatementOrDef_A2") )
   if (javadummy) break  CONDITION1386;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S --- JJ.M4
S = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ControlStatement
(
S
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeHead --- JJ.M4
CodeHead = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1378;
// $$$$$$$$ 
} // CONDITION1386 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1378 N=1377
if (javadummy) break CONDITION1377;
} // CONDLIST1378 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1376;
// $$$$$$$$ 
} // CONDITION1377 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1376 N=1375
if (javadummy) break CONDITION1375;
} // CONDLIST1376 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
CodeHead
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1374;
// $$$$$$$$ 
} // CONDITION1375 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1374 N=1373
if (javadummy) break CONDITION1373;
} // CONDLIST1374 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1373
// failed:
JavaLib.rtsAllAlternativesFailed("ZzProcess_Head");
}



public
static
void
Trafo_StatementBlock(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc STBLOCK
JavaNode STBLOCK = null;
// DECLARE for proc Code
JavaNode Code = null;
// DECLARE for proc Body
JavaNode Body = null;
// DECLARE for proc Defs
JavaNode Defs = null;
// DECLARE for proc BODY
JavaNode BODY = null;
// DECLARE for proc DEFS
JavaNode DEFS = null;
CONDITION1387:
while(javadummy) {
// ***** begin condlist 1388 (in cond 1387) *****
CONDLIST1388: // @@@ begin of alternative group
while(javadummy) {
CONDITION1389: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to STBLOCK --- JJ.M4
STBLOCK = current0 ;
};
// ***** begin condlist 1390 (in cond 1389) *****
CONDLIST1390: // @@@ begin of alternative group
while(javadummy) {
CONDITION1391: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = STBLOCK;
if (! current0 .Name
.equals( "StatementBlock_A1") )
   if (javadummy) break  CONDITION1391;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to DEFS --- JJ.M4
DEFS = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to BODY --- JJ.M4
BODY = current1 ;
} //)) children level 1
};
YyProcs.
BeginLocalScope
(
);
YyProcs.
ZzTrafo_DEFS
(
DEFS
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Defs --- JJ.M4
Defs = current0 ;
}
YyProcs.
ZzTrafo_BODY
(
BODY
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Body --- JJ.M4
Body = current0 ;
}
YyProcs.
EndLocalScope
(
);
Code = 
NodeFactory.NewNode(
"stmt_block"
, new JavaNode [] {
Defs
,
Body
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1390;
// $$$$$$$$ 
} // CONDITION1391 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1390 N=1389
if (javadummy) break CONDITION1389;
} // CONDLIST1390 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1388;
// $$$$$$$$ 
} // CONDITION1389 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1388 N=1387
if (javadummy) break CONDITION1387;
} // CONDLIST1388 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1387
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_StatementBlock");
}



public
static
void
ZzTrafo_DEFS(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc DEFS
JavaNode DEFS = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1392:
while(javadummy) {
// ***** begin condlist 1393 (in cond 1392) *****
CONDLIST1393: // @@@ begin of alternative group
while(javadummy) {
CONDITION1394: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to DEFS --- JJ.M4
DEFS = current0 ;
};
// ***** begin condlist 1395 (in cond 1394) *****
CONDLIST1395: // @@@ begin of alternative group
while(javadummy) {
CONDITION1396: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = DEFS;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-StatementBlock_A1_M2")
if (javadummy) break CONDITION1396;
{ //(( children level 1
} //)) children level 1
};
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1395;
// $$$$$$$$ 
} // CONDITION1396 // @@@ end of alternative
CONDITION1397: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Block
JavaNode Block= null;
// DECLARE for alternative L
JavaNode L= null;
// DECLARE for alternative SEQ
JavaNode SEQ= null;
{
JavaNode current0 = DEFS;
if (current0.Name
!= "OneOf-StatementBlock_A1_M2")
if (javadummy) break CONDITION1397;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to Block --- JJ.M4
Block = current1 ;
} //)) children level 1
};
// ***** begin condlist 1398 (in cond 1397) *****
CONDLIST1398: // @@@ begin of alternative group
while(javadummy) {
CONDITION1399: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Block;
if (! current0 .Name
.equals( "StatementBlock_A1_M2_A1") )
   if (javadummy) break  CONDITION1399;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to L --- JJ.M4
L = current1 ;
} //)) children level 1
};
// ***** begin condlist 1400 (in cond 1399) *****
CONDLIST1400: // @@@ begin of alternative group
while(javadummy) {
CONDITION1401: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = L;
if (! current0 .Name
.equals( "FunctionDefList_A1") )
   if (javadummy) break  CONDITION1401;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to SEQ --- JJ.M4
SEQ = current1 ;
} //)) children level 1
};
YyProcs.
ZzTrafo_DEFSEQ
(
SEQ
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1400;
// $$$$$$$$ 
} // CONDITION1401 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1400 N=1399
if (javadummy) break CONDITION1399;
} // CONDLIST1400 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1398;
// $$$$$$$$ 
} // CONDITION1399 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1398 N=1397
if (javadummy) break CONDITION1397;
} // CONDLIST1398 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1395;
// $$$$$$$$ 
} // CONDITION1397 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1395 N=1394
if (javadummy) break CONDITION1394;
} // CONDLIST1395 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1393;
// $$$$$$$$ 
} // CONDITION1394 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1393 N=1392
if (javadummy) break CONDITION1392;
} // CONDLIST1393 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1392
// failed:
JavaLib.rtsAllAlternativesFailed("ZzTrafo_DEFS");
}



public
static
void
ZzTrafo_DEFSEQ(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1402:
while(javadummy) {
// ***** begin condlist 1403 (in cond 1402) *****
CONDLIST1403: // @@@ begin of alternative group
while(javadummy) {
CONDITION1404: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
// ***** begin condlist 1405 (in cond 1404) *****
CONDLIST1405: // @@@ begin of alternative group
while(javadummy) {
CONDITION1406: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Code2
JavaNode Code2= null;
// DECLARE for alternative Code1
JavaNode Code1= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
{
JavaNode current0 = SEQ;
if (current0.Name
!= "SeqOf-FunctionDefList_A1_M1")
if (javadummy) break CONDITION1406;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
ZzTrafo_DEFHEAD
(
HEAD
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code1 --- JJ.M4
Code1 = current0 ;
}
YyProcs.
ZzTrafo_DEFSEQ
(
TAIL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code2 --- JJ.M4
Code2 = current0 ;
}
Code = 
NodeFactory.NewNode(
"stmt_seq"
, new JavaNode [] {
Code1
,
Code2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1405;
// $$$$$$$$ 
} // CONDITION1406 // @@@ end of alternative
CONDITION1407: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = SEQ;
if (current0.Name
!= "NilOf-FunctionDefList_A1_M1")
if (javadummy) break CONDITION1407;
};
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1405;
// $$$$$$$$ 
} // CONDITION1407 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1405 N=1404
if (javadummy) break CONDITION1404;
} // CONDLIST1405 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1403;
// $$$$$$$$ 
} // CONDITION1404 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1403 N=1402
if (javadummy) break CONDITION1402;
} // CONDLIST1403 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1402
// failed:
JavaLib.rtsAllAlternativesFailed("ZzTrafo_DEFSEQ");
}



public
static
void
ZzTrafo_DEFHEAD(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc HEAD
JavaNode HEAD = null;
// DECLARE for proc Semi
JavaNode Semi = null;
// DECLARE for proc XX
JavaNode XX = null;
// DECLARE for proc L
JavaNode L = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1408:
while(javadummy) {
// ***** begin condlist 1409 (in cond 1408) *****
CONDLIST1409: // @@@ begin of alternative group
while(javadummy) {
CONDITION1410: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to HEAD --- JJ.M4
HEAD = current0 ;
};
// ***** begin condlist 1411 (in cond 1410) *****
CONDLIST1411: // @@@ begin of alternative group
while(javadummy) {
CONDITION1412: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "FunctionDefList_A1_M1_A1") )
   if (javadummy) break  CONDITION1412;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to L --- JJ.M4
L = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to XX --- JJ.M4
XX = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Semi --- JJ.M4
Semi = current1 ;
} //)) children level 1
};
// ***** begin condlist 1413 (in cond 1412) *****
CONDLIST1413: // @@@ begin of alternative group
while(javadummy) {
CONDITION1414: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = L;
if (! current0 .Name
.equals( "FunctionDefList_A1_M1_A1_M1_A1") )
   if (javadummy) break  CONDITION1414;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
TokenStream.ReportError
(
new JavaStringValue( "cover" )
,new JavaStringValue( "nopos" )
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1413;
// $$$$$$$$ 
} // CONDITION1414 // @@@ end of alternative
CONDITION1415: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = L;
if (! current0 .Name
.equals( "FunctionDefList_A1_M1_A1_M1_A2") )
   if (javadummy) break  CONDITION1415;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
YyProcs.
LOCALDECL
(
X1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// ***** begin condlist 1416 (in cond 1415) *****
CONDLIST1416: // @@@ begin of alternative group
while(javadummy) {
CONDITION1417: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionDefList_A1_M1_A1_M2")
if (javadummy) break CONDITION1417;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1416;
// $$$$$$$$ 
} // CONDITION1417 // @@@ end of alternative
CONDITION1418: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX;
if (current0.Name
!= "OneOf-FunctionDefList_A1_M1_A1_M2")
if (javadummy) break CONDITION1418;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "'with' for local declarations" )
,
XX
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1416;
// $$$$$$$$ 
} // CONDITION1418 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1416 N=1415
if (javadummy) break CONDITION1415;
} // CONDLIST1416 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1413;
// $$$$$$$$ 
} // CONDITION1415 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1413 N=1412
if (javadummy) break CONDITION1412;
} // CONDLIST1413 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1411;
// $$$$$$$$ 
} // CONDITION1412 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1411 N=1410
if (javadummy) break CONDITION1410;
} // CONDLIST1411 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1409;
// $$$$$$$$ 
} // CONDITION1410 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1409 N=1408
if (javadummy) break CONDITION1408;
} // CONDLIST1409 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1408
// failed:
JavaLib.rtsAllAlternativesFailed("ZzTrafo_DEFHEAD");
}



public
static
void
LOCALDECL(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1419:
while(javadummy) {
// ***** begin condlist 1420 (in cond 1419) *****
CONDLIST1420: // @@@ begin of alternative group
while(javadummy) {
CONDITION1421: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X1 --- JJ.M4
X1 = current0 ;
};
// ***** begin condlist 1422 (in cond 1421) *****
CONDLIST1422: // @@@ begin of alternative group
while(javadummy) {
CONDITION1423: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative XX1
JavaNode XX1= null;
// DECLARE for alternative XXX
JavaNode XXX= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "FunctionLocalInst_A1") )
   if (javadummy) break  CONDITION1423;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX1 --- JJ.M4
XX1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1424 (in cond 1423) *****
CONDLIST1424: // @@@ begin of alternative group
while(javadummy) {
CONDITION1425: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX1;
if (! current0 .Name
.equals( "VarInstance_A1") )
   if (javadummy) break  CONDITION1425;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XXX --- JJ.M4
XXX = current1 ;
} //)) children level 1
};
// ***** begin condlist 1426 (in cond 1425) *****
CONDLIST1426: // @@@ begin of alternative group
while(javadummy) {
CONDITION1427: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative QQ5
JavaNode QQ5= null;
{
JavaNode current0 = XXX;
if (! current0 .Name
.equals( "VarInstance_A1_M2_A1") )
   if (javadummy) break  CONDITION1427;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to QQ5 --- JJ.M4
QQ5 = current1 ;
} //)) children level 1
};
YyProcs.
DeclareLocalVar
(
QQ5
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1426;
// $$$$$$$$ 
} // CONDITION1427 // @@@ end of alternative
CONDITION1428: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX;
if (! current0 .Name
.equals( "VarInstance_A1_M2_A2") )
   if (javadummy) break  CONDITION1428;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
TokenStream.ReportError
(
new JavaStringValue( "cover" )
,new JavaStringValue( "nopos" )
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1426;
// $$$$$$$$ 
} // CONDITION1428 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1426 N=1425
if (javadummy) break CONDITION1425;
} // CONDLIST1426 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1424;
// $$$$$$$$ 
} // CONDITION1425 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1424 N=1423
if (javadummy) break CONDITION1423;
} // CONDLIST1424 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1422;
// $$$$$$$$ 
} // CONDITION1423 // @@@ end of alternative
CONDITION1429: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative XXXX
JavaNode XXXX= null;
// DECLARE for alternative XXXXX
JavaNode XXXXX= null;
// DECLARE for alternative XXB
JavaNode XXB= null;
// DECLARE for alternative XXA
JavaNode XXA= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative XXA2
JavaNode XXA2= null;
// DECLARE for alternative XXA1
JavaNode XXA1= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "FunctionLocalInst_A2") )
   if (javadummy) break  CONDITION1429;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XXXX --- JJ.M4
XXXX = current1 ;
} //)) children level 1
};
// ***** begin condlist 1430 (in cond 1429) *****
CONDLIST1430: // @@@ begin of alternative group
while(javadummy) {
CONDITION1431: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXXX;
if (! current0 .Name
.equals( "TimerInstance_A1") )
   if (javadummy) break  CONDITION1431;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XXXXX --- JJ.M4
XXXXX = current1 ;
} //)) children level 1
};
// ***** begin condlist 1432 (in cond 1431) *****
CONDLIST1432: // @@@ begin of alternative group
while(javadummy) {
CONDITION1433: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXXXX;
if (! current0 .Name
.equals( "VarList_A1") )
   if (javadummy) break  CONDITION1433;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XXA --- JJ.M4
XXA = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to XXB --- JJ.M4
XXB = current1 ;
} //)) children level 1
};
// ***** begin condlist 1434 (in cond 1433) *****
CONDLIST1434: // @@@ begin of alternative group
while(javadummy) {
CONDITION1435: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXA;
if (! current0 .Name
.equals( "SingleVarInstance_A1") )
   if (javadummy) break  CONDITION1435;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to XXA1 --- JJ.M4
XXA1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to XXA2 --- JJ.M4
XXA2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1436 (in cond 1435) *****
CONDLIST1436: // @@@ begin of alternative group
while(javadummy) {
CONDITION1437: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXA1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-SingleVarInstance_A1_M2")
if (javadummy) break CONDITION1437;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1436;
// $$$$$$$$ 
} // CONDITION1437 // @@@ end of alternative
CONDITION1438: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ArrayDef
JavaNode ArrayDef= null;
{
JavaNode current0 = XXA1;
if (current0.Name
!= "OneOf-SingleVarInstance_A1_M2")
if (javadummy) break CONDITION1438;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to ArrayDef --- JJ.M4
ArrayDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "declaration of timer arrays" )
,
ArrayDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1436;
// $$$$$$$$ 
} // CONDITION1438 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1436 N=1435
if (javadummy) break CONDITION1435;
} // CONDLIST1436 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1439 (in cond 1435) *****
CONDLIST1439: // @@@ begin of alternative group
while(javadummy) {
CONDITION1440: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXA2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-SingleVarInstance_A1_M3")
if (javadummy) break CONDITION1440;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1439;
// $$$$$$$$ 
} // CONDITION1440 // @@@ end of alternative
CONDITION1441: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Init
JavaNode Init= null;
{
JavaNode current0 = XXA2;
if (current0.Name
!= "OneOf-SingleVarInstance_A1_M3")
if (javadummy) break CONDITION1441;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to Init --- JJ.M4
Init = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "initialization of timers" )
,
Init
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1439;
// $$$$$$$$ 
} // CONDITION1441 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1439 N=1435
if (javadummy) break CONDITION1435;
} // CONDLIST1439 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1442 (in cond 1435) *****
CONDLIST1442: // @@@ begin of alternative group
while(javadummy) {
CONDITION1443: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXB;
if (current0.Name
!= "NilOf-VarList_A1_M2")
if (javadummy) break CONDITION1443;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1442;
// $$$$$$$$ 
} // CONDITION1443 // @@@ end of alternative
CONDITION1444: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = XXB;
if (current0.Name
!= "SeqOf-VarList_A1_M2")
if (javadummy) break CONDITION1444;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "multiple declaration of timers" )
,
H
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1442;
// $$$$$$$$ 
} // CONDITION1444 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1442 N=1435
if (javadummy) break CONDITION1435;
} // CONDLIST1442 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineLocalTimer
(
Id
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_declaretimer"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1434;
// $$$$$$$$ 
} // CONDITION1435 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1434 N=1433
if (javadummy) break CONDITION1433;
} // CONDLIST1434 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1432;
// $$$$$$$$ 
} // CONDITION1433 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1432 N=1431
if (javadummy) break CONDITION1431;
} // CONDLIST1432 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1430;
// $$$$$$$$ 
} // CONDITION1431 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1430 N=1429
if (javadummy) break CONDITION1429;
} // CONDLIST1430 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1422;
// $$$$$$$$ 
} // CONDITION1429 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1422 N=1421
if (javadummy) break CONDITION1421;
} // CONDLIST1422 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1420;
// $$$$$$$$ 
} // CONDITION1421 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1420 N=1419
if (javadummy) break CONDITION1419;
} // CONDLIST1420 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1419
// failed:
JavaLib.rtsAllAlternativesFailed("LOCALDECL");
}



public
static
void
DeclareLocalVar(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc QQ5
JavaNode QQ5 = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1445:
while(javadummy) {
// ***** begin condlist 1446 (in cond 1445) *****
CONDLIST1446: // @@@ begin of alternative group
while(javadummy) {
CONDITION1447: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to QQ5 --- JJ.M4
QQ5 = current0 ;
};
// ***** begin condlist 1448 (in cond 1447) *****
CONDLIST1448: // @@@ begin of alternative group
while(javadummy) {
CONDITION1449: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = QQ5;
if (! current0 .Name
.equals( "VarInstance_A1_M2_A1_M1_A1") )
   if (javadummy) break  CONDITION1449;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1450 (in cond 1449) *****
CONDLIST1450: // @@@ begin of alternative group
while(javadummy) {
CONDITION1451: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Y
JavaNode Y= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "Type_A1") )
   if (javadummy) break  CONDITION1451;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Y --- JJ.M4
Y = current1 ;
} //)) children level 1
};
// ***** begin condlist 1452 (in cond 1451) *****
CONDLIST1452: // @@@ begin of alternative group
while(javadummy) {
CONDITION1453: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A1") )
   if (javadummy) break  CONDITION1453;
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1452;
// $$$$$$$$ 
} // CONDITION1453 // @@@ end of alternative
CONDITION1454: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A2") )
   if (javadummy) break  CONDITION1454;
};
YyProcs.
ExtractId
(
X2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Id --- JJ.M4
Id = current0 ;
}
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineLocalVar
(
Id
,
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_declareboolean"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1452;
// $$$$$$$$ 
} // CONDITION1454 // @@@ end of alternative
CONDITION1455: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A3") )
   if (javadummy) break  CONDITION1455;
};
YyProcs.
ExtractId
(
X2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Id --- JJ.M4
Id = current0 ;
}
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineLocalVar
(
Id
,
NodeFactory.NewNode(
"tp_charstring"
, new JavaNode [] {
}
)
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_declarecharstring"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1452;
// $$$$$$$$ 
} // CONDITION1455 // @@@ end of alternative
CONDITION1456: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A4") )
   if (javadummy) break  CONDITION1456;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1452;
// $$$$$$$$ 
} // CONDITION1456 // @@@ end of alternative
CONDITION1457: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A5") )
   if (javadummy) break  CONDITION1457;
};
YyProcs.
ExtractId
(
X2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Id --- JJ.M4
Id = current0 ;
}
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineLocalVar
(
Id
,
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_declareinteger"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1452;
// $$$$$$$$ 
} // CONDITION1457 // @@@ end of alternative
CONDITION1458: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A6") )
   if (javadummy) break  CONDITION1458;
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1452;
// $$$$$$$$ 
} // CONDITION1458 // @@@ end of alternative
CONDITION1459: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A7") )
   if (javadummy) break  CONDITION1459;
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1452;
// $$$$$$$$ 
} // CONDITION1459 // @@@ end of alternative
CONDITION1460: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A8") )
   if (javadummy) break  CONDITION1460;
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1452;
// $$$$$$$$ 
} // CONDITION1460 // @@@ end of alternative
CONDITION1461: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A9") )
   if (javadummy) break  CONDITION1461;
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1452;
// $$$$$$$$ 
} // CONDITION1461 // @@@ end of alternative
CONDITION1462: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A10") )
   if (javadummy) break  CONDITION1462;
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1452;
// $$$$$$$$ 
} // CONDITION1462 // @@@ end of alternative
CONDITION1463: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A11") )
   if (javadummy) break  CONDITION1463;
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1452;
// $$$$$$$$ 
} // CONDITION1463 // @@@ end of alternative
CONDITION1464: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A12") )
   if (javadummy) break  CONDITION1464;
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1452;
// $$$$$$$$ 
} // CONDITION1464 // @@@ end of alternative
CONDITION1465: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A13") )
   if (javadummy) break  CONDITION1465;
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1452;
// $$$$$$$$ 
} // CONDITION1465 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1452 N=1451
if (javadummy) break CONDITION1451;
} // CONDLIST1452 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1450;
// $$$$$$$$ 
} // CONDITION1451 // @@@ end of alternative
CONDITION1466: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative Pos2
JavaNode Pos2= null;
// DECLARE for alternative Id
JavaNode Id= null;
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Z5
JavaNode Z5= null;
// DECLARE for alternative Z4
JavaNode Z4= null;
// DECLARE for alternative Z3
JavaNode Z3= null;
// DECLARE for alternative TypeId
JavaNode TypeId= null;
// DECLARE for alternative Z1
JavaNode Z1= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "Type_A2") )
   if (javadummy) break  CONDITION1466;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 1467 (in cond 1466) *****
CONDLIST1467: // @@@ begin of alternative group
while(javadummy) {
CONDITION1468: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ReferencedType_A1") )
   if (javadummy) break  CONDITION1468;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Z1 --- JJ.M4
Z1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TypeId --- JJ.M4
TypeId = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Z3 --- JJ.M4
Z3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to Z4 --- JJ.M4
Z4 = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to Z5 --- JJ.M4
Z5 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(TypeId);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
// ***** begin condlist 1469 (in cond 1468) *****
CONDLIST1469: // @@@ begin of alternative group
while(javadummy) {
CONDITION1470: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ReferencedType_A1_M1")
if (javadummy) break CONDITION1470;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1469;
// $$$$$$$$ 
} // CONDITION1470 // @@@ end of alternative
CONDITION1471: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z1;
if (current0.Name
!= "OneOf-ReferencedType_A1_M1")
if (javadummy) break CONDITION1471;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "qualified id" )
,
Z1
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1469;
// $$$$$$$$ 
} // CONDITION1471 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1469 N=1468
if (javadummy) break CONDITION1468;
} // CONDLIST1469 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1472 (in cond 1468) *****
CONDLIST1472: // @@@ begin of alternative group
while(javadummy) {
CONDITION1473: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ReferencedType_A1_M3")
if (javadummy) break CONDITION1473;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1472;
// $$$$$$$$ 
} // CONDITION1473 // @@@ end of alternative
CONDITION1474: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z3;
if (current0.Name
!= "OneOf-ReferencedType_A1_M3")
if (javadummy) break CONDITION1474;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "param list" )
,
Z3
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1472;
// $$$$$$$$ 
} // CONDITION1474 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1472 N=1468
if (javadummy) break CONDITION1468;
} // CONDLIST1472 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1475 (in cond 1468) *****
CONDLIST1475: // @@@ begin of alternative group
while(javadummy) {
CONDITION1476: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z4;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ReferencedType_A1_M4")
if (javadummy) break CONDITION1476;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1475;
// $$$$$$$$ 
} // CONDITION1476 // @@@ end of alternative
CONDITION1477: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z4;
if (current0.Name
!= "OneOf-ReferencedType_A1_M4")
if (javadummy) break CONDITION1477;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "type param list" )
,
Z4
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1475;
// $$$$$$$$ 
} // CONDITION1477 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1475 N=1468
if (javadummy) break CONDITION1468;
} // CONDLIST1475 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1478 (in cond 1468) *****
CONDLIST1478: // @@@ begin of alternative group
while(javadummy) {
CONDITION1479: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z5;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ReferencedType_A1_M5")
if (javadummy) break CONDITION1479;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1478;
// $$$$$$$$ 
} // CONDITION1479 // @@@ end of alternative
CONDITION1480: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z5;
if (current0.Name
!= "OneOf-ReferencedType_A1_M5")
if (javadummy) break CONDITION1480;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "extended field ref" )
,
Z5
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1478;
// $$$$$$$$ 
} // CONDITION1480 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1478 N=1468
if (javadummy) break CONDITION1468;
} // CONDLIST1478 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
GloballyDefined
(
TypeId
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 1481 (in cond 1468) *****
CONDLIST1481: // @@@ begin of alternative group
while(javadummy) {
CONDITION1482: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION1482;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1481;
// $$$$$$$$ 
} // CONDITION1482 // @@@ end of alternative
CONDITION1483: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION1483;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1481;
// $$$$$$$$ 
} // CONDITION1483 // @@@ end of alternative
CONDITION1484: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
TypeId
,
new JavaStringValue( "' is not allowed as type" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1481;
// $$$$$$$$ 
} // CONDITION1484 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1481 N=1468
if (javadummy) break CONDITION1468;
} // CONDLIST1481 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
ExtractId
(
X2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Id --- JJ.M4
Id = current0 ;
}
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos2 --- JJ.M4
Pos2 = current0 ;
};
YyProcs.
DefineLocalVar
(
Id
,
NodeFactory.NewNode(
"tp_referenced"
, new JavaNode [] {
Def
}
)
,
Pos2
);
Code = 
NodeFactory.NewNode(
"stmt_declarereferenced"
, new JavaNode [] {
Id
,
TypeId
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1467;
// $$$$$$$$ 
} // CONDITION1468 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1467 N=1466
if (javadummy) break CONDITION1466;
} // CONDLIST1467 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1450;
// $$$$$$$$ 
} // CONDITION1466 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1450 N=1449
if (javadummy) break CONDITION1449;
} // CONDLIST1450 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1448;
// $$$$$$$$ 
} // CONDITION1449 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1448 N=1447
if (javadummy) break CONDITION1447;
} // CONDLIST1448 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1446;
// $$$$$$$$ 
} // CONDITION1447 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1446 N=1445
if (javadummy) break CONDITION1445;
} // CONDLIST1446 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1445
// failed:
JavaLib.rtsAllAlternativesFailed("DeclareLocalVar");
}



public
static
void
ExtractId(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc XX2
JavaNode XX2 = null;
// DECLARE for proc XX1
JavaNode XX1 = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1485:
while(javadummy) {
// ***** begin condlist 1486 (in cond 1485) *****
CONDLIST1486: // @@@ begin of alternative group
while(javadummy) {
CONDITION1487: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 1488 (in cond 1487) *****
CONDLIST1488: // @@@ begin of alternative group
while(javadummy) {
CONDITION1489: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "VarList_A1") )
   if (javadummy) break  CONDITION1489;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1490 (in cond 1489) *****
CONDLIST1490: // @@@ begin of alternative group
while(javadummy) {
CONDITION1491: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "SingleVarInstance_A1") )
   if (javadummy) break  CONDITION1491;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to XX1 --- JJ.M4
XX1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to XX2 --- JJ.M4
XX2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1492 (in cond 1491) *****
CONDLIST1492: // @@@ begin of alternative group
while(javadummy) {
CONDITION1493: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-SingleVarInstance_A1_M2")
if (javadummy) break CONDITION1493;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1492;
// $$$$$$$$ 
} // CONDITION1493 // @@@ end of alternative
CONDITION1494: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ArrayDef
JavaNode ArrayDef= null;
{
JavaNode current0 = XX1;
if (current0.Name
!= "OneOf-SingleVarInstance_A1_M2")
if (javadummy) break CONDITION1494;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to ArrayDef --- JJ.M4
ArrayDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "declaration of array variables" )
,
ArrayDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1492;
// $$$$$$$$ 
} // CONDITION1494 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1492 N=1491
if (javadummy) break CONDITION1491;
} // CONDLIST1492 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1495 (in cond 1491) *****
CONDLIST1495: // @@@ begin of alternative group
while(javadummy) {
CONDITION1496: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-SingleVarInstance_A1_M3")
if (javadummy) break CONDITION1496;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1495;
// $$$$$$$$ 
} // CONDITION1496 // @@@ end of alternative
CONDITION1497: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Init
JavaNode Init= null;
{
JavaNode current0 = XX2;
if (current0.Name
!= "OneOf-SingleVarInstance_A1_M3")
if (javadummy) break CONDITION1497;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to Init --- JJ.M4
Init = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "var declaration with initialization" )
,
Init
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1495;
// $$$$$$$$ 
} // CONDITION1497 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1495 N=1491
if (javadummy) break CONDITION1491;
} // CONDLIST1495 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1490;
// $$$$$$$$ 
} // CONDITION1491 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1490 N=1489
if (javadummy) break CONDITION1489;
} // CONDLIST1490 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1498 (in cond 1489) *****
CONDLIST1498: // @@@ begin of alternative group
while(javadummy) {
CONDITION1499: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
!= "NilOf-VarList_A1_M2")
if (javadummy) break CONDITION1499;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1498;
// $$$$$$$$ 
} // CONDITION1499 // @@@ end of alternative
CONDITION1500: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = X2;
if (current0.Name
!= "SeqOf-VarList_A1_M2")
if (javadummy) break CONDITION1500;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "multiple var declaration" )
,
H
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1498;
// $$$$$$$$ 
} // CONDITION1500 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1498 N=1489
if (javadummy) break CONDITION1489;
} // CONDLIST1498 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1488;
// $$$$$$$$ 
} // CONDITION1489 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1488 N=1487
if (javadummy) break CONDITION1487;
} // CONDLIST1488 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Id
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1486;
// $$$$$$$$ 
} // CONDITION1487 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1486 N=1485
if (javadummy) break CONDITION1485;
} // CONDLIST1486 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1485
// failed:
JavaLib.rtsAllAlternativesFailed("ExtractId");
}



public
static
void
ZzTrafo_BODY(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc BODY
JavaNode BODY = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1501:
while(javadummy) {
// ***** begin condlist 1502 (in cond 1501) *****
CONDLIST1502: // @@@ begin of alternative group
while(javadummy) {
CONDITION1503: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to BODY --- JJ.M4
BODY = current0 ;
};
// ***** begin condlist 1504 (in cond 1503) *****
CONDLIST1504: // @@@ begin of alternative group
while(javadummy) {
CONDITION1505: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative XX
JavaNode XX= null;
// DECLARE for alternative LIST
JavaNode LIST= null;
{
JavaNode current0 = BODY;
if (current0.Name
!= "OneOf-StatementBlock_A1_M3")
if (javadummy) break CONDITION1505;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 1506 (in cond 1505) *****
CONDLIST1506: // @@@ begin of alternative group
while(javadummy) {
CONDITION1507: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "StatementBlock_A1_M3_A1") )
   if (javadummy) break  CONDITION1507;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX --- JJ.M4
XX = current1 ;
} //)) children level 1
};
// ***** begin condlist 1508 (in cond 1507) *****
CONDLIST1508: // @@@ begin of alternative group
while(javadummy) {
CONDITION1509: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX;
if (! current0 .Name
.equals( "FunctionStatementList_A1") )
   if (javadummy) break  CONDITION1509;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to LIST --- JJ.M4
LIST = current1 ;
} //)) children level 1
};
YyProcs.
ZzTrafo_FunctionStatements
(
LIST
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1508;
// $$$$$$$$ 
} // CONDITION1509 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1508 N=1507
if (javadummy) break CONDITION1507;
} // CONDLIST1508 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1506;
// $$$$$$$$ 
} // CONDITION1507 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1506 N=1505
if (javadummy) break CONDITION1505;
} // CONDLIST1506 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1504;
// $$$$$$$$ 
} // CONDITION1505 // @@@ end of alternative
CONDITION1510: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = BODY;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-StatementBlock_A1_M3")
if (javadummy) break CONDITION1510;
{ //(( children level 1
} //)) children level 1
};
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1504;
// $$$$$$$$ 
} // CONDITION1510 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1504 N=1503
if (javadummy) break CONDITION1503;
} // CONDLIST1504 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1502;
// $$$$$$$$ 
} // CONDITION1503 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1502 N=1501
if (javadummy) break CONDITION1501;
} // CONDLIST1502 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1501
// failed:
JavaLib.rtsAllAlternativesFailed("ZzTrafo_BODY");
}



public
static
void
ZzTrafo_FunctionStatements(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc LIST
JavaNode LIST = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1511:
while(javadummy) {
// ***** begin condlist 1512 (in cond 1511) *****
CONDLIST1512: // @@@ begin of alternative group
while(javadummy) {
CONDITION1513: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to LIST --- JJ.M4
LIST = current0 ;
};
// ***** begin condlist 1514 (in cond 1513) *****
CONDLIST1514: // @@@ begin of alternative group
while(javadummy) {
CONDITION1515: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative ResTail
JavaNode ResTail= null;
// DECLARE for alternative Res
JavaNode Res= null;
// DECLARE for alternative Semi
JavaNode Semi= null;
// DECLARE for alternative FunctionSt
JavaNode FunctionSt= null;
{
JavaNode current0 = LIST;
if (current0.Name
!= "SeqOf-FunctionStatementList_A1_M1")
if (javadummy) break CONDITION1515;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
// ***** begin condlist 1516 (in cond 1515) *****
CONDLIST1516: // @@@ begin of alternative group
while(javadummy) {
CONDITION1517: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "FunctionStatementList_A1_M1_A1") )
   if (javadummy) break  CONDITION1517;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FunctionSt --- JJ.M4
FunctionSt = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Semi --- JJ.M4
Semi = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_FunctionStatement
(
FunctionSt
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
YyProcs.
ZzTrafo_FunctionStatements
(
TAIL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ResTail --- JJ.M4
ResTail = current0 ;
}
Code = 
NodeFactory.NewNode(
"stmt_seq"
, new JavaNode [] {
Res
,
ResTail
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1516;
// $$$$$$$$ 
} // CONDITION1517 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1516 N=1515
if (javadummy) break CONDITION1515;
} // CONDLIST1516 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1514;
// $$$$$$$$ 
} // CONDITION1515 // @@@ end of alternative
CONDITION1518: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = LIST;
if (current0.Name
!= "NilOf-FunctionStatementList_A1_M1")
if (javadummy) break CONDITION1518;
};
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1514;
// $$$$$$$$ 
} // CONDITION1518 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1514 N=1513
if (javadummy) break CONDITION1513;
} // CONDLIST1514 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1512;
// $$$$$$$$ 
} // CONDITION1513 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1512 N=1511
if (javadummy) break CONDITION1511;
} // CONDLIST1512 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1511
// failed:
JavaLib.rtsAllAlternativesFailed("ZzTrafo_FunctionStatements");
}


// global variable ScopeStack
static JavaNode ScopeStack = null;
// global variable GlobalScope
static JavaNode GlobalScope = null;

public
static
void
InitScopeHandling(
)
{
CONDITION1519:
while(javadummy) {
// ***** begin condlist 1520 (in cond 1519) *****
CONDLIST1520: // @@@ begin of alternative group
while(javadummy) {
CONDITION1521: // @@@ begin of alternative
while(javadummy) {
ScopeStack=
NodeFactory.NewNode (
"NilOf-Seq-SYMTABENTRY"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1520;
// $$$$$$$$ 
} // CONDITION1521 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1520 N=1519
if (javadummy) break CONDITION1519;
} // CONDLIST1520 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1519
// failed:
JavaLib.rtsAllAlternativesFailed("InitScopeHandling");
}



public
static
void
GloballyDefined(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Def
JavaNode Def = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Name
JavaNode Name = null;
CONDITION1522:
while(javadummy) {
// ***** begin condlist 1523 (in cond 1522) *****
CONDLIST1523: // @@@ begin of alternative group
while(javadummy) {
CONDITION1524: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Name --- JJ.M4
Name = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
xDefined
(
Name
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
yy_outparam_0 = 
Def
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1523;
// $$$$$$$$ 
} // CONDITION1524 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1523 N=1522
if (javadummy) break CONDITION1522;
} // CONDLIST1523 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1522
// failed:
JavaLib.rtsAllAlternativesFailed("GloballyDefined");
}



public
static
void
LocallyDefined(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Def
JavaNode Def = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Name
JavaNode Name = null;
CONDITION1525:
while(javadummy) {
// ***** begin condlist 1526 (in cond 1525) *****
CONDLIST1526: // @@@ begin of alternative group
while(javadummy) {
CONDITION1527: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Name --- JJ.M4
Name = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
xDefined
(
Name
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
yy_outparam_0 = 
Def
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1526;
// $$$$$$$$ 
} // CONDITION1527 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1526 N=1525
if (javadummy) break CONDITION1525;
} // CONDLIST1526 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1525
// failed:
JavaLib.rtsAllAlternativesFailed("LocallyDefined");
}



public
static
void
xDefined(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1528:
while(javadummy) {
// ***** begin condlist 1529 (in cond 1528) *****
CONDLIST1529: // @@@ begin of alternative group
while(javadummy) {
CONDITION1530: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative M
JavaNode M= null;
// DECLARE for alternative S
JavaNode S= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
if (! JavaLib.rtsTestDefined(ScopeStack,"/line,offset,length,file=/ 63 1422 10 Globals.g"))
if (javadummy) break CONDITION1530;
{
JavaNode current0 = ScopeStack;
//assign current0 to S --- JJ.M4
S = current0 ;
};
if (! 
YyProcs.
IsInSymtabEntryListList
(
S
,
Id
)
)
if (javadummy) break CONDITION1530;
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to M --- JJ.M4
M = current0 ;
}
yy_outparam_0 = 
M
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1529;
// $$$$$$$$ 
} // CONDITION1530 // @@@ end of alternative
CONDITION1531: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Id
,
new JavaStringValue( "' has not been declared" )
,
Pos
);
yy_outparam_0 = 
NodeFactory.NewNode(
"nodefinition"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1529;
// $$$$$$$$ 
} // CONDITION1531 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1529 N=1528
if (javadummy) break CONDITION1528;
} // CONDLIST1529 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1528
// failed:
JavaLib.rtsAllAlternativesFailed("xDefined");
}



public
static
boolean
IsInSymtabEntryListList(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Id
JavaNode Id = null;
// DECLARE for proc Tl
JavaNode Tl = null;
// DECLARE for proc Hd
JavaNode Hd = null;
// DECLARE for proc M
JavaNode M = null;
CONDITION1532:
while(javadummy) {
// ***** begin condlist 1533 (in cond 1532) *****
CONDLIST1533: // @@@ begin of alternative group
while(javadummy) {
CONDITION1534: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-Seq-SYMTABENTRY")
if (javadummy) break CONDITION1534;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Hd --- JJ.M4
Hd = current1 ;
current1 = current0.Child1[1];
//assign current1 to Tl --- JJ.M4
Tl = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
// ***** begin condlist 1535 (in cond 1534) *****
CONDLIST1535: // @@@ begin of alternative group
while(javadummy) {
CONDITION1536: // @@@ begin of alternative
while(javadummy) {
if (! 
YyProcs.
IsInSymtabEntryList
(
Hd
,
Id
)
)
if (javadummy) break CONDITION1536;
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to M --- JJ.M4
M = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1535;
// $$$$$$$$ 
} // CONDITION1536 // @@@ end of alternative
CONDITION1537: // @@@ begin of alternative
while(javadummy) {
if (! 
YyProcs.
IsInSymtabEntryListList
(
Tl
,
Id
)
)
if (javadummy) break CONDITION1537;
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to M --- JJ.M4
M = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1535;
// $$$$$$$$ 
} // CONDITION1537 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1535 N=1534
if (javadummy) break CONDITION1534;
} // CONDLIST1535 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
M
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1533;
// $$$$$$$$ 
} // CONDITION1534 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1533 N=1532
if (javadummy) break CONDITION1532;
} // CONDLIST1533 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
return true;
} // CONDITION1532
// failed:
return false;
}



public
static
boolean
IsInSymtabEntryList(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Id
JavaNode Id = null;
// DECLARE for proc Tl
JavaNode Tl = null;
// DECLARE for proc Hd
JavaNode Hd = null;
// DECLARE for proc M
JavaNode M = null;
CONDITION1538:
while(javadummy) {
// ***** begin condlist 1539 (in cond 1538) *****
CONDLIST1539: // @@@ begin of alternative group
while(javadummy) {
CONDITION1540: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-SYMTABENTRY")
if (javadummy) break CONDITION1540;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Hd --- JJ.M4
Hd = current1 ;
current1 = current0.Child1[1];
//assign current1 to Tl --- JJ.M4
Tl = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
// ***** begin condlist 1541 (in cond 1540) *****
CONDLIST1541: // @@@ begin of alternative group
while(javadummy) {
CONDITION1542: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id0
JavaNode Id0= null;
{
JavaNode current0 = Hd;
if (! current0 .Name
.equals( "symtabentry") )
   if (javadummy) break  CONDITION1542;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id0 --- JJ.M4
Id0 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to M --- JJ.M4
M = current1 ;
} //)) children level 1
};
{
if (! JavaLib.rtsEqualString(
Id
,
Id0
)
)
   if (javadummy) break  CONDITION1542;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1541;
// $$$$$$$$ 
} // CONDITION1542 // @@@ end of alternative
CONDITION1543: // @@@ begin of alternative
while(javadummy) {
if (! 
YyProcs.
IsInSymtabEntryList
(
Tl
,
Id
)
)
if (javadummy) break CONDITION1543;
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to M --- JJ.M4
M = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1541;
// $$$$$$$$ 
} // CONDITION1543 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1541 N=1540
if (javadummy) break CONDITION1540;
} // CONDLIST1541 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
M
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1539;
// $$$$$$$$ 
} // CONDITION1540 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1539 N=1538
if (javadummy) break CONDITION1538;
} // CONDLIST1539 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
return true;
} // CONDITION1538
// failed:
return false;
}



public
static
void
BeginGlobalScope(
)
{
CONDITION1544:
while(javadummy) {
// ***** begin condlist 1545 (in cond 1544) *****
CONDLIST1545: // @@@ begin of alternative group
while(javadummy) {
CONDITION1546: // @@@ begin of alternative
while(javadummy) {
YyProcs.
xBeginScope
(
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1545;
// $$$$$$$$ 
} // CONDITION1546 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1545 N=1544
if (javadummy) break CONDITION1544;
} // CONDLIST1545 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1544
// failed:
JavaLib.rtsAllAlternativesFailed("BeginGlobalScope");
}



public
static
void
EndGlobalScope(
)
{
CONDITION1547:
while(javadummy) {
// ***** begin condlist 1548 (in cond 1547) *****
CONDLIST1548: // @@@ begin of alternative group
while(javadummy) {
CONDITION1549: // @@@ begin of alternative
while(javadummy) {
YyProcs.
xEndScope
(
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1548;
// $$$$$$$$ 
} // CONDITION1549 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1548 N=1547
if (javadummy) break CONDITION1547;
} // CONDLIST1548 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1547
// failed:
JavaLib.rtsAllAlternativesFailed("EndGlobalScope");
}



public
static
void
BeginLocalScope(
)
{
CONDITION1550:
while(javadummy) {
// ***** begin condlist 1551 (in cond 1550) *****
CONDLIST1551: // @@@ begin of alternative group
while(javadummy) {
CONDITION1552: // @@@ begin of alternative
while(javadummy) {
YyProcs.
xBeginScope
(
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1551;
// $$$$$$$$ 
} // CONDITION1552 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1551 N=1550
if (javadummy) break CONDITION1550;
} // CONDLIST1551 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1550
// failed:
JavaLib.rtsAllAlternativesFailed("BeginLocalScope");
}



public
static
void
EndLocalScope(
)
{
CONDITION1553:
while(javadummy) {
// ***** begin condlist 1554 (in cond 1553) *****
CONDLIST1554: // @@@ begin of alternative group
while(javadummy) {
CONDITION1555: // @@@ begin of alternative
while(javadummy) {
YyProcs.
xEndScope
(
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1554;
// $$$$$$$$ 
} // CONDITION1555 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1554 N=1553
if (javadummy) break CONDITION1553;
} // CONDLIST1554 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1553
// failed:
JavaLib.rtsAllAlternativesFailed("EndLocalScope");
}



public
static
void
xBeginScope(
)
{
// DECLARE for proc Tl
JavaNode Tl = null;
CONDITION1556:
while(javadummy) {
// ***** begin condlist 1557 (in cond 1556) *****
CONDLIST1557: // @@@ begin of alternative group
while(javadummy) {
CONDITION1558: // @@@ begin of alternative
while(javadummy) {
if (! JavaLib.rtsTestDefined(ScopeStack,"/line,offset,length,file=/ 105 2328 10 Globals.g"))
if (javadummy) break CONDITION1558;
{
JavaNode current0 = ScopeStack;
//assign current0 to Tl --- JJ.M4
Tl = current0 ;
};
ScopeStack=
NodeFactory.NewNode (
"SeqOf-Seq-SYMTABENTRY"
, new JavaNode [] {
NodeFactory.NewNode (
"NilOf-SYMTABENTRY"
,  new JavaNode [] {})
,
Tl
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1557;
// $$$$$$$$ 
} // CONDITION1558 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1557 N=1556
if (javadummy) break CONDITION1556;
} // CONDLIST1557 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1556
// failed:
JavaLib.rtsAllAlternativesFailed("xBeginScope");
}



public
static
void
xEndScope(
)
{
// DECLARE for proc Tl
JavaNode Tl = null;
// DECLARE for proc Hd
JavaNode Hd = null;
CONDITION1559:
while(javadummy) {
// ***** begin condlist 1560 (in cond 1559) *****
CONDLIST1560: // @@@ begin of alternative group
while(javadummy) {
CONDITION1561: // @@@ begin of alternative
while(javadummy) {
if (! JavaLib.rtsTestDefined(ScopeStack,"/line,offset,length,file=/ 110 2440 10 Globals.g"))
if (javadummy) break CONDITION1561;
{
JavaNode current0 = ScopeStack;
if (current0.Name
!= "SeqOf-Seq-SYMTABENTRY")
if (javadummy) break CONDITION1561;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Hd --- JJ.M4
Hd = current1 ;
current1 = current0.Child1[1];
//assign current1 to Tl --- JJ.M4
Tl = current1 ;
} //)) children level 1
};
ScopeStack=
Tl
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1560;
// $$$$$$$$ 
} // CONDITION1561 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1560 N=1559
if (javadummy) break CONDITION1559;
} // CONDLIST1560 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1559
// failed:
JavaLib.rtsAllAlternativesFailed("xEndScope");
}



public
static
void
DefineLocalTimer(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1562:
while(javadummy) {
// ***** begin condlist 1563 (in cond 1562) *****
CONDLIST1563: // @@@ begin of alternative group
while(javadummy) {
CONDITION1564: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
EnterIntoSymtab
(
Id
,
NodeFactory.NewNode(
"localtimer"
, new JavaNode [] {
}
)
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1563;
// $$$$$$$$ 
} // CONDITION1564 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1563 N=1562
if (javadummy) break CONDITION1562;
} // CONDLIST1563 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1562
// failed:
JavaLib.rtsAllAlternativesFailed("DefineLocalTimer");
}



public
static
void
DefineLocalVar(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1565:
while(javadummy) {
// ***** begin condlist 1566 (in cond 1565) *****
CONDLIST1566: // @@@ begin of alternative group
while(javadummy) {
CONDITION1567: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
EnterIntoSymtab
(
Id
,
NodeFactory.NewNode(
"localvar"
, new JavaNode [] {
Tp
}
)
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1566;
// $$$$$$$$ 
} // CONDITION1567 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1566 N=1565
if (javadummy) break CONDITION1565;
} // CONDLIST1566 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1565
// failed:
JavaLib.rtsAllAlternativesFailed("DefineLocalVar");
}



public
static
void
DefineComponentMember_Var(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1568:
while(javadummy) {
// ***** begin condlist 1569 (in cond 1568) *****
CONDLIST1569: // @@@ begin of alternative group
while(javadummy) {
CONDITION1570: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
EnterIntoSymtab
(
Id
,
NodeFactory.NewNode(
"componentmember_var"
, new JavaNode [] {
Tp
}
)
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1569;
// $$$$$$$$ 
} // CONDITION1570 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1569 N=1568
if (javadummy) break CONDITION1568;
} // CONDLIST1569 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1568
// failed:
JavaLib.rtsAllAlternativesFailed("DefineComponentMember_Var");
}



public
static
void
DefineComponentMember_Port(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1571:
while(javadummy) {
// ***** begin condlist 1572 (in cond 1571) *****
CONDLIST1572: // @@@ begin of alternative group
while(javadummy) {
CONDITION1573: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
EnterIntoSymtab
(
Id
,
NodeFactory.NewNode(
"componentmember_port"
, new JavaNode [] {
NodeFactory.NewNode(
"port_notyet"
, new JavaNode [] {
}
)
}
)
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1572;
// $$$$$$$$ 
} // CONDITION1573 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1572 N=1571
if (javadummy) break CONDITION1571;
} // CONDLIST1572 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1571
// failed:
JavaLib.rtsAllAlternativesFailed("DefineComponentMember_Port");
}



public
static
void
DefineGlobal(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Def
JavaNode Def = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1574:
while(javadummy) {
// ***** begin condlist 1575 (in cond 1574) *****
CONDLIST1575: // @@@ begin of alternative group
while(javadummy) {
CONDITION1576: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
EnterIntoSymtab
(
Id
,
Def
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1575;
// $$$$$$$$ 
} // CONDITION1576 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1575 N=1574
if (javadummy) break CONDITION1574;
} // CONDLIST1575 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1574
// failed:
JavaLib.rtsAllAlternativesFailed("DefineGlobal");
}



public
static
void
EnterIntoSymtab(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc New
JavaNode New = null;
// DECLARE for proc NewInner
JavaNode NewInner = null;
// DECLARE for proc Outer
JavaNode Outer = null;
// DECLARE for proc Inner
JavaNode Inner = null;
// DECLARE for proc Old
JavaNode Old = null;
// DECLARE for proc P
JavaNode P = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Def
JavaNode Def = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1577:
while(javadummy) {
// ***** begin condlist 1578 (in cond 1577) *****
CONDLIST1578: // @@@ begin of alternative group
while(javadummy) {
CONDITION1579: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
P = 
NodeFactory.NewNode(
"symtabentry"
, new JavaNode [] {
Id
,
Def
}
)
;
if (! JavaLib.rtsTestDefined(ScopeStack,"/line,offset,length,file=/ 164 3585 10 Globals.g"))
if (javadummy) break CONDITION1579;
{
JavaNode current0 = ScopeStack;
//assign current0 to Old --- JJ.M4
Old = current0 ;
};
{
JavaNode current0 = Old;
if (current0.Name
!= "SeqOf-Seq-SYMTABENTRY")
if (javadummy) break CONDITION1579;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Inner --- JJ.M4
Inner = current1 ;
current1 = current0.Child1[1];
//assign current1 to Outer --- JJ.M4
Outer = current1 ;
} //)) children level 1
};
// ***** begin condlist 1580 (in cond 1579) *****
CONDLIST1580: // @@@ begin of alternative group
while(javadummy) {
CONDITION1581: // @@@ begin of alternative
while(javadummy) {
if (! 
YyProcs.
IsDef
(
Id
,
Inner
)
)
if (javadummy) break CONDITION1581;
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Id
,
new JavaStringValue( "' already declared" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1580;
// $$$$$$$$ 
} // CONDITION1581 // @@@ end of alternative
CONDITION1582: // @@@ begin of alternative
while(javadummy) {
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1580;
// $$$$$$$$ 
} // CONDITION1582 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1580 N=1579
if (javadummy) break CONDITION1579;
} // CONDLIST1580 @@@ end of alternative group
// *** CONTINUE ***
NewInner = 
NodeFactory.NewNode (
"SeqOf-SYMTABENTRY"
, new JavaNode [] {
P
,
Inner
}
)
;
New = 
NodeFactory.NewNode (
"SeqOf-Seq-SYMTABENTRY"
, new JavaNode [] {
NewInner
,
Outer
}
)
;
ScopeStack=
New
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1578;
// $$$$$$$$ 
} // CONDITION1579 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1578 N=1577
if (javadummy) break CONDITION1577;
} // CONDLIST1578 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1577
// failed:
JavaLib.rtsAllAlternativesFailed("EnterIntoSymtab");
}



public
static
boolean
IsDef(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc T
JavaNode T = null;
// DECLARE for proc H
JavaNode H = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1583:
while(javadummy) {
// ***** begin condlist 1584 (in cond 1583) *****
CONDLIST1584: // @@@ begin of alternative group
while(javadummy) {
CONDITION1585: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
if (current0.Name
!= "SeqOf-SYMTABENTRY")
if (javadummy) break CONDITION1585;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
// ***** begin condlist 1586 (in cond 1585) *****
CONDLIST1586: // @@@ begin of alternative group
while(javadummy) {
CONDITION1587: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative J
JavaNode J= null;
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "symtabentry") )
   if (javadummy) break  CONDITION1587;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to J --- JJ.M4
J = current1 ;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
{
if (! JavaLib.rtsEqualString(
Id
,
J
)
)
   if (javadummy) break  CONDITION1587;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1586;
// $$$$$$$$ 
} // CONDITION1587 // @@@ end of alternative
CONDITION1588: // @@@ begin of alternative
while(javadummy) {
if (! 
YyProcs.
IsDef
(
Id
,
T
)
)
if (javadummy) break CONDITION1588;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1586;
// $$$$$$$$ 
} // CONDITION1588 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1586 N=1585
if (javadummy) break CONDITION1585;
} // CONDLIST1586 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1584;
// $$$$$$$$ 
} // CONDITION1585 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1584 N=1583
if (javadummy) break CONDITION1583;
} // CONDLIST1584 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
return true;
} // CONDITION1583
// failed:
return false;
}



public
static
void
DeclarePortType(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc PortDefAttribs
JavaNode PortDefAttribs = null;
// DECLARE for proc Name
JavaNode Name = null;
CONDITION1589:
while(javadummy) {
// ***** begin condlist 1590 (in cond 1589) *****
CONDLIST1590: // @@@ begin of alternative group
while(javadummy) {
CONDITION1591: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Name --- JJ.M4
Name = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to PortDefAttribs --- JJ.M4
PortDefAttribs = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineGlobal
(
Name
,
NodeFactory.NewNode(
"porttype"
, new JavaNode [] {
Name
,
PortDefAttribs
,
JavaLib.rtsNewKey()
}
)
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1590;
// $$$$$$$$ 
} // CONDITION1591 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1590 N=1589
if (javadummy) break CONDITION1589;
} // CONDLIST1590 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1589
// failed:
JavaLib.rtsAllAlternativesFailed("DeclarePortType");
}



public
static
void
DeclareRecordType(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Name
JavaNode Name = null;
CONDITION1592:
while(javadummy) {
// ***** begin condlist 1593 (in cond 1592) *****
CONDLIST1593: // @@@ begin of alternative group
while(javadummy) {
CONDITION1594: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Name --- JJ.M4
Name = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineGlobal
(
Name
,
NodeFactory.NewNode(
"recordtype"
, new JavaNode [] {
Name
,
X
,
JavaLib.rtsNewKey()
}
)
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1593;
// $$$$$$$$ 
} // CONDITION1594 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1593 N=1592
if (javadummy) break CONDITION1592;
} // CONDLIST1593 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1592
// failed:
JavaLib.rtsAllAlternativesFailed("DeclareRecordType");
}



public
static
void
DeclareComponentType(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc COMPDEF
JavaNode COMPDEF = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION1595:
while(javadummy) {
// ***** begin condlist 1596 (in cond 1595) *****
CONDLIST1596: // @@@ begin of alternative group
while(javadummy) {
CONDITION1597: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to COMPDEF --- JJ.M4
COMPDEF = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineGlobal
(
NAME
,
NodeFactory.NewNode(
"componenttype"
, new JavaNode [] {
COMPDEF
,
JavaLib.rtsNewKey()
}
)
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1596;
// $$$$$$$$ 
} // CONDITION1597 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1596 N=1595
if (javadummy) break CONDITION1595;
} // CONDLIST1596 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1595
// failed:
JavaLib.rtsAllAlternativesFailed("DeclareComponentType");
}



public
static
void
DeclareTestcase(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION1598:
while(javadummy) {
// ***** begin condlist 1599 (in cond 1598) *****
CONDLIST1599: // @@@ begin of alternative group
while(javadummy) {
CONDITION1600: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineGlobal
(
NAME
,
NodeFactory.NewNode(
"testcasedefinition"
, new JavaNode [] {
X
,
JavaLib.rtsNewKey()
}
)
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1599;
// $$$$$$$$ 
} // CONDITION1600 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1599 N=1598
if (javadummy) break CONDITION1598;
} // CONDLIST1599 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1598
// failed:
JavaLib.rtsAllAlternativesFailed("DeclareTestcase");
}



public
static
void
DeclareFunction(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc FDEF
JavaNode FDEF = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION1601:
while(javadummy) {
// ***** begin condlist 1602 (in cond 1601) *****
CONDLIST1602: // @@@ begin of alternative group
while(javadummy) {
CONDITION1603: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to FDEF --- JJ.M4
FDEF = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineGlobal
(
NAME
,
NodeFactory.NewNode(
"functiondefinition"
, new JavaNode [] {
FDEF
,
JavaLib.rtsNewKey()
}
)
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1602;
// $$$$$$$$ 
} // CONDITION1603 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1602 N=1601
if (javadummy) break CONDITION1601;
} // CONDLIST1602 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1601
// failed:
JavaLib.rtsAllAlternativesFailed("DeclareFunction");
}



public
static
void
ProcessGlobals(
)
{
// DECLARE for proc X
JavaNode X = null;
CONDITION1604:
while(javadummy) {
// ***** begin condlist 1605 (in cond 1604) *****
CONDLIST1605: // @@@ begin of alternative group
while(javadummy) {
CONDITION1606: // @@@ begin of alternative
while(javadummy) {
YyProcs.
PhaseTwo
(
);
YyProcs.
Emit_Prelude
(
);
YyProcs.
PhaseThree
(
);
if (! JavaLib.rtsTestDefined(ZzControlPart,"/line,offset,length,file=/ 258 6248 13 Globals.g"))
if (javadummy) break CONDITION1606;
{
JavaNode current0 = ZzControlPart;
//assign current0 to X --- JJ.M4
X = current0 ;
};
YyProcs.
ProcessControlPart
(
X
);
YyProcs.
Emit_Postlude
(
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1605;
// $$$$$$$$ 
} // CONDITION1606 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1605 N=1604
if (javadummy) break CONDITION1604;
} // CONDLIST1605 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1604
// failed:
JavaLib.rtsAllAlternativesFailed("ProcessGlobals");
}



public
static
void
PhaseTwo(
)
{
// DECLARE for proc GL
JavaNode GL = null;
// DECLARE for proc Globals
JavaNode Globals = null;
CONDITION1607:
while(javadummy) {
// ***** begin condlist 1608 (in cond 1607) *****
CONDLIST1608: // @@@ begin of alternative group
while(javadummy) {
CONDITION1609: // @@@ begin of alternative
while(javadummy) {
if (! JavaLib.rtsTestDefined(ScopeStack,"/line,offset,length,file=/ 274 6510 10 Globals.g"))
if (javadummy) break CONDITION1609;
{
JavaNode current0 = ScopeStack;
if (current0.Name
!= "SeqOf-Seq-SYMTABENTRY")
if (javadummy) break CONDITION1609;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Globals --- JJ.M4
Globals = current1 ;
current1 = current0.Child1[1];
if (current1.Name
!= "NilOf-Seq-SYMTABENTRY")
if (javadummy) break CONDITION1609;
} //)) children level 1
};
GL = 
Globals
;
// ***** begin condlist 1610 (in cond 1609) *****
CONDLIST1610: // @@@ begin of alternative group
while(javadummy) {
CONDITION1611: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative NAME
JavaNode NAME= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = GL;
if (current0.Name
!= "SeqOf-SYMTABENTRY")
if (javadummy) break CONDITION1611;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "symtabentry") )
   if (javadummy) break  CONDITION1611;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME --- JJ.M4
NAME = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Def --- JJ.M4
Def = current1 ;
} //)) children level 1
};
// ***** begin condlist 1612 (in cond 1611) *****
CONDLIST1612: // @@@ begin of alternative group
while(javadummy) {
CONDITION1613: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedComponentType
JavaNode RefNormalizedComponentType= null;
// DECLARE for alternative ComponentDef
JavaNode ComponentDef= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION1613;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ComponentDef --- JJ.M4
ComponentDef = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedComponentType --- JJ.M4
RefNormalizedComponentType = current1 ;
} //)) children level 1
};
YyProcs.
ActivateComponentType
(
NAME
,
ComponentDef
,
RefNormalizedComponentType
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1612;
// $$$$$$$$ 
} // CONDITION1613 // @@@ end of alternative
CONDITION1614: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedPortType
JavaNode RefNormalizedPortType= null;
// DECLARE for alternative PortDefAttribs
JavaNode PortDefAttribs= null;
// DECLARE for alternative N
JavaNode N= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "porttype") )
   if (javadummy) break  CONDITION1614;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N --- JJ.M4
N = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to PortDefAttribs --- JJ.M4
PortDefAttribs = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to RefNormalizedPortType --- JJ.M4
RefNormalizedPortType = current1 ;
} //)) children level 1
};
YyProcs.
ActivatePortType
(
N
,
PortDefAttribs
,
RefNormalizedPortType
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1612;
// $$$$$$$$ 
} // CONDITION1614 // @@@ end of alternative
CONDITION1615: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedFields
JavaNode RefNormalizedFields= null;
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative N
JavaNode N= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION1615;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N --- JJ.M4
N = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X --- JJ.M4
X = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to RefNormalizedFields --- JJ.M4
RefNormalizedFields = current1 ;
} //)) children level 1
};
YyProcs.
ActivateRecordType
(
NAME
,
X
,
RefNormalizedFields
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1612;
// $$$$$$$$ 
} // CONDITION1615 // @@@ end of alternative
CONDITION1616: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedFunction
JavaNode RefNormalizedFunction= null;
// DECLARE for alternative FunctionDef
JavaNode FunctionDef= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "functiondefinition") )
   if (javadummy) break  CONDITION1616;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FunctionDef --- JJ.M4
FunctionDef = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedFunction --- JJ.M4
RefNormalizedFunction = current1 ;
} //)) children level 1
};
YyProcs.
ActivateFunction
(
NAME
,
FunctionDef
,
RefNormalizedFunction
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1612;
// $$$$$$$$ 
} // CONDITION1616 // @@@ end of alternative
CONDITION1617: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedTestcase
JavaNode RefNormalizedTestcase= null;
// DECLARE for alternative TestcaseDef
JavaNode TestcaseDef= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "testcasedefinition") )
   if (javadummy) break  CONDITION1617;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to TestcaseDef --- JJ.M4
TestcaseDef = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedTestcase --- JJ.M4
RefNormalizedTestcase = current1 ;
} //)) children level 1
};
YyProcs.
ActivateTestcase
(
NAME
,
TestcaseDef
,
RefNormalizedTestcase
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1612;
// $$$$$$$$ 
} // CONDITION1617 // @@@ end of alternative
CONDITION1618: // @@@ begin of alternative
while(javadummy) {
YyProcs.
CompilerError
(
new JavaStringValue( "unexpected global item" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1612;
// $$$$$$$$ 
} // CONDITION1618 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1612 N=1611
if (javadummy) break CONDITION1611;
} // CONDLIST1612 @@@ end of alternative group
// *** CONTINUE ***
GL = 
T
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) continue CONDLIST1610;
// $$$$$$$$ 
} // CONDITION1611 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1610 N=1609
if (javadummy) break CONDLIST1610;
} // CONDLIST1610 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1608;
// $$$$$$$$ 
} // CONDITION1609 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1608 N=1607
if (javadummy) break CONDITION1607;
} // CONDLIST1608 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1607
// failed:
JavaLib.rtsAllAlternativesFailed("PhaseTwo");
}



public
static
void
PhaseThree(
)
{
// DECLARE for proc GL
JavaNode GL = null;
// DECLARE for proc Globals
JavaNode Globals = null;
CONDITION1619:
while(javadummy) {
// ***** begin condlist 1620 (in cond 1619) *****
CONDLIST1620: // @@@ begin of alternative group
while(javadummy) {
CONDITION1621: // @@@ begin of alternative
while(javadummy) {
if (! JavaLib.rtsTestDefined(ScopeStack,"/line,offset,length,file=/ 306 7596 10 Globals.g"))
if (javadummy) break CONDITION1621;
{
JavaNode current0 = ScopeStack;
if (current0.Name
!= "SeqOf-Seq-SYMTABENTRY")
if (javadummy) break CONDITION1621;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Globals --- JJ.M4
Globals = current1 ;
current1 = current0.Child1[1];
if (current1.Name
!= "NilOf-Seq-SYMTABENTRY")
if (javadummy) break CONDITION1621;
} //)) children level 1
};
GL = 
Globals
;
// ***** begin condlist 1622 (in cond 1621) *****
CONDLIST1622: // @@@ begin of alternative group
while(javadummy) {
CONDITION1623: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative NAME
JavaNode NAME= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = GL;
if (current0.Name
!= "SeqOf-SYMTABENTRY")
if (javadummy) break CONDITION1623;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "symtabentry") )
   if (javadummy) break  CONDITION1623;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME --- JJ.M4
NAME = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Def --- JJ.M4
Def = current1 ;
} //)) children level 1
};
// ***** begin condlist 1624 (in cond 1623) *****
CONDLIST1624: // @@@ begin of alternative group
while(javadummy) {
CONDITION1625: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedComponentType
JavaNode RefNormalizedComponentType= null;
// DECLARE for alternative ComponentDef
JavaNode ComponentDef= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION1625;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ComponentDef --- JJ.M4
ComponentDef = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedComponentType --- JJ.M4
RefNormalizedComponentType = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1624;
// $$$$$$$$ 
} // CONDITION1625 // @@@ end of alternative
CONDITION1626: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedPortType
JavaNode RefNormalizedPortType= null;
// DECLARE for alternative PortDefAttribs
JavaNode PortDefAttribs= null;
// DECLARE for alternative N
JavaNode N= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "porttype") )
   if (javadummy) break  CONDITION1626;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N --- JJ.M4
N = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to PortDefAttribs --- JJ.M4
PortDefAttribs = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to RefNormalizedPortType --- JJ.M4
RefNormalizedPortType = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1624;
// $$$$$$$$ 
} // CONDITION1626 // @@@ end of alternative
CONDITION1627: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedFields
JavaNode RefNormalizedFields= null;
// DECLARE for alternative X4
JavaNode X4= null;
// DECLARE for alternative N
JavaNode N= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION1627;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N --- JJ.M4
N = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X4 --- JJ.M4
X4 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to RefNormalizedFields --- JJ.M4
RefNormalizedFields = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1624;
// $$$$$$$$ 
} // CONDITION1627 // @@@ end of alternative
CONDITION1628: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedFunction
JavaNode RefNormalizedFunction= null;
// DECLARE for alternative FunctionDef
JavaNode FunctionDef= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "functiondefinition") )
   if (javadummy) break  CONDITION1628;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FunctionDef --- JJ.M4
FunctionDef = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedFunction --- JJ.M4
RefNormalizedFunction = current1 ;
} //)) children level 1
};
YyProcs.
ActivateFunction2
(
NAME
,
RefNormalizedFunction
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1624;
// $$$$$$$$ 
} // CONDITION1628 // @@@ end of alternative
CONDITION1629: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedTestcase
JavaNode RefNormalizedTestcase= null;
// DECLARE for alternative TestcaseDef
JavaNode TestcaseDef= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "testcasedefinition") )
   if (javadummy) break  CONDITION1629;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to TestcaseDef --- JJ.M4
TestcaseDef = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedTestcase --- JJ.M4
RefNormalizedTestcase = current1 ;
} //)) children level 1
};
YyProcs.
ActivateTestcase2
(
NAME
,
RefNormalizedTestcase
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1624;
// $$$$$$$$ 
} // CONDITION1629 // @@@ end of alternative
CONDITION1630: // @@@ begin of alternative
while(javadummy) {
YyProcs.
CompilerError
(
new JavaStringValue( "unexpected global item" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1624;
// $$$$$$$$ 
} // CONDITION1630 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1624 N=1623
if (javadummy) break CONDITION1623;
} // CONDLIST1624 @@@ end of alternative group
// *** CONTINUE ***
GL = 
T
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) continue CONDLIST1622;
// $$$$$$$$ 
} // CONDITION1623 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1622 N=1621
if (javadummy) break CONDLIST1622;
} // CONDLIST1622 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1620;
// $$$$$$$$ 
} // CONDITION1621 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1620 N=1619
if (javadummy) break CONDITION1619;
} // CONDLIST1620 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1619
// failed:
JavaLib.rtsAllAlternativesFailed("PhaseThree");
}



public
static
void
OpenFile(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc Name
JavaNode Name = null;
// DECLARE for proc Pkg
JavaNode Pkg = null;
CONDITION1631:
while(javadummy) {
// ***** begin condlist 1632 (in cond 1631) *****
CONDLIST1632: // @@@ begin of alternative group
while(javadummy) {
CONDITION1633: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Pkg --- JJ.M4
Pkg = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Name --- JJ.M4
Name = current0 ;
};
YyExternalPackage.ExternalFunctions.
OpenJavaTargetFile
(
Pkg
,
Name
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1632;
// $$$$$$$$ 
} // CONDITION1633 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1632 N=1631
if (javadummy) break CONDITION1631;
} // CONDLIST1632 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1631
// failed:
JavaLib.rtsAllAlternativesFailed("OpenFile");
}


// global variable ZzControlPart
static JavaNode ZzControlPart = null;

public
static
void
DeclareControlPart(

JavaNode yy_inparam_0
)
{
// DECLARE for proc X
JavaNode X = null;
CONDITION1634:
while(javadummy) {
// ***** begin condlist 1635 (in cond 1634) *****
CONDLIST1635: // @@@ begin of alternative group
while(javadummy) {
CONDITION1636: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
ZzControlPart=
X
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1635;
// $$$$$$$$ 
} // CONDITION1636 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1635 N=1634
if (javadummy) break CONDITION1634;
} // CONDLIST1635 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1634
// failed:
JavaLib.rtsAllAlternativesFailed("DeclareControlPart");
}



public
static
void
ActivateFunction(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc NormalizedFunction
JavaNode NormalizedFunction = null;
// DECLARE for proc RefNormalizedFunction
JavaNode RefNormalizedFunction = null;
// DECLARE for proc FDEF
JavaNode FDEF = null;
// DECLARE for proc NAME
JavaNode NAME = null;
// DECLARE for proc BLOCK
JavaNode BLOCK = null;
// DECLARE for proc FDEF18
JavaNode FDEF18 = null;
// DECLARE for proc M7
JavaNode M7 = null;
// DECLARE for proc FDEF15
JavaNode FDEF15 = null;
// DECLARE for proc FDEF13
JavaNode FDEF13 = null;
// DECLARE for proc NAME0
JavaNode NAME0 = null;
// DECLARE for proc RunsOnC
JavaNode RunsOnC = null;
CONDITION1637:
while(javadummy) {
// ***** begin condlist 1638 (in cond 1637) *****
CONDLIST1638: // @@@ begin of alternative group
while(javadummy) {
CONDITION1639: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to FDEF --- JJ.M4
FDEF = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to RefNormalizedFunction --- JJ.M4
RefNormalizedFunction = current0 ;
};
// ***** begin condlist 1640 (in cond 1639) *****
CONDLIST1640: // @@@ begin of alternative group
while(javadummy) {
CONDITION1641: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FDEF;
if (! current0 .Name
.equals( "FunctionDef_A1") )
   if (javadummy) break  CONDITION1641;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME0 --- JJ.M4
NAME0 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to FDEF13 --- JJ.M4
FDEF13 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to FDEF15 --- JJ.M4
FDEF15 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to M7 --- JJ.M4
M7 = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to FDEF18 --- JJ.M4
FDEF18 = current1 ;
current1 = kurrent0.Child1[5];
//assign current1 to BLOCK --- JJ.M4
BLOCK = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1640;
// $$$$$$$$ 
} // CONDITION1641 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1640 N=1639
if (javadummy) break CONDITION1639;
} // CONDLIST1640 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1642 (in cond 1639) *****
CONDLIST1642: // @@@ begin of alternative group
while(javadummy) {
CONDITION1643: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FDEF13;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionDef_A1_M3")
if (javadummy) break CONDITION1643;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1642;
// $$$$$$$$ 
} // CONDITION1643 // @@@ end of alternative
CONDITION1644: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FDEF13;
if (current0.Name
!= "OneOf-FunctionDef_A1_M3")
if (javadummy) break CONDITION1644;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "fdef13" )
,
FDEF13
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1642;
// $$$$$$$$ 
} // CONDITION1644 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1642 N=1639
if (javadummy) break CONDITION1639;
} // CONDLIST1642 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1645 (in cond 1639) *****
CONDLIST1645: // @@@ begin of alternative group
while(javadummy) {
CONDITION1646: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FDEF15;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionDef_A1_M5")
if (javadummy) break CONDITION1646;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1645;
// $$$$$$$$ 
} // CONDITION1646 // @@@ end of alternative
CONDITION1647: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FDEF15;
if (current0.Name
!= "OneOf-FunctionDef_A1_M5")
if (javadummy) break CONDITION1647;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "fdef15" )
,
FDEF15
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1645;
// $$$$$$$$ 
} // CONDITION1647 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1645 N=1639
if (javadummy) break CONDITION1639;
} // CONDLIST1645 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1648 (in cond 1639) *****
CONDLIST1648: // @@@ begin of alternative group
while(javadummy) {
CONDITION1649: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FDEF18;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionDef_A1_M8")
if (javadummy) break CONDITION1649;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1648;
// $$$$$$$$ 
} // CONDITION1649 // @@@ end of alternative
CONDITION1650: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FDEF18;
if (current0.Name
!= "OneOf-FunctionDef_A1_M8")
if (javadummy) break CONDITION1650;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "fdef18" )
,
FDEF18
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1648;
// $$$$$$$$ 
} // CONDITION1650 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1648 N=1639
if (javadummy) break CONDITION1639;
} // CONDLIST1648 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1651 (in cond 1639) *****
CONDLIST1651: // @@@ begin of alternative group
while(javadummy) {
CONDITION1652: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RO
JavaNode RO= null;
// DECLARE for alternative RUNSON
JavaNode RUNSON= null;
{
JavaNode current0 = M7;
if (current0.Name
!= "OneOf-FunctionDef_A1_M7")
if (javadummy) break CONDITION1652;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to RO --- JJ.M4
RO = current1 ;
} //)) children level 1
};
// ***** begin condlist 1653 (in cond 1652) *****
CONDLIST1653: // @@@ begin of alternative group
while(javadummy) {
CONDITION1654: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = RO;
if (! current0 .Name
.equals( "FunctionDef_A1_M7_A1") )
   if (javadummy) break  CONDITION1654;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RUNSON --- JJ.M4
RUNSON = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1653;
// $$$$$$$$ 
} // CONDITION1654 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1653 N=1652
if (javadummy) break CONDITION1652;
} // CONDLIST1653 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
HandleRunsOn
(
RUNSON
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to RunsOnC --- JJ.M4
RunsOnC = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1651;
// $$$$$$$$ 
} // CONDITION1652 // @@@ end of alternative
CONDITION1655: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M7;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionDef_A1_M7")
if (javadummy) break CONDITION1655;
{ //(( children level 1
} //)) children level 1
};
RunsOnC = 
new JavaStringValue( "(none)" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1651;
// $$$$$$$$ 
} // CONDITION1655 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1651 N=1639
if (javadummy) break CONDITION1639;
} // CONDLIST1651 @@@ end of alternative group
// *** CONTINUE ***
NormalizedFunction = 
NodeFactory.NewNode(
"normalizedfunction"
, new JavaNode [] {
RunsOnC
,
BLOCK
}
)
;
JavaLib.rtsBindToKey(RefNormalizedFunction,
NormalizedFunction
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1638;
// $$$$$$$$ 
} // CONDITION1639 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1638 N=1637
if (javadummy) break CONDITION1637;
} // CONDLIST1638 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1637
// failed:
JavaLib.rtsAllAlternativesFailed("ActivateFunction");
}



public
static
void
HandleSystem(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc SYSTEMOPT
JavaNode SYSTEMOPT = null;
// DECLARE for proc SystemC
JavaNode SystemC = null;
CONDITION1656:
while(javadummy) {
// ***** begin condlist 1657 (in cond 1656) *****
CONDLIST1657: // @@@ begin of alternative group
while(javadummy) {
CONDITION1658: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SYSTEMOPT --- JJ.M4
SYSTEMOPT = current0 ;
};
// ***** begin condlist 1659 (in cond 1658) *****
CONDLIST1659: // @@@ begin of alternative group
while(javadummy) {
CONDITION1660: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative ConfigSpec
JavaNode ConfigSpec= null;
// DECLARE for alternative SYSSPEC
JavaNode SYSSPEC= null;
// DECLARE for alternative KOMPTYPE
JavaNode KOMPTYPE= null;
// DECLARE for alternative KOMPTYPE14
JavaNode KOMPTYPE14= null;
// DECLARE for alternative KOMPTYPE13
JavaNode KOMPTYPE13= null;
// DECLARE for alternative KOMPTYPE11
JavaNode KOMPTYPE11= null;
{
JavaNode current0 = SYSTEMOPT;
if (current0.Name
!= "OneOf-ConfigSpec_A1_M2")
if (javadummy) break CONDITION1660;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to ConfigSpec --- JJ.M4
ConfigSpec = current1 ;
} //)) children level 1
};
// ***** begin condlist 1661 (in cond 1660) *****
CONDLIST1661: // @@@ begin of alternative group
while(javadummy) {
CONDITION1662: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ConfigSpec;
if (! current0 .Name
.equals( "ConfigSpec_A1_M2_A1") )
   if (javadummy) break  CONDITION1662;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to SYSSPEC --- JJ.M4
SYSSPEC = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1661;
// $$$$$$$$ 
} // CONDITION1662 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1661 N=1660
if (javadummy) break CONDITION1660;
} // CONDLIST1661 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1663 (in cond 1660) *****
CONDLIST1663: // @@@ begin of alternative group
while(javadummy) {
CONDITION1664: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = SYSSPEC;
if (! current0 .Name
.equals( "SystemSpec_A1") )
   if (javadummy) break  CONDITION1664;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to KOMPTYPE --- JJ.M4
KOMPTYPE = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1663;
// $$$$$$$$ 
} // CONDITION1664 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1663 N=1660
if (javadummy) break CONDITION1660;
} // CONDLIST1663 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1665 (in cond 1660) *****
CONDLIST1665: // @@@ begin of alternative group
while(javadummy) {
CONDITION1666: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = KOMPTYPE;
if (! current0 .Name
.equals( "ComponentType_A1") )
   if (javadummy) break  CONDITION1666;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to KOMPTYPE11 --- JJ.M4
KOMPTYPE11 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to SystemC --- JJ.M4
SystemC = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to KOMPTYPE13 --- JJ.M4
KOMPTYPE13 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to KOMPTYPE14 --- JJ.M4
KOMPTYPE14 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1667 (in cond 1666) *****
CONDLIST1667: // @@@ begin of alternative group
while(javadummy) {
CONDITION1668: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = KOMPTYPE11;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentType_A1_M1")
if (javadummy) break CONDITION1668;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1667;
// $$$$$$$$ 
} // CONDITION1668 // @@@ end of alternative
CONDITION1669: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative C11
JavaNode C11= null;
{
JavaNode current0 = KOMPTYPE11;
if (current0.Name
!= "OneOf-ComponentType_A1_M1")
if (javadummy) break CONDITION1669;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to C11 --- JJ.M4
C11 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "qualified component in 'system'" )
,
C11
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1667;
// $$$$$$$$ 
} // CONDITION1669 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1667 N=1666
if (javadummy) break CONDITION1666;
} // CONDLIST1667 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1670 (in cond 1666) *****
CONDLIST1670: // @@@ begin of alternative group
while(javadummy) {
CONDITION1671: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = KOMPTYPE13;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentType_A1_M3")
if (javadummy) break CONDITION1671;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1670;
// $$$$$$$$ 
} // CONDITION1671 // @@@ end of alternative
CONDITION1672: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative C13
JavaNode C13= null;
{
JavaNode current0 = KOMPTYPE13;
if (current0.Name
!= "OneOf-ComponentType_A1_M3")
if (javadummy) break CONDITION1672;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to C13 --- JJ.M4
C13 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "generic component in 'system'" )
,
C13
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1670;
// $$$$$$$$ 
} // CONDITION1672 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1670 N=1666
if (javadummy) break CONDITION1666;
} // CONDLIST1670 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1673 (in cond 1666) *****
CONDLIST1673: // @@@ begin of alternative group
while(javadummy) {
CONDITION1674: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = KOMPTYPE14;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentType_A1_M4")
if (javadummy) break CONDITION1674;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1673;
// $$$$$$$$ 
} // CONDITION1674 // @@@ end of alternative
CONDITION1675: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative C14
JavaNode C14= null;
{
JavaNode current0 = KOMPTYPE14;
if (current0.Name
!= "OneOf-ComponentType_A1_M4")
if (javadummy) break CONDITION1675;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to C14 --- JJ.M4
C14 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "paramerized component in 'system'" )
,
C14
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1673;
// $$$$$$$$ 
} // CONDITION1675 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1673 N=1666
if (javadummy) break CONDITION1666;
} // CONDLIST1673 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1665;
// $$$$$$$$ 
} // CONDITION1666 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1665 N=1660
if (javadummy) break CONDITION1660;
} // CONDLIST1665 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(SystemC);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
GloballyDefined
(
SystemC
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 1676 (in cond 1660) *****
CONDLIST1676: // @@@ begin of alternative group
while(javadummy) {
CONDITION1677: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedComponentType
JavaNode RefNormalizedComponentType= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION1677;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedComponentType --- JJ.M4
RefNormalizedComponentType = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1676;
// $$$$$$$$ 
} // CONDITION1677 // @@@ end of alternative
CONDITION1678: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
SystemC
,
new JavaStringValue( "' not defined as component" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1676;
// $$$$$$$$ 
} // CONDITION1678 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1676 N=1660
if (javadummy) break CONDITION1660;
} // CONDLIST1676 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1659;
// $$$$$$$$ 
} // CONDITION1660 // @@@ end of alternative
CONDITION1679: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = SYSTEMOPT;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ConfigSpec_A1_M2")
if (javadummy) break CONDITION1679;
{ //(( children level 1
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "no 'system' specified" )
,
SYSTEMOPT
);
SystemC = 
new JavaStringValue( "" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1659;
// $$$$$$$$ 
} // CONDITION1679 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1659 N=1658
if (javadummy) break CONDITION1658;
} // CONDLIST1659 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
SystemC
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1657;
// $$$$$$$$ 
} // CONDITION1658 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1657 N=1656
if (javadummy) break CONDITION1656;
} // CONDLIST1657 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1656
// failed:
JavaLib.rtsAllAlternativesFailed("HandleSystem");
}



public
static
void
ActivateTestcase(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc NormalizedTestcase
JavaNode NormalizedTestcase = null;
// DECLARE for proc RefNormalizedTestcase
JavaNode RefNormalizedTestcase = null;
// DECLARE for proc TestcaseDef
JavaNode TestcaseDef = null;
// DECLARE for proc NAME
JavaNode NAME = null;
// DECLARE for proc BLOCK
JavaNode BLOCK = null;
// DECLARE for proc TT7
JavaNode TT7 = null;
// DECLARE for proc TT5
JavaNode TT5 = null;
// DECLARE for proc TT3
JavaNode TT3 = null;
// DECLARE for proc NAME0
JavaNode NAME0 = null;
// DECLARE for proc SystemC
JavaNode SystemC = null;
// DECLARE for proc RunsOnC
JavaNode RunsOnC = null;
CONDITION1680:
while(javadummy) {
// ***** begin condlist 1681 (in cond 1680) *****
CONDLIST1681: // @@@ begin of alternative group
while(javadummy) {
CONDITION1682: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to TestcaseDef --- JJ.M4
TestcaseDef = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to RefNormalizedTestcase --- JJ.M4
RefNormalizedTestcase = current0 ;
};
// ***** begin condlist 1683 (in cond 1682) *****
CONDLIST1683: // @@@ begin of alternative group
while(javadummy) {
CONDITION1684: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TestcaseDef;
if (! current0 .Name
.equals( "TestcaseDef_A1") )
   if (javadummy) break  CONDITION1684;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME0 --- JJ.M4
NAME0 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TT3 --- JJ.M4
TT3 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to TT5 --- JJ.M4
TT5 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to TT7 --- JJ.M4
TT7 = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to BLOCK --- JJ.M4
BLOCK = current1 ;
} //)) children level 1
};
// ***** begin condlist 1685 (in cond 1684) *****
CONDLIST1685: // @@@ begin of alternative group
while(javadummy) {
CONDITION1686: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TT3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-TestcaseDef_A1_M3")
if (javadummy) break CONDITION1686;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1685;
// $$$$$$$$ 
} // CONDITION1686 // @@@ end of alternative
CONDITION1687: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TT3;
if (current0.Name
!= "OneOf-TestcaseDef_A1_M3")
if (javadummy) break CONDITION1687;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "testcase tt3" )
,
TT3
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1685;
// $$$$$$$$ 
} // CONDITION1687 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1685 N=1684
if (javadummy) break CONDITION1684;
} // CONDLIST1685 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1688 (in cond 1684) *****
CONDLIST1688: // @@@ begin of alternative group
while(javadummy) {
CONDITION1689: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TT5;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-TestcaseDef_A1_M5")
if (javadummy) break CONDITION1689;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1688;
// $$$$$$$$ 
} // CONDITION1689 // @@@ end of alternative
CONDITION1690: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TT5;
if (current0.Name
!= "OneOf-TestcaseDef_A1_M5")
if (javadummy) break CONDITION1690;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "testcase arguments" )
,
TT5
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1688;
// $$$$$$$$ 
} // CONDITION1690 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1688 N=1684
if (javadummy) break CONDITION1684;
} // CONDLIST1688 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1691 (in cond 1684) *****
CONDLIST1691: // @@@ begin of alternative group
while(javadummy) {
CONDITION1692: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ConfigSpec2
JavaNode ConfigSpec2= null;
// DECLARE for alternative SYSTEMOPT
JavaNode SYSTEMOPT= null;
// DECLARE for alternative RUNSON
JavaNode RUNSON= null;
{
JavaNode current0 = TT7;
if (! current0 .Name
.equals( "TestcaseDef_A1_M7_A1") )
   if (javadummy) break  CONDITION1692;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ConfigSpec2 --- JJ.M4
ConfigSpec2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1693 (in cond 1692) *****
CONDLIST1693: // @@@ begin of alternative group
while(javadummy) {
CONDITION1694: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ConfigSpec2;
if (! current0 .Name
.equals( "ConfigSpec_A1") )
   if (javadummy) break  CONDITION1694;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RUNSON --- JJ.M4
RUNSON = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to SYSTEMOPT --- JJ.M4
SYSTEMOPT = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1693;
// $$$$$$$$ 
} // CONDITION1694 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1693 N=1692
if (javadummy) break CONDITION1692;
} // CONDLIST1693 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
HandleRunsOn
(
RUNSON
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to RunsOnC --- JJ.M4
RunsOnC = current0 ;
}
YyProcs.
HandleSystem
(
SYSTEMOPT
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to SystemC --- JJ.M4
SystemC = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1691;
// $$$$$$$$ 
} // CONDITION1692 // @@@ end of alternative
CONDITION1695: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TT7;
if (! current0 .Name
.equals( "TestcaseDef_A1_M7_A2") )
   if (javadummy) break  CONDITION1695;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
RunsOnC = 
new JavaStringValue( "-" )
;
SystemC = 
new JavaStringValue( "-" )
;
TokenStream.ReportError
(
new JavaStringValue( "cover" )
,new JavaStringValue( "nopos" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1691;
// $$$$$$$$ 
} // CONDITION1695 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1691 N=1684
if (javadummy) break CONDITION1684;
} // CONDLIST1691 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1683;
// $$$$$$$$ 
} // CONDITION1684 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1683 N=1682
if (javadummy) break CONDITION1682;
} // CONDLIST1683 @@@ end of alternative group
// *** CONTINUE ***
NormalizedTestcase = 
NodeFactory.NewNode(
"normalizedtestcase"
, new JavaNode [] {
RunsOnC
,
SystemC
,
BLOCK
}
)
;
JavaLib.rtsBindToKey(RefNormalizedTestcase,
NormalizedTestcase
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1681;
// $$$$$$$$ 
} // CONDITION1682 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1681 N=1680
if (javadummy) break CONDITION1680;
} // CONDLIST1681 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1680
// failed:
JavaLib.rtsAllAlternativesFailed("ActivateTestcase");
}



public
static
void
ActivateRecordType(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc RefNormalizedFields
JavaNode RefNormalizedFields = null;
// DECLARE for proc X4
JavaNode X4 = null;
// DECLARE for proc Name
JavaNode Name = null;
CONDITION1696:
while(javadummy) {
// ***** begin condlist 1697 (in cond 1696) *****
CONDLIST1697: // @@@ begin of alternative group
while(javadummy) {
CONDITION1698: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Name --- JJ.M4
Name = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X4 --- JJ.M4
X4 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to RefNormalizedFields --- JJ.M4
RefNormalizedFields = current0 ;
};
// ***** begin condlist 1699 (in cond 1698) *****
CONDLIST1699: // @@@ begin of alternative group
while(javadummy) {
CONDITION1700: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X4;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-StructDefBody_A1_M5")
if (javadummy) break CONDITION1700;
{ //(( children level 1
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "empty field list in record types" )
,
X4
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1699;
// $$$$$$$$ 
} // CONDITION1700 // @@@ end of alternative
CONDITION1701: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative XX
JavaNode XX= null;
// DECLARE for alternative PKG
JavaNode PKG= null;
// DECLARE for alternative Flds
JavaNode Flds= null;
// DECLARE for alternative Tl
JavaNode Tl= null;
// DECLARE for alternative Hd
JavaNode Hd= null;
// DECLARE for alternative XX2
JavaNode XX2= null;
// DECLARE for alternative XX1
JavaNode XX1= null;
{
JavaNode current0 = X4;
if (current0.Name
!= "OneOf-StructDefBody_A1_M5")
if (javadummy) break CONDITION1701;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to XX --- JJ.M4
XX = current1 ;
} //)) children level 1
};
// ***** begin condlist 1702 (in cond 1701) *****
CONDLIST1702: // @@@ begin of alternative group
while(javadummy) {
CONDITION1703: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX;
if (! current0 .Name
.equals( "StructDefBody_A1_M5_A1") )
   if (javadummy) break  CONDITION1703;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX1 --- JJ.M4
XX1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to XX2 --- JJ.M4
XX2 = current1 ;
} //)) children level 1
};
YyProcs.
HandleStructFieldDef
(
XX1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Hd --- JJ.M4
Hd = current0 ;
}
YyProcs.
HandleStructFieldDefs
(
XX2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tl --- JJ.M4
Tl = current0 ;
}
Flds = 
NodeFactory.NewNode (
"SeqOf-FIELD"
, new JavaNode [] {
Hd
,
Tl
}
)
;
JavaLib.rtsBindToKey(RefNormalizedFields,
NodeFactory.NewNode(
"normalizedfields"
, new JavaNode [] {
Flds
}
)
);
JavaLib.rtsCheckDefined(NameOfModule,"/line,offset,length,file=/ 569 14280 12 Globals.g");
PKG = NameOfModule;
YyExternalPackage.ExternalFunctions.
OpenJavaTargetFileMeta
(
PKG
,
Name
);
JavaLib.rtsEmitCode
("// EMITFILE 1 meta\n");
JavaLib.rtsEmitCode
("package ");
JavaLib.rtsEmitString
(
PKG
);
JavaLib.rtsEmitCode
(";\n");
JavaLib.rtsEmitCode
("import org.etsi.ttcn.tci.Type;\n");
JavaLib.rtsEmitCode
("import org.etsi.ttcn.tci.Value;\n");
JavaLib.rtsEmitCode
("import org.etsi.ttcn.tci.TciTypeClass;\n");
JavaLib.rtsEmitCode
("import targetcode.Instructions;\n");
JavaLib.rtsEmitCode
("public class Meta");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
(" extends de.fraunhofer.fokus.ttcn.tci.TypeImpl\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("   public static Type Instance = new Meta");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
("();\n");
JavaLib.rtsEmitCode
("   public Meta");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
("()\n");
JavaLib.rtsEmitCode
("   {\n");
JavaLib.rtsEmitCode
("      super(null, \"");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
("\", TciTypeClass.RECORD, \"typeEnc\", \"typeEncVar\", null, null, null) ;\n");
JavaLib.rtsEmitCode
("      Instructions.RegisterType(this);\n");
JavaLib.rtsEmitCode
("   }\n");
JavaLib.rtsEmitCode
("   @Override public Value newInstance()\n");
JavaLib.rtsEmitCode
("   {\n");
JavaLib.rtsEmitCode
("      return new ");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
("(\"/NewInstance/\");\n");
JavaLib.rtsEmitCode
("   }\n");
JavaLib.rtsEmitCode
("}\n");
// openfile
JavaLib.rtsCloseAlphaFile
(
);
// openfile end
YyProcs.
OpenFile
(
PKG
,
Name
);
JavaLib.rtsEmitCode
("// EMITFILE 2 record type\n");
JavaLib.rtsEmitCode
("package ");
JavaLib.rtsEmitString
(
PKG
);
JavaLib.rtsEmitCode
(";\n");
YyProcs.
Emit_Imports
(
);
JavaLib.rtsEmitCode
("import de.fraunhofer.fokus.ttcn.tci.IntegerValueImpl;\n");
JavaLib.rtsEmitCode
("import de.fraunhofer.fokus.ttcn.tci.CharstringValueImpl;\n");
JavaLib.rtsEmitCode
("import de.fraunhofer.fokus.ttcn.tci.BooleanValueImpl;\n");
JavaLib.rtsEmitCode
("import org.etsi.ttcn.tci.Type;\n");
JavaLib.rtsEmitCode
("public class ");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
(" extends de.fraunhofer.fokus.ttcn.tci.RecordValueImpl\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("   //public Type MetaType = Meta");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
(".Instance;\n");
JavaLib.rtsEmitCode
("   public ");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
("(String id) {\n");
JavaLib.rtsEmitCode
("      super(Meta");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
(".Instance);\n");
JavaLib.rtsEmitCode
("      fieldNames = new String[] {\n");
YyProcs.
FieldNames
(
Flds
);
JavaLib.rtsEmitCode
("      };\n");
JavaLib.rtsEmitCode
("      vals = new Value[] {\n");
YyProcs.
FieldTypes
(
Flds
);
JavaLib.rtsEmitCode
("};\n");
JavaLib.rtsEmitCode
("   }\n");
JavaLib.rtsEmitCode
("}\n");
// openfile
JavaLib.rtsCloseAlphaFile
(
);
// openfile end
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1703 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1702 N=1701
if (javadummy) break CONDITION1701;
} // CONDLIST1702 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1699;
// $$$$$$$$ 
} // CONDITION1701 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1699 N=1698
if (javadummy) break CONDITION1698;
} // CONDLIST1699 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1697;
// $$$$$$$$ 
} // CONDITION1698 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1697 N=1696
if (javadummy) break CONDITION1696;
} // CONDLIST1697 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1696
// failed:
JavaLib.rtsAllAlternativesFailed("ActivateRecordType");
}



public
static
void
FieldNames(

JavaNode yy_inparam_0
)
{
CONDITION1704:
while(javadummy) {
// ***** begin condlist 1705 (in cond 1704) *****
CONDLIST1705: // @@@ begin of alternative group
while(javadummy) {
CONDITION1706: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Type
JavaNode Type= null;
// DECLARE for alternative Name
JavaNode Name= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-FIELD")
if (javadummy) break CONDITION1706;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "field") )
   if (javadummy) break  CONDITION1706;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Name --- JJ.M4
Name = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Type --- JJ.M4
Type = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("\"");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
("\"");
// ***** begin condlist 1707 (in cond 1706) *****
CONDLIST1707: // @@@ begin of alternative group
while(javadummy) {
CONDITION1708: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = T;
if (current0.Name
!= "NilOf-FIELD")
if (javadummy) break CONDITION1708;
};
JavaLib.rtsEmitCode
("\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1707;
// $$$$$$$$ 
} // CONDITION1708 // @@@ end of alternative
CONDITION1709: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
(",\n");
YyProcs.
FieldNames
(
T
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1707;
// $$$$$$$$ 
} // CONDITION1709 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1707 N=1706
if (javadummy) break CONDITION1706;
} // CONDLIST1707 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1705;
// $$$$$$$$ 
} // CONDITION1706 // @@@ end of alternative
CONDITION1710: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-FIELD")
if (javadummy) break CONDITION1710;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1705;
// $$$$$$$$ 
} // CONDITION1710 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1705 N=1704
if (javadummy) break CONDITION1704;
} // CONDLIST1705 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1704
// failed:
JavaLib.rtsAllAlternativesFailed("FieldNames");
}



public
static
void
FieldTypes(

JavaNode yy_inparam_0
)
{
CONDITION1711:
while(javadummy) {
// ***** begin condlist 1712 (in cond 1711) *****
CONDLIST1712: // @@@ begin of alternative group
while(javadummy) {
CONDITION1713: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Type
JavaNode Type= null;
// DECLARE for alternative Name
JavaNode Name= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-FIELD")
if (javadummy) break CONDITION1713;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "field") )
   if (javadummy) break  CONDITION1713;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Name --- JJ.M4
Name = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Type --- JJ.M4
Type = current1 ;
} //)) children level 1
};
// ***** begin condlist 1714 (in cond 1713) *****
CONDLIST1714: // @@@ begin of alternative group
while(javadummy) {
CONDITION1715: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Type;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION1715;
};
JavaLib.rtsEmitCode
("new IntegerValueImpl()");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1714;
// $$$$$$$$ 
} // CONDITION1715 // @@@ end of alternative
CONDITION1716: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Type;
if (! current0 .Name
.equals( "tp_boolean") )
   if (javadummy) break  CONDITION1716;
};
JavaLib.rtsEmitCode
("new BooleanValueImpl()");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1714;
// $$$$$$$$ 
} // CONDITION1716 // @@@ end of alternative
CONDITION1717: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Type;
if (! current0 .Name
.equals( "tp_charstring") )
   if (javadummy) break  CONDITION1717;
};
JavaLib.rtsEmitCode
("new CharstringValueImpl()");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1714;
// $$$$$$$$ 
} // CONDITION1717 // @@@ end of alternative
CONDITION1718: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Name2
JavaNode Name2= null;
// DECLARE for alternative D
JavaNode D= null;
{
JavaNode current0 = Type;
if (! current0 .Name
.equals( "tp_referenced") )
   if (javadummy) break  CONDITION1718;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D --- JJ.M4
D = current1 ;
} //)) children level 1
};
{
JavaNode current0 = D;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION1718;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Name2 --- JJ.M4
Name2 = current1 ;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
} //)) children level 1
};
JavaLib.rtsEmitCode
("new ");
JavaLib.rtsEmitString
(
Name2
);
JavaLib.rtsEmitCode
("(\"");
JavaLib.rtsEmitString
(
Name2
);
JavaLib.rtsEmitCode
("\")");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1714;
// $$$$$$$$ 
} // CONDITION1718 // @@@ end of alternative
CONDITION1719: // @@@ begin of alternative
while(javadummy) {
YyProcs.
NotCovered
(
new JavaStringValue( "target code record field of this type" )
,
Type
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1714;
// $$$$$$$$ 
} // CONDITION1719 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1714 N=1713
if (javadummy) break CONDITION1713;
} // CONDLIST1714 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1720 (in cond 1713) *****
CONDLIST1720: // @@@ begin of alternative group
while(javadummy) {
CONDITION1721: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = T;
if (current0.Name
!= "NilOf-FIELD")
if (javadummy) break CONDITION1721;
};
JavaLib.rtsEmitCode
("\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1720;
// $$$$$$$$ 
} // CONDITION1721 // @@@ end of alternative
CONDITION1722: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
(",\n");
YyProcs.
FieldTypes
(
T
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1720;
// $$$$$$$$ 
} // CONDITION1722 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1720 N=1713
if (javadummy) break CONDITION1713;
} // CONDLIST1720 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1712;
// $$$$$$$$ 
} // CONDITION1713 // @@@ end of alternative
CONDITION1723: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-FIELD")
if (javadummy) break CONDITION1723;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1712;
// $$$$$$$$ 
} // CONDITION1723 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1712 N=1711
if (javadummy) break CONDITION1711;
} // CONDLIST1712 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1711
// failed:
JavaLib.rtsAllAlternativesFailed("FieldTypes");
}



public
static
void
HandleStructFieldDef(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Fld
JavaNode Fld = null;
// DECLARE for proc XX1
JavaNode XX1 = null;
// DECLARE for proc Optional
JavaNode Optional = null;
// DECLARE for proc Subtype
JavaNode Subtype = null;
// DECLARE for proc Array
JavaNode Array = null;
// DECLARE for proc Name
JavaNode Name = null;
// DECLARE for proc Type
JavaNode Type = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION1724:
while(javadummy) {
// ***** begin condlist 1725 (in cond 1724) *****
CONDLIST1725: // @@@ begin of alternative group
while(javadummy) {
CONDITION1726: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to XX1 --- JJ.M4
XX1 = current0 ;
};
// ***** begin condlist 1727 (in cond 1726) *****
CONDLIST1727: // @@@ begin of alternative group
while(javadummy) {
CONDITION1728: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX1;
if (! current0 .Name
.equals( "StructFieldDef_A1") )
   if (javadummy) break  CONDITION1728;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Type --- JJ.M4
Type = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Name --- JJ.M4
Name = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Array --- JJ.M4
Array = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to Subtype --- JJ.M4
Subtype = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to Optional --- JJ.M4
Optional = current1 ;
} //)) children level 1
};
// ***** begin condlist 1729 (in cond 1728) *****
CONDLIST1729: // @@@ begin of alternative group
while(javadummy) {
CONDITION1730: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefType
JavaNode RefType= null;
{
JavaNode current0 = Type;
if (! current0 .Name
.equals( "StructFieldDef_A1_M1_A1") )
   if (javadummy) break  CONDITION1730;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RefType --- JJ.M4
RefType = current1 ;
} //)) children level 1
};
// ***** begin condlist 1731 (in cond 1730) *****
CONDLIST1731: // @@@ begin of alternative group
while(javadummy) {
CONDITION1732: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Predef
JavaNode Predef= null;
{
JavaNode current0 = RefType;
if (! current0 .Name
.equals( "Type_A1") )
   if (javadummy) break  CONDITION1732;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Predef --- JJ.M4
Predef = current1 ;
} //)) children level 1
};
// ***** begin condlist 1733 (in cond 1732) *****
CONDLIST1733: // @@@ begin of alternative group
while(javadummy) {
CONDITION1734: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Predef;
if (! current0 .Name
.equals( "PredefinedType_A3") )
   if (javadummy) break  CONDITION1734;
};
Tp = 
NodeFactory.NewNode(
"tp_charstring"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1733;
// $$$$$$$$ 
} // CONDITION1734 // @@@ end of alternative
CONDITION1735: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Predef;
if (! current0 .Name
.equals( "PredefinedType_A5") )
   if (javadummy) break  CONDITION1735;
};
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1733;
// $$$$$$$$ 
} // CONDITION1735 // @@@ end of alternative
CONDITION1736: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Predef;
if (! current0 .Name
.equals( "PredefinedType_A2") )
   if (javadummy) break  CONDITION1736;
};
Tp = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1733;
// $$$$$$$$ 
} // CONDITION1736 // @@@ end of alternative
CONDITION1737: // @@@ begin of alternative
while(javadummy) {
YyProcs.
NotCovered
(
new JavaStringValue( "this predefined field type" )
,
Predef
);
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1733;
// $$$$$$$$ 
} // CONDITION1737 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1733 N=1732
if (javadummy) break CONDITION1732;
} // CONDLIST1733 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1731;
// $$$$$$$$ 
} // CONDITION1732 // @@@ end of alternative
CONDITION1738: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative R
JavaNode R= null;
// DECLARE for alternative D
JavaNode D= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative X5
JavaNode X5= null;
// DECLARE for alternative X4
JavaNode X4= null;
// DECLARE for alternative X3
JavaNode X3= null;
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = RefType;
if (! current0 .Name
.equals( "Type_A2") )
   if (javadummy) break  CONDITION1738;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to R --- JJ.M4
R = current1 ;
} //)) children level 1
};
// ***** begin condlist 1739 (in cond 1738) *****
CONDLIST1739: // @@@ begin of alternative group
while(javadummy) {
CONDITION1740: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = R;
if (! current0 .Name
.equals( "ReferencedType_A1") )
   if (javadummy) break  CONDITION1740;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to X4 --- JJ.M4
X4 = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to X5 --- JJ.M4
X5 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(X2);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
GloballyDefined
(
X2
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to D --- JJ.M4
D = current0 ;
}
Tp = 
NodeFactory.NewNode(
"tp_referenced"
, new JavaNode [] {
D
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1739;
// $$$$$$$$ 
} // CONDITION1740 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1739 N=1738
if (javadummy) break CONDITION1738;
} // CONDLIST1739 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1731;
// $$$$$$$$ 
} // CONDITION1738 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1731 N=1730
if (javadummy) break CONDITION1730;
} // CONDLIST1731 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1729;
// $$$$$$$$ 
} // CONDITION1730 // @@@ end of alternative
CONDITION1741: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative NestedType
JavaNode NestedType= null;
{
JavaNode current0 = Type;
if (! current0 .Name
.equals( "StructFieldDef_A1_M1_A2") )
   if (javadummy) break  CONDITION1741;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NestedType --- JJ.M4
NestedType = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "nested types" )
,
NestedType
);
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1729;
// $$$$$$$$ 
} // CONDITION1741 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1729 N=1728
if (javadummy) break CONDITION1728;
} // CONDLIST1729 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1742 (in cond 1728) *****
CONDLIST1742: // @@@ begin of alternative group
while(javadummy) {
CONDITION1743: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative A
JavaNode A= null;
{
JavaNode current0 = Array;
if (current0.Name
!= "OneOf-StructFieldDef_A1_M3")
if (javadummy) break CONDITION1743;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to A --- JJ.M4
A = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "fields as arrays" )
,
A
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1742;
// $$$$$$$$ 
} // CONDITION1743 // @@@ end of alternative
CONDITION1744: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Array;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-StructFieldDef_A1_M3")
if (javadummy) break CONDITION1744;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1742;
// $$$$$$$$ 
} // CONDITION1744 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1742 N=1728
if (javadummy) break CONDITION1728;
} // CONDLIST1742 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1745 (in cond 1728) *****
CONDLIST1745: // @@@ begin of alternative group
while(javadummy) {
CONDITION1746: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S
JavaNode S= null;
{
JavaNode current0 = Subtype;
if (current0.Name
!= "OneOf-StructFieldDef_A1_M4")
if (javadummy) break CONDITION1746;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to S --- JJ.M4
S = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "subtypes for fields" )
,
S
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1745;
// $$$$$$$$ 
} // CONDITION1746 // @@@ end of alternative
CONDITION1747: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Subtype;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-StructFieldDef_A1_M4")
if (javadummy) break CONDITION1747;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1745;
// $$$$$$$$ 
} // CONDITION1747 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1745 N=1728
if (javadummy) break CONDITION1728;
} // CONDLIST1745 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1748 (in cond 1728) *****
CONDLIST1748: // @@@ begin of alternative group
while(javadummy) {
CONDITION1749: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative O
JavaNode O= null;
{
JavaNode current0 = Optional;
if (current0.Name
!= "OneOf-StructFieldDef_A1_M5")
if (javadummy) break CONDITION1749;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to O --- JJ.M4
O = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "optional fields" )
,
O
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1748;
// $$$$$$$$ 
} // CONDITION1749 // @@@ end of alternative
CONDITION1750: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Optional;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-StructFieldDef_A1_M5")
if (javadummy) break CONDITION1750;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1748;
// $$$$$$$$ 
} // CONDITION1750 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1748 N=1728
if (javadummy) break CONDITION1728;
} // CONDLIST1748 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1727;
// $$$$$$$$ 
} // CONDITION1728 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1727 N=1726
if (javadummy) break CONDITION1726;
} // CONDLIST1727 @@@ end of alternative group
// *** CONTINUE ***
Fld = 
NodeFactory.NewNode(
"field"
, new JavaNode [] {
Name
,
Tp
}
)
;
yy_outparam_0 = 
Fld
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1725;
// $$$$$$$$ 
} // CONDITION1726 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1725 N=1724
if (javadummy) break CONDITION1724;
} // CONDLIST1725 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1724
// failed:
JavaLib.rtsAllAlternativesFailed("HandleStructFieldDef");
}



public
static
void
HandleStructFieldDefs(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc XX2
JavaNode XX2 = null;
// DECLARE for proc Flds
JavaNode Flds = null;
CONDITION1751:
while(javadummy) {
// ***** begin condlist 1752 (in cond 1751) *****
CONDLIST1752: // @@@ begin of alternative group
while(javadummy) {
CONDITION1753: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to XX2 --- JJ.M4
XX2 = current0 ;
};
// ***** begin condlist 1754 (in cond 1753) *****
CONDLIST1754: // @@@ begin of alternative group
while(javadummy) {
CONDITION1755: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tl
JavaNode Tl= null;
// DECLARE for alternative Tail
JavaNode Tail= null;
// DECLARE for alternative Head
JavaNode Head= null;
// DECLARE for alternative Hd
JavaNode Hd= null;
// DECLARE for alternative YY
JavaNode YY= null;
{
JavaNode current0 = XX2;
if (current0.Name
!= "SeqOf-StructDefBody_A1_M5_A1_M2")
if (javadummy) break CONDITION1755;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Head --- JJ.M4
Head = current1 ;
current1 = current0.Child1[1];
//assign current1 to Tail --- JJ.M4
Tail = current1 ;
} //)) children level 1
};
// ***** begin condlist 1756 (in cond 1755) *****
CONDLIST1756: // @@@ begin of alternative group
while(javadummy) {
CONDITION1757: // @@@ begin of alternative
while(javadummy) {
// ***** begin condlist 1758 (in cond 1757) *****
CONDLIST1758: // @@@ begin of alternative group
while(javadummy) {
CONDITION1759: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Head;
if (! current0 .Name
.equals( "StructDefBody_A1_M5_A1_M2_A1") )
   if (javadummy) break  CONDITION1759;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to YY --- JJ.M4
YY = current1 ;
} //)) children level 1
};
YyProcs.
HandleStructFieldDef
(
YY
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Hd --- JJ.M4
Hd = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1758;
// $$$$$$$$ 
} // CONDITION1759 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1758 N=1757
if (javadummy) break CONDITION1757;
} // CONDLIST1758 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1756;
// $$$$$$$$ 
} // CONDITION1757 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1756 N=1755
if (javadummy) break CONDITION1755;
} // CONDLIST1756 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
HandleStructFieldDefs
(
Tail
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tl --- JJ.M4
Tl = current0 ;
}
Flds = 
NodeFactory.NewNode (
"SeqOf-FIELD"
, new JavaNode [] {
Hd
,
Tl
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1754;
// $$$$$$$$ 
} // CONDITION1755 // @@@ end of alternative
CONDITION1760: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX2;
if (current0.Name
!= "NilOf-StructDefBody_A1_M5_A1_M2")
if (javadummy) break CONDITION1760;
};
Flds = 
NodeFactory.NewNode (
"NilOf-FIELD"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1754;
// $$$$$$$$ 
} // CONDITION1760 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1754 N=1753
if (javadummy) break CONDITION1753;
} // CONDLIST1754 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Flds
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1752;
// $$$$$$$$ 
} // CONDITION1753 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1752 N=1751
if (javadummy) break CONDITION1751;
} // CONDLIST1752 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1751
// failed:
JavaLib.rtsAllAlternativesFailed("HandleStructFieldDefs");
}



public
static
void
ActivateComponentType(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc PKG
JavaNode PKG = null;
// DECLARE for proc NormalizedComponentType
JavaNode NormalizedComponentType = null;
// DECLARE for proc QQ1
JavaNode QQ1 = null;
// DECLARE for proc RefNormalizedComponentType
JavaNode RefNormalizedComponentType = null;
// DECLARE for proc ComponentDef
JavaNode ComponentDef = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION1761:
while(javadummy) {
// ***** begin condlist 1762 (in cond 1761) *****
CONDLIST1762: // @@@ begin of alternative group
while(javadummy) {
CONDITION1763: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to ComponentDef --- JJ.M4
ComponentDef = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to RefNormalizedComponentType --- JJ.M4
RefNormalizedComponentType = current0 ;
};
YyProcs.
HandleComponent
(
ComponentDef
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to QQ1 --- JJ.M4
QQ1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to NormalizedComponentType --- JJ.M4
NormalizedComponentType = current0 ;
}
JavaLib.rtsBindToKey(RefNormalizedComponentType,
NormalizedComponentType
);
JavaLib.rtsCheckDefined(NameOfModule,"/line,offset,length,file=/ 775 19863 12 Globals.g");
PKG = NameOfModule;
YyProcs.
OpenFile
(
PKG
,
NAME
);
JavaLib.rtsEmitCode
("// EMITFILE 3 component type\n");
JavaLib.rtsEmitCode
("package ");
JavaLib.rtsEmitString
(
PKG
);
JavaLib.rtsEmitCode
(";\n");
YyProcs.
Emit_Imports
(
);
JavaLib.rtsEmitCode
("public class ");
JavaLib.rtsEmitString
(
NAME
);
JavaLib.rtsEmitCode
(" extends Component\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("public ");
JavaLib.rtsEmitString
(
NAME
);
JavaLib.rtsEmitCode
("(String Id)\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("targetcode.Trace.print(\"Component constructed:\");\n");
JavaLib.rtsEmitCode
("MyName = Id;\n");
JavaLib.rtsEmitCode
("MyType = \"");
JavaLib.rtsEmitString
(
NAME
);
JavaLib.rtsEmitCode
("\";\n");
YyProcs.
HHHandleComponentMembers
(
NormalizedComponentType
);
JavaLib.rtsEmitCode
("TestOutput();\n");
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
("}\n");
// openfile
JavaLib.rtsCloseAlphaFile
(
);
// openfile end
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1762;
// $$$$$$$$ 
} // CONDITION1763 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1762 N=1761
if (javadummy) break CONDITION1761;
} // CONDLIST1762 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1761
// failed:
JavaLib.rtsAllAlternativesFailed("ActivateComponentType");
}



public
static
void
HandleComponent(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc ComponentDef
JavaNode ComponentDef = null;
// DECLARE for proc QQ
JavaNode QQ = null;
// DECLARE for proc CC
JavaNode CC = null;
// DECLARE for proc BB
JavaNode BB = null;
// DECLARE for proc AA
JavaNode AA = null;
// DECLARE for proc Id
JavaNode Id = null;
// DECLARE for proc NormalizedComponentType
JavaNode NormalizedComponentType = null;
// DECLARE for proc LL2
JavaNode LL2 = null;
CONDITION1764:
while(javadummy) {
// ***** begin condlist 1765 (in cond 1764) *****
CONDLIST1765: // @@@ begin of alternative group
while(javadummy) {
CONDITION1766: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to ComponentDef --- JJ.M4
ComponentDef = current0 ;
};
// ***** begin condlist 1767 (in cond 1766) *****
CONDLIST1767: // @@@ begin of alternative group
while(javadummy) {
CONDITION1768: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ComponentDef;
if (! current0 .Name
.equals( "ComponentDef_A1") )
   if (javadummy) break  CONDITION1768;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to AA --- JJ.M4
AA = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to BB --- JJ.M4
BB = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to CC --- JJ.M4
CC = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to QQ --- JJ.M4
QQ = current1 ;
} //)) children level 1
};
// ***** begin condlist 1769 (in cond 1768) *****
CONDLIST1769: // @@@ begin of alternative group
while(javadummy) {
CONDITION1770: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = AA;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentDef_A1_M3")
if (javadummy) break CONDITION1770;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1769;
// $$$$$$$$ 
} // CONDITION1770 // @@@ end of alternative
CONDITION1771: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = AA;
if (current0.Name
!= "OneOf-ComponentDef_A1_M3")
if (javadummy) break CONDITION1771;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "formal type parameters" )
,
AA
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1769;
// $$$$$$$$ 
} // CONDITION1771 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1769 N=1768
if (javadummy) break CONDITION1768;
} // CONDLIST1769 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1772 (in cond 1768) *****
CONDLIST1772: // @@@ begin of alternative group
while(javadummy) {
CONDITION1773: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = BB;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentDef_A1_M4")
if (javadummy) break CONDITION1773;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1772;
// $$$$$$$$ 
} // CONDITION1773 // @@@ end of alternative
CONDITION1774: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = BB;
if (current0.Name
!= "OneOf-ComponentDef_A1_M4")
if (javadummy) break CONDITION1774;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "struct def formal type parameters" )
,
BB
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1772;
// $$$$$$$$ 
} // CONDITION1774 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1772 N=1768
if (javadummy) break CONDITION1768;
} // CONDLIST1772 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1775 (in cond 1768) *****
CONDLIST1775: // @@@ begin of alternative group
while(javadummy) {
CONDITION1776: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CC;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentDef_A1_M5")
if (javadummy) break CONDITION1776;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1775;
// $$$$$$$$ 
} // CONDITION1776 // @@@ end of alternative
CONDITION1777: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CC;
if (current0.Name
!= "OneOf-ComponentDef_A1_M5")
if (javadummy) break CONDITION1777;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "extends" )
,
CC
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1775;
// $$$$$$$$ 
} // CONDITION1777 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1775 N=1768
if (javadummy) break CONDITION1768;
} // CONDLIST1775 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1778 (in cond 1768) *****
CONDLIST1778: // @@@ begin of alternative group
while(javadummy) {
CONDITION1779: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = QQ;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentDef_A1_M7")
if (javadummy) break CONDITION1779;
{ //(( children level 1
} //)) children level 1
};
LL2 = 
NodeFactory.NewNode (
"NilOf-CompItem"
,  new JavaNode [] {})
;
NormalizedComponentType = 
NodeFactory.NewNode(
"normalizedcomptype"
, new JavaNode [] {
LL2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1778;
// $$$$$$$$ 
} // CONDITION1779 // @@@ end of alternative
CONDITION1780: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative KK
JavaNode KK= null;
// DECLARE for alternative List
JavaNode List= null;
// DECLARE for alternative LL
JavaNode LL= null;
{
JavaNode current0 = QQ;
if (current0.Name
!= "OneOf-ComponentDef_A1_M7")
if (javadummy) break CONDITION1780;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to KK --- JJ.M4
KK = current1 ;
} //)) children level 1
};
// ***** begin condlist 1781 (in cond 1780) *****
CONDLIST1781: // @@@ begin of alternative group
while(javadummy) {
CONDITION1782: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = KK;
if (! current0 .Name
.equals( "ComponentDef_A1_M7_A1") )
   if (javadummy) break  CONDITION1782;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to List --- JJ.M4
List = current1 ;
} //)) children level 1
};
// ***** begin condlist 1783 (in cond 1782) *****
CONDLIST1783: // @@@ begin of alternative group
while(javadummy) {
CONDITION1784: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = List;
if (! current0 .Name
.equals( "ComponentDefList_A1") )
   if (javadummy) break  CONDITION1784;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to LL --- JJ.M4
LL = current1 ;
} //)) children level 1
};
YyProcs.
HandleComponentDefListMembers
(
LL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to LL2 --- JJ.M4
LL2 = current0 ;
}
NormalizedComponentType = 
NodeFactory.NewNode(
"normalizedcomptype"
, new JavaNode [] {
LL2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1783;
// $$$$$$$$ 
} // CONDITION1784 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1783 N=1782
if (javadummy) break CONDITION1782;
} // CONDLIST1783 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1781;
// $$$$$$$$ 
} // CONDITION1782 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1781 N=1780
if (javadummy) break CONDITION1780;
} // CONDLIST1781 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1778;
// $$$$$$$$ 
} // CONDITION1780 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1778 N=1768
if (javadummy) break CONDITION1768;
} // CONDLIST1778 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1767;
// $$$$$$$$ 
} // CONDITION1768 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1767 N=1766
if (javadummy) break CONDITION1766;
} // CONDLIST1767 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
QQ
;
yy_outparam_1 = 
NormalizedComponentType
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1765;
// $$$$$$$$ 
} // CONDITION1766 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1765 N=1764
if (javadummy) break CONDITION1764;
} // CONDLIST1765 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1764
// failed:
JavaLib.rtsAllAlternativesFailed("HandleComponent");
}



public
static
void
HandleComponentDefListMembers(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
CONDITION1785:
while(javadummy) {
// ***** begin condlist 1786 (in cond 1785) *****
CONDLIST1786: // @@@ begin of alternative group
while(javadummy) {
CONDITION1787: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T2
JavaNode T2= null;
// DECLARE for alternative H2
JavaNode H2= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-ComponentDefList_A1_M1")
if (javadummy) break CONDITION1787;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
HandleComponentDefListMember
(
H
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to H2 --- JJ.M4
H2 = current0 ;
}
YyProcs.
HandleComponentDefListMembers
(
T
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to T2 --- JJ.M4
T2 = current0 ;
}
yy_outparam_0 = 
NodeFactory.NewNode (
"SeqOf-CompItem"
, new JavaNode [] {
H2
,
T2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1786;
// $$$$$$$$ 
} // CONDITION1787 // @@@ end of alternative
CONDITION1788: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-ComponentDefList_A1_M1")
if (javadummy) break CONDITION1788;
};
yy_outparam_0 = 
NodeFactory.NewNode (
"NilOf-CompItem"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1786;
// $$$$$$$$ 
} // CONDITION1788 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1786 N=1785
if (javadummy) break CONDITION1785;
} // CONDLIST1786 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1785
// failed:
JavaLib.rtsAllAlternativesFailed("HandleComponentDefListMembers");
}



public
static
void
HandleComponentDefListMember(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Member
JavaNode Member = null;
// DECLARE for proc ComponentElementDef
JavaNode ComponentElementDef = null;
// DECLARE for proc CompItem
JavaNode CompItem = null;
CONDITION1789:
while(javadummy) {
// ***** begin condlist 1790 (in cond 1789) *****
CONDLIST1790: // @@@ begin of alternative group
while(javadummy) {
CONDITION1791: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Member --- JJ.M4
Member = current0 ;
};
// ***** begin condlist 1792 (in cond 1791) *****
CONDLIST1792: // @@@ begin of alternative group
while(javadummy) {
CONDITION1793: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Member;
if (! current0 .Name
.equals( "ComponentDefList_A1_M1_A1") )
   if (javadummy) break  CONDITION1793;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ComponentElementDef --- JJ.M4
ComponentElementDef = current1 ;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
} //)) children level 1
};
// ***** begin condlist 1794 (in cond 1793) *****
CONDLIST1794: // @@@ begin of alternative group
while(javadummy) {
CONDITION1795: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative X1
JavaNode X1= null;
// DECLARE for alternative PortName
JavaNode PortName= null;
// DECLARE for alternative PortType
JavaNode PortType= null;
{
JavaNode current0 = ComponentElementDef;
if (! current0 .Name
.equals( "ComponentElementDef_A1") )
   if (javadummy) break  CONDITION1795;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1796 (in cond 1795) *****
CONDLIST1796: // @@@ begin of alternative group
while(javadummy) {
CONDITION1797: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PortInstance_A1") )
   if (javadummy) break  CONDITION1797;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
if (current1.Name
// fiwi-noneof 6
!= "NoneOf-PortInstance_A1_M2")
if (javadummy) break CONDITION1797;
{ //(( children level 2
} //)) children level 2
current1 = kurrent0.Child1[1];
//assign current1 to PortType --- JJ.M4
PortType = current1 ;
current1 = kurrent0.Child1[2];
if (current1.Name
// fiwi-noneof 6
!= "NoneOf-PortInstance_A1_M4")
if (javadummy) break CONDITION1797;
{ //(( children level 2
} //)) children level 2
current1 = kurrent0.Child1[3];
if (current1.Name
// fiwi-noneof 6
!= "NoneOf-PortInstance_A1_M5")
if (javadummy) break CONDITION1797;
{ //(( children level 2
} //)) children level 2
current1 = kurrent0.Child1[4];
if (! current1 .Name
.equals( "PortElement_A1") )
   if (javadummy) break  CONDITION1797;
{ //(( children level 2
JavaNode current2 =
   current1 . Child1[0];
JavaNode kurrent1 = current1;
//assign current2 to PortName --- JJ.M4
PortName = current2 ;
current2 = kurrent1.Child1[1];
if (current2.Name
// fiwi-noneof 6
!= "NoneOf-PortElement_A1_M2")
if (javadummy) break CONDITION1797;
{ //(( children level 3
} //)) children level 3
current2 = kurrent1.Child1[2];
if (current2.Name
// fiwi-noneof 6
!= "NoneOf-PortElement_A1_M3")
if (javadummy) break CONDITION1797;
{ //(( children level 3
} //)) children level 3
} //)) children level 2
current1 = kurrent0.Child1[5];
if (current1.Name
!= "NilOf-PortInstance_A1_M7")
if (javadummy) break CONDITION1797;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1796;
// $$$$$$$$ 
} // CONDITION1797 // @@@ end of alternative
CONDITION1798: // @@@ begin of alternative
while(javadummy) {
YyProcs.
NotCovered
(
new JavaStringValue( "this kind of port instance" )
,
X1
);
PortType = 
new JavaStringValue( "-" )
;
PortName = 
new JavaStringValue( "-" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1796;
// $$$$$$$$ 
} // CONDITION1798 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1796 N=1795
if (javadummy) break CONDITION1795;
} // CONDLIST1796 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(PortType);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
GloballyDefined
(
PortType
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 1799 (in cond 1795) *****
CONDLIST1799: // @@@ begin of alternative group
while(javadummy) {
CONDITION1800: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedPortType
JavaNode RefNormalizedPortType= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "porttype") )
   if (javadummy) break  CONDITION1800;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
//assign current1 to RefNormalizedPortType --- JJ.M4
RefNormalizedPortType = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1799;
// $$$$$$$$ 
} // CONDITION1800 // @@@ end of alternative
CONDITION1801: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
PortType
,
new JavaStringValue( "' not defined as port type" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1799;
// $$$$$$$$ 
} // CONDITION1801 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1799 N=1795
if (javadummy) break CONDITION1795;
} // CONDLIST1799 @@@ end of alternative group
// *** CONTINUE ***
CompItem = 
NodeFactory.NewNode(
"compitem_port"
, new JavaNode [] {
PortName
,
Def
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1794;
// $$$$$$$$ 
} // CONDITION1795 // @@@ end of alternative
CONDITION1802: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
// DECLARE for alternative VarName
JavaNode VarName= null;
{
JavaNode current0 = ComponentElementDef;
if (! current0 .Name
.equals( "ComponentElementDef_A2") )
   if (javadummy) break  CONDITION1802;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1803 (in cond 1802) *****
CONDLIST1803: // @@@ begin of alternative group
while(javadummy) {
CONDITION1804: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative VARTYPE
JavaNode VARTYPE= null;
{
JavaNode current0 = X2;
if (! current0 .Name
.equals( "VarInstance_A1") )
   if (javadummy) break  CONDITION1804;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
if (! current1 .Name
.equals( "VarInstance_A1_M2_A1") )
   if (javadummy) break  CONDITION1804;
{ //(( children level 2
JavaNode current2 =
   current1 . Child1[0];
JavaNode kurrent1 = current1;
if (! current2 .Name
.equals( "VarInstance_A1_M2_A1_M1_A1") )
   if (javadummy) break  CONDITION1804;
{ //(( children level 3
JavaNode current3 =
   current2 . Child1[0];
JavaNode kurrent2 = current2;
//assign current3 to VARTYPE --- JJ.M4
VARTYPE = current3 ;
current3 = kurrent2.Child1[1];
if (! current3 .Name
.equals( "VarList_A1") )
   if (javadummy) break  CONDITION1804;
{ //(( children level 4
JavaNode current4 =
   current3 . Child1[0];
JavaNode kurrent3 = current3;
if (! current4 .Name
.equals( "SingleVarInstance_A1") )
   if (javadummy) break  CONDITION1804;
{ //(( children level 5
JavaNode current5 =
   current4 . Child1[0];
JavaNode kurrent4 = current4;
//assign current5 to VarName --- JJ.M4
VarName = current5 ;
current5 = kurrent4.Child1[1];
if (current5.Name
// fiwi-noneof 6
!= "NoneOf-SingleVarInstance_A1_M2")
if (javadummy) break CONDITION1804;
{ //(( children level 6
} //)) children level 6
current5 = kurrent4.Child1[2];
if (current5.Name
// fiwi-noneof 6
!= "NoneOf-SingleVarInstance_A1_M3")
if (javadummy) break CONDITION1804;
{ //(( children level 6
} //)) children level 6
} //)) children level 5
current4 = kurrent3.Child1[1];
if (current4.Name
!= "NilOf-VarList_A1_M2")
if (javadummy) break CONDITION1804;
} //)) children level 4
} //)) children level 3
} //)) children level 2
} //)) children level 1
};
YyProcs.
HandleType
(
VARTYPE
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1803;
// $$$$$$$$ 
} // CONDITION1804 // @@@ end of alternative
CONDITION1805: // @@@ begin of alternative
while(javadummy) {
YyProcs.
NotCovered
(
new JavaStringValue( "this kind of var instance" )
,
X2
);
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
VarName = 
new JavaStringValue( "-" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1803;
// $$$$$$$$ 
} // CONDITION1805 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1803 N=1802
if (javadummy) break CONDITION1802;
} // CONDLIST1803 @@@ end of alternative group
// *** CONTINUE ***
CompItem = 
NodeFactory.NewNode(
"compitem_var"
, new JavaNode [] {
VarName
,
Tp
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1794;
// $$$$$$$$ 
} // CONDITION1802 // @@@ end of alternative
CONDITION1806: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X3
JavaNode X3= null;
{
JavaNode current0 = ComponentElementDef;
if (! current0 .Name
.equals( "ComponentElementDef_A3") )
   if (javadummy) break  CONDITION1806;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "TimerInstance in component defs" )
,
X3
);
CompItem = 
NodeFactory.NewNode(
"compitem_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1794;
// $$$$$$$$ 
} // CONDITION1806 // @@@ end of alternative
CONDITION1807: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X4
JavaNode X4= null;
{
JavaNode current0 = ComponentElementDef;
if (! current0 .Name
.equals( "ComponentElementDef_A4") )
   if (javadummy) break  CONDITION1807;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X4 --- JJ.M4
X4 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "ConstInstance in component defs" )
,
X4
);
CompItem = 
NodeFactory.NewNode(
"compitem_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1794;
// $$$$$$$$ 
} // CONDITION1807 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1794 N=1793
if (javadummy) break CONDITION1793;
} // CONDLIST1794 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1792;
// $$$$$$$$ 
} // CONDITION1793 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1792 N=1791
if (javadummy) break CONDITION1791;
} // CONDLIST1792 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
CompItem
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1790;
// $$$$$$$$ 
} // CONDITION1791 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1790 N=1789
if (javadummy) break CONDITION1789;
} // CONDLIST1790 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1789
// failed:
JavaLib.rtsAllAlternativesFailed("HandleComponentDefListMember");
}



public
static
void
HHHandleComponentMembers(

JavaNode yy_inparam_0
)
{
// DECLARE for proc CompItemList
JavaNode CompItemList = null;
// DECLARE for proc NormalizedComponentType
JavaNode NormalizedComponentType = null;
CONDITION1808:
while(javadummy) {
// ***** begin condlist 1809 (in cond 1808) *****
CONDLIST1809: // @@@ begin of alternative group
while(javadummy) {
CONDITION1810: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NormalizedComponentType --- JJ.M4
NormalizedComponentType = current0 ;
};
{
JavaNode current0 = NormalizedComponentType;
if (! current0 .Name
.equals( "normalizedcomptype") )
   if (javadummy) break  CONDITION1810;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to CompItemList --- JJ.M4
CompItemList = current1 ;
} //)) children level 1
};
YyProcs.
HHHandleComponentMembersList
(
CompItemList
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1809;
// $$$$$$$$ 
} // CONDITION1810 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1809 N=1808
if (javadummy) break CONDITION1808;
} // CONDLIST1809 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1808
// failed:
JavaLib.rtsAllAlternativesFailed("HHHandleComponentMembers");
}



public
static
void
HHHandleComponentMembersList(

JavaNode yy_inparam_0
)
{
CONDITION1811:
while(javadummy) {
// ***** begin condlist 1812 (in cond 1811) *****
CONDLIST1812: // @@@ begin of alternative group
while(javadummy) {
CONDITION1813: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-CompItem")
if (javadummy) break CONDITION1813;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
HHHandleComponentMember
(
H
);
YyProcs.
HHHandleComponentMembersList
(
T
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1812;
// $$$$$$$$ 
} // CONDITION1813 // @@@ end of alternative
CONDITION1814: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-CompItem")
if (javadummy) break CONDITION1814;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1812;
// $$$$$$$$ 
} // CONDITION1814 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1812 N=1811
if (javadummy) break CONDITION1811;
} // CONDLIST1812 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1811
// failed:
JavaLib.rtsAllAlternativesFailed("HHHandleComponentMembersList");
}



public
static
void
HHHandleComponentMember(

JavaNode yy_inparam_0
)
{
// DECLARE for proc CompItem
JavaNode CompItem = null;
CONDITION1815:
while(javadummy) {
// ***** begin condlist 1816 (in cond 1815) *****
CONDLIST1816: // @@@ begin of alternative group
while(javadummy) {
CONDITION1817: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to CompItem --- JJ.M4
CompItem = current0 ;
};
// ***** begin condlist 1818 (in cond 1817) *****
CONDLIST1818: // @@@ begin of alternative group
while(javadummy) {
CONDITION1819: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
// DECLARE for alternative VarName
JavaNode VarName= null;
{
JavaNode current0 = CompItem;
if (! current0 .Name
.equals( "compitem_var") )
   if (javadummy) break  CONDITION1819;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to VarName --- JJ.M4
VarName = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Tp --- JJ.M4
Tp = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("EnterVar(\n");
JavaLib.rtsEmitCode
("\"");
JavaLib.rtsEmitString
(
VarName
);
JavaLib.rtsEmitCode
("\"\n");
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("Instructions.IntegerConstant(7777)\n");
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1818;
// $$$$$$$$ 
} // CONDITION1819 // @@@ end of alternative
CONDITION1820: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative PortName
JavaNode PortName= null;
// DECLARE for alternative PortType
JavaNode PortType= null;
{
JavaNode current0 = CompItem;
if (! current0 .Name
.equals( "compitem_port") )
   if (javadummy) break  CONDITION1820;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to PortName --- JJ.M4
PortName = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Def --- JJ.M4
Def = current1 ;
} //)) children level 1
};
// ***** begin condlist 1821 (in cond 1820) *****
CONDLIST1821: // @@@ begin of alternative group
while(javadummy) {
CONDITION1822: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "porttype") )
   if (javadummy) break  CONDITION1822;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to PortType --- JJ.M4
PortType = current1 ;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1821;
// $$$$$$$$ 
} // CONDITION1822 // @@@ end of alternative
CONDITION1823: // @@@ begin of alternative
while(javadummy) {
JavaLib.Log
(
Def
);
TokenStream.ReportError
(
new JavaStringValue( "def falsch" )
,new JavaStringValue( "nopos" )
);
PortType = 
new JavaStringValue( "-" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1821;
// $$$$$$$$ 
} // CONDITION1823 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1821 N=1820
if (javadummy) break CONDITION1820;
} // CONDLIST1821 @@@ end of alternative group
// *** CONTINUE ***
JavaLib.rtsEmitCode
("// ");
JavaLib.rtsEmitString
(
PortType
);
JavaLib.rtsEmitCode
(" ");
JavaLib.rtsEmitString
(
PortName
);
JavaLib.rtsEmitCode
("\n");
JavaLib.rtsEmitCode
("EnterPort(\n");
JavaLib.rtsEmitCode
("\"");
JavaLib.rtsEmitString
(
PortName
);
JavaLib.rtsEmitCode
("\"\n");
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("new ");
JavaLib.rtsEmitString
(
PortType
);
JavaLib.rtsEmitCode
(" (\"");
JavaLib.rtsEmitString
(
PortName
);
JavaLib.rtsEmitCode
("\")\n");
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1818;
// $$$$$$$$ 
} // CONDITION1820 // @@@ end of alternative
CONDITION1824: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CompItem;
if (! current0 .Name
.equals( "compitem_null") )
   if (javadummy) break  CONDITION1824;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1818;
// $$$$$$$$ 
} // CONDITION1824 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1818 N=1817
if (javadummy) break CONDITION1817;
} // CONDLIST1818 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1816;
// $$$$$$$$ 
} // CONDITION1817 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1816 N=1815
if (javadummy) break CONDITION1815;
} // CONDLIST1816 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1815
// failed:
JavaLib.rtsAllAlternativesFailed("HHHandleComponentMember");
}



public
static
void
ActivatePortType(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc PKG
JavaNode PKG = null;
// DECLARE for proc P
JavaNode P = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc Dir
JavaNode Dir = null;
// DECLARE for proc RefNormalizedPortType
JavaNode RefNormalizedPortType = null;
// DECLARE for proc PortDefAttribs
JavaNode PortDefAttribs = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION1825:
while(javadummy) {
// ***** begin condlist 1826 (in cond 1825) *****
CONDLIST1826: // @@@ begin of alternative group
while(javadummy) {
CONDITION1827: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to PortDefAttribs --- JJ.M4
PortDefAttribs = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to RefNormalizedPortType --- JJ.M4
RefNormalizedPortType = current0 ;
};
YyProcs.
HandlePortDefAttribs
(
PortDefAttribs
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Dir --- JJ.M4
Dir = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
P = 
NodeFactory.NewNode(
"normalizedport"
, new JavaNode [] {
Dir
,
Tp
}
)
;
JavaLib.rtsBindToKey(RefNormalizedPortType,
P
);
JavaLib.rtsCheckDefined(NameOfModule,"/line,offset,length,file=/ 1020 27399 12 Globals.g");
PKG = NameOfModule;
YyProcs.
OpenFile
(
PKG
,
NAME
);
JavaLib.rtsEmitCode
("// EMITFILE 4 port type\n");
JavaLib.rtsEmitCode
("package ");
JavaLib.rtsEmitString
(
PKG
);
JavaLib.rtsEmitCode
(";\n");
YyProcs.
Emit_Imports
(
);
JavaLib.rtsEmitCode
("public class ");
JavaLib.rtsEmitString
(
NAME
);
JavaLib.rtsEmitCode
(" extends Port\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("public ");
JavaLib.rtsEmitString
(
NAME
);
JavaLib.rtsEmitCode
(" (String Id)\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("MyName = Id;\n");
JavaLib.rtsEmitCode
("MyType = \"");
JavaLib.rtsEmitString
(
NAME
);
JavaLib.rtsEmitCode
("\";\n");
JavaLib.rtsEmitCode
("targetcode.Trace.print(\"Port constructed:\");\n");
JavaLib.rtsEmitCode
("TestOutput();");
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
("}\n");
// openfile
JavaLib.rtsCloseAlphaFile
(
);
// openfile end
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1826;
// $$$$$$$$ 
} // CONDITION1827 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1826 N=1825
if (javadummy) break CONDITION1825;
} // CONDLIST1826 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1825
// failed:
JavaLib.rtsAllAlternativesFailed("ActivatePortType");
}



public
static
void
HandlePortDefAttribs(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc PortDefAttribs
JavaNode PortDefAttribs = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc Dir
JavaNode Dir = null;
CONDITION1828:
while(javadummy) {
// ***** begin condlist 1829 (in cond 1828) *****
CONDLIST1829: // @@@ begin of alternative group
while(javadummy) {
CONDITION1830: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to PortDefAttribs --- JJ.M4
PortDefAttribs = current0 ;
};
// ***** begin condlist 1831 (in cond 1830) *****
CONDLIST1831: // @@@ begin of alternative group
while(javadummy) {
CONDITION1832: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Attr
JavaNode Attr= null;
// DECLARE for alternative M4
JavaNode M4= null;
// DECLARE for alternative M2
JavaNode M2= null;
{
JavaNode current0 = PortDefAttribs;
if (! current0 .Name
.equals( "PortDefAttribs_A1") )
   if (javadummy) break  CONDITION1832;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Attr --- JJ.M4
Attr = current1 ;
} //)) children level 1
};
// ***** begin condlist 1833 (in cond 1832) *****
CONDLIST1833: // @@@ begin of alternative group
while(javadummy) {
CONDITION1834: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Attr;
if (! current0 .Name
.equals( "MessageAttribs_A1") )
   if (javadummy) break  CONDITION1834;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to M2 --- JJ.M4
M2 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to M4 --- JJ.M4
M4 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1835 (in cond 1834) *****
CONDLIST1835: // @@@ begin of alternative group
while(javadummy) {
CONDITION1836: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-MessageAttribs_A1_M2")
if (javadummy) break CONDITION1836;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1835;
// $$$$$$$$ 
} // CONDITION1836 // @@@ end of alternative
CONDITION1837: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M2;
if (current0.Name
!= "OneOf-MessageAttribs_A1_M2")
if (javadummy) break CONDITION1837;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "realtime" )
,
M2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1835;
// $$$$$$$$ 
} // CONDITION1837 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1835 N=1834
if (javadummy) break CONDITION1834;
} // CONDLIST1835 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1838 (in cond 1834) *****
CONDLIST1838: // @@@ begin of alternative group
while(javadummy) {
CONDITION1839: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative P
JavaNode P= null;
{
JavaNode current0 = M4;
if (current0.Name
!= "NilOf-MessageAttribs_A1_M4")
if (javadummy) break CONDITION1839;
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(M4);
//assign current0 to P --- JJ.M4
P = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "empty attributes not expected" )
,
P
);
Dir = 
NodeFactory.NewNode(
"dir_in"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1838;
// $$$$$$$$ 
} // CONDITION1839 // @@@ end of alternative
CONDITION1840: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
// DECLARE for alternative Semi
JavaNode Semi= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = M4;
if (current0.Name
!= "SeqOf-MessageAttribs_A1_M4")
if (javadummy) break CONDITION1840;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
// ***** begin condlist 1841 (in cond 1840) *****
CONDLIST1841: // @@@ begin of alternative group
while(javadummy) {
CONDITION1842: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "MessageAttribs_A1_M4_A1") )
   if (javadummy) break  CONDITION1842;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Semi --- JJ.M4
Semi = current1 ;
} //)) children level 1
};
// ***** begin condlist 1843 (in cond 1842) *****
CONDLIST1843: // @@@ begin of alternative group
while(javadummy) {
CONDITION1844: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative XX1
JavaNode XX1= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "MessageAttribs_A1_M4_A1_M1_A1") )
   if (javadummy) break  CONDITION1844;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX1 --- JJ.M4
XX1 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "address decl" )
,
X1
);
Dir = 
NodeFactory.NewNode(
"dir_in"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1843;
// $$$$$$$$ 
} // CONDITION1844 // @@@ end of alternative
CONDITION1845: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative XX2
JavaNode XX2= null;
// DECLARE for alternative AllOrTypeList
JavaNode AllOrTypeList= null;
// DECLARE for alternative Direction
JavaNode Direction= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "MessageAttribs_A1_M4_A1_M1_A2") )
   if (javadummy) break  CONDITION1845;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX2 --- JJ.M4
XX2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1846 (in cond 1845) *****
CONDLIST1846: // @@@ begin of alternative group
while(javadummy) {
CONDITION1847: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX2;
if (! current0 .Name
.equals( "MessageList_A1") )
   if (javadummy) break  CONDITION1847;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Direction --- JJ.M4
Direction = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to AllOrTypeList --- JJ.M4
AllOrTypeList = current1 ;
} //)) children level 1
};
// ***** begin condlist 1848 (in cond 1847) *****
CONDLIST1848: // @@@ begin of alternative group
while(javadummy) {
CONDITION1849: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Direction;
if (! current0 .Name
.equals( "Direction_A1") )
   if (javadummy) break  CONDITION1849;
};
Dir = 
NodeFactory.NewNode(
"dir_in"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1848;
// $$$$$$$$ 
} // CONDITION1849 // @@@ end of alternative
CONDITION1850: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Direction;
if (! current0 .Name
.equals( "Direction_A2") )
   if (javadummy) break  CONDITION1850;
};
Dir = 
NodeFactory.NewNode(
"dir_out"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1848;
// $$$$$$$$ 
} // CONDITION1850 // @@@ end of alternative
CONDITION1851: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Direction;
if (! current0 .Name
.equals( "Direction_A3") )
   if (javadummy) break  CONDITION1851;
};
Dir = 
NodeFactory.NewNode(
"dir_inout"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1848;
// $$$$$$$$ 
} // CONDITION1851 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1848 N=1847
if (javadummy) break CONDITION1847;
} // CONDLIST1848 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1846;
// $$$$$$$$ 
} // CONDITION1847 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1846 N=1845
if (javadummy) break CONDITION1845;
} // CONDLIST1846 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1852 (in cond 1845) *****
CONDLIST1852: // @@@ begin of alternative group
while(javadummy) {
CONDITION1853: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = AllOrTypeList;
if (! current0 .Name
.equals( "AllOrTypeList_A1") )
   if (javadummy) break  CONDITION1853;
};
YyProcs.
NotCovered
(
new JavaStringValue( "all" )
,
X1
);
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1852;
// $$$$$$$$ 
} // CONDITION1853 // @@@ end of alternative
CONDITION1854: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative TypeList
JavaNode TypeList= null;
// DECLARE for alternative Tail
JavaNode Tail= null;
// DECLARE for alternative Head
JavaNode Head= null;
{
JavaNode current0 = AllOrTypeList;
if (! current0 .Name
.equals( "AllOrTypeList_A2") )
   if (javadummy) break  CONDITION1854;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to TypeList --- JJ.M4
TypeList = current1 ;
} //)) children level 1
};
// ***** begin condlist 1855 (in cond 1854) *****
CONDLIST1855: // @@@ begin of alternative group
while(javadummy) {
CONDITION1856: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TypeList;
if (! current0 .Name
.equals( "TypeList_A1") )
   if (javadummy) break  CONDITION1856;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Head --- JJ.M4
Head = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Tail --- JJ.M4
Tail = current1 ;
} //)) children level 1
};
YyProcs.
HandleType
(
Head
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
// ***** begin condlist 1857 (in cond 1856) *****
CONDLIST1857: // @@@ begin of alternative group
while(javadummy) {
CONDITION1858: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Tail;
if (current0.Name
!= "NilOf-TypeList_A1_M2")
if (javadummy) break CONDITION1858;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1857;
// $$$$$$$$ 
} // CONDITION1858 // @@@ end of alternative
CONDITION1859: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Tail;
if (current0.Name
!= "SeqOf-TypeList_A1_M2")
if (javadummy) break CONDITION1859;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "type list" )
,
X1
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1857;
// $$$$$$$$ 
} // CONDITION1859 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1857 N=1856
if (javadummy) break CONDITION1856;
} // CONDLIST1857 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1855;
// $$$$$$$$ 
} // CONDITION1856 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1855 N=1854
if (javadummy) break CONDITION1854;
} // CONDLIST1855 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1852;
// $$$$$$$$ 
} // CONDITION1854 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1852 N=1845
if (javadummy) break CONDITION1845;
} // CONDLIST1852 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1843;
// $$$$$$$$ 
} // CONDITION1845 // @@@ end of alternative
CONDITION1860: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative XX3
JavaNode XX3= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "MessageAttribs_A1_M4_A1_M1_A3") )
   if (javadummy) break  CONDITION1860;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX3 --- JJ.M4
XX3 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "config param" )
,
X1
);
Dir = 
NodeFactory.NewNode(
"dir_in"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1843;
// $$$$$$$$ 
} // CONDITION1860 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1843 N=1842
if (javadummy) break CONDITION1842;
} // CONDLIST1843 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1841;
// $$$$$$$$ 
} // CONDITION1842 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1841 N=1840
if (javadummy) break CONDITION1840;
} // CONDLIST1841 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1838;
// $$$$$$$$ 
} // CONDITION1840 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1838 N=1834
if (javadummy) break CONDITION1834;
} // CONDLIST1838 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1833;
// $$$$$$$$ 
} // CONDITION1834 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1833 N=1832
if (javadummy) break CONDITION1832;
} // CONDLIST1833 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1831;
// $$$$$$$$ 
} // CONDITION1832 // @@@ end of alternative
CONDITION1861: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PortDefAttribs;
if (! current0 .Name
.equals( "PortDefAttribs_A2") )
   if (javadummy) break  CONDITION1861;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "procedure ports" )
,
PortDefAttribs
);
Dir = 
NodeFactory.NewNode(
"dir_in"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1831;
// $$$$$$$$ 
} // CONDITION1861 // @@@ end of alternative
CONDITION1862: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PortDefAttribs;
if (! current0 .Name
.equals( "PortDefAttribs_A3") )
   if (javadummy) break  CONDITION1862;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "mixed ports" )
,
PortDefAttribs
);
Dir = 
NodeFactory.NewNode(
"dir_in"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1831;
// $$$$$$$$ 
} // CONDITION1862 // @@@ end of alternative
CONDITION1863: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PortDefAttribs;
if (! current0 .Name
.equals( "PortDefAttribs_A4") )
   if (javadummy) break  CONDITION1863;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "stream ports" )
,
PortDefAttribs
);
Dir = 
NodeFactory.NewNode(
"dir_in"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1831;
// $$$$$$$$ 
} // CONDITION1863 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1831 N=1830
if (javadummy) break CONDITION1830;
} // CONDLIST1831 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Dir
;
yy_outparam_1 = 
Tp
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1829;
// $$$$$$$$ 
} // CONDITION1830 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1829 N=1828
if (javadummy) break CONDITION1828;
} // CONDLIST1829 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1828
// failed:
JavaLib.rtsAllAlternativesFailed("HandlePortDefAttribs");
}



public
static
void
HandleType(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Type
JavaNode Type = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION1864:
while(javadummy) {
// ***** begin condlist 1865 (in cond 1864) *****
CONDLIST1865: // @@@ begin of alternative group
while(javadummy) {
CONDITION1866: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Type --- JJ.M4
Type = current0 ;
};
// ***** begin condlist 1867 (in cond 1866) *****
CONDLIST1867: // @@@ begin of alternative group
while(javadummy) {
CONDITION1868: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Predef
JavaNode Predef= null;
{
JavaNode current0 = Type;
if (! current0 .Name
.equals( "Type_A1") )
   if (javadummy) break  CONDITION1868;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Predef --- JJ.M4
Predef = current1 ;
} //)) children level 1
};
// ***** begin condlist 1869 (in cond 1868) *****
CONDLIST1869: // @@@ begin of alternative group
while(javadummy) {
CONDITION1870: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Predef;
if (! current0 .Name
.equals( "PredefinedType_A3") )
   if (javadummy) break  CONDITION1870;
};
Tp = 
NodeFactory.NewNode(
"tp_charstring"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1869;
// $$$$$$$$ 
} // CONDITION1870 // @@@ end of alternative
CONDITION1871: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Predef;
if (! current0 .Name
.equals( "PredefinedType_A5") )
   if (javadummy) break  CONDITION1871;
};
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1869;
// $$$$$$$$ 
} // CONDITION1871 // @@@ end of alternative
CONDITION1872: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Predef;
if (! current0 .Name
.equals( "PredefinedType_A2") )
   if (javadummy) break  CONDITION1872;
};
Tp = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1869;
// $$$$$$$$ 
} // CONDITION1872 // @@@ end of alternative
CONDITION1873: // @@@ begin of alternative
while(javadummy) {
YyProcs.
NotCovered
(
new JavaStringValue( "this predefined field type" )
,
Predef
);
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1869;
// $$$$$$$$ 
} // CONDITION1873 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1869 N=1868
if (javadummy) break CONDITION1868;
} // CONDLIST1869 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1867;
// $$$$$$$$ 
} // CONDITION1868 // @@@ end of alternative
CONDITION1874: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative R
JavaNode R= null;
// DECLARE for alternative D
JavaNode D= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative X5
JavaNode X5= null;
// DECLARE for alternative X4
JavaNode X4= null;
// DECLARE for alternative X3
JavaNode X3= null;
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = Type;
if (! current0 .Name
.equals( "Type_A2") )
   if (javadummy) break  CONDITION1874;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to R --- JJ.M4
R = current1 ;
} //)) children level 1
};
// ***** begin condlist 1875 (in cond 1874) *****
CONDLIST1875: // @@@ begin of alternative group
while(javadummy) {
CONDITION1876: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = R;
if (! current0 .Name
.equals( "ReferencedType_A1") )
   if (javadummy) break  CONDITION1876;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to X4 --- JJ.M4
X4 = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to X5 --- JJ.M4
X5 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(X2);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
GloballyDefined
(
X2
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to D --- JJ.M4
D = current0 ;
}
Tp = 
NodeFactory.NewNode(
"tp_referenced"
, new JavaNode [] {
D
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1875;
// $$$$$$$$ 
} // CONDITION1876 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1875 N=1874
if (javadummy) break CONDITION1874;
} // CONDLIST1875 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1867;
// $$$$$$$$ 
} // CONDITION1874 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1867 N=1866
if (javadummy) break CONDITION1866;
} // CONDLIST1867 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1865;
// $$$$$$$$ 
} // CONDITION1866 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1865 N=1864
if (javadummy) break CONDITION1864;
} // CONDLIST1865 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1864
// failed:
JavaLib.rtsAllAlternativesFailed("HandleType");
}


// global variable ActiveRunsOnComponent
static JavaNode ActiveRunsOnComponent = null;

public
static
void
ActivateTestcase2(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc ResBlock
JavaNode ResBlock = null;
// DECLARE for proc BLOCK
JavaNode BLOCK = null;
// DECLARE for proc SystemC
JavaNode SystemC = null;
// DECLARE for proc RunsOnC
JavaNode RunsOnC = null;
// DECLARE for proc NormalizedTestcase
JavaNode NormalizedTestcase = null;
// DECLARE for proc RefNormalizedTestcase
JavaNode RefNormalizedTestcase = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION1877:
while(javadummy) {
// ***** begin condlist 1878 (in cond 1877) *****
CONDLIST1878: // @@@ begin of alternative group
while(javadummy) {
CONDITION1879: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to RefNormalizedTestcase --- JJ.M4
RefNormalizedTestcase = current0 ;
};
NormalizedTestcase = JavaLib.rtsBoundToKey(RefNormalizedTestcase);
{
JavaNode current0 = NormalizedTestcase;
if (! current0 .Name
.equals( "normalizedtestcase") )
   if (javadummy) break  CONDITION1879;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RunsOnC --- JJ.M4
RunsOnC = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to SystemC --- JJ.M4
SystemC = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to BLOCK --- JJ.M4
BLOCK = current1 ;
} //)) children level 1
};
YyProcs.
BeginLocalScope
(
);
ActiveRunsOnComponent=
RunsOnC
;
YyProcs.
MakeComponentMembersVisible
(
RunsOnC
);
YyProcs.
Trafo_StatementBlock
(
BLOCK
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ResBlock --- JJ.M4
ResBlock = current0 ;
}
YyProcs.
EndLocalScope
(
);
YyProcs.
Emit_Testcase
(
NodeFactory.NewNode(
"testcase"
, new JavaNode [] {
NAME
,
RunsOnC
,
SystemC
,
ResBlock
}
)
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1878;
// $$$$$$$$ 
} // CONDITION1879 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1878 N=1877
if (javadummy) break CONDITION1877;
} // CONDLIST1878 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1877
// failed:
JavaLib.rtsAllAlternativesFailed("ActivateTestcase2");
}



public
static
void
ActivateFunction2(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc ResBlock
JavaNode ResBlock = null;
// DECLARE for proc BLOCK
JavaNode BLOCK = null;
// DECLARE for proc RunsOnC
JavaNode RunsOnC = null;
// DECLARE for proc NormalizedFunction
JavaNode NormalizedFunction = null;
// DECLARE for proc RefNormalizedFunction
JavaNode RefNormalizedFunction = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION1880:
while(javadummy) {
// ***** begin condlist 1881 (in cond 1880) *****
CONDLIST1881: // @@@ begin of alternative group
while(javadummy) {
CONDITION1882: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to RefNormalizedFunction --- JJ.M4
RefNormalizedFunction = current0 ;
};
NormalizedFunction = JavaLib.rtsBoundToKey(RefNormalizedFunction);
{
JavaNode current0 = NormalizedFunction;
if (! current0 .Name
.equals( "normalizedfunction") )
   if (javadummy) break  CONDITION1882;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RunsOnC --- JJ.M4
RunsOnC = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to BLOCK --- JJ.M4
BLOCK = current1 ;
} //)) children level 1
};
YyProcs.
BeginLocalScope
(
);
ActiveRunsOnComponent=
RunsOnC
;
YyProcs.
MakeComponentMembersVisible
(
RunsOnC
);
YyProcs.
Trafo_StatementBlock
(
BLOCK
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ResBlock --- JJ.M4
ResBlock = current0 ;
}
YyProcs.
EndLocalScope
(
);
YyProcs.
Emit_Function
(
NodeFactory.NewNode(
"function"
, new JavaNode [] {
NAME
,
ResBlock
}
)
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1881;
// $$$$$$$$ 
} // CONDITION1882 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1881 N=1880
if (javadummy) break CONDITION1880;
} // CONDLIST1881 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1880
// failed:
JavaLib.rtsAllAlternativesFailed("ActivateFunction2");
}



public
static
void
HandleRunsOn(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc RUNSON
JavaNode RUNSON = null;
// DECLARE for proc RUNSON13
JavaNode RUNSON13 = null;
// DECLARE for proc RunsOnC
JavaNode RunsOnC = null;
CONDITION1883:
while(javadummy) {
// ***** begin condlist 1884 (in cond 1883) *****
CONDLIST1884: // @@@ begin of alternative group
while(javadummy) {
CONDITION1885: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to RUNSON --- JJ.M4
RUNSON = current0 ;
};
// ***** begin condlist 1886 (in cond 1885) *****
CONDLIST1886: // @@@ begin of alternative group
while(javadummy) {
CONDITION1887: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = RUNSON;
if (! current0 .Name
.equals( "RunsOnSpec_A1") )
   if (javadummy) break  CONDITION1887;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RUNSON13 --- JJ.M4
RUNSON13 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1888 (in cond 1887) *****
CONDLIST1888: // @@@ begin of alternative group
while(javadummy) {
CONDITION1889: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative COMPTYPE
JavaNode COMPTYPE= null;
// DECLARE for alternative COMPTYPE14
JavaNode COMPTYPE14= null;
// DECLARE for alternative COMPTYPE13
JavaNode COMPTYPE13= null;
// DECLARE for alternative COMPTYPE11
JavaNode COMPTYPE11= null;
{
JavaNode current0 = RUNSON13;
if (! current0 .Name
.equals( "RunsOnSpec_A1_M3_A1") )
   if (javadummy) break  CONDITION1889;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to COMPTYPE --- JJ.M4
COMPTYPE = current1 ;
} //)) children level 1
};
// ***** begin condlist 1890 (in cond 1889) *****
CONDLIST1890: // @@@ begin of alternative group
while(javadummy) {
CONDITION1891: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = COMPTYPE;
if (! current0 .Name
.equals( "ComponentType_A1") )
   if (javadummy) break  CONDITION1891;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to COMPTYPE11 --- JJ.M4
COMPTYPE11 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RunsOnC --- JJ.M4
RunsOnC = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to COMPTYPE13 --- JJ.M4
COMPTYPE13 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to COMPTYPE14 --- JJ.M4
COMPTYPE14 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1892 (in cond 1891) *****
CONDLIST1892: // @@@ begin of alternative group
while(javadummy) {
CONDITION1893: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = COMPTYPE11;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentType_A1_M1")
if (javadummy) break CONDITION1893;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1892;
// $$$$$$$$ 
} // CONDITION1893 // @@@ end of alternative
CONDITION1894: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative C11
JavaNode C11= null;
{
JavaNode current0 = COMPTYPE11;
if (current0.Name
!= "OneOf-ComponentType_A1_M1")
if (javadummy) break CONDITION1894;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to C11 --- JJ.M4
C11 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "qualified component in 'runs on'" )
,
C11
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1892;
// $$$$$$$$ 
} // CONDITION1894 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1892 N=1891
if (javadummy) break CONDITION1891;
} // CONDLIST1892 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1895 (in cond 1891) *****
CONDLIST1895: // @@@ begin of alternative group
while(javadummy) {
CONDITION1896: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = COMPTYPE13;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentType_A1_M3")
if (javadummy) break CONDITION1896;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1895;
// $$$$$$$$ 
} // CONDITION1896 // @@@ end of alternative
CONDITION1897: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative C13
JavaNode C13= null;
{
JavaNode current0 = COMPTYPE13;
if (current0.Name
!= "OneOf-ComponentType_A1_M3")
if (javadummy) break CONDITION1897;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to C13 --- JJ.M4
C13 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "generic component in 'runs on'" )
,
C13
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1895;
// $$$$$$$$ 
} // CONDITION1897 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1895 N=1891
if (javadummy) break CONDITION1891;
} // CONDLIST1895 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1898 (in cond 1891) *****
CONDLIST1898: // @@@ begin of alternative group
while(javadummy) {
CONDITION1899: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = COMPTYPE14;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentType_A1_M4")
if (javadummy) break CONDITION1899;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1898;
// $$$$$$$$ 
} // CONDITION1899 // @@@ end of alternative
CONDITION1900: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative C14
JavaNode C14= null;
{
JavaNode current0 = COMPTYPE14;
if (current0.Name
!= "OneOf-ComponentType_A1_M4")
if (javadummy) break CONDITION1900;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to C14 --- JJ.M4
C14 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "paramerized component in 'runs on'" )
,
C14
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1898;
// $$$$$$$$ 
} // CONDITION1900 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1898 N=1891
if (javadummy) break CONDITION1891;
} // CONDLIST1898 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1890;
// $$$$$$$$ 
} // CONDITION1891 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1890 N=1889
if (javadummy) break CONDITION1889;
} // CONDLIST1890 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1888;
// $$$$$$$$ 
} // CONDITION1889 // @@@ end of alternative
CONDITION1901: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = RUNSON13;
if (! current0 .Name
.equals( "RunsOnSpec_A1_M3_A2") )
   if (javadummy) break  CONDITION1901;
};
TokenStream.ReportError
(
new JavaStringValue( "cover" )
,new JavaStringValue( "nopos" )
);
YyProcs.
NotCovered
(
new JavaStringValue( "this runs on spec" )
,
RUNSON13
);
RunsOnC = 
new JavaStringValue( "" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1888;
// $$$$$$$$ 
} // CONDITION1901 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1888 N=1887
if (javadummy) break CONDITION1887;
} // CONDLIST1888 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1886;
// $$$$$$$$ 
} // CONDITION1887 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1886 N=1885
if (javadummy) break CONDITION1885;
} // CONDLIST1886 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
RunsOnC
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1884;
// $$$$$$$$ 
} // CONDITION1885 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1884 N=1883
if (javadummy) break CONDITION1883;
} // CONDLIST1884 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1883
// failed:
JavaLib.rtsAllAlternativesFailed("HandleRunsOn");
}



public
static
void
MakeComponentMembersVisible(

JavaNode yy_inparam_0
)
{
CONDITION1902:
while(javadummy) {
// ***** begin condlist 1903 (in cond 1902) *****
CONDLIST1903: // @@@ begin of alternative group
while(javadummy) {
CONDITION1904: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"(none)"))
   if (javadummy) break  CONDITION1904;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1903;
// $$$$$$$$ 
} // CONDITION1904 // @@@ end of alternative
CONDITION1905: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative M
JavaNode M= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Comp
JavaNode Comp= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Comp --- JJ.M4
Comp = current0 ;
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Comp);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
GloballyDefined
(
Comp
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to M --- JJ.M4
M = current0 ;
}
// ***** begin condlist 1906 (in cond 1905) *****
CONDLIST1906: // @@@ begin of alternative group
while(javadummy) {
CONDITION1907: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative CompItems
JavaNode CompItems= null;
// DECLARE for alternative NormalizedComponentType
JavaNode NormalizedComponentType= null;
// DECLARE for alternative DEFS
JavaNode DEFS= null;
// DECLARE for alternative RefNormalizedComponentType
JavaNode RefNormalizedComponentType= null;
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = M;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION1907;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedComponentType --- JJ.M4
RefNormalizedComponentType = current1 ;
} //)) children level 1
};
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ComponentDef_A1") )
   if (javadummy) break  CONDITION1907;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
current1 = kurrent0.Child1[3];
current1 = kurrent0.Child1[4];
//assign current1 to DEFS --- JJ.M4
DEFS = current1 ;
} //)) children level 1
};
NormalizedComponentType = JavaLib.rtsBoundToKey(RefNormalizedComponentType);
{
JavaNode current0 = NormalizedComponentType;
if (! current0 .Name
.equals( "normalizedcomptype") )
   if (javadummy) break  CONDITION1907;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to CompItems --- JJ.M4
CompItems = current1 ;
} //)) children level 1
};
YyProcs.
CollectComponentMembers
(
CompItems
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1906;
// $$$$$$$$ 
} // CONDITION1907 // @@@ end of alternative
CONDITION1908: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Comp
,
new JavaStringValue( "' not defined as component" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1906;
// $$$$$$$$ 
} // CONDITION1908 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1906 N=1905
if (javadummy) break CONDITION1905;
} // CONDLIST1906 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1903;
// $$$$$$$$ 
} // CONDITION1905 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1903 N=1902
if (javadummy) break CONDITION1902;
} // CONDLIST1903 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1902
// failed:
JavaLib.rtsAllAlternativesFailed("MakeComponentMembersVisible");
}



public
static
void
CollectComponentMembers(

JavaNode yy_inparam_0
)
{
CONDITION1909:
while(javadummy) {
// ***** begin condlist 1910 (in cond 1909) *****
CONDLIST1910: // @@@ begin of alternative group
while(javadummy) {
CONDITION1911: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-CompItem")
if (javadummy) break CONDITION1911;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
CollectComponentMember
(
H
);
YyProcs.
CollectComponentMembers
(
T
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1910;
// $$$$$$$$ 
} // CONDITION1911 // @@@ end of alternative
CONDITION1912: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-CompItem")
if (javadummy) break CONDITION1912;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1910;
// $$$$$$$$ 
} // CONDITION1912 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1910 N=1909
if (javadummy) break CONDITION1909;
} // CONDLIST1910 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1909
// failed:
JavaLib.rtsAllAlternativesFailed("CollectComponentMembers");
}



public
static
void
CollectComponentMember(

JavaNode yy_inparam_0
)
{
// DECLARE for proc CompItem
JavaNode CompItem = null;
CONDITION1913:
while(javadummy) {
// ***** begin condlist 1914 (in cond 1913) *****
CONDLIST1914: // @@@ begin of alternative group
while(javadummy) {
CONDITION1915: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to CompItem --- JJ.M4
CompItem = current0 ;
};
// ***** begin condlist 1916 (in cond 1915) *****
CONDLIST1916: // @@@ begin of alternative group
while(javadummy) {
CONDITION1917: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = CompItem;
if (! current0 .Name
.equals( "compitem_var") )
   if (javadummy) break  CONDITION1917;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Tp --- JJ.M4
Tp = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineComponentMember_Var
(
Id
,
Tp
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1916;
// $$$$$$$$ 
} // CONDITION1917 // @@@ end of alternative
CONDITION1918: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative DEFINITION
JavaNode DEFINITION= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = CompItem;
if (! current0 .Name
.equals( "compitem_port") )
   if (javadummy) break  CONDITION1918;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to DEFINITION --- JJ.M4
DEFINITION = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineComponentMember_Port
(
Id
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1916;
// $$$$$$$$ 
} // CONDITION1918 // @@@ end of alternative
CONDITION1919: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CompItem;
if (! current0 .Name
.equals( "compitem_null") )
   if (javadummy) break  CONDITION1919;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1916;
// $$$$$$$$ 
} // CONDITION1919 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1916 N=1915
if (javadummy) break CONDITION1915;
} // CONDLIST1916 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1914;
// $$$$$$$$ 
} // CONDITION1915 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1914 N=1913
if (javadummy) break CONDITION1913;
} // CONDLIST1914 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1913
// failed:
JavaLib.rtsAllAlternativesFailed("CollectComponentMember");
}



public
static
void
Trafo_TTCN3Module(

JavaNode yy_inparam_0
)
{
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Semicolon
JavaNode Semicolon = null;
// DECLARE for proc With
JavaNode With = null;
// DECLARE for proc X3
JavaNode X3 = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc LanguageSpec
JavaNode LanguageSpec = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1920:
while(javadummy) {
// ***** begin condlist 1921 (in cond 1920) *****
CONDLIST1921: // @@@ begin of alternative group
while(javadummy) {
CONDITION1922: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 1923 (in cond 1922) *****
CONDLIST1923: // @@@ begin of alternative group
while(javadummy) {
CONDITION1924: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "TTCN3Module_A1") )
   if (javadummy) break  CONDITION1924;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to With --- JJ.M4
With = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to Semicolon --- JJ.M4
Semicolon = current1 ;
} //)) children level 1
};
// ***** begin condlist 1925 (in cond 1924) *****
CONDLIST1925: // @@@ begin of alternative group
while(javadummy) {
CONDITION1926: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ModuleId_A1") )
   if (javadummy) break  CONDITION1926;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to LanguageSpec --- JJ.M4
LanguageSpec = current1 ;
} //)) children level 1
};
// ***** begin condlist 1927 (in cond 1926) *****
CONDLIST1927: // @@@ begin of alternative group
while(javadummy) {
CONDITION1928: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = LanguageSpec;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ModuleId_A1_M2")
if (javadummy) break CONDITION1928;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1927;
// $$$$$$$$ 
} // CONDITION1928 // @@@ end of alternative
CONDITION1929: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative L
JavaNode L= null;
{
JavaNode current0 = LanguageSpec;
if (current0.Name
!= "OneOf-ModuleId_A1_M2")
if (javadummy) break CONDITION1929;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to L --- JJ.M4
L = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "language specification" )
,
L
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1927;
// $$$$$$$$ 
} // CONDITION1929 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1927 N=1926
if (javadummy) break CONDITION1926;
} // CONDLIST1927 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1925;
// $$$$$$$$ 
} // CONDITION1926 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1925 N=1924
if (javadummy) break CONDITION1924;
} // CONDLIST1925 @@@ end of alternative group
// *** CONTINUE ***
NameOfModule=
Id
;
YyProcs.
Trafo_yyDeclsOpt
(
X2
);
YyProcs.
DeclareControlPart
(
X3
);
// ***** begin condlist 1930 (in cond 1924) *****
CONDLIST1930: // @@@ begin of alternative group
while(javadummy) {
CONDITION1931: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = With;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-TTCN3Module_A1_M7")
if (javadummy) break CONDITION1931;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1930;
// $$$$$$$$ 
} // CONDITION1931 // @@@ end of alternative
CONDITION1932: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative W
JavaNode W= null;
{
JavaNode current0 = With;
if (current0.Name
!= "OneOf-TTCN3Module_A1_M7")
if (javadummy) break CONDITION1932;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to W --- JJ.M4
W = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "'with' for modules" )
,
W
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1930;
// $$$$$$$$ 
} // CONDITION1932 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1930 N=1924
if (javadummy) break CONDITION1924;
} // CONDLIST1930 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1933 (in cond 1924) *****
CONDLIST1933: // @@@ begin of alternative group
while(javadummy) {
CONDITION1934: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Semicolon;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-TTCN3Module_A1_M8")
if (javadummy) break CONDITION1934;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1933;
// $$$$$$$$ 
} // CONDITION1934 // @@@ end of alternative
CONDITION1935: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Sem
JavaNode Sem= null;
{
JavaNode current0 = Semicolon;
if (current0.Name
!= "OneOf-TTCN3Module_A1_M8")
if (javadummy) break CONDITION1935;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to Sem --- JJ.M4
Sem = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1933;
// $$$$$$$$ 
} // CONDITION1935 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1933 N=1924
if (javadummy) break CONDITION1924;
} // CONDLIST1933 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1923;
// $$$$$$$$ 
} // CONDITION1924 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1923 N=1922
if (javadummy) break CONDITION1922;
} // CONDLIST1923 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1921;
// $$$$$$$$ 
} // CONDITION1922 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1921 N=1920
if (javadummy) break CONDITION1920;
} // CONDLIST1921 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1920
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_TTCN3Module");
}



public
static
void
Trafo_yyDeclsOpt(

JavaNode yy_inparam_0
)
{
// DECLARE for proc X
JavaNode X = null;
CONDITION1936:
while(javadummy) {
// ***** begin condlist 1937 (in cond 1936) *****
CONDLIST1937: // @@@ begin of alternative group
while(javadummy) {
CONDITION1938: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 1939 (in cond 1938) *****
CONDLIST1939: // @@@ begin of alternative group
while(javadummy) {
CONDITION1940: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-yyDecls")
if (javadummy) break CONDITION1940;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1939;
// $$$$$$$$ 
} // CONDITION1940 // @@@ end of alternative
CONDITION1941: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = X;
if (current0.Name
!= "OneOf-yyDecls")
if (javadummy) break CONDITION1941;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_yyDecls
(
X1
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1939;
// $$$$$$$$ 
} // CONDITION1941 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1939 N=1938
if (javadummy) break CONDITION1938;
} // CONDLIST1939 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1937;
// $$$$$$$$ 
} // CONDITION1938 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1937 N=1936
if (javadummy) break CONDITION1936;
} // CONDLIST1937 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1936
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_yyDeclsOpt");
}



public
static
void
Trafo_yyDecls(

JavaNode yy_inparam_0
)
{
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc LIST
JavaNode LIST = null;
CONDITION1942:
while(javadummy) {
// ***** begin condlist 1943 (in cond 1942) *****
CONDLIST1943: // @@@ begin of alternative group
while(javadummy) {
CONDITION1944: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 1945 (in cond 1944) *****
CONDLIST1945: // @@@ begin of alternative group
while(javadummy) {
CONDITION1946: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "yyDecls_A1") )
   if (javadummy) break  CONDITION1946;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1947 (in cond 1946) *****
CONDLIST1947: // @@@ begin of alternative group
while(javadummy) {
CONDITION1948: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ModuleDefinitionsList_A1") )
   if (javadummy) break  CONDITION1948;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to LIST --- JJ.M4
LIST = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ModuleDefinitionsList_A1_M1_LIST
(
LIST
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1947;
// $$$$$$$$ 
} // CONDITION1948 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1947 N=1946
if (javadummy) break CONDITION1946;
} // CONDLIST1947 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1945;
// $$$$$$$$ 
} // CONDITION1946 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1945 N=1944
if (javadummy) break CONDITION1944;
} // CONDLIST1945 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1943;
// $$$$$$$$ 
} // CONDITION1944 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1943 N=1942
if (javadummy) break CONDITION1942;
} // CONDLIST1943 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1942
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_yyDecls");
}



public
static
void
Trafo_ModuleDefinitionsList_A1_M1_LIST(

JavaNode yy_inparam_0
)
{
// DECLARE for proc LIST
JavaNode LIST = null;
CONDITION1949:
while(javadummy) {
// ***** begin condlist 1950 (in cond 1949) *****
CONDLIST1950: // @@@ begin of alternative group
while(javadummy) {
CONDITION1951: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to LIST --- JJ.M4
LIST = current0 ;
};
// ***** begin condlist 1952 (in cond 1951) *****
CONDLIST1952: // @@@ begin of alternative group
while(javadummy) {
CONDITION1953: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
{
JavaNode current0 = LIST;
if (current0.Name
!= "SeqOf-ModuleDefinitionsList_A1_M1")
if (javadummy) break CONDITION1953;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ModuleDefinitionsList_A1_M1
(
HEAD
);
YyProcs.
Trafo_ModuleDefinitionsList_A1_M1_LIST
(
TAIL
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1952;
// $$$$$$$$ 
} // CONDITION1953 // @@@ end of alternative
CONDITION1954: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = LIST;
if (current0.Name
!= "NilOf-ModuleDefinitionsList_A1_M1")
if (javadummy) break CONDITION1954;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1952;
// $$$$$$$$ 
} // CONDITION1954 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1952 N=1951
if (javadummy) break CONDITION1951;
} // CONDLIST1952 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1950;
// $$$$$$$$ 
} // CONDITION1951 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1950 N=1949
if (javadummy) break CONDITION1949;
} // CONDLIST1950 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1949
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ModuleDefinitionsList_A1_M1_LIST");
}



public
static
void
Trafo_ModuleDefinitionsList_A1_M1(

JavaNode yy_inparam_0
)
{
// DECLARE for proc HEAD
JavaNode HEAD = null;
// DECLARE for proc SemicolonOpt
JavaNode SemicolonOpt = null;
// DECLARE for proc Def
JavaNode Def = null;
CONDITION1955:
while(javadummy) {
// ***** begin condlist 1956 (in cond 1955) *****
CONDLIST1956: // @@@ begin of alternative group
while(javadummy) {
CONDITION1957: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to HEAD --- JJ.M4
HEAD = current0 ;
};
// ***** begin condlist 1958 (in cond 1957) *****
CONDLIST1958: // @@@ begin of alternative group
while(javadummy) {
CONDITION1959: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "ModuleDefinitionsList_A1_M1_A1") )
   if (javadummy) break  CONDITION1959;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Def --- JJ.M4
Def = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to SemicolonOpt --- JJ.M4
SemicolonOpt = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ModuleDefinition
(
Def
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1958;
// $$$$$$$$ 
} // CONDITION1959 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1958 N=1957
if (javadummy) break CONDITION1957;
} // CONDLIST1958 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1956;
// $$$$$$$$ 
} // CONDITION1957 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1956 N=1955
if (javadummy) break CONDITION1955;
} // CONDLIST1956 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1955
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ModuleDefinitionsList_A1_M1");
}



public
static
void
Trafo_ModuleDefinition(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D
JavaNode D = null;
// DECLARE for proc With
JavaNode With = null;
// DECLARE for proc Def
JavaNode Def = null;
CONDITION1960:
while(javadummy) {
// ***** begin condlist 1961 (in cond 1960) *****
CONDLIST1961: // @@@ begin of alternative group
while(javadummy) {
CONDITION1962: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D --- JJ.M4
D = current0 ;
};
// ***** begin condlist 1963 (in cond 1962) *****
CONDLIST1963: // @@@ begin of alternative group
while(javadummy) {
CONDITION1964: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = D;
if (! current0 .Name
.equals( "ModuleDefinition_A1") )
   if (javadummy) break  CONDITION1964;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Def --- JJ.M4
Def = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to With --- JJ.M4
With = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ModuleDefinition_A1_M1
(
Def
);
// ***** begin condlist 1965 (in cond 1964) *****
CONDLIST1965: // @@@ begin of alternative group
while(javadummy) {
CONDITION1966: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = With;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ModuleDefinition_A1_M2")
if (javadummy) break CONDITION1966;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1965;
// $$$$$$$$ 
} // CONDITION1966 // @@@ end of alternative
CONDITION1967: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative W
JavaNode W= null;
{
JavaNode current0 = With;
if (current0.Name
!= "OneOf-ModuleDefinition_A1_M2")
if (javadummy) break CONDITION1967;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to W --- JJ.M4
W = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "'with' for module definitions" )
,
W
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1965;
// $$$$$$$$ 
} // CONDITION1967 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1965 N=1964
if (javadummy) break CONDITION1964;
} // CONDLIST1965 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1963;
// $$$$$$$$ 
} // CONDITION1964 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1963 N=1962
if (javadummy) break CONDITION1962;
} // CONDLIST1963 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1961;
// $$$$$$$$ 
} // CONDITION1962 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1961 N=1960
if (javadummy) break CONDITION1960;
} // CONDLIST1961 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1960
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ModuleDefinition");
}



public
static
void
Trafo_ModuleDefinition_A1_M1(

JavaNode yy_inparam_0
)
{
// DECLARE for proc Arg1
JavaNode Arg1 = null;
CONDITION1968:
while(javadummy) {
// ***** begin condlist 1969 (in cond 1968) *****
CONDLIST1969: // @@@ begin of alternative group
while(javadummy) {
CONDITION1970: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Arg1 --- JJ.M4
Arg1 = current0 ;
};
// ***** begin condlist 1971 (in cond 1970) *****
CONDLIST1971: // @@@ begin of alternative group
while(javadummy) {
CONDITION1972: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
// DECLARE for alternative Item
JavaNode Item= null;
// DECLARE for alternative Visibility
JavaNode Visibility= null;
{
JavaNode current0 = Arg1;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1") )
   if (javadummy) break  CONDITION1972;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1973 (in cond 1972) *****
CONDLIST1973: // @@@ begin of alternative group
while(javadummy) {
CONDITION1974: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1") )
   if (javadummy) break  CONDITION1974;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Visibility --- JJ.M4
Visibility = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Item --- JJ.M4
Item = current1 ;
} //)) children level 1
};
// ***** begin condlist 1975 (in cond 1974) *****
CONDLIST1975: // @@@ begin of alternative group
while(javadummy) {
CONDITION1976: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Visibility;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ModuleDefinition_A1_M1_A1_M1_A1_M1")
if (javadummy) break CONDITION1976;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1975;
// $$$$$$$$ 
} // CONDITION1976 // @@@ end of alternative
CONDITION1977: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative V
JavaNode V= null;
{
JavaNode current0 = Visibility;
if (current0.Name
!= "OneOf-ModuleDefinition_A1_M1_A1_M1_A1_M1")
if (javadummy) break CONDITION1977;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to V --- JJ.M4
V = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "visibility specification" )
,
V
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1975;
// $$$$$$$$ 
} // CONDITION1977 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1975 N=1974
if (javadummy) break CONDITION1974;
} // CONDLIST1975 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Trafo_Item
(
Item
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1973;
// $$$$$$$$ 
} // CONDITION1974 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1973 N=1972
if (javadummy) break CONDITION1972;
} // CONDLIST1973 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1971;
// $$$$$$$$ 
} // CONDITION1972 // @@@ end of alternative
CONDITION1978: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative GroupDef
JavaNode GroupDef= null;
{
JavaNode current0 = Arg1;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A2") )
   if (javadummy) break  CONDITION1978;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to GroupDef --- JJ.M4
GroupDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "groups" )
,
GroupDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1971;
// $$$$$$$$ 
} // CONDITION1978 // @@@ end of alternative
CONDITION1979: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative FriendDef
JavaNode FriendDef= null;
{
JavaNode current0 = Arg1;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A3") )
   if (javadummy) break  CONDITION1979;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FriendDef --- JJ.M4
FriendDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "'friend' definition" )
,
FriendDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1971;
// $$$$$$$$ 
} // CONDITION1979 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1971 N=1970
if (javadummy) break CONDITION1970;
} // CONDLIST1971 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1969;
// $$$$$$$$ 
} // CONDITION1970 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1969 N=1968
if (javadummy) break CONDITION1968;
} // CONDLIST1969 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1968
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ModuleDefinition_A1_M1");
}



public
static
void
Trafo_Item(

JavaNode yy_inparam_0
)
{
// DECLARE for proc Item
JavaNode Item = null;
CONDITION1980:
while(javadummy) {
// ***** begin condlist 1981 (in cond 1980) *****
CONDLIST1981: // @@@ begin of alternative group
while(javadummy) {
CONDITION1982: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Item --- JJ.M4
Item = current0 ;
};
// ***** begin condlist 1983 (in cond 1982) *****
CONDLIST1983: // @@@ begin of alternative group
while(javadummy) {
CONDITION1984: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D1
JavaNode D1= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A1") )
   if (javadummy) break  CONDITION1984;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D1 --- JJ.M4
D1 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_TypeDef
(
D1
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1983;
// $$$$$$$$ 
} // CONDITION1984 // @@@ end of alternative
CONDITION1985: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D2
JavaNode D2= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A2") )
   if (javadummy) break  CONDITION1985;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D2 --- JJ.M4
D2 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ConstDef
(
D2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1983;
// $$$$$$$$ 
} // CONDITION1985 // @@@ end of alternative
CONDITION1986: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D3
JavaNode D3= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A3") )
   if (javadummy) break  CONDITION1986;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D3 --- JJ.M4
D3 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_TemplateDef
(
D3
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1983;
// $$$$$$$$ 
} // CONDITION1986 // @@@ end of alternative
CONDITION1987: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D4
JavaNode D4= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A4") )
   if (javadummy) break  CONDITION1987;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D4 --- JJ.M4
D4 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ModuleParDef
(
D4
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1983;
// $$$$$$$$ 
} // CONDITION1987 // @@@ end of alternative
CONDITION1988: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D5
JavaNode D5= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A5") )
   if (javadummy) break  CONDITION1988;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D5 --- JJ.M4
D5 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_FunctionDef
(
D5
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1983;
// $$$$$$$$ 
} // CONDITION1988 // @@@ end of alternative
CONDITION1989: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D6
JavaNode D6= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A6") )
   if (javadummy) break  CONDITION1989;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D6 --- JJ.M4
D6 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SignatureDef
(
D6
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1983;
// $$$$$$$$ 
} // CONDITION1989 // @@@ end of alternative
CONDITION1990: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D7
JavaNode D7= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A7") )
   if (javadummy) break  CONDITION1990;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D7 --- JJ.M4
D7 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_TestcaseDef
(
D7
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1983;
// $$$$$$$$ 
} // CONDITION1990 // @@@ end of alternative
CONDITION1991: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D8
JavaNode D8= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A8") )
   if (javadummy) break  CONDITION1991;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D8 --- JJ.M4
D8 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_AltstepDef
(
D8
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1983;
// $$$$$$$$ 
} // CONDITION1991 // @@@ end of alternative
CONDITION1992: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D9
JavaNode D9= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A9") )
   if (javadummy) break  CONDITION1992;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D9 --- JJ.M4
D9 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ImportDef
(
D9
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1983;
// $$$$$$$$ 
} // CONDITION1992 // @@@ end of alternative
CONDITION1993: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D10
JavaNode D10= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A10") )
   if (javadummy) break  CONDITION1993;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D10 --- JJ.M4
D10 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ExtFunctionDef
(
D10
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1983;
// $$$$$$$$ 
} // CONDITION1993 // @@@ end of alternative
CONDITION1994: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D11
JavaNode D11= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A11") )
   if (javadummy) break  CONDITION1994;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D11 --- JJ.M4
D11 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ExtConstDef
(
D11
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1983;
// $$$$$$$$ 
} // CONDITION1994 // @@@ end of alternative
CONDITION1995: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D12
JavaNode D12= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A12") )
   if (javadummy) break  CONDITION1995;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D12 --- JJ.M4
D12 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ConfigurationDef
(
D12
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1983;
// $$$$$$$$ 
} // CONDITION1995 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1983 N=1982
if (javadummy) break CONDITION1982;
} // CONDLIST1983 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1981;
// $$$$$$$$ 
} // CONDITION1982 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1981 N=1980
if (javadummy) break CONDITION1980;
} // CONDLIST1981 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1980
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_Item");
}



public
static
void
Trafo_TypeDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc TYPEDEF
JavaNode TYPEDEF = null;
// DECLARE for proc B
JavaNode B = null;
CONDITION1996:
while(javadummy) {
// ***** begin condlist 1997 (in cond 1996) *****
CONDLIST1997: // @@@ begin of alternative group
while(javadummy) {
CONDITION1998: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to TYPEDEF --- JJ.M4
TYPEDEF = current0 ;
};
// ***** begin condlist 1999 (in cond 1998) *****
CONDLIST1999: // @@@ begin of alternative group
while(javadummy) {
CONDITION2000: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TYPEDEF;
if (! current0 .Name
.equals( "TypeDef_A1") )
   if (javadummy) break  CONDITION2000;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to B --- JJ.M4
B = current1 ;
} //)) children level 1
};
// ***** begin condlist 2001 (in cond 2000) *****
CONDLIST2001: // @@@ begin of alternative group
while(javadummy) {
CONDITION2002: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative StructuredTypeDef
JavaNode StructuredTypeDef= null;
{
JavaNode current0 = B;
if (! current0 .Name
.equals( "TypeDefBody_A1") )
   if (javadummy) break  CONDITION2002;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to StructuredTypeDef --- JJ.M4
StructuredTypeDef = current1 ;
} //)) children level 1
};
// ***** begin condlist 2003 (in cond 2002) *****
CONDLIST2003: // @@@ begin of alternative group
while(javadummy) {
CONDITION2004: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RecordDef
JavaNode RecordDef= null;
// DECLARE for alternative StrucDefBody
JavaNode StrucDefBody= null;
// DECLARE for alternative X4
JavaNode X4= null;
// DECLARE for alternative X3
JavaNode X3= null;
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = StructuredTypeDef;
if (! current0 .Name
.equals( "StructuredTypeDef_A1") )
   if (javadummy) break  CONDITION2004;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RecordDef --- JJ.M4
RecordDef = current1 ;
} //)) children level 1
};
// ***** begin condlist 2005 (in cond 2004) *****
CONDLIST2005: // @@@ begin of alternative group
while(javadummy) {
CONDITION2006: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = RecordDef;
if (! current0 .Name
.equals( "RecordDef_A1") )
   if (javadummy) break  CONDITION2006;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to StrucDefBody --- JJ.M4
StrucDefBody = current1 ;
} //)) children level 1
};
// ***** begin condlist 2007 (in cond 2006) *****
CONDLIST2007: // @@@ begin of alternative group
while(javadummy) {
CONDITION2008: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = StrucDefBody;
if (! current0 .Name
.equals( "StructDefBody_A1") )
   if (javadummy) break  CONDITION2008;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to X4 --- JJ.M4
X4 = current1 ;
} //)) children level 1
};
// ***** begin condlist 2009 (in cond 2008) *****
CONDLIST2009: // @@@ begin of alternative group
while(javadummy) {
CONDITION2010: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Name
JavaNode Name= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "StructDefBody_A1_M1_A1") )
   if (javadummy) break  CONDITION2010;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Name --- JJ.M4
Name = current1 ;
} //)) children level 1
};
YyProcs.
HandleRecordType
(
Name
,
X2
,
X3
,
X4
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2009;
// $$$$$$$$ 
} // CONDITION2010 // @@@ end of alternative
CONDITION2011: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "StructDefBody_A1_M1_A2") )
   if (javadummy) break  CONDITION2011;
};
YyProcs.
NotCovered
(
new JavaStringValue( "address in record type definitions" )
,
X1
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2009;
// $$$$$$$$ 
} // CONDITION2011 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2009 N=2008
if (javadummy) break CONDITION2008;
} // CONDLIST2009 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2007;
// $$$$$$$$ 
} // CONDITION2008 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2007 N=2006
if (javadummy) break CONDITION2006;
} // CONDLIST2007 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2005;
// $$$$$$$$ 
} // CONDITION2006 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2005 N=2004
if (javadummy) break CONDITION2004;
} // CONDLIST2005 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2003;
// $$$$$$$$ 
} // CONDITION2004 // @@@ end of alternative
CONDITION2012: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative UnionDef
JavaNode UnionDef= null;
{
JavaNode current0 = StructuredTypeDef;
if (! current0 .Name
.equals( "StructuredTypeDef_A2") )
   if (javadummy) break  CONDITION2012;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to UnionDef --- JJ.M4
UnionDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "union type definitions" )
,
UnionDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2003;
// $$$$$$$$ 
} // CONDITION2012 // @@@ end of alternative
CONDITION2013: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative SetDef
JavaNode SetDef= null;
{
JavaNode current0 = StructuredTypeDef;
if (! current0 .Name
.equals( "StructuredTypeDef_A3") )
   if (javadummy) break  CONDITION2013;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to SetDef --- JJ.M4
SetDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "set type definitions" )
,
SetDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2003;
// $$$$$$$$ 
} // CONDITION2013 // @@@ end of alternative
CONDITION2014: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RecordOfDef
JavaNode RecordOfDef= null;
{
JavaNode current0 = StructuredTypeDef;
if (! current0 .Name
.equals( "StructuredTypeDef_A4") )
   if (javadummy) break  CONDITION2014;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RecordOfDef --- JJ.M4
RecordOfDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "record-of type definitions, nur geduld" )
,
RecordOfDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2003;
// $$$$$$$$ 
} // CONDITION2014 // @@@ end of alternative
CONDITION2015: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative SetOfDef
JavaNode SetOfDef= null;
{
JavaNode current0 = StructuredTypeDef;
if (! current0 .Name
.equals( "StructuredTypeDef_A5") )
   if (javadummy) break  CONDITION2015;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to SetOfDef --- JJ.M4
SetOfDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "set-of type definitions" )
,
SetOfDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2003;
// $$$$$$$$ 
} // CONDITION2015 // @@@ end of alternative
CONDITION2016: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative EnumDef
JavaNode EnumDef= null;
{
JavaNode current0 = StructuredTypeDef;
if (! current0 .Name
.equals( "StructuredTypeDef_A6") )
   if (javadummy) break  CONDITION2016;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to EnumDef --- JJ.M4
EnumDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "enum type definitions" )
,
EnumDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2003;
// $$$$$$$$ 
} // CONDITION2016 // @@@ end of alternative
CONDITION2017: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative PortDef
JavaNode PortDef= null;
// DECLARE for alternative PP
JavaNode PP= null;
// DECLARE for alternative PortDefAttribs
JavaNode PortDefAttribs= null;
// DECLARE for alternative StructDefFormalTypePar
JavaNode StructDefFormalTypePar= null;
// DECLARE for alternative FormalTypePar
JavaNode FormalTypePar= null;
// DECLARE for alternative NAME
JavaNode NAME= null;
{
JavaNode current0 = StructuredTypeDef;
if (! current0 .Name
.equals( "StructuredTypeDef_A7") )
   if (javadummy) break  CONDITION2017;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to PortDef --- JJ.M4
PortDef = current1 ;
} //)) children level 1
};
// ***** begin condlist 2018 (in cond 2017) *****
CONDLIST2018: // @@@ begin of alternative group
while(javadummy) {
CONDITION2019: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PortDef;
if (! current0 .Name
.equals( "PortDef_A1") )
   if (javadummy) break  CONDITION2019;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to PP --- JJ.M4
PP = current1 ;
} //)) children level 1
};
// ***** begin condlist 2020 (in cond 2019) *****
CONDLIST2020: // @@@ begin of alternative group
while(javadummy) {
CONDITION2021: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PP;
if (! current0 .Name
.equals( "PortDefBody_A1") )
   if (javadummy) break  CONDITION2021;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME --- JJ.M4
NAME = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to FormalTypePar --- JJ.M4
FormalTypePar = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to StructDefFormalTypePar --- JJ.M4
StructDefFormalTypePar = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to PortDefAttribs --- JJ.M4
PortDefAttribs = current1 ;
} //)) children level 1
};
YyProcs.
HandlePortType
(
NAME
,
FormalTypePar
,
StructDefFormalTypePar
,
PortDefAttribs
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2020;
// $$$$$$$$ 
} // CONDITION2021 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2020 N=2019
if (javadummy) break CONDITION2019;
} // CONDLIST2020 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2018;
// $$$$$$$$ 
} // CONDITION2019 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2018 N=2017
if (javadummy) break CONDITION2017;
} // CONDLIST2018 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2003;
// $$$$$$$$ 
} // CONDITION2017 // @@@ end of alternative
CONDITION2022: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ComponentDef
JavaNode ComponentDef= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative NAME
JavaNode NAME= null;
{
JavaNode current0 = StructuredTypeDef;
if (! current0 .Name
.equals( "StructuredTypeDef_A8") )
   if (javadummy) break  CONDITION2022;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ComponentDef --- JJ.M4
ComponentDef = current1 ;
} //)) children level 1
};
// ***** begin condlist 2023 (in cond 2022) *****
CONDLIST2023: // @@@ begin of alternative group
while(javadummy) {
CONDITION2024: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ComponentDef;
if (! current0 .Name
.equals( "ComponentDef_A1") )
   if (javadummy) break  CONDITION2024;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME --- JJ.M4
NAME = current1 ;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
current1 = kurrent0.Child1[3];
current1 = kurrent0.Child1[4];
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(ComponentDef);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DeclareComponentType
(
NAME
,
ComponentDef
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2023;
// $$$$$$$$ 
} // CONDITION2024 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2023 N=2022
if (javadummy) break CONDITION2022;
} // CONDLIST2023 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2003;
// $$$$$$$$ 
} // CONDITION2022 // @@@ end of alternative
CONDITION2025: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative BehaviorDef
JavaNode BehaviorDef= null;
{
JavaNode current0 = StructuredTypeDef;
if (! current0 .Name
.equals( "StructuredTypeDef_A9") )
   if (javadummy) break  CONDITION2025;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to BehaviorDef --- JJ.M4
BehaviorDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "behavior definitions" )
,
BehaviorDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2003;
// $$$$$$$$ 
} // CONDITION2025 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2003 N=2002
if (javadummy) break CONDITION2002;
} // CONDLIST2003 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2001;
// $$$$$$$$ 
} // CONDITION2002 // @@@ end of alternative
CONDITION2026: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative SubTypeDef
JavaNode SubTypeDef= null;
{
JavaNode current0 = B;
if (! current0 .Name
.equals( "TypeDefBody_A2") )
   if (javadummy) break  CONDITION2026;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to SubTypeDef --- JJ.M4
SubTypeDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "subtype definitions" )
,
SubTypeDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2001;
// $$$$$$$$ 
} // CONDITION2026 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2001 N=2000
if (javadummy) break CONDITION2000;
} // CONDLIST2001 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1999;
// $$$$$$$$ 
} // CONDITION2000 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1999 N=1998
if (javadummy) break CONDITION1998;
} // CONDLIST1999 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1997;
// $$$$$$$$ 
} // CONDITION1998 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1997 N=1996
if (javadummy) break CONDITION1996;
} // CONDLIST1997 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1996
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_TypeDef");
}



public
static
void
HandlePortType(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
,

JavaNode yy_inparam_3
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc PortDefAttribs
JavaNode PortDefAttribs = null;
// DECLARE for proc StructDefFormalTypePar
JavaNode StructDefFormalTypePar = null;
// DECLARE for proc FormalTypePar
JavaNode FormalTypePar = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION2027:
while(javadummy) {
// ***** begin condlist 2028 (in cond 2027) *****
CONDLIST2028: // @@@ begin of alternative group
while(javadummy) {
CONDITION2029: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to FormalTypePar --- JJ.M4
FormalTypePar = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to StructDefFormalTypePar --- JJ.M4
StructDefFormalTypePar = current0 ;
};
{
JavaNode current0 = yy_inparam_3;
//assign current0 to PortDefAttribs --- JJ.M4
PortDefAttribs = current0 ;
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(NAME);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DeclarePortType
(
NAME
,
PortDefAttribs
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2028;
// $$$$$$$$ 
} // CONDITION2029 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2028 N=2027
if (javadummy) break CONDITION2027;
} // CONDLIST2028 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2027
// failed:
JavaLib.rtsAllAlternativesFailed("HandlePortType");
}



public
static
void
HandleRecordType(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
,

JavaNode yy_inparam_3
)
{
// DECLARE for proc PosX4
JavaNode PosX4 = null;
// DECLARE for proc X4
JavaNode X4 = null;
// DECLARE for proc X3
JavaNode X3 = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc Name
JavaNode Name = null;
CONDITION2030:
while(javadummy) {
// ***** begin condlist 2031 (in cond 2030) *****
CONDLIST2031: // @@@ begin of alternative group
while(javadummy) {
CONDITION2032: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Name --- JJ.M4
Name = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X2 --- JJ.M4
X2 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to X3 --- JJ.M4
X3 = current0 ;
};
{
JavaNode current0 = yy_inparam_3;
//assign current0 to X4 --- JJ.M4
X4 = current0 ;
};
// ***** begin condlist 2033 (in cond 2032) *****
CONDLIST2033: // @@@ begin of alternative group
while(javadummy) {
CONDITION2034: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-StructDefBody_A1_M2")
if (javadummy) break CONDITION2034;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2033;
// $$$$$$$$ 
} // CONDITION2034 // @@@ end of alternative
CONDITION2035: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative F
JavaNode F= null;
{
JavaNode current0 = X2;
if (current0.Name
!= "OneOf-StructDefBody_A1_M2")
if (javadummy) break CONDITION2035;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to F --- JJ.M4
F = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "formal type parameters for record types" )
,
F
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2033;
// $$$$$$$$ 
} // CONDITION2035 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2033 N=2032
if (javadummy) break CONDITION2032;
} // CONDLIST2033 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 2036 (in cond 2032) *****
CONDLIST2036: // @@@ begin of alternative group
while(javadummy) {
CONDITION2037: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-StructDefBody_A1_M3")
if (javadummy) break CONDITION2037;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2036;
// $$$$$$$$ 
} // CONDITION2037 // @@@ end of alternative
CONDITION2038: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative FP
JavaNode FP= null;
{
JavaNode current0 = X3;
if (current0.Name
!= "OneOf-StructDefBody_A1_M3")
if (javadummy) break CONDITION2038;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to FP --- JJ.M4
FP = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "formal parameters for recod types" )
,
FP
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2036;
// $$$$$$$$ 
} // CONDITION2038 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2036 N=2032
if (javadummy) break CONDITION2032;
} // CONDLIST2036 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Name);
//assign current0 to PosX4 --- JJ.M4
PosX4 = current0 ;
};
YyProcs.
DeclareRecordType
(
Name
,
X4
,
PosX4
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2031;
// $$$$$$$$ 
} // CONDITION2032 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2031 N=2030
if (javadummy) break CONDITION2030;
} // CONDLIST2031 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2030
// failed:
JavaLib.rtsAllAlternativesFailed("HandleRecordType");
}



public
static
void
Trafo_ConstDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D2
JavaNode D2 = null;
CONDITION2039:
while(javadummy) {
// ***** begin condlist 2040 (in cond 2039) *****
CONDLIST2040: // @@@ begin of alternative group
while(javadummy) {
CONDITION2041: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D2 --- JJ.M4
D2 = current0 ;
};
YyProcs.
NotCovered
(
new JavaStringValue( "constant definitions" )
,
D2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2040;
// $$$$$$$$ 
} // CONDITION2041 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2040 N=2039
if (javadummy) break CONDITION2039;
} // CONDLIST2040 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2039
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ConstDef");
}



public
static
void
Trafo_TemplateDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D3
JavaNode D3 = null;
CONDITION2042:
while(javadummy) {
// ***** begin condlist 2043 (in cond 2042) *****
CONDLIST2043: // @@@ begin of alternative group
while(javadummy) {
CONDITION2044: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D3 --- JJ.M4
D3 = current0 ;
};
YyProcs.
NotCovered
(
new JavaStringValue( "template definitions" )
,
D3
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2043;
// $$$$$$$$ 
} // CONDITION2044 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2043 N=2042
if (javadummy) break CONDITION2042;
} // CONDLIST2043 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2042
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_TemplateDef");
}



public
static
void
Trafo_ModuleParDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D4
JavaNode D4 = null;
CONDITION2045:
while(javadummy) {
// ***** begin condlist 2046 (in cond 2045) *****
CONDLIST2046: // @@@ begin of alternative group
while(javadummy) {
CONDITION2047: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D4 --- JJ.M4
D4 = current0 ;
};
YyProcs.
NotCovered
(
new JavaStringValue( "modulepar definitions" )
,
D4
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2046;
// $$$$$$$$ 
} // CONDITION2047 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2046 N=2045
if (javadummy) break CONDITION2045;
} // CONDLIST2046 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2045
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ModuleParDef");
}



public
static
void
Trafo_FunctionDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc FDEF
JavaNode FDEF = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION2048:
while(javadummy) {
// ***** begin condlist 2049 (in cond 2048) *****
CONDLIST2049: // @@@ begin of alternative group
while(javadummy) {
CONDITION2050: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to FDEF --- JJ.M4
FDEF = current0 ;
};
// ***** begin condlist 2051 (in cond 2050) *****
CONDLIST2051: // @@@ begin of alternative group
while(javadummy) {
CONDITION2052: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FDEF;
if (! current0 .Name
.equals( "FunctionDef_A1") )
   if (javadummy) break  CONDITION2052;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME --- JJ.M4
NAME = current1 ;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
current1 = kurrent0.Child1[3];
current1 = kurrent0.Child1[4];
current1 = kurrent0.Child1[5];
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(NAME);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DeclareFunction
(
NAME
,
FDEF
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2051;
// $$$$$$$$ 
} // CONDITION2052 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2051 N=2050
if (javadummy) break CONDITION2050;
} // CONDLIST2051 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2049;
// $$$$$$$$ 
} // CONDITION2050 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2049 N=2048
if (javadummy) break CONDITION2048;
} // CONDLIST2049 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2048
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_FunctionDef");
}



public
static
void
Trafo_SignatureDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D6
JavaNode D6 = null;
CONDITION2053:
while(javadummy) {
// ***** begin condlist 2054 (in cond 2053) *****
CONDLIST2054: // @@@ begin of alternative group
while(javadummy) {
CONDITION2055: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D6 --- JJ.M4
D6 = current0 ;
};
YyProcs.
NotCovered
(
new JavaStringValue( "signature definitions" )
,
D6
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2054;
// $$$$$$$$ 
} // CONDITION2055 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2054 N=2053
if (javadummy) break CONDITION2053;
} // CONDLIST2054 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2053
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_SignatureDef");
}



public
static
void
Trafo_TestcaseDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D7
JavaNode D7 = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION2056:
while(javadummy) {
// ***** begin condlist 2057 (in cond 2056) *****
CONDLIST2057: // @@@ begin of alternative group
while(javadummy) {
CONDITION2058: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D7 --- JJ.M4
D7 = current0 ;
};
// ***** begin condlist 2059 (in cond 2058) *****
CONDLIST2059: // @@@ begin of alternative group
while(javadummy) {
CONDITION2060: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = D7;
if (! current0 .Name
.equals( "TestcaseDef_A1") )
   if (javadummy) break  CONDITION2060;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME --- JJ.M4
NAME = current1 ;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
current1 = kurrent0.Child1[3];
current1 = kurrent0.Child1[4];
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(NAME);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DeclareTestcase
(
NAME
,
D7
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2059;
// $$$$$$$$ 
} // CONDITION2060 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2059 N=2058
if (javadummy) break CONDITION2058;
} // CONDLIST2059 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2057;
// $$$$$$$$ 
} // CONDITION2058 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2057 N=2056
if (javadummy) break CONDITION2056;
} // CONDLIST2057 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2056
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_TestcaseDef");
}



public
static
void
Trafo_AltstepDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D8
JavaNode D8 = null;
CONDITION2061:
while(javadummy) {
// ***** begin condlist 2062 (in cond 2061) *****
CONDLIST2062: // @@@ begin of alternative group
while(javadummy) {
CONDITION2063: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D8 --- JJ.M4
D8 = current0 ;
};
YyProcs.
NotCovered
(
new JavaStringValue( "altstep definitions" )
,
D8
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2062;
// $$$$$$$$ 
} // CONDITION2063 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2062 N=2061
if (javadummy) break CONDITION2061;
} // CONDLIST2062 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2061
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_AltstepDef");
}



public
static
void
Trafo_ImportDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D9
JavaNode D9 = null;
CONDITION2064:
while(javadummy) {
// ***** begin condlist 2065 (in cond 2064) *****
CONDLIST2065: // @@@ begin of alternative group
while(javadummy) {
CONDITION2066: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D9 --- JJ.M4
D9 = current0 ;
};
{
JavaNode current0 = D9;
if (! current0 .Name
.equals( "ImportDef_A1") )
   if (javadummy) break  CONDITION2066;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
if (! current1 .Name
.equals( "ImportFromSpec_A1") )
   if (javadummy) break  CONDITION2066;
{ //(( children level 2
JavaNode current2 =
   current1 . Child1[0];
JavaNode kurrent1 = current1;
if (! current2 .Name
.equals( "ModuleId_A1") )
   if (javadummy) break  CONDITION2066;
{ //(( children level 3
JavaNode current3 =
   current2 . Child1[0];
JavaNode kurrent2 = current2;
//assign current3 to Id --- JJ.M4
Id = current3 ;
current3 = kurrent2.Child1[1];
} //)) children level 3
current2 = kurrent1.Child1[1];
} //)) children level 2
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
RegisterImport
(
Id
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2065;
// $$$$$$$$ 
} // CONDITION2066 // @@@ end of alternative
CONDITION2067: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D9 --- JJ.M4
D9 = current0 ;
};
YyProcs.
NotCovered
(
new JavaStringValue( "import definitions" )
,
D9
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2065;
// $$$$$$$$ 
} // CONDITION2067 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2065 N=2064
if (javadummy) break CONDITION2064;
} // CONDLIST2065 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2064
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ImportDef");
}



public
static
void
Trafo_ExtFunctionDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D10
JavaNode D10 = null;
CONDITION2068:
while(javadummy) {
// ***** begin condlist 2069 (in cond 2068) *****
CONDLIST2069: // @@@ begin of alternative group
while(javadummy) {
CONDITION2070: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D10 --- JJ.M4
D10 = current0 ;
};
YyProcs.
NotCovered
(
new JavaStringValue( "external function definitions" )
,
D10
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2069;
// $$$$$$$$ 
} // CONDITION2070 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2069 N=2068
if (javadummy) break CONDITION2068;
} // CONDLIST2069 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2068
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ExtFunctionDef");
}



public
static
void
Trafo_ExtConstDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D11
JavaNode D11 = null;
CONDITION2071:
while(javadummy) {
// ***** begin condlist 2072 (in cond 2071) *****
CONDLIST2072: // @@@ begin of alternative group
while(javadummy) {
CONDITION2073: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D11 --- JJ.M4
D11 = current0 ;
};
YyProcs.
NotCovered
(
new JavaStringValue( "external constant definitions" )
,
D11
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2072;
// $$$$$$$$ 
} // CONDITION2073 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2072 N=2071
if (javadummy) break CONDITION2071;
} // CONDLIST2072 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2071
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ExtConstDef");
}



public
static
void
Trafo_ConfigurationDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D12
JavaNode D12 = null;
CONDITION2074:
while(javadummy) {
// ***** begin condlist 2075 (in cond 2074) *****
CONDLIST2075: // @@@ begin of alternative group
while(javadummy) {
CONDITION2076: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D12 --- JJ.M4
D12 = current0 ;
};
YyProcs.
NotCovered
(
new JavaStringValue( "configuration definitions" )
,
D12
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2075;
// $$$$$$$$ 
} // CONDITION2076 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2075 N=2074
if (javadummy) break CONDITION2074;
} // CONDLIST2075 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2074
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ConfigurationDef");
}


// global variable Imported
static JavaNode Imported = null;

public
static
void
RegisterImport(

JavaNode yy_inparam_0
)
{
// DECLARE for proc L
JavaNode L = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION2077:
while(javadummy) {
// ***** begin condlist 2078 (in cond 2077) *****
CONDLIST2078: // @@@ begin of alternative group
while(javadummy) {
CONDITION2079: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
JavaLib.rtsCheckDefined(Imported,"/line,offset,length,file=/ 491 12514 8 Modules.g");
L = Imported;
Imported=
NodeFactory.NewNode (
"SeqOf-string"
, new JavaNode [] {
Id
,
L
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2078;
// $$$$$$$$ 
} // CONDITION2079 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2078 N=2077
if (javadummy) break CONDITION2077;
} // CONDLIST2078 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2077
// failed:
JavaLib.rtsAllAlternativesFailed("RegisterImport");
}



public
static
void
InitImports(
)
{
CONDITION2080:
while(javadummy) {
// ***** begin condlist 2081 (in cond 2080) *****
CONDLIST2081: // @@@ begin of alternative group
while(javadummy) {
CONDITION2082: // @@@ begin of alternative
while(javadummy) {
Imported=
NodeFactory.NewNode (
"NilOf-string"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2081;
// $$$$$$$$ 
} // CONDITION2082 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2081 N=2080
if (javadummy) break CONDITION2080;
} // CONDLIST2081 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2080
// failed:
JavaLib.rtsAllAlternativesFailed("InitImports");
}



public
static
void
DoImports(
)
{
// DECLARE for proc L
JavaNode L = null;
// DECLARE for proc Imp
JavaNode Imp = null;
CONDITION2083:
while(javadummy) {
// ***** begin condlist 2084 (in cond 2083) *****
CONDLIST2084: // @@@ begin of alternative group
while(javadummy) {
CONDITION2085: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsCheckDefined(Imported,"/line,offset,length,file=/ 500 12679 8 Modules.g");
Imp = Imported;
L = 
Imp
;
// ***** begin condlist 2086 (in cond 2085) *****
CONDLIST2086: // @@@ begin of alternative group
while(javadummy) {
CONDITION2087: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = L;
if (current0.Name
!= "SeqOf-string")
if (javadummy) break CONDITION2087;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
DoImport
(
H
);
L = 
T
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) continue CONDLIST2086;
// $$$$$$$$ 
} // CONDITION2087 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2086 N=2085
if (javadummy) break CONDLIST2086;
} // CONDLIST2086 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2084;
// $$$$$$$$ 
} // CONDITION2085 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2084 N=2083
if (javadummy) break CONDITION2083;
} // CONDLIST2084 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2083
// failed:
JavaLib.rtsAllAlternativesFailed("DoImports");
}



public
static
void
DoImport(

JavaNode yy_inparam_0
)
{
// DECLARE for proc Id
JavaNode Id = null;
CONDITION2088:
while(javadummy) {
// ***** begin condlist 2089 (in cond 2088) *****
CONDLIST2089: // @@@ begin of alternative group
while(javadummy) {
CONDITION2090: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2089;
// $$$$$$$$ 
} // CONDITION2090 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2089 N=2088
if (javadummy) break CONDITION2088;
} // CONDLIST2089 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2088
// failed:
JavaLib.rtsAllAlternativesFailed("DoImport");
}



public
static
void
Start(
)
{
// DECLARE for proc X
JavaNode X = null;
CONDITION2091:
while(javadummy) {
// ***** begin condlist 2092 (in cond 2091) *****
CONDLIST2092: // @@@ begin of alternative group
while(javadummy) {
CONDITION2093: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = 
Gently.GrammarLib.ParseStandardFile();
//assign current0 to X --- JJ.M4
X = current0 ;
}
YyProcs.
Semantics
(
X
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2092;
// $$$$$$$$ 
} // CONDITION2093 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2092 N=2091
if (javadummy) break CONDITION2091;
} // CONDLIST2092 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2091
// failed:
JavaLib.rtsAllAlternativesFailed("Start");
}


// global variable NameOfModule
static JavaNode NameOfModule = null;

public
static
void
v_2013_07_23(
)
{
CONDITION2094:
while(javadummy) {
// ***** begin condlist 2095 (in cond 2094) *****
CONDLIST2095: // @@@ begin of alternative group
while(javadummy) {
CONDITION2096: // @@@ begin of alternative
while(javadummy) {
JavaLib.Log
(
new JavaStringValue( "Version 2013/07/23" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2095;
// $$$$$$$$ 
} // CONDITION2096 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2095 N=2094
if (javadummy) break CONDITION2094;
} // CONDLIST2095 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2094
// failed:
JavaLib.rtsAllAlternativesFailed("v_2013_07_23");
}



public
static
void
Semantics(

JavaNode yy_inparam_0
)
{
// DECLARE for proc X
JavaNode X = null;
CONDITION2097:
while(javadummy) {
// ***** begin condlist 2098 (in cond 2097) *****
CONDLIST2098: // @@@ begin of alternative group
while(javadummy) {
CONDITION2099: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
YyProcs.
InitScopeHandling
(
);
YyProcs.
InitImports
(
);
YyProcs.
InitEmit
(
);
YyProcs.
BeginGlobalScope
(
);
YyProcs.
Trafo_TTCN3Module
(
X
);
YyProcs.
DoImports
(
);
YyProcs.
ProcessGlobals
(
);
YyProcs.
EndGlobalScope
(
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2098;
// $$$$$$$$ 
} // CONDITION2099 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2098 N=2097
if (javadummy) break CONDITION2097;
} // CONDLIST2098 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION2097
// failed:
JavaLib.rtsAllAlternativesFailed("Semantics");
}


}
