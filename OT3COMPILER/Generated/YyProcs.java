package Generated;
import Gently.*;
public class YyProcs
{
   static boolean javadummy = true;

public
static
void
Trafo_TemplateBody0(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc TEMPL
JavaNode TEMPL = null;
CONDITION0:
while(javadummy) {
// ***** begin condlist 1 (in cond 0) *****
CONDLIST1: // @@@ begin of alternative group
while(javadummy) {
CONDITION2: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to TEMPL --- JJ.M4
TEMPL = current0 ;
};
YyProcs.
Trafo_TemplateBody
(
TEMPL
,
NodeFactory.NewNode (
"NoneOf-ZInLineTemplate_A1_M1"
,  new JavaNode [] {}
)
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1;
// $$$$$$$$ 
} // CONDITION2 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1 N=0
if (javadummy) break CONDITION0;
} // CONDLIST1 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION0
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_TemplateBody0");
}



public
static
void
Trafo_TemplateBody1(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc ZPrefix
JavaNode ZPrefix = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc TEMPL
JavaNode TEMPL = null;
CONDITION3:
while(javadummy) {
// ***** begin condlist 4 (in cond 3) *****
CONDLIST4: // @@@ begin of alternative group
while(javadummy) {
CONDITION5: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to TEMPL --- JJ.M4
TEMPL = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
YyProcs.
PrefixToZPrefix
(
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ZPrefix --- JJ.M4
ZPrefix = current0 ;
}
YyProcs.
Trafo_TemplateBody
(
TEMPL
,
ZPrefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST4;
// $$$$$$$$ 
} // CONDITION5 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=4 N=3
if (javadummy) break CONDITION3;
} // CONDLIST4 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION3
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_TemplateBody1");
}



public
static
void
PrefixToZPrefix(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc ZPrefix
JavaNode ZPrefix = null;
CONDITION6:
while(javadummy) {
// ***** begin condlist 7 (in cond 6) *****
CONDLIST7: // @@@ begin of alternative group
while(javadummy) {
CONDITION8: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
// ***** begin condlist 9 (in cond 8) *****
CONDLIST9: // @@@ begin of alternative group
while(javadummy) {
CONDITION10: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Prefix;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-InLineTemplate_A1_M1")
if (javadummy) break CONDITION10;
{ //(( children level 1
} //)) children level 1
};
ZPrefix = 
NodeFactory.NewNode (
"NoneOf-ZInLineTemplate_A1_M1"
,  new JavaNode [] {}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST9;
// $$$$$$$$ 
} // CONDITION10 // @@@ end of alternative
CONDITION11: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Q
JavaNode Q= null;
{
JavaNode current0 = Prefix;
if (current0.Name
!= "OneOf-InLineTemplate_A1_M1")
if (javadummy) break CONDITION11;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to Q --- JJ.M4
Q = current1 ;
} //)) children level 1
};
ZPrefix = 
NodeFactory.NewNode (
"OneOf-ZInLineTemplate_A1_M1"
, new JavaNode [] {
NodeFactory.NewNode(
"zauberprefix"
, new JavaNode [] {
Q
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST9;
// $$$$$$$$ 
} // CONDITION11 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=9 N=8
if (javadummy) break CONDITION8;
} // CONDLIST9 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
ZPrefix
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST7;
// $$$$$$$$ 
} // CONDITION8 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=7 N=6
if (javadummy) break CONDITION6;
} // CONDLIST7 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION6
// failed:
JavaLib.rtsAllAlternativesFailed("PrefixToZPrefix");
}



public
static
void
Trafo_TemplateBody(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc TEMPL
JavaNode TEMPL = null;
// DECLARE for proc M2
JavaNode M2 = null;
// DECLARE for proc M1
JavaNode M1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION12:
while(javadummy) {
// ***** begin condlist 13 (in cond 12) *****
CONDLIST13: // @@@ begin of alternative group
while(javadummy) {
CONDITION14: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to TEMPL --- JJ.M4
TEMPL = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
// ***** begin condlist 15 (in cond 14) *****
CONDLIST15: // @@@ begin of alternative group
while(javadummy) {
CONDITION16: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TEMPL;
if (! current0 .Name
.equals( "TemplateBody_A1") )
   if (javadummy) break  CONDITION16;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to M1 --- JJ.M4
M1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to M2 --- JJ.M4
M2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 17 (in cond 16) *****
CONDLIST17: // @@@ begin of alternative group
while(javadummy) {
CONDITION18: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Res
JavaNode Res= null;
// DECLARE for alternative Simple
JavaNode Simple= null;
{
JavaNode current0 = M1;
if (! current0 .Name
.equals( "TemplateBody_A1_M1_A1") )
   if (javadummy) break  CONDITION18;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Simple --- JJ.M4
Simple = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SimpleSpec
(
Simple
,
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
RES = 
NodeFactory.NewNode(
"expr_templsimple"
, new JavaNode [] {
Res
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST17;
// $$$$$$$$ 
} // CONDITION18 // @@@ end of alternative
CONDITION19: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ResList
JavaNode ResList= null;
// DECLARE for alternative TpList
JavaNode TpList= null;
// DECLARE for alternative List
JavaNode List= null;
{
JavaNode current0 = M1;
if (! current0 .Name
.equals( "TemplateBody_A1_M1_A2") )
   if (javadummy) break  CONDITION19;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to List --- JJ.M4
List = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_FieldSpecList
(
List
,
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpList --- JJ.M4
TpList = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResList --- JJ.M4
ResList = current0 ;
}
RES = 
NodeFactory.NewNode(
"expr_templ"
, new JavaNode [] {
ResList
}
)
;
YyProcs.
NotCovered
(
new JavaStringValue( "template body of this form (field names)" )
,
M1
);
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST17;
// $$$$$$$$ 
} // CONDITION19 // @@@ end of alternative
CONDITION20: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative V
JavaNode V= null;
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative TlEx
JavaNode TlEx= null;
// DECLARE for alternative TlTp
JavaNode TlTp= null;
// DECLARE for alternative HdEx
JavaNode HdEx= null;
// DECLARE for alternative HdTp
JavaNode HdTp= null;
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = M1;
if (! current0 .Name
.equals( "TemplateBody_A1_M1_A3") )
   if (javadummy) break  CONDITION20;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to V --- JJ.M4
V = current1 ;
} //)) children level 1
};
// ***** begin condlist 21 (in cond 20) *****
CONDLIST21: // @@@ begin of alternative group
while(javadummy) {
CONDITION22: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = V;
if (! current0 .Name
.equals( "ArrayValueOrAttrib_A1") )
   if (javadummy) break  CONDITION22;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 23 (in cond 22) *****
CONDLIST23: // @@@ begin of alternative group
while(javadummy) {
CONDITION24: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ArrayElementSpecList_A1") )
   if (javadummy) break  CONDITION24;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
YyProcs.
NimmDas
(
X1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to HdTp --- JJ.M4
HdTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to HdEx --- JJ.M4
HdEx = current0 ;
}
YyProcs.
NimmDasList
(
X2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TlTp --- JJ.M4
TlTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to TlEx --- JJ.M4
TlEx = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST23;
// $$$$$$$$ 
} // CONDITION24 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=23 N=22
if (javadummy) break CONDITION22;
} // CONDLIST23 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST21;
// $$$$$$$$ 
} // CONDITION22 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=21 N=20
if (javadummy) break CONDITION20;
} // CONDLIST21 @@@ end of alternative group
// *** CONTINUE ***
Tp = 
NodeFactory.NewNode(
"tp_nimmdas"
, new JavaNode [] {
NodeFactory.NewNode (
"SeqOf-Tp"
, new JavaNode [] {
HdTp
,
TlTp
}
)
}
)
;
RES = 
NodeFactory.NewNode(
"expr_nimmdas"
, new JavaNode [] {
NodeFactory.NewNode (
"SeqOf-EXPR"
, new JavaNode [] {
HdEx
,
TlEx
}
)
}
)
;
YyProcs.
CheckPrefix
(
Prefix
,
Tp
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST17;
// $$$$$$$$ 
} // CONDITION20 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=17 N=16
if (javadummy) break CONDITION16;
} // CONDLIST17 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 25 (in cond 16) *****
CONDLIST25: // @@@ begin of alternative group
while(javadummy) {
CONDITION26: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-TemplateBody_A1_M2")
if (javadummy) break CONDITION26;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST25;
// $$$$$$$$ 
} // CONDITION26 // @@@ end of alternative
CONDITION27: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Attr
JavaNode Attr= null;
// DECLARE for alternative Extra
JavaNode Extra= null;
{
JavaNode current0 = M2;
if (current0.Name
!= "OneOf-TemplateBody_A1_M2")
if (javadummy) break CONDITION27;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to Attr --- JJ.M4
Attr = current1 ;
} //)) children level 1
};
// ***** begin condlist 28 (in cond 27) *****
CONDLIST28: // @@@ begin of alternative group
while(javadummy) {
CONDITION29: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Attr;
if (! current0 .Name
.equals( "TemplateBody_A1_M2_A1") )
   if (javadummy) break  CONDITION29;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Extra --- JJ.M4
Extra = current1 ;
} //)) children level 1
};
// ***** begin condlist 30 (in cond 29) *****
CONDLIST30: // @@@ begin of alternative group
while(javadummy) {
CONDITION31: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative StrLength
JavaNode StrLength= null;
{
JavaNode current0 = Extra;
if (! current0 .Name
.equals( "ExtraMatchingAttributes_A1") )
   if (javadummy) break  CONDITION31;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to StrLength --- JJ.M4
StrLength = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "extra matching attributes 1" )
,
Extra
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST30;
// $$$$$$$$ 
} // CONDITION31 // @@@ end of alternative
CONDITION32: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Extra;
if (! current0 .Name
.equals( "ExtraMatchingAttributes_A2") )
   if (javadummy) break  CONDITION32;
};
YyProcs.
NotCovered
(
new JavaStringValue( "extra matching attributes 2" )
,
Extra
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST30;
// $$$$$$$$ 
} // CONDITION32 // @@@ end of alternative
CONDITION33: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative StrLength
JavaNode StrLength= null;
{
JavaNode current0 = Extra;
if (! current0 .Name
.equals( "ExtraMatchingAttributes_A3") )
   if (javadummy) break  CONDITION33;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to StrLength --- JJ.M4
StrLength = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "extra matching attributes 3" )
,
Extra
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST30;
// $$$$$$$$ 
} // CONDITION33 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=30 N=29
if (javadummy) break CONDITION29;
} // CONDLIST30 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST28;
// $$$$$$$$ 
} // CONDITION29 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=28 N=27
if (javadummy) break CONDITION27;
} // CONDLIST28 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST25;
// $$$$$$$$ 
} // CONDITION27 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=25 N=16
if (javadummy) break CONDITION16;
} // CONDLIST25 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST15;
// $$$$$$$$ 
} // CONDITION16 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=15 N=14
if (javadummy) break CONDITION14;
} // CONDLIST15 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST13;
// $$$$$$$$ 
} // CONDITION14 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=13 N=12
if (javadummy) break CONDITION12;
} // CONDLIST13 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION12
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_TemplateBody");
}



public
static
void
CheckPrefix(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
CONDITION34:
while(javadummy) {
// ***** begin condlist 35 (in cond 34) *****
CONDLIST35: // @@@ begin of alternative group
while(javadummy) {
CONDITION36: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
// ***** begin condlist 37 (in cond 36) *****
CONDLIST37: // @@@ begin of alternative group
while(javadummy) {
CONDITION38: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative S3
JavaNode S3= null;
// DECLARE for alternative Id
JavaNode Id= null;
// DECLARE for alternative S1
JavaNode S1= null;
// DECLARE for alternative X4
JavaNode X4= null;
// DECLARE for alternative X3
JavaNode X3= null;
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = Prefix;
if (current0.Name
!= "OneOf-ZInLineTemplate_A1_M1")
if (javadummy) break CONDITION38;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "zauberprefix") )
   if (javadummy) break  CONDITION38;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = X2;
if (! current0 .Name
.equals( "InLineTemplate_A1_M1_A1") )
   if (javadummy) break  CONDITION38;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = X3;
if (! current0 .Name
.equals( "InLineTemplate_A1_M1_A1_M1_A2") )
   if (javadummy) break  CONDITION38;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X4 --- JJ.M4
X4 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = X4;
if (! current0 .Name
.equals( "Signature_A1") )
   if (javadummy) break  CONDITION38;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S1 --- JJ.M4
S1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to S3 --- JJ.M4
S3 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = S1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-Signature_A1_M1")
if (javadummy) break CONDITION38;
{ //(( children level 1
} //)) children level 1
};
{
JavaNode current0 = S3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-Signature_A1_M3")
if (javadummy) break CONDITION38;
{ //(( children level 1
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
GloballyDefined
(
Id
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 39 (in cond 38) *****
CONDLIST39: // @@@ begin of alternative group
while(javadummy) {
CONDITION40: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tps
JavaNode Tps= null;
// DECLARE for alternative Fields
JavaNode Fields= null;
// DECLARE for alternative Val
JavaNode Val= null;
// DECLARE for alternative RefNormalizedFieldes
JavaNode RefNormalizedFieldes= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION40;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
//assign current1 to RefNormalizedFieldes --- JJ.M4
RefNormalizedFieldes = current1 ;
} //)) children level 1
};
Val = JavaLib.rtsBoundToKey(RefNormalizedFieldes);
{
JavaNode current0 = Val;
if (! current0 .Name
.equals( "normalizedfields") )
   if (javadummy) break  CONDITION40;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Fields --- JJ.M4
Fields = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_nimmdas") )
   if (javadummy) break  CONDITION40;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tps --- JJ.M4
Tps = current1 ;
} //)) children level 1
};
YyProcs.
CheckCompoundFields
(
Fields
,
Tps
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST39;
// $$$$$$$$ 
} // CONDITION40 // @@@ end of alternative
CONDITION41: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Id
,
new JavaStringValue( "' not a compound type" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST39;
// $$$$$$$$ 
} // CONDITION41 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=39 N=38
if (javadummy) break CONDITION38;
} // CONDLIST39 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST37;
// $$$$$$$$ 
} // CONDITION38 // @@@ end of alternative
CONDITION42: // @@@ begin of alternative
while(javadummy) {
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST37;
// $$$$$$$$ 
} // CONDITION42 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=37 N=36
if (javadummy) break CONDITION36;
} // CONDLIST37 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST35;
// $$$$$$$$ 
} // CONDITION36 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=35 N=34
if (javadummy) break CONDITION34;
} // CONDLIST35 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION34
// failed:
JavaLib.rtsAllAlternativesFailed("CheckPrefix");
}



public
static
void
NimmDas(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc ArrayElementSpec
JavaNode ArrayElementSpec = null;
// DECLARE for proc Code
JavaNode Code = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION43:
while(javadummy) {
// ***** begin condlist 44 (in cond 43) *****
CONDLIST44: // @@@ begin of alternative group
while(javadummy) {
CONDITION45: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to ArrayElementSpec --- JJ.M4
ArrayElementSpec = current0 ;
};
// ***** begin condlist 46 (in cond 45) *****
CONDLIST46: // @@@ begin of alternative group
while(javadummy) {
CONDITION47: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ArrayElementSpec;
if (! current0 .Name
.equals( "ArrayElementSpec_A1") )
   if (javadummy) break  CONDITION47;
};
YyProcs.
NotCovered
(
new JavaStringValue( "array element spec 1" )
,
ArrayElementSpec
);
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
Code = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST46;
// $$$$$$$$ 
} // CONDITION47 // @@@ end of alternative
CONDITION48: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ArrayElementSpec;
if (! current0 .Name
.equals( "ArrayElementSpec_A2") )
   if (javadummy) break  CONDITION48;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "array element spec 2" )
,
ArrayElementSpec
);
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
Code = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST46;
// $$$$$$$$ 
} // CONDITION48 // @@@ end of alternative
CONDITION49: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
{
JavaNode current0 = ArrayElementSpec;
if (! current0 .Name
.equals( "ArrayElementSpec_A3") )
   if (javadummy) break  CONDITION49;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_TemplateBody0
(
T
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST46;
// $$$$$$$$ 
} // CONDITION49 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=46 N=45
if (javadummy) break CONDITION45;
} // CONDLIST46 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST44;
// $$$$$$$$ 
} // CONDITION45 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=44 N=43
if (javadummy) break CONDITION43;
} // CONDLIST44 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION43
// failed:
JavaLib.rtsAllAlternativesFailed("NimmDas");
}



public
static
void
NimmDasList(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
CONDITION50:
while(javadummy) {
// ***** begin condlist 51 (in cond 50) *****
CONDLIST51: // @@@ begin of alternative group
while(javadummy) {
CONDITION52: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative TlEx
JavaNode TlEx= null;
// DECLARE for alternative TlTp
JavaNode TlTp= null;
// DECLARE for alternative HdEx
JavaNode HdEx= null;
// DECLARE for alternative HdTp
JavaNode HdTp= null;
// DECLARE for alternative Hd
JavaNode Hd= null;
// DECLARE for alternative TlX
JavaNode TlX= null;
// DECLARE for alternative HdX
JavaNode HdX= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-ArrayElementSpecList_A1_M2")
if (javadummy) break CONDITION52;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HdX --- JJ.M4
HdX = current1 ;
current1 = current0.Child1[1];
//assign current1 to TlX --- JJ.M4
TlX = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HdX;
if (! current0 .Name
.equals( "ArrayElementSpecList_A1_M2_A1") )
   if (javadummy) break  CONDITION52;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Hd --- JJ.M4
Hd = current1 ;
} //)) children level 1
};
YyProcs.
NimmDas
(
Hd
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to HdTp --- JJ.M4
HdTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to HdEx --- JJ.M4
HdEx = current0 ;
}
YyProcs.
NimmDasList
(
TlX
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TlTp --- JJ.M4
TlTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to TlEx --- JJ.M4
TlEx = current0 ;
}
yy_outparam_0 = 
NodeFactory.NewNode (
"SeqOf-Tp"
, new JavaNode [] {
HdTp
,
TlTp
}
)
;
yy_outparam_1 = 
NodeFactory.NewNode (
"SeqOf-EXPR"
, new JavaNode [] {
HdEx
,
TlEx
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST51;
// $$$$$$$$ 
} // CONDITION52 // @@@ end of alternative
CONDITION53: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-ArrayElementSpecList_A1_M2")
if (javadummy) break CONDITION53;
};
yy_outparam_0 = 
NodeFactory.NewNode (
"NilOf-Tp"
,  new JavaNode [] {})
;
yy_outparam_1 = 
NodeFactory.NewNode (
"NilOf-EXPR"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST51;
// $$$$$$$$ 
} // CONDITION53 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=51 N=50
if (javadummy) break CONDITION50;
} // CONDLIST51 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION50
// failed:
JavaLib.rtsAllAlternativesFailed("NimmDasList");
}



public
static
void
Trafo_SimpleSpec(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc SpecAndMore
JavaNode SpecAndMore = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION54:
while(javadummy) {
// ***** begin condlist 55 (in cond 54) *****
CONDLIST55: // @@@ begin of alternative group
while(javadummy) {
CONDITION56: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
// ***** begin condlist 57 (in cond 56) *****
CONDLIST57: // @@@ begin of alternative group
while(javadummy) {
CONDITION58: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Expr
JavaNode Expr= null;
// DECLARE for alternative X1
JavaNode X1= null;
// DECLARE for alternative X1M2
JavaNode X1M2= null;
// DECLARE for alternative Single2
JavaNode Single2= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "SimpleSpec_A1") )
   if (javadummy) break  CONDITION58;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 59 (in cond 58) *****
CONDLIST59: // @@@ begin of alternative group
while(javadummy) {
CONDITION60: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "SimpleSpec_A1_M1_A1") )
   if (javadummy) break  CONDITION60;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Single2 --- JJ.M4
Single2 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X1M2 --- JJ.M4
X1M2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 61 (in cond 60) *****
CONDLIST61: // @@@ begin of alternative group
while(javadummy) {
CONDITION62: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1M2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-SimpleSpec_A1_M1_A1_M2")
if (javadummy) break CONDITION62;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST61;
// $$$$$$$$ 
} // CONDITION62 // @@@ end of alternative
CONDITION63: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1M2;
if (current0.Name
!= "OneOf-SimpleSpec_A1_M1_A1_M2")
if (javadummy) break CONDITION63;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "& SimpleTemplateSpec" )
,
X1M2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST61;
// $$$$$$$$ 
} // CONDITION63 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=61 N=60
if (javadummy) break CONDITION60;
} // CONDLIST61 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST59;
// $$$$$$$$ 
} // CONDITION60 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=59 N=58
if (javadummy) break CONDITION58;
} // CONDLIST59 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Trafo_SingleExpression
(
Single2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Expr --- JJ.M4
Expr = current0 ;
}
SpecAndMore = 
NodeFactory.NewNode(
"spec_unnamedfield"
, new JavaNode [] {
Expr
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST57;
// $$$$$$$$ 
} // CONDITION58 // @@@ end of alternative
CONDITION64: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "SimpleSpec_A2") )
   if (javadummy) break  CONDITION64;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 65 (in cond 64) *****
CONDLIST65: // @@@ begin of alternative group
while(javadummy) {
CONDITION66: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2X1
JavaNode X2X1= null;
{
JavaNode current0 = X2;
if (! current0 .Name
.equals( "SimpleTemplateSpec_A1") )
   if (javadummy) break  CONDITION66;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2X1 --- JJ.M4
X2X1 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "template spec 2" )
,
X2X1
);
SpecAndMore = 
NodeFactory.NewNode(
"spec_unfertig"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST65;
// $$$$$$$$ 
} // CONDITION66 // @@@ end of alternative
CONDITION67: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2X2
JavaNode X2X2= null;
// DECLARE for alternative E
JavaNode E= null;
// DECLARE for alternative X2X2X1b
JavaNode X2X2X1b= null;
// DECLARE for alternative X2X2X1a
JavaNode X2X2X1a= null;
{
JavaNode current0 = X2;
if (! current0 .Name
.equals( "SimpleTemplateSpec_A2") )
   if (javadummy) break  CONDITION67;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2X2 --- JJ.M4
X2X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 68 (in cond 67) *****
CONDLIST68: // @@@ begin of alternative group
while(javadummy) {
CONDITION69: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2X2;
if (! current0 .Name
.equals( "SimpleTemplateSpec_A2_M1_A1") )
   if (javadummy) break  CONDITION69;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2X2X1a --- JJ.M4
X2X2X1a = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2X2X1b --- JJ.M4
X2X2X1b = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SingleTemplateExpression
(
X2X2X1a
,
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to E --- JJ.M4
E = current0 ;
}
SpecAndMore = 
NodeFactory.NewNode(
"spec_unnamedfield"
, new JavaNode [] {
E
}
)
;
// ***** begin condlist 70 (in cond 69) *****
CONDLIST70: // @@@ begin of alternative group
while(javadummy) {
CONDITION71: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2X2X1b;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-SimpleTemplateSpec_A2_M1_A1_M2")
if (javadummy) break CONDITION71;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST70;
// $$$$$$$$ 
} // CONDITION71 // @@@ end of alternative
CONDITION72: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2X2X1b;
if (current0.Name
!= "OneOf-SimpleTemplateSpec_A2_M1_A1_M2")
if (javadummy) break CONDITION72;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "template spec 7" )
,
X2X2X1b
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST70;
// $$$$$$$$ 
} // CONDITION72 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=70 N=69
if (javadummy) break CONDITION69;
} // CONDLIST70 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST68;
// $$$$$$$$ 
} // CONDITION69 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=68 N=67
if (javadummy) break CONDITION67;
} // CONDLIST68 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST65;
// $$$$$$$$ 
} // CONDITION67 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=65 N=64
if (javadummy) break CONDITION64;
} // CONDLIST65 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST57;
// $$$$$$$$ 
} // CONDITION64 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=57 N=56
if (javadummy) break CONDITION56;
} // CONDLIST57 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
SpecAndMore
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST55;
// $$$$$$$$ 
} // CONDITION56 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=55 N=54
if (javadummy) break CONDITION54;
} // CONDLIST55 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION54
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_SimpleSpec");
}



public
static
void
Trafo_SingleTemplateExpression(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc X2X2X1a
JavaNode X2X2X1a = null;
// DECLARE for proc FinalErgTp
JavaNode FinalErgTp = null;
// DECLARE for proc Ergebnis
JavaNode Ergebnis = null;
CONDITION73:
while(javadummy) {
// ***** begin condlist 74 (in cond 73) *****
CONDLIST74: // @@@ begin of alternative group
while(javadummy) {
CONDITION75: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X2X2X1a --- JJ.M4
X2X2X1a = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
// ***** begin condlist 76 (in cond 75) *****
CONDLIST76: // @@@ begin of alternative group
while(javadummy) {
CONDITION77: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative MatchingSymbol
JavaNode MatchingSymbol= null;
{
JavaNode current0 = X2X2X1a;
if (! current0 .Name
.equals( "SingleTemplateExpression_A1") )
   if (javadummy) break  CONDITION77;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to MatchingSymbol --- JJ.M4
MatchingSymbol = current1 ;
} //)) children level 1
};
// ***** begin condlist 78 (in cond 77) *****
CONDLIST78: // @@@ begin of alternative group
while(javadummy) {
CONDITION79: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ErgTp
JavaNode ErgTp= null;
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A1") )
   if (javadummy) break  CONDITION79;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "complement" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
ErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST78;
// $$$$$$$$ 
} // CONDITION79 // @@@ end of alternative
CONDITION80: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative M
JavaNode M= null;
// DECLARE for alternative MM
JavaNode MM= null;
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A2") )
   if (javadummy) break  CONDITION80;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to M --- JJ.M4
M = current1 ;
} //)) children level 1
};
// ***** begin condlist 81 (in cond 80) *****
CONDLIST81: // @@@ begin of alternative group
while(javadummy) {
CONDITION82: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M;
if (! current0 .Name
.equals( "MatchingSymbol_A2_M1_A1") )
   if (javadummy) break  CONDITION82;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to MM --- JJ.M4
MM = current1 ;
} //)) children level 1
};
// ***** begin condlist 83 (in cond 82) *****
CONDLIST83: // @@@ begin of alternative group
while(javadummy) {
CONDITION84: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MM;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-MatchingSymbol_A2_M1_A1_M2")
if (javadummy) break CONDITION84;
{ //(( children level 1
} //)) children level 1
};
YyProcs.
JokerCode
(
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to FinalErgTp --- JJ.M4
FinalErgTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Ergebnis --- JJ.M4
Ergebnis = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST83;
// $$$$$$$$ 
} // CONDITION84 // @@@ end of alternative
CONDITION85: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative L
JavaNode L= null;
{
JavaNode current0 = MM;
if (current0.Name
!= "OneOf-MatchingSymbol_A2_M1_A1_M2")
if (javadummy) break CONDITION85;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to L --- JJ.M4
L = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "length match" )
,
L
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST83;
// $$$$$$$$ 
} // CONDITION85 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=83 N=82
if (javadummy) break CONDITION82;
} // CONDLIST83 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST81;
// $$$$$$$$ 
} // CONDITION82 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=81 N=80
if (javadummy) break CONDITION80;
} // CONDLIST81 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST78;
// $$$$$$$$ 
} // CONDITION80 // @@@ end of alternative
CONDITION86: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A3") )
   if (javadummy) break  CONDITION86;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Matching 3" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST78;
// $$$$$$$$ 
} // CONDITION86 // @@@ end of alternative
CONDITION87: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A4") )
   if (javadummy) break  CONDITION87;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Matching 4" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST78;
// $$$$$$$$ 
} // CONDITION87 // @@@ end of alternative
CONDITION88: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A5") )
   if (javadummy) break  CONDITION88;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Matching 5" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST78;
// $$$$$$$$ 
} // CONDITION88 // @@@ end of alternative
CONDITION89: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A6") )
   if (javadummy) break  CONDITION89;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Matching 6" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST78;
// $$$$$$$$ 
} // CONDITION89 // @@@ end of alternative
CONDITION90: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A7") )
   if (javadummy) break  CONDITION90;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Matching 7" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST78;
// $$$$$$$$ 
} // CONDITION90 // @@@ end of alternative
CONDITION91: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A8") )
   if (javadummy) break  CONDITION91;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Matching 8" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST78;
// $$$$$$$$ 
} // CONDITION91 // @@@ end of alternative
CONDITION92: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A9") )
   if (javadummy) break  CONDITION92;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Matching 9" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST78;
// $$$$$$$$ 
} // CONDITION92 // @@@ end of alternative
CONDITION93: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A10") )
   if (javadummy) break  CONDITION93;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Matching 10" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST78;
// $$$$$$$$ 
} // CONDITION93 // @@@ end of alternative
CONDITION94: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MatchingSymbol;
if (! current0 .Name
.equals( "MatchingSymbol_A11") )
   if (javadummy) break  CONDITION94;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Matching 11" )
,
MatchingSymbol
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
FinalErgTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST78;
// $$$$$$$$ 
} // CONDITION94 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=78 N=77
if (javadummy) break CONDITION77;
} // CONDLIST78 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST76;
// $$$$$$$$ 
} // CONDITION77 // @@@ end of alternative
CONDITION95: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative K
JavaNode K= null;
// DECLARE for alternative K2b
JavaNode K2b= null;
// DECLARE for alternative K2a
JavaNode K2a= null;
// DECLARE for alternative K2aCode
JavaNode K2aCode= null;
// DECLARE for alternative Ausdruck
JavaNode Ausdruck= null;
// DECLARE for alternative ErgTp
JavaNode ErgTp= null;
// DECLARE for alternative Lb
JavaNode Lb= null;
// DECLARE for alternative La
JavaNode La= null;
{
JavaNode current0 = X2X2X1a;
if (! current0 .Name
.equals( "SingleTemplateExpression_A2") )
   if (javadummy) break  CONDITION95;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to K --- JJ.M4
K = current1 ;
} //)) children level 1
};
// ***** begin condlist 96 (in cond 95) *****
CONDLIST96: // @@@ begin of alternative group
while(javadummy) {
CONDITION97: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = K;
if (! current0 .Name
.equals( "SingleTemplateExpression_A2_M1_A1") )
   if (javadummy) break  CONDITION97;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to K2a --- JJ.M4
K2a = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to K2b --- JJ.M4
K2b = current1 ;
} //)) children level 1
};
// ***** begin condlist 98 (in cond 97) *****
CONDLIST98: // @@@ begin of alternative group
while(javadummy) {
CONDITION99: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = K2a;
if (! current0 .Name
.equals( "TemplateRefWithParList_A1") )
   if (javadummy) break  CONDITION99;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to La --- JJ.M4
La = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Lb --- JJ.M4
Lb = current1 ;
} //)) children level 1
};
YyProcs.
LaLa
(
La
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ErgTp --- JJ.M4
ErgTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Ausdruck --- JJ.M4
Ausdruck = current0 ;
}
K2aCode = 
Ausdruck
;
// ***** begin condlist 100 (in cond 99) *****
CONDLIST100: // @@@ begin of alternative group
while(javadummy) {
CONDITION101: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Lb;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-TemplateRefWithParList_A1_M2")
if (javadummy) break CONDITION101;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST100;
// $$$$$$$$ 
} // CONDITION101 // @@@ end of alternative
CONDITION102: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Lb;
if (current0.Name
!= "OneOf-TemplateRefWithParList_A1_M2")
if (javadummy) break CONDITION102;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "template spec 5" )
,
Lb
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST100;
// $$$$$$$$ 
} // CONDITION102 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=100 N=99
if (javadummy) break CONDITION99;
} // CONDLIST100 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST98;
// $$$$$$$$ 
} // CONDITION99 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=98 N=97
if (javadummy) break CONDITION97;
} // CONDLIST98 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 103 (in cond 97) *****
CONDLIST103: // @@@ begin of alternative group
while(javadummy) {
CONDITION104: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = K2b;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-SingleTemplateExpression_A2_M1_A1_M2")
if (javadummy) break CONDITION104;
{ //(( children level 1
} //)) children level 1
};
Ergebnis = 
Ausdruck
;
FinalErgTp = 
ErgTp
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST103;
// $$$$$$$$ 
} // CONDITION104 // @@@ end of alternative
CONDITION105: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative More
JavaNode More= null;
// DECLARE for alternative ResCode
JavaNode ResCode= null;
// DECLARE for alternative ResTp
JavaNode ResTp= null;
// DECLARE for alternative M
JavaNode M= null;
{
JavaNode current0 = K2b;
if (current0.Name
!= "OneOf-SingleTemplateExpression_A2_M1_A1_M2")
if (javadummy) break CONDITION105;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to More --- JJ.M4
More = current1 ;
} //)) children level 1
};
// ***** begin condlist 106 (in cond 105) *****
CONDLIST106: // @@@ begin of alternative group
while(javadummy) {
CONDITION107: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = More;
if (! current0 .Name
.equals( "SingleTemplateExpression_A2_M1_A1_M2_A1") )
   if (javadummy) break  CONDITION107;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to M --- JJ.M4
M = current1 ;
} //)) children level 1
};
YyProcs.
HandleExtendedFieldReference
(
M
,
ErgTp
,
K2aCode
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ResTp --- JJ.M4
ResTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResCode --- JJ.M4
ResCode = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST106;
// $$$$$$$$ 
} // CONDITION107 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=106 N=105
if (javadummy) break CONDITION105;
} // CONDLIST106 @@@ end of alternative group
// *** CONTINUE ***
Ergebnis = 
ResCode
;
FinalErgTp = 
ResTp
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST103;
// $$$$$$$$ 
} // CONDITION105 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=103 N=97
if (javadummy) break CONDITION97;
} // CONDLIST103 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST96;
// $$$$$$$$ 
} // CONDITION97 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=96 N=95
if (javadummy) break CONDITION95;
} // CONDLIST96 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST76;
// $$$$$$$$ 
} // CONDITION95 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=76 N=75
if (javadummy) break CONDITION75;
} // CONDLIST76 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
FinalErgTp
;
yy_outparam_1 = 
Ergebnis
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST74;
// $$$$$$$$ 
} // CONDITION75 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=74 N=73
if (javadummy) break CONDITION73;
} // CONDLIST74 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION73
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_SingleTemplateExpression");
}



public
static
void
LaLa(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc La
JavaNode La = null;
// DECLARE for proc Name
JavaNode Name = null;
// DECLARE for proc J
JavaNode J = null;
// DECLARE for proc Ausdruck
JavaNode Ausdruck = null;
// DECLARE for proc ErgTp
JavaNode ErgTp = null;
CONDITION108:
while(javadummy) {
// ***** begin condlist 109 (in cond 108) *****
CONDLIST109: // @@@ begin of alternative group
while(javadummy) {
CONDITION110: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to La --- JJ.M4
La = current0 ;
};
// ***** begin condlist 111 (in cond 110) *****
CONDLIST111: // @@@ begin of alternative group
while(javadummy) {
CONDITION112: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = La;
if (! current0 .Name
.equals( "ExtendedIdentifier_A1") )
   if (javadummy) break  CONDITION112;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to J --- JJ.M4
J = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Name --- JJ.M4
Name = current1 ;
} //)) children level 1
};
// ***** begin condlist 113 (in cond 112) *****
CONDLIST113: // @@@ begin of alternative group
while(javadummy) {
CONDITION114: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative JJ
JavaNode JJ= null;
// DECLARE for alternative K2aCode
JavaNode K2aCode= null;
// DECLARE for alternative PosF
JavaNode PosF= null;
// DECLARE for alternative VDef
JavaNode VDef= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Field
JavaNode Field= null;
// DECLARE for alternative Record
JavaNode Record= null;
// DECLARE for alternative V
JavaNode V= null;
// DECLARE for alternative K2aVTp
JavaNode K2aVTp= null;
{
JavaNode current0 = J;
if (current0.Name
!= "OneOf-ExtendedIdentifier_A1_M1")
if (javadummy) break CONDITION114;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to JJ --- JJ.M4
JJ = current1 ;
} //)) children level 1
};
// ***** begin condlist 115 (in cond 114) *****
CONDLIST115: // @@@ begin of alternative group
while(javadummy) {
CONDITION116: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = JJ;
if (! current0 .Name
.equals( "ExtendedIdentifier_A1_M1_A1") )
   if (javadummy) break  CONDITION116;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to V --- JJ.M4
V = current1 ;
} //)) children level 1
};
Record = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
V
}
)
;
Field = 
Name
;
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(V);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
LocallyDefined
(
V
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to VDef --- JJ.M4
VDef = current0 ;
}
// ***** begin condlist 117 (in cond 116) *****
CONDLIST117: // @@@ begin of alternative group
while(javadummy) {
CONDITION118: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative VTp
JavaNode VTp= null;
{
JavaNode current0 = VDef;
if (! current0 .Name
.equals( "localvar") )
   if (javadummy) break  CONDITION118;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to VTp --- JJ.M4
VTp = current1 ;
} //)) children level 1
};
{
JavaNode current0 = VTp;
if (! current0 .Name
.equals( "tp_referenced") )
   if (javadummy) break  CONDITION118;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
K2aVTp = 
VTp
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST117;
// $$$$$$$$ 
} // CONDITION118 // @@@ end of alternative
CONDITION119: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
V
,
new JavaStringValue( "' not a local variable" )
,
Pos
);
K2aVTp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST117;
// $$$$$$$$ 
} // CONDITION119 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=117 N=116
if (javadummy) break CONDITION116;
} // CONDLIST117 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Field);
//assign current0 to PosF --- JJ.M4
PosF = current0 ;
};
YyProcs.
LookupField
(
Field
,
K2aVTp
,
PosF
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ErgTp --- JJ.M4
ErgTp = current0 ;
}
Ausdruck = 
NodeFactory.NewNode(
"fieldselection"
, new JavaNode [] {
Record
,
Field
}
)
;
K2aCode = 
Ausdruck
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST115;
// $$$$$$$$ 
} // CONDITION116 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=115 N=114
if (javadummy) break CONDITION114;
} // CONDLIST115 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST113;
// $$$$$$$$ 
} // CONDITION114 // @@@ end of alternative
CONDITION120: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative DefName
JavaNode DefName= null;
// DECLARE for alternative PosName
JavaNode PosName= null;
// DECLARE for alternative VarType
JavaNode VarType= null;
{
JavaNode current0 = J;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ExtendedIdentifier_A1_M1")
if (javadummy) break CONDITION120;
{ //(( children level 1
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Name);
//assign current0 to PosName --- JJ.M4
PosName = current0 ;
};
YyProcs.
LocallyDefined
(
Name
,
PosName
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to DefName --- JJ.M4
DefName = current0 ;
}
// ***** begin condlist 121 (in cond 120) *****
CONDLIST121: // @@@ begin of alternative group
while(javadummy) {
CONDITION122: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = DefName;
if (! current0 .Name
.equals( "localvar") )
   if (javadummy) break  CONDITION122;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to VarType --- JJ.M4
VarType = current1 ;
} //)) children level 1
};
Ausdruck = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
Name
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST121;
// $$$$$$$$ 
} // CONDITION122 // @@@ end of alternative
CONDITION123: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = DefName;
if (! current0 .Name
.equals( "componentmember_var") )
   if (javadummy) break  CONDITION123;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to VarType --- JJ.M4
VarType = current1 ;
} //)) children level 1
};
Ausdruck = 
NodeFactory.NewNode(
"compidexpr"
, new JavaNode [] {
Name
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST121;
// $$$$$$$$ 
} // CONDITION123 // @@@ end of alternative
CONDITION124: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Name);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Name
,
new JavaStringValue( "' unexpected in expression" )
,
Pos
);
Ausdruck = 
NodeFactory.NewNode(
"compidexpr"
, new JavaNode [] {
new JavaStringValue( "-" )
}
)
;
VarType = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST121;
// $$$$$$$$ 
} // CONDITION124 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=121 N=120
if (javadummy) break CONDITION120;
} // CONDLIST121 @@@ end of alternative group
// *** CONTINUE ***
ErgTp = 
VarType
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST113;
// $$$$$$$$ 
} // CONDITION120 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=113 N=112
if (javadummy) break CONDITION112;
} // CONDLIST113 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST111;
// $$$$$$$$ 
} // CONDITION112 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=111 N=110
if (javadummy) break CONDITION110;
} // CONDLIST111 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
ErgTp
;
yy_outparam_1 = 
Ausdruck
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST109;
// $$$$$$$$ 
} // CONDITION110 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=109 N=108
if (javadummy) break CONDITION108;
} // CONDLIST109 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION108
// failed:
JavaLib.rtsAllAlternativesFailed("LaLa");
}



public
static
void
JokerCode(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc Ergebnis
JavaNode Ergebnis = null;
CONDITION125:
while(javadummy) {
// ***** begin condlist 126 (in cond 125) *****
CONDLIST126: // @@@ begin of alternative group
while(javadummy) {
CONDITION127: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
// ***** begin condlist 128 (in cond 127) *****
CONDLIST128: // @@@ begin of alternative group
while(javadummy) {
CONDITION129: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Prefix;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ZInLineTemplate_A1_M1")
if (javadummy) break CONDITION129;
{ //(( children level 1
} //)) children level 1
};
Ergebnis = 
NodeFactory.NewNode(
"fragezeichen"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_joker"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST128;
// $$$$$$$$ 
} // CONDITION129 // @@@ end of alternative
CONDITION130: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Q
JavaNode Q= null;
// DECLARE for alternative Zau
JavaNode Zau= null;
// DECLARE for alternative R
JavaNode R= null;
{
JavaNode current0 = Prefix;
if (current0.Name
!= "OneOf-ZInLineTemplate_A1_M1")
if (javadummy) break CONDITION130;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to Zau --- JJ.M4
Zau = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Zau;
if (! current0 .Name
.equals( "zauberprefix") )
   if (javadummy) break  CONDITION130;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Q --- JJ.M4
Q = current1 ;
} //)) children level 1
};
// ***** begin condlist 131 (in cond 130) *****
CONDLIST131: // @@@ begin of alternative group
while(javadummy) {
CONDITION132: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Q;
if (! current0 .Name
.equals( "InLineTemplate_A1_M1_A1") )
   if (javadummy) break  CONDITION132;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to R --- JJ.M4
R = current1 ;
} //)) children level 1
};
// ***** begin condlist 133 (in cond 132) *****
CONDLIST133: // @@@ begin of alternative group
while(javadummy) {
CONDITION134: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
{
JavaNode current0 = R;
if (! current0 .Name
.equals( "InLineTemplate_A1_M1_A1_M1_A1") )
   if (javadummy) break  CONDITION134;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
// ***** begin condlist 135 (in cond 134) *****
CONDLIST135: // @@@ begin of alternative group
while(javadummy) {
CONDITION136: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = T;
if (! current0 .Name
.equals( "Type_A1") )
   if (javadummy) break  CONDITION136;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 137 (in cond 136) *****
CONDLIST137: // @@@ begin of alternative group
while(javadummy) {
CONDITION138: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A1") )
   if (javadummy) break  CONDITION138;
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST137;
// $$$$$$$$ 
} // CONDITION138 // @@@ end of alternative
CONDITION139: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A2") )
   if (javadummy) break  CONDITION139;
};
Ergebnis = 
NodeFactory.NewNode(
"fragezeichen_tp"
, new JavaNode [] {
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST137;
// $$$$$$$$ 
} // CONDITION139 // @@@ end of alternative
CONDITION140: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A3") )
   if (javadummy) break  CONDITION140;
};
Ergebnis = 
NodeFactory.NewNode(
"fragezeichen_tp"
, new JavaNode [] {
NodeFactory.NewNode(
"tp_charstring"
, new JavaNode [] {
}
)
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_charstring"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST137;
// $$$$$$$$ 
} // CONDITION140 // @@@ end of alternative
CONDITION141: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A4") )
   if (javadummy) break  CONDITION141;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST137;
// $$$$$$$$ 
} // CONDITION141 // @@@ end of alternative
CONDITION142: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A5") )
   if (javadummy) break  CONDITION142;
};
Ergebnis = 
NodeFactory.NewNode(
"fragezeichen_tp"
, new JavaNode [] {
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST137;
// $$$$$$$$ 
} // CONDITION142 // @@@ end of alternative
CONDITION143: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A6") )
   if (javadummy) break  CONDITION143;
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST137;
// $$$$$$$$ 
} // CONDITION143 // @@@ end of alternative
CONDITION144: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A7") )
   if (javadummy) break  CONDITION144;
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST137;
// $$$$$$$$ 
} // CONDITION144 // @@@ end of alternative
CONDITION145: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A8") )
   if (javadummy) break  CONDITION145;
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST137;
// $$$$$$$$ 
} // CONDITION145 // @@@ end of alternative
CONDITION146: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A9") )
   if (javadummy) break  CONDITION146;
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST137;
// $$$$$$$$ 
} // CONDITION146 // @@@ end of alternative
CONDITION147: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A10") )
   if (javadummy) break  CONDITION147;
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST137;
// $$$$$$$$ 
} // CONDITION147 // @@@ end of alternative
CONDITION148: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A11") )
   if (javadummy) break  CONDITION148;
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST137;
// $$$$$$$$ 
} // CONDITION148 // @@@ end of alternative
CONDITION149: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A12") )
   if (javadummy) break  CONDITION149;
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST137;
// $$$$$$$$ 
} // CONDITION149 // @@@ end of alternative
CONDITION150: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PredefinedType_A13") )
   if (javadummy) break  CONDITION150;
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST137;
// $$$$$$$$ 
} // CONDITION150 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=137 N=136
if (javadummy) break CONDITION136;
} // CONDLIST137 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST135;
// $$$$$$$$ 
} // CONDITION136 // @@@ end of alternative
CONDITION151: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative Y5
JavaNode Y5= null;
// DECLARE for alternative Y4
JavaNode Y4= null;
// DECLARE for alternative Y3
JavaNode Y3= null;
// DECLARE for alternative Y2
JavaNode Y2= null;
// DECLARE for alternative Y1
JavaNode Y1= null;
{
JavaNode current0 = T;
if (! current0 .Name
.equals( "Type_A2") )
   if (javadummy) break  CONDITION151;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 152 (in cond 151) *****
CONDLIST152: // @@@ begin of alternative group
while(javadummy) {
CONDITION153: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (! current0 .Name
.equals( "ReferencedType_A1") )
   if (javadummy) break  CONDITION153;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Y1 --- JJ.M4
Y1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Y2 --- JJ.M4
Y2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Y3 --- JJ.M4
Y3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to Y4 --- JJ.M4
Y4 = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to Y5 --- JJ.M4
Y5 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this match" )
,
R
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST152;
// $$$$$$$$ 
} // CONDITION153 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=152 N=151
if (javadummy) break CONDITION151;
} // CONDLIST152 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST135;
// $$$$$$$$ 
} // CONDITION151 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=135 N=134
if (javadummy) break CONDITION134;
} // CONDLIST135 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST133;
// $$$$$$$$ 
} // CONDITION134 // @@@ end of alternative
CONDITION154: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Sig
JavaNode Sig= null;
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Name
JavaNode Name= null;
// DECLARE for alternative M3
JavaNode M3= null;
// DECLARE for alternative M2
JavaNode M2= null;
// DECLARE for alternative M1
JavaNode M1= null;
{
JavaNode current0 = R;
if (! current0 .Name
.equals( "InLineTemplate_A1_M1_A1_M1_A2") )
   if (javadummy) break  CONDITION154;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Sig --- JJ.M4
Sig = current1 ;
} //)) children level 1
};
// ***** begin condlist 155 (in cond 154) *****
CONDLIST155: // @@@ begin of alternative group
while(javadummy) {
CONDITION156: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Sig;
if (! current0 .Name
.equals( "Signature_A1") )
   if (javadummy) break  CONDITION156;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to M1 --- JJ.M4
M1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to M2 --- JJ.M4
M2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to M3 --- JJ.M4
M3 = current1 ;
} //)) children level 1
};
// ***** begin condlist 157 (in cond 156) *****
CONDLIST157: // @@@ begin of alternative group
while(javadummy) {
CONDITION158: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-Signature_A1_M1")
if (javadummy) break CONDITION158;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST157;
// $$$$$$$$ 
} // CONDITION158 // @@@ end of alternative
CONDITION159: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative I
JavaNode I= null;
{
JavaNode current0 = M1;
if (current0.Name
!= "OneOf-Signature_A1_M1")
if (javadummy) break CONDITION159;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to I --- JJ.M4
I = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "id.id" )
,
I
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST157;
// $$$$$$$$ 
} // CONDITION159 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=157 N=156
if (javadummy) break CONDITION156;
} // CONDLIST157 @@@ end of alternative group
// *** CONTINUE ***
Name = 
M2
;
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Name);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
GloballyDefined
(
Name
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 160 (in cond 156) *****
CONDLIST160: // @@@ begin of alternative group
while(javadummy) {
CONDITION161: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION161;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
} //)) children level 1
};
Ergebnis = 
NodeFactory.NewNode(
"fragezeichen_record"
, new JavaNode [] {
Name
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_referenced"
, new JavaNode [] {
Def
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST160;
// $$$$$$$$ 
} // CONDITION161 // @@@ end of alternative
CONDITION162: // @@@ begin of alternative
while(javadummy) {
YyProcs.
NotCovered
(
new JavaStringValue( "this kind of prefix" )
,
Name
);
Ergebnis = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST160;
// $$$$$$$$ 
} // CONDITION162 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=160 N=156
if (javadummy) break CONDITION156;
} // CONDLIST160 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 163 (in cond 156) *****
CONDLIST163: // @@@ begin of alternative group
while(javadummy) {
CONDITION164: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-Signature_A1_M3")
if (javadummy) break CONDITION164;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST163;
// $$$$$$$$ 
} // CONDITION164 // @@@ end of alternative
CONDITION165: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative P
JavaNode P= null;
{
JavaNode current0 = M3;
if (current0.Name
!= "OneOf-Signature_A1_M3")
if (javadummy) break CONDITION165;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to P --- JJ.M4
P = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "parameters" )
,
Name
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST163;
// $$$$$$$$ 
} // CONDITION165 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=163 N=156
if (javadummy) break CONDITION156;
} // CONDLIST163 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST155;
// $$$$$$$$ 
} // CONDITION156 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=155 N=154
if (javadummy) break CONDITION154;
} // CONDLIST155 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST133;
// $$$$$$$$ 
} // CONDITION154 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=133 N=132
if (javadummy) break CONDITION132;
} // CONDLIST133 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST131;
// $$$$$$$$ 
} // CONDITION132 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=131 N=130
if (javadummy) break CONDITION130;
} // CONDLIST131 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST128;
// $$$$$$$$ 
} // CONDITION130 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=128 N=127
if (javadummy) break CONDITION127;
} // CONDLIST128 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
Ergebnis
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST126;
// $$$$$$$$ 
} // CONDITION127 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=126 N=125
if (javadummy) break CONDITION125;
} // CONDLIST126 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION125
// failed:
JavaLib.rtsAllAlternativesFailed("JokerCode");
}



public
static
void
Trafo_FieldSpecList(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc List
JavaNode List = null;
// DECLARE for proc M2
JavaNode M2 = null;
// DECLARE for proc TpList
JavaNode TpList = null;
// DECLARE for proc ResList
JavaNode ResList = null;
CONDITION166:
while(javadummy) {
// ***** begin condlist 167 (in cond 166) *****
CONDLIST167: // @@@ begin of alternative group
while(javadummy) {
CONDITION168: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to List --- JJ.M4
List = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
// ***** begin condlist 169 (in cond 168) *****
CONDLIST169: // @@@ begin of alternative group
while(javadummy) {
CONDITION170: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = List;
if (! current0 .Name
.equals( "FieldSpecList_A1") )
   if (javadummy) break  CONDITION170;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to M2 --- JJ.M4
M2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 171 (in cond 170) *****
CONDLIST171: // @@@ begin of alternative group
while(javadummy) {
CONDITION172: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FieldSpecList_A1_M2")
if (javadummy) break CONDITION172;
{ //(( children level 1
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "xxx" )
,
M2
);
ResList = 
NodeFactory.NewNode (
"NilOf-FIELDSPEC"
,  new JavaNode [] {})
;
TpList = 
NodeFactory.NewNode (
"NilOf-Tp"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST171;
// $$$$$$$$ 
} // CONDITION172 // @@@ end of alternative
CONDITION173: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Spec
JavaNode Spec= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
// DECLARE for alternative Rest
JavaNode Rest= null;
// DECLARE for alternative First
JavaNode First= null;
// DECLARE for alternative FirstRest
JavaNode FirstRest= null;
{
JavaNode current0 = M2;
if (current0.Name
!= "OneOf-FieldSpecList_A1_M2")
if (javadummy) break CONDITION173;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to FirstRest --- JJ.M4
FirstRest = current1 ;
} //)) children level 1
};
{
JavaNode current0 = FirstRest;
if (! current0 .Name
.equals( "FieldSpecList_A1_M2_A1") )
   if (javadummy) break  CONDITION173;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to First --- JJ.M4
First = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Rest --- JJ.M4
Rest = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_FieldSpec
(
First
,
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Spec --- JJ.M4
Spec = current0 ;
}
// ***** begin condlist 174 (in cond 173) *****
CONDLIST174: // @@@ begin of alternative group
while(javadummy) {
CONDITION175: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Spec2
JavaNode Spec2= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative Tl
JavaNode Tl= null;
// DECLARE for alternative Hd
JavaNode Hd= null;
{
JavaNode current0 = Rest;
if (current0.Name
!= "SeqOf-FieldSpecList_A1_M2_A1_M2")
if (javadummy) break CONDITION175;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Hd --- JJ.M4
Hd = current1 ;
current1 = current0.Child1[1];
//assign current1 to Tl --- JJ.M4
Tl = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_FieldSpecList_A1_M2_A1_M2
(
Hd
,
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Spec2 --- JJ.M4
Spec2 = current0 ;
}
ResList = 
NodeFactory.NewNode (
"SeqOf-FIELDSPEC"
, new JavaNode [] {
Spec2
,
NodeFactory.NewNode (
"NilOf-FIELDSPEC"
,  new JavaNode [] {})
}
)
;
TpList = 
NodeFactory.NewNode (
"SeqOf-Tp"
, new JavaNode [] {
Tp2
,
NodeFactory.NewNode (
"NilOf-Tp"
,  new JavaNode [] {})
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST174;
// $$$$$$$$ 
} // CONDITION175 // @@@ end of alternative
CONDITION176: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Rest;
if (current0.Name
!= "NilOf-FieldSpecList_A1_M2_A1_M2")
if (javadummy) break CONDITION176;
};
ResList = 
NodeFactory.NewNode (
"NilOf-FIELDSPEC"
,  new JavaNode [] {})
;
TpList = 
NodeFactory.NewNode (
"NilOf-Tp"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST174;
// $$$$$$$$ 
} // CONDITION176 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=174 N=173
if (javadummy) break CONDITION173;
} // CONDLIST174 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST171;
// $$$$$$$$ 
} // CONDITION173 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=171 N=170
if (javadummy) break CONDITION170;
} // CONDLIST171 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST169;
// $$$$$$$$ 
} // CONDITION170 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=169 N=168
if (javadummy) break CONDITION168;
} // CONDLIST169 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
TpList
;
yy_outparam_1 = 
ResList
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST167;
// $$$$$$$$ 
} // CONDITION168 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=167 N=166
if (javadummy) break CONDITION166;
} // CONDLIST167 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION166
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_FieldSpecList");
}



public
static
void
Trafo_FieldSpecList_A1_M2_A1_M2(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Sp
JavaNode Sp = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc X1
JavaNode X1 = null;
CONDITION177:
while(javadummy) {
// ***** begin condlist 178 (in cond 177) *****
CONDLIST178: // @@@ begin of alternative group
while(javadummy) {
CONDITION179: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
// ***** begin condlist 180 (in cond 179) *****
CONDLIST180: // @@@ begin of alternative group
while(javadummy) {
CONDITION181: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "FieldSpecList_A1_M2_A1_M2_A1") )
   if (javadummy) break  CONDITION181;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_FieldSpec
(
X1
,
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Sp --- JJ.M4
Sp = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST180;
// $$$$$$$$ 
} // CONDITION181 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=180 N=179
if (javadummy) break CONDITION179;
} // CONDLIST180 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
Sp
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST178;
// $$$$$$$$ 
} // CONDITION179 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=178 N=177
if (javadummy) break CONDITION177;
} // CONDLIST178 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION177
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_FieldSpecList_A1_M2_A1_M2");
}



public
static
void
Trafo_FieldSpec(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Val
JavaNode Val = null;
// DECLARE for proc Ref
JavaNode Ref = null;
// DECLARE for proc Sp
JavaNode Sp = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION182:
while(javadummy) {
// ***** begin condlist 183 (in cond 182) *****
CONDLIST183: // @@@ begin of alternative group
while(javadummy) {
CONDITION184: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Prefix --- JJ.M4
Prefix = current0 ;
};
// ***** begin condlist 185 (in cond 184) *****
CONDLIST185: // @@@ begin of alternative group
while(javadummy) {
CONDITION186: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "FieldSpec_A1") )
   if (javadummy) break  CONDITION186;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Ref --- JJ.M4
Ref = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Val --- JJ.M4
Val = current1 ;
} //)) children level 1
};
// ***** begin condlist 187 (in cond 186) *****
CONDLIST187: // @@@ begin of alternative group
while(javadummy) {
CONDITION188: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative StructField
JavaNode StructField= null;
{
JavaNode current0 = Ref;
if (! current0 .Name
.equals( "FieldReference_A1") )
   if (javadummy) break  CONDITION188;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to StructField --- JJ.M4
StructField = current1 ;
} //)) children level 1
};
// ***** begin condlist 189 (in cond 188) *****
CONDLIST189: // @@@ begin of alternative group
while(javadummy) {
CONDITION190: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ValRes
JavaNode ValRes= null;
// DECLARE for alternative Name
JavaNode Name= null;
{
JavaNode current0 = StructField;
if (! current0 .Name
.equals( "StructFieldRef_A1") )
   if (javadummy) break  CONDITION190;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Name --- JJ.M4
Name = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_TemplateBody
(
Val
,
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ValRes --- JJ.M4
ValRes = current0 ;
}
Sp = 
NodeFactory.NewNode(
"spec_namedfield"
, new JavaNode [] {
Name
,
ValRes
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST189;
// $$$$$$$$ 
} // CONDITION190 // @@@ end of alternative
CONDITION191: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = StructField;
if (! current0 .Name
.equals( "StructFieldRef_A2") )
   if (javadummy) break  CONDITION191;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "struct field ref 2" )
,
StructField
);
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
Sp = 
NodeFactory.NewNode(
"spec_namedfield"
, new JavaNode [] {
new JavaStringValue( "-" )
,
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST189;
// $$$$$$$$ 
} // CONDITION191 // @@@ end of alternative
CONDITION192: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = StructField;
if (! current0 .Name
.equals( "StructFieldRef_A3") )
   if (javadummy) break  CONDITION192;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "struct field ref 3" )
,
StructField
);
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
Sp = 
NodeFactory.NewNode(
"spec_namedfield"
, new JavaNode [] {
new JavaStringValue( "-" )
,
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST189;
// $$$$$$$$ 
} // CONDITION192 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=189 N=188
if (javadummy) break CONDITION188;
} // CONDLIST189 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST187;
// $$$$$$$$ 
} // CONDITION188 // @@@ end of alternative
CONDITION193: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Ref;
if (! current0 .Name
.equals( "FieldReference_A2") )
   if (javadummy) break  CONDITION193;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "field ref 2" )
,
Ref
);
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
Sp = 
NodeFactory.NewNode(
"spec_namedfield"
, new JavaNode [] {
new JavaStringValue( "-" )
,
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST187;
// $$$$$$$$ 
} // CONDITION193 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=187 N=186
if (javadummy) break CONDITION186;
} // CONDLIST187 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST185;
// $$$$$$$$ 
} // CONDITION186 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=185 N=184
if (javadummy) break CONDITION184;
} // CONDLIST185 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
Sp
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST183;
// $$$$$$$$ 
} // CONDITION184 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=183 N=182
if (javadummy) break CONDITION182;
} // CONDLIST183 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION182
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_FieldSpec");
}



public
static
void
Stmt_ReceiveStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc RECEIVE
JavaNode RECEIVE = null;
// DECLARE for proc Code
JavaNode Code = null;
// DECLARE for proc Cd
JavaNode Cd = null;
// DECLARE for proc ResBlock
JavaNode ResBlock = null;
// DECLARE for proc CodeRECEIVE
JavaNode CodeRECEIVE = null;
// DECLARE for proc Arg2
JavaNode Arg2 = null;
// DECLARE for proc Arg1
JavaNode Arg1 = null;
CONDITION194:
while(javadummy) {
// ***** begin condlist 195 (in cond 194) *****
CONDLIST195: // @@@ begin of alternative group
while(javadummy) {
CONDITION196: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to RECEIVE --- JJ.M4
RECEIVE = current0 ;
};
// ***** begin condlist 197 (in cond 196) *****
CONDLIST197: // @@@ begin of alternative group
while(javadummy) {
CONDITION198: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = RECEIVE;
if (! current0 .Name
.equals( "ReceiveStatement_A1") )
   if (javadummy) break  CONDITION198;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Arg1 --- JJ.M4
Arg1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Arg2 --- JJ.M4
Arg2 = current1 ;
} //)) children level 1
};
YyProcs.
HandleReceive
(
RECEIVE
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeRECEIVE --- JJ.M4
CodeRECEIVE = current0 ;
}
ResBlock = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
Cd = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
CodeRECEIVE
,
ResBlock
}
)
;
Code = 
NodeFactory.NewNode(
"stmt_standalone"
, new JavaNode [] {
Cd
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST197;
// $$$$$$$$ 
} // CONDITION198 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=197 N=196
if (javadummy) break CONDITION196;
} // CONDLIST197 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST195;
// $$$$$$$$ 
} // CONDITION196 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=195 N=194
if (javadummy) break CONDITION194;
} // CONDLIST195 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION194
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_ReceiveStatement");
}



public
static
void
HandleReceive(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc R
JavaNode R = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc Port
JavaNode Port = null;
// DECLARE for proc PortId
JavaNode PortId = null;
// DECLARE for proc Umlenk
JavaNode Umlenk = null;
// DECLARE for proc M3
JavaNode M3 = null;
// DECLARE for proc M2
JavaNode M2 = null;
// DECLARE for proc CodeR
JavaNode CodeR = null;
CONDITION199:
while(javadummy) {
// ***** begin condlist 200 (in cond 199) *****
CONDLIST200: // @@@ begin of alternative group
while(javadummy) {
CONDITION201: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to R --- JJ.M4
R = current0 ;
};
// ***** begin condlist 202 (in cond 201) *****
CONDLIST202: // @@@ begin of alternative group
while(javadummy) {
CONDITION203: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = R;
if (! current0 .Name
.equals( "ReceiveStatement_A1") )
   if (javadummy) break  CONDITION203;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Port --- JJ.M4
Port = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 204 (in cond 203) *****
CONDLIST204: // @@@ begin of alternative group
while(javadummy) {
CONDITION205: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Port1
JavaNode Port1= null;
// DECLARE for alternative Array
JavaNode Array= null;
{
JavaNode current0 = Port;
if (! current0 .Name
.equals( "PortOrAny_A1") )
   if (javadummy) break  CONDITION205;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Port1 --- JJ.M4
Port1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 206 (in cond 205) *****
CONDLIST206: // @@@ begin of alternative group
while(javadummy) {
CONDITION207: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Port1;
if (! current0 .Name
.equals( "ArrayIdentifierRef_A1") )
   if (javadummy) break  CONDITION207;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to PortId --- JJ.M4
PortId = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Array --- JJ.M4
Array = current1 ;
} //)) children level 1
};
// ***** begin condlist 208 (in cond 207) *****
CONDLIST208: // @@@ begin of alternative group
while(javadummy) {
CONDITION209: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Array;
if (current0.Name
!= "NilOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION209;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST208;
// $$$$$$$$ 
} // CONDITION209 // @@@ end of alternative
CONDITION210: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Array;
if (current0.Name
!= "SeqOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION210;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "port array" )
,
Array
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST208;
// $$$$$$$$ 
} // CONDITION210 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=208 N=207
if (javadummy) break CONDITION207;
} // CONDLIST208 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST206;
// $$$$$$$$ 
} // CONDITION207 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=206 N=205
if (javadummy) break CONDITION205;
} // CONDLIST206 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST204;
// $$$$$$$$ 
} // CONDITION205 // @@@ end of alternative
CONDITION211: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Port;
if (! current0 .Name
.equals( "PortOrAny_A2") )
   if (javadummy) break  CONDITION211;
};
YyProcs.
NotCovered
(
new JavaStringValue( "any port" )
,
Port
);
PortId = 
new JavaStringValue( "unused" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST204;
// $$$$$$$$ 
} // CONDITION211 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=204 N=203
if (javadummy) break CONDITION203;
} // CONDLIST204 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 212 (in cond 203) *****
CONDLIST212: // @@@ begin of alternative group
while(javadummy) {
CONDITION213: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (! current0 .Name
.equals( "PortReceiveOp_A1") )
   if (javadummy) break  CONDITION213;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to M2 --- JJ.M4
M2 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to M3 --- JJ.M4
M3 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Umlenk --- JJ.M4
Umlenk = current1 ;
} //)) children level 1
};
// ***** begin condlist 214 (in cond 213) *****
CONDLIST214: // @@@ begin of alternative group
while(javadummy) {
CONDITION215: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Redir
JavaNode Redir= null;
// DECLARE for alternative TEMPLATE
JavaNode TEMPLATE= null;
// DECLARE for alternative M2X
JavaNode M2X= null;
{
JavaNode current0 = M2;
if (current0.Name
!= "OneOf-PortReceiveOp_A1_M2")
if (javadummy) break CONDITION215;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to M2X --- JJ.M4
M2X = current1 ;
} //)) children level 1
};
{
JavaNode current0 = M2X;
if (! current0 .Name
.equals( "PortReceiveOp_A1_M2_A1") )
   if (javadummy) break  CONDITION215;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to TEMPLATE --- JJ.M4
TEMPLATE = current1 ;
} //)) children level 1
};
// ***** begin condlist 216 (in cond 215) *****
CONDLIST216: // @@@ begin of alternative group
while(javadummy) {
CONDITION217: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-PortReceiveOp_A1_M3")
if (javadummy) break CONDITION217;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST216;
// $$$$$$$$ 
} // CONDITION217 // @@@ end of alternative
CONDITION218: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M3;
if (current0.Name
!= "OneOf-PortReceiveOp_A1_M3")
if (javadummy) break CONDITION218;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "from sender" )
,
M2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST216;
// $$$$$$$$ 
} // CONDITION218 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=216 N=215
if (javadummy) break CONDITION215;
} // CONDLIST216 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Redirection
(
Umlenk
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Redir --- JJ.M4
Redir = current0 ;
}
YyProcs.
InLineTemplateInReceive
(
TEMPLATE
,
PortId
,
Redir
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeR --- JJ.M4
CodeR = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST214;
// $$$$$$$$ 
} // CONDITION215 // @@@ end of alternative
CONDITION219: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-PortReceiveOp_A1_M2")
if (javadummy) break CONDITION219;
{ //(( children level 1
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "missing template" )
,
M2
);
CodeR = 
NodeFactory.NewNode(
"receive_unused"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST214;
// $$$$$$$$ 
} // CONDITION219 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=214 N=213
if (javadummy) break CONDITION213;
} // CONDLIST214 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST212;
// $$$$$$$$ 
} // CONDITION213 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=212 N=203
if (javadummy) break CONDITION203;
} // CONDLIST212 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST202;
// $$$$$$$$ 
} // CONDITION203 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=202 N=201
if (javadummy) break CONDITION201;
} // CONDLIST202 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
CodeR
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST200;
// $$$$$$$$ 
} // CONDITION201 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=200 N=199
if (javadummy) break CONDITION199;
} // CONDLIST200 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION199
// failed:
JavaLib.rtsAllAlternativesFailed("HandleReceive");
}



public
static
void
Redirection(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Umlenk
JavaNode Umlenk = null;
// DECLARE for proc Redir
JavaNode Redir = null;
CONDITION220:
while(javadummy) {
// ***** begin condlist 221 (in cond 220) *****
CONDLIST221: // @@@ begin of alternative group
while(javadummy) {
CONDITION222: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Umlenk --- JJ.M4
Umlenk = current0 ;
};
// ***** begin condlist 223 (in cond 222) *****
CONDLIST223: // @@@ begin of alternative group
while(javadummy) {
CONDITION224: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Umlenk;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-PortReceiveOp_A1_M4")
if (javadummy) break CONDITION224;
{ //(( children level 1
} //)) children level 1
};
Redir = 
new JavaStringValue( "/noredirect/" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST223;
// $$$$$$$$ 
} // CONDITION224 // @@@ end of alternative
CONDITION225: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X3
JavaNode X3= null;
{
JavaNode current0 = Umlenk;
if (current0.Name
!= "OneOf-PortReceiveOp_A1_M4")
if (javadummy) break CONDITION225;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 226 (in cond 225) *****
CONDLIST226: // @@@ begin of alternative group
while(javadummy) {
CONDITION227: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "PortReceiveOp_A1_M4_A1") )
   if (javadummy) break  CONDITION227;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 228 (in cond 227) *****
CONDLIST228: // @@@ begin of alternative group
while(javadummy) {
CONDITION229: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (! current0 .Name
.equals( "PortRedirect_A1") )
   if (javadummy) break  CONDITION229;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
} //)) children level 1
};
// ***** begin condlist 230 (in cond 229) *****
CONDLIST230: // @@@ begin of alternative group
while(javadummy) {
CONDITION231: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X3;
if (! current0 .Name
.equals( "PortRedirect_A1_M2_A3") )
   if (javadummy) break  CONDITION231;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "redirect timestamp" )
,
X3
);
Redir = 
new JavaStringValue( "" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST230;
// $$$$$$$$ 
} // CONDITION231 // @@@ end of alternative
CONDITION232: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X3;
if (! current0 .Name
.equals( "PortRedirect_A1_M2_A2") )
   if (javadummy) break  CONDITION232;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "redirect sender" )
,
X2
);
Redir = 
new JavaStringValue( "" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST230;
// $$$$$$$$ 
} // CONDITION232 // @@@ end of alternative
CONDITION233: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X4c
JavaNode X4c= null;
// DECLARE for alternative X4b
JavaNode X4b= null;
// DECLARE for alternative X4a
JavaNode X4a= null;
// DECLARE for alternative X4aa
JavaNode X4aa= null;
// DECLARE for alternative MSG
JavaNode MSG= null;
{
JavaNode current0 = X3;
if (! current0 .Name
.equals( "PortRedirect_A1_M2_A1") )
   if (javadummy) break  CONDITION233;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X4a --- JJ.M4
X4a = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X4b --- JJ.M4
X4b = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X4c --- JJ.M4
X4c = current1 ;
} //)) children level 1
};
// ***** begin condlist 234 (in cond 233) *****
CONDLIST234: // @@@ begin of alternative group
while(javadummy) {
CONDITION235: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X4a;
if (! current0 .Name
.equals( "ValueSpec_A1") )
   if (javadummy) break  CONDITION235;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X4aa --- JJ.M4
X4aa = current1 ;
} //)) children level 1
};
// ***** begin condlist 236 (in cond 235) *****
CONDLIST236: // @@@ begin of alternative group
while(javadummy) {
CONDITION237: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X4aaa
JavaNode X4aaa= null;
// DECLARE for alternative Rest
JavaNode Rest= null;
{
JavaNode current0 = X4aa;
if (! current0 .Name
.equals( "ValueSpec_A1_M2_A1") )
   if (javadummy) break  CONDITION237;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X4aaa --- JJ.M4
X4aaa = current1 ;
} //)) children level 1
};
// ***** begin condlist 238 (in cond 237) *****
CONDLIST238: // @@@ begin of alternative group
while(javadummy) {
CONDITION239: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X4aaa;
if (! current0 .Name
.equals( "VariableRef_A1") )
   if (javadummy) break  CONDITION239;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to MSG --- JJ.M4
MSG = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Rest --- JJ.M4
Rest = current1 ;
} //)) children level 1
};
// ***** begin condlist 240 (in cond 239) *****
CONDLIST240: // @@@ begin of alternative group
while(javadummy) {
CONDITION241: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Rest;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-VariableRef_A1_M2")
if (javadummy) break CONDITION241;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST240;
// $$$$$$$$ 
} // CONDITION241 // @@@ end of alternative
CONDITION242: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Rest;
if (current0.Name
!= "OneOf-VariableRef_A1_M2")
if (javadummy) break CONDITION242;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "variable suffix" )
,
Rest
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST240;
// $$$$$$$$ 
} // CONDITION242 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=240 N=239
if (javadummy) break CONDITION239;
} // CONDLIST240 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST238;
// $$$$$$$$ 
} // CONDITION239 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=238 N=237
if (javadummy) break CONDITION237;
} // CONDLIST238 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST236;
// $$$$$$$$ 
} // CONDITION237 // @@@ end of alternative
CONDITION243: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X4aa;
if (! current0 .Name
.equals( "ValueSpec_A1_M2_A2") )
   if (javadummy) break  CONDITION243;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
TokenStream.ReportError
(
new JavaStringValue( "cover" )
,new JavaStringValue( "nopos" )
);
MSG = 
new JavaStringValue( "" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST236;
// $$$$$$$$ 
} // CONDITION243 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=236 N=235
if (javadummy) break CONDITION235;
} // CONDLIST236 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST234;
// $$$$$$$$ 
} // CONDITION235 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=234 N=233
if (javadummy) break CONDITION233;
} // CONDLIST234 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 244 (in cond 233) *****
CONDLIST244: // @@@ begin of alternative group
while(javadummy) {
CONDITION245: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X4b;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-PortRedirect_A1_M2_A1_M2")
if (javadummy) break CONDITION245;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST244;
// $$$$$$$$ 
} // CONDITION245 // @@@ end of alternative
CONDITION246: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X4b;
if (current0.Name
!= "OneOf-PortRedirect_A1_M2_A1_M2")
if (javadummy) break CONDITION246;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "redirect sender" )
,
X4b
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST244;
// $$$$$$$$ 
} // CONDITION246 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=244 N=233
if (javadummy) break CONDITION233;
} // CONDLIST244 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 247 (in cond 233) *****
CONDLIST247: // @@@ begin of alternative group
while(javadummy) {
CONDITION248: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X4c;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-PortRedirect_A1_M2_A1_M3")
if (javadummy) break CONDITION248;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST247;
// $$$$$$$$ 
} // CONDITION248 // @@@ end of alternative
CONDITION249: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X4c;
if (current0.Name
!= "OneOf-PortRedirect_A1_M2_A1_M3")
if (javadummy) break CONDITION249;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "redirect irgendwas" )
,
X4c
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST247;
// $$$$$$$$ 
} // CONDITION249 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=247 N=233
if (javadummy) break CONDITION233;
} // CONDLIST247 @@@ end of alternative group
// *** CONTINUE ***
Redir = 
MSG
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST230;
// $$$$$$$$ 
} // CONDITION233 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=230 N=229
if (javadummy) break CONDITION229;
} // CONDLIST230 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST228;
// $$$$$$$$ 
} // CONDITION229 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=228 N=227
if (javadummy) break CONDITION227;
} // CONDLIST228 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST226;
// $$$$$$$$ 
} // CONDITION227 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=226 N=225
if (javadummy) break CONDITION225;
} // CONDLIST226 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST223;
// $$$$$$$$ 
} // CONDITION225 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=223 N=222
if (javadummy) break CONDITION222;
} // CONDLIST223 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Redir
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST221;
// $$$$$$$$ 
} // CONDITION222 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=221 N=220
if (javadummy) break CONDITION220;
} // CONDLIST221 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION220
// failed:
JavaLib.rtsAllAlternativesFailed("Redirection");
}



public
static
void
InLineTemplateInReceive(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc CodeR2
JavaNode CodeR2 = null;
// DECLARE for proc EXPR
JavaNode EXPR = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc Redir
JavaNode Redir = null;
// DECLARE for proc PortId
JavaNode PortId = null;
// DECLARE for proc TEMPLATE
JavaNode TEMPLATE = null;
CONDITION250:
while(javadummy) {
// ***** begin condlist 251 (in cond 250) *****
CONDLIST251: // @@@ begin of alternative group
while(javadummy) {
CONDITION252: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to TEMPLATE --- JJ.M4
TEMPLATE = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to PortId --- JJ.M4
PortId = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Redir --- JJ.M4
Redir = current0 ;
};
YyProcs.
primaTrafo_InLineTemplate
(
TEMPLATE
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to EXPR --- JJ.M4
EXPR = current0 ;
}
CodeR2 = 
NodeFactory.NewNode(
"receive_value"
, new JavaNode [] {
EXPR
,
PortId
,
Redir
}
)
;
yy_outparam_0 = 
CodeR2
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST251;
// $$$$$$$$ 
} // CONDITION252 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=251 N=250
if (javadummy) break CONDITION250;
} // CONDLIST251 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION250
// failed:
JavaLib.rtsAllAlternativesFailed("InLineTemplateInReceive");
}



public
static
void
Stmt_StartTCStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc StartTCStatement
JavaNode StartTCStatement = null;
// DECLARE for proc Code
JavaNode Code = null;
// DECLARE for proc Fun
JavaNode Fun = null;
// DECLARE for proc Comp
JavaNode Comp = null;
// DECLARE for proc Id1
JavaNode Id1 = null;
// DECLARE for proc Id2
JavaNode Id2 = null;
CONDITION253:
while(javadummy) {
// ***** begin condlist 254 (in cond 253) *****
CONDLIST254: // @@@ begin of alternative group
while(javadummy) {
CONDITION255: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to StartTCStatement --- JJ.M4
StartTCStatement = current0 ;
};
// ***** begin condlist 256 (in cond 255) *****
CONDLIST256: // @@@ begin of alternative group
while(javadummy) {
CONDITION257: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = StartTCStatement;
if (! current0 .Name
.equals( "StartTCStatement_A1") )
   if (javadummy) break  CONDITION257;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Comp --- JJ.M4
Comp = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Fun --- JJ.M4
Fun = current1 ;
} //)) children level 1
};
// ***** begin condlist 258 (in cond 257) *****
CONDLIST258: // @@@ begin of alternative group
while(javadummy) {
CONDITION259: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Def1
JavaNode Def1= null;
// DECLARE for alternative Pos1
JavaNode Pos1= null;
// DECLARE for alternative Z1
JavaNode Z1= null;
// DECLARE for alternative Var
JavaNode Var= null;
{
JavaNode current0 = Comp;
if (! current0 .Name
.equals( "ComponentOrDefaultReference_A1") )
   if (javadummy) break  CONDITION259;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Var --- JJ.M4
Var = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Var;
if (! current0 .Name
.equals( "VariableRef_A1") )
   if (javadummy) break  CONDITION259;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id1 --- JJ.M4
Id1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Z1 --- JJ.M4
Z1 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Z1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-VariableRef_A1_M2")
if (javadummy) break CONDITION259;
{ //(( children level 1
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id1);
//assign current0 to Pos1 --- JJ.M4
Pos1 = current0 ;
};
YyProcs.
LocallyDefined
(
Id1
,
Pos1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def1 --- JJ.M4
Def1 = current0 ;
}
// ***** begin condlist 260 (in cond 259) *****
CONDLIST260: // @@@ begin of alternative group
while(javadummy) {
CONDITION261: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Ref
JavaNode Ref= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = Def1;
if (! current0 .Name
.equals( "localvar") )
   if (javadummy) break  CONDITION261;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tp --- JJ.M4
Tp = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_referenced") )
   if (javadummy) break  CONDITION261;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Ref --- JJ.M4
Ref = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Ref;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION261;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST260;
// $$$$$$$$ 
} // CONDITION261 // @@@ end of alternative
CONDITION262: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Id1
,
new JavaStringValue( "' is not defined as component" )
,
Pos1
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST260;
// $$$$$$$$ 
} // CONDITION262 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=260 N=259
if (javadummy) break CONDITION259;
} // CONDLIST260 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST258;
// $$$$$$$$ 
} // CONDITION259 // @@@ end of alternative
CONDITION263: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Comp;
if (! current0 .Name
.equals( "ComponentOrDefaultReference_A2") )
   if (javadummy) break  CONDITION263;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "comp ref" )
,
Comp
);
Id1 = 
new JavaStringValue( "-" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST258;
// $$$$$$$$ 
} // CONDITION263 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=258 N=257
if (javadummy) break CONDITION257;
} // CONDLIST258 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 264 (in cond 257) *****
CONDLIST264: // @@@ begin of alternative group
while(javadummy) {
CONDITION265: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Def2
JavaNode Def2= null;
// DECLARE for alternative Pos2
JavaNode Pos2= null;
// DECLARE for alternative Z2
JavaNode Z2= null;
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
// DECLARE for alternative FunRef
JavaNode FunRef= null;
{
JavaNode current0 = Fun;
if (! current0 .Name
.equals( "FunctionInstance_A1") )
   if (javadummy) break  CONDITION265;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FunRef --- JJ.M4
FunRef = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = FunRef;
if (! current0 .Name
.equals( "FunctionRef_A1") )
   if (javadummy) break  CONDITION265;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Z2 --- JJ.M4
Z2 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Id2 --- JJ.M4
Id2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 266 (in cond 265) *****
CONDLIST266: // @@@ begin of alternative group
while(javadummy) {
CONDITION267: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionRef_A1_M1")
if (javadummy) break CONDITION267;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST266;
// $$$$$$$$ 
} // CONDITION267 // @@@ end of alternative
CONDITION268: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z2;
if (current0.Name
!= "OneOf-FunctionRef_A1_M1")
if (javadummy) break CONDITION268;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "function ref 1" )
,
Z2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST266;
// $$$$$$$$ 
} // CONDITION268 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=266 N=265
if (javadummy) break CONDITION265;
} // CONDLIST266 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 269 (in cond 265) *****
CONDLIST269: // @@@ begin of alternative group
while(javadummy) {
CONDITION270: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionInstance_A1_M2")
if (javadummy) break CONDITION270;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST269;
// $$$$$$$$ 
} // CONDITION270 // @@@ end of alternative
CONDITION271: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (current0.Name
!= "OneOf-FunctionInstance_A1_M2")
if (javadummy) break CONDITION271;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "function ref 2" )
,
X1
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST269;
// $$$$$$$$ 
} // CONDITION271 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=269 N=265
if (javadummy) break CONDITION265;
} // CONDLIST269 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 272 (in cond 265) *****
CONDLIST272: // @@@ begin of alternative group
while(javadummy) {
CONDITION273: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionInstance_A1_M4")
if (javadummy) break CONDITION273;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST272;
// $$$$$$$$ 
} // CONDITION273 // @@@ end of alternative
CONDITION274: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
!= "OneOf-FunctionInstance_A1_M4")
if (javadummy) break CONDITION274;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "function ref 3" )
,
X2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST272;
// $$$$$$$$ 
} // CONDITION274 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=272 N=265
if (javadummy) break CONDITION265;
} // CONDLIST272 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id2);
//assign current0 to Pos2 --- JJ.M4
Pos2 = current0 ;
};
YyProcs.
GloballyDefined
(
Id2
,
Pos2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def2 --- JJ.M4
Def2 = current0 ;
}
// ***** begin condlist 275 (in cond 265) *****
CONDLIST275: // @@@ begin of alternative group
while(javadummy) {
CONDITION276: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Def2;
if (! current0 .Name
.equals( "functiondefinition") )
   if (javadummy) break  CONDITION276;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST275;
// $$$$$$$$ 
} // CONDITION276 // @@@ end of alternative
CONDITION277: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Id2
,
new JavaStringValue( "' is not defined as function" )
,
Pos2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST275;
// $$$$$$$$ 
} // CONDITION277 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=275 N=265
if (javadummy) break CONDITION265;
} // CONDLIST275 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST264;
// $$$$$$$$ 
} // CONDITION265 // @@@ end of alternative
CONDITION278: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Fun;
if (! current0 .Name
.equals( "FunctionInstance_A2") )
   if (javadummy) break  CONDITION278;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "function instance" )
,
Fun
);
Id2 = 
new JavaStringValue( "-" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST264;
// $$$$$$$$ 
} // CONDITION278 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=264 N=257
if (javadummy) break CONDITION257;
} // CONDLIST264 @@@ end of alternative group
// *** CONTINUE ***
Code = 
NodeFactory.NewNode(
"stmt_startcomponent"
, new JavaNode [] {
Id1
,
Id2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST256;
// $$$$$$$$ 
} // CONDITION257 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=256 N=255
if (javadummy) break CONDITION255;
} // CONDLIST256 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST254;
// $$$$$$$$ 
} // CONDITION255 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=254 N=253
if (javadummy) break CONDITION253;
} // CONDLIST254 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION253
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_StartTCStatement");
}



public
static
void
Stmt_StartTimerStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc StartTimerStatement
JavaNode StartTimerStatement = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc Def
JavaNode Def = null;
// DECLARE for proc PosId
JavaNode PosId = null;
// DECLARE for proc A
JavaNode A = null;
// DECLARE for proc Id
JavaNode Id = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION279:
while(javadummy) {
// ***** begin condlist 280 (in cond 279) *****
CONDLIST280: // @@@ begin of alternative group
while(javadummy) {
CONDITION281: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to StartTimerStatement --- JJ.M4
StartTimerStatement = current0 ;
};
// ***** begin condlist 282 (in cond 281) *****
CONDLIST282: // @@@ begin of alternative group
while(javadummy) {
CONDITION283: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = StartTimerStatement;
if (! current0 .Name
.equals( "StartTimerStatement_A1") )
   if (javadummy) break  CONDITION283;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 284 (in cond 283) *****
CONDLIST284: // @@@ begin of alternative group
while(javadummy) {
CONDITION285: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ArrayIdentifierRef_A1") )
   if (javadummy) break  CONDITION285;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to A --- JJ.M4
A = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to PosId --- JJ.M4
PosId = current0 ;
};
YyProcs.
LocallyDefined
(
Id
,
PosId
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 286 (in cond 285) *****
CONDLIST286: // @@@ begin of alternative group
while(javadummy) {
CONDITION287: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "localtimer") )
   if (javadummy) break  CONDITION287;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST286;
// $$$$$$$$ 
} // CONDITION287 // @@@ end of alternative
CONDITION288: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Id
,
new JavaStringValue( "' is not defined as timer" )
,
PosId
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST286;
// $$$$$$$$ 
} // CONDITION288 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=286 N=285
if (javadummy) break CONDITION285;
} // CONDLIST286 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 289 (in cond 285) *****
CONDLIST289: // @@@ begin of alternative group
while(javadummy) {
CONDITION290: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = A;
if (current0.Name
!= "NilOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION290;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST289;
// $$$$$$$$ 
} // CONDITION290 // @@@ end of alternative
CONDITION291: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = A;
if (current0.Name
!= "SeqOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION291;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "start timer array" )
,
A
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST289;
// $$$$$$$$ 
} // CONDITION291 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=289 N=285
if (javadummy) break CONDITION285;
} // CONDLIST289 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST284;
// $$$$$$$$ 
} // CONDITION285 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=284 N=283
if (javadummy) break CONDITION283;
} // CONDLIST284 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 292 (in cond 283) *****
CONDLIST292: // @@@ begin of alternative group
while(javadummy) {
CONDITION293: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X21
JavaNode X21= null;
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
// DECLARE for alternative X211
JavaNode X211= null;
{
JavaNode current0 = X2;
if (current0.Name
!= "OneOf-StartTimerStatement_A1_M4")
if (javadummy) break CONDITION293;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to X21 --- JJ.M4
X21 = current1 ;
} //)) children level 1
};
// ***** begin condlist 294 (in cond 293) *****
CONDLIST294: // @@@ begin of alternative group
while(javadummy) {
CONDITION295: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X21;
if (! current0 .Name
.equals( "StartTimerStatement_A1_M4_A1") )
   if (javadummy) break  CONDITION295;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X211 --- JJ.M4
X211 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_Expression
(
X211
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to X --- JJ.M4
X = current0 ;
}
Code = 
NodeFactory.NewNode(
"stmt_starttimerexpr"
, new JavaNode [] {
Id
,
X
}
)
;
// ***** begin condlist 296 (in cond 295) *****
CONDLIST296: // @@@ begin of alternative group
while(javadummy) {
CONDITION297: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_float") )
   if (javadummy) break  CONDITION297;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST296;
// $$$$$$$$ 
} // CONDITION297 // @@@ end of alternative
CONDITION298: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(X211);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "float value required" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST296;
// $$$$$$$$ 
} // CONDITION298 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=296 N=295
if (javadummy) break CONDITION295;
} // CONDLIST296 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST294;
// $$$$$$$$ 
} // CONDITION295 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=294 N=293
if (javadummy) break CONDITION293;
} // CONDLIST294 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST292;
// $$$$$$$$ 
} // CONDITION293 // @@@ end of alternative
CONDITION299: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-StartTimerStatement_A1_M4")
if (javadummy) break CONDITION299;
{ //(( children level 1
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "start timer a1 m4" )
,
X2
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST292;
// $$$$$$$$ 
} // CONDITION299 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=292 N=283
if (javadummy) break CONDITION283;
} // CONDLIST292 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST282;
// $$$$$$$$ 
} // CONDITION283 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=282 N=281
if (javadummy) break CONDITION281;
} // CONDLIST282 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST280;
// $$$$$$$$ 
} // CONDITION281 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=280 N=279
if (javadummy) break CONDITION279;
} // CONDLIST280 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION279
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_StartTimerStatement");
}



public
static
void
Stmt_StopTimerStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Def
JavaNode Def = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc StopTimerStatement
JavaNode StopTimerStatement = null;
// DECLARE for proc Timer
JavaNode Timer = null;
// DECLARE for proc Str
JavaNode Str = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION300:
while(javadummy) {
// ***** begin condlist 301 (in cond 300) *****
CONDLIST301: // @@@ begin of alternative group
while(javadummy) {
CONDITION302: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to StopTimerStatement --- JJ.M4
StopTimerStatement = current0 ;
};
// ***** begin condlist 303 (in cond 302) *****
CONDLIST303: // @@@ begin of alternative group
while(javadummy) {
CONDITION304: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = StopTimerStatement;
if (! current0 .Name
.equals( "StopTimerStatement_A1") )
   if (javadummy) break  CONDITION304;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Timer --- JJ.M4
Timer = current1 ;
} //)) children level 1
};
// ***** begin condlist 305 (in cond 304) *****
CONDLIST305: // @@@ begin of alternative group
while(javadummy) {
CONDITION306: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative Z
JavaNode Z= null;
{
JavaNode current0 = Timer;
if (! current0 .Name
.equals( "TimerRefOrAll_A1") )
   if (javadummy) break  CONDITION306;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 307 (in cond 306) *****
CONDLIST307: // @@@ begin of alternative group
while(javadummy) {
CONDITION308: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ArrayIdentifierRef_A1") )
   if (javadummy) break  CONDITION308;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Str --- JJ.M4
Str = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Z --- JJ.M4
Z = current1 ;
} //)) children level 1
};
// ***** begin condlist 309 (in cond 308) *****
CONDLIST309: // @@@ begin of alternative group
while(javadummy) {
CONDITION310: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z;
if (current0.Name
!= "NilOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION310;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST309;
// $$$$$$$$ 
} // CONDITION310 // @@@ end of alternative
CONDITION311: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z;
if (current0.Name
!= "SeqOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION311;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "timer ref 1" )
,
Z
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST309;
// $$$$$$$$ 
} // CONDITION311 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=309 N=308
if (javadummy) break CONDITION308;
} // CONDLIST309 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST307;
// $$$$$$$$ 
} // CONDITION308 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=307 N=306
if (javadummy) break CONDITION306;
} // CONDLIST307 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST305;
// $$$$$$$$ 
} // CONDITION306 // @@@ end of alternative
CONDITION312: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Timer;
if (! current0 .Name
.equals( "TimerRefOrAll_A2") )
   if (javadummy) break  CONDITION312;
};
YyProcs.
NotCovered
(
new JavaStringValue( "timer ref 2" )
,
Timer
);
Str = 
new JavaStringValue( "-" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST305;
// $$$$$$$$ 
} // CONDITION312 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=305 N=304
if (javadummy) break CONDITION304;
} // CONDLIST305 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST303;
// $$$$$$$$ 
} // CONDITION304 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=303 N=302
if (javadummy) break CONDITION302;
} // CONDLIST303 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Str);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
LocallyDefined
(
Str
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 313 (in cond 302) *****
CONDLIST313: // @@@ begin of alternative group
while(javadummy) {
CONDITION314: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "localtimer") )
   if (javadummy) break  CONDITION314;
};
YyProcs.
NotCovered
(
new JavaStringValue( "stop timer" )
,
Str
);
Code = 
NodeFactory.NewNode(
"stmt_stopcomponent"
, new JavaNode [] {
Str
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST313;
// $$$$$$$$ 
} // CONDITION314 // @@@ end of alternative
CONDITION315: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "localvar") )
   if (javadummy) break  CONDITION315;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tp --- JJ.M4
Tp = current1 ;
} //)) children level 1
};
// ***** begin condlist 316 (in cond 315) *****
CONDLIST316: // @@@ begin of alternative group
while(javadummy) {
CONDITION317: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Ref
JavaNode Ref= null;
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_referenced") )
   if (javadummy) break  CONDITION317;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Ref --- JJ.M4
Ref = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Ref;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION317;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST316;
// $$$$$$$$ 
} // CONDITION317 // @@@ end of alternative
CONDITION318: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Str
,
new JavaStringValue( "' is not defined as component" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST316;
// $$$$$$$$ 
} // CONDITION318 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=316 N=315
if (javadummy) break CONDITION315;
} // CONDLIST316 @@@ end of alternative group
// *** CONTINUE ***
Code = 
NodeFactory.NewNode(
"stmt_stopcomponent"
, new JavaNode [] {
Str
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST313;
// $$$$$$$$ 
} // CONDITION315 // @@@ end of alternative
CONDITION319: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Str
,
new JavaStringValue( "': timer or component expected" )
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_stopcomponent"
, new JavaNode [] {
Str
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST313;
// $$$$$$$$ 
} // CONDITION319 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=313 N=302
if (javadummy) break CONDITION302;
} // CONDLIST313 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST301;
// $$$$$$$$ 
} // CONDITION302 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=301 N=300
if (javadummy) break CONDITION300;
} // CONDLIST301 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION300
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_StopTimerStatement");
}



public
static
void
Trafo_SendStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc SendStmt
JavaNode SendStmt = null;
// DECLARE for proc Code
JavaNode Code = null;
// DECLARE for proc Port2
JavaNode Port2 = null;
// DECLARE for proc Res
JavaNode Res = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
// DECLARE for proc Def
JavaNode Def = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Arg2
JavaNode Arg2 = null;
// DECLARE for proc Arg1
JavaNode Arg1 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc PortId
JavaNode PortId = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc Body
JavaNode Body = null;
// DECLARE for proc X12
JavaNode X12 = null;
// DECLARE for proc X11
JavaNode X11 = null;
CONDITION320:
while(javadummy) {
// ***** begin condlist 321 (in cond 320) *****
CONDLIST321: // @@@ begin of alternative group
while(javadummy) {
CONDITION322: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SendStmt --- JJ.M4
SendStmt = current0 ;
};
// ***** begin condlist 323 (in cond 322) *****
CONDLIST323: // @@@ begin of alternative group
while(javadummy) {
CONDITION324: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = SendStmt;
if (! current0 .Name
.equals( "SendStatement_A1") )
   if (javadummy) break  CONDITION324;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Arg1 --- JJ.M4
Arg1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Arg2 --- JJ.M4
Arg2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 325 (in cond 324) *****
CONDLIST325: // @@@ begin of alternative group
while(javadummy) {
CONDITION326: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Arg1;
if (! current0 .Name
.equals( "ArrayIdentifierRef_A1") )
   if (javadummy) break  CONDITION326;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to PortId --- JJ.M4
PortId = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 327 (in cond 326) *****
CONDLIST327: // @@@ begin of alternative group
while(javadummy) {
CONDITION328: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (current0.Name
!= "NilOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION328;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST327;
// $$$$$$$$ 
} // CONDITION328 // @@@ end of alternative
CONDITION329: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (current0.Name
!= "SeqOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION329;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "port indices" )
,
X
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST327;
// $$$$$$$$ 
} // CONDITION329 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=327 N=326
if (javadummy) break CONDITION326;
} // CONDLIST327 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST325;
// $$$$$$$$ 
} // CONDITION326 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=325 N=324
if (javadummy) break CONDITION324;
} // CONDLIST325 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 330 (in cond 324) *****
CONDLIST330: // @@@ begin of alternative group
while(javadummy) {
CONDITION331: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Arg2;
if (! current0 .Name
.equals( "PortSendOp_A1") )
   if (javadummy) break  CONDITION331;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 332 (in cond 331) *****
CONDLIST332: // @@@ begin of alternative group
while(javadummy) {
CONDITION333: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "InLineTemplate_A1") )
   if (javadummy) break  CONDITION333;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X11 --- JJ.M4
X11 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X12 --- JJ.M4
X12 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Body --- JJ.M4
Body = current1 ;
} //)) children level 1
};
// ***** begin condlist 334 (in cond 333) *****
CONDLIST334: // @@@ begin of alternative group
while(javadummy) {
CONDITION335: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X11;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-InLineTemplate_A1_M1")
if (javadummy) break CONDITION335;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST334;
// $$$$$$$$ 
} // CONDITION335 // @@@ end of alternative
CONDITION336: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X11;
if (current0.Name
!= "OneOf-InLineTemplate_A1_M1")
if (javadummy) break CONDITION336;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "xxx" )
,
X11
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST334;
// $$$$$$$$ 
} // CONDITION336 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=334 N=333
if (javadummy) break CONDITION333;
} // CONDLIST334 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 337 (in cond 333) *****
CONDLIST337: // @@@ begin of alternative group
while(javadummy) {
CONDITION338: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X12;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-InLineTemplate_A1_M2")
if (javadummy) break CONDITION338;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST337;
// $$$$$$$$ 
} // CONDITION338 // @@@ end of alternative
CONDITION339: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X12;
if (current0.Name
!= "OneOf-InLineTemplate_A1_M2")
if (javadummy) break CONDITION339;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "xxx" )
,
X12
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST337;
// $$$$$$$$ 
} // CONDITION339 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=337 N=333
if (javadummy) break CONDITION333;
} // CONDLIST337 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST332;
// $$$$$$$$ 
} // CONDITION333 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=332 N=331
if (javadummy) break CONDITION331;
} // CONDLIST332 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 340 (in cond 331) *****
CONDLIST340: // @@@ begin of alternative group
while(javadummy) {
CONDITION341: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-PortSendOp_A1_M5")
if (javadummy) break CONDITION341;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST340;
// $$$$$$$$ 
} // CONDITION341 // @@@ end of alternative
CONDITION342: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
!= "OneOf-PortSendOp_A1_M5")
if (javadummy) break CONDITION342;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "xxx" )
,
X2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST340;
// $$$$$$$$ 
} // CONDITION342 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=340 N=331
if (javadummy) break CONDITION331;
} // CONDLIST340 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST330;
// $$$$$$$$ 
} // CONDITION331 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=330 N=324
if (javadummy) break CONDITION324;
} // CONDLIST330 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(PortId);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
LocallyDefined
(
PortId
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 343 (in cond 324) *****
CONDLIST343: // @@@ begin of alternative group
while(javadummy) {
CONDITION344: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "componentmember_port") )
   if (javadummy) break  CONDITION344;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST343;
// $$$$$$$$ 
} // CONDITION344 // @@@ end of alternative
CONDITION345: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
PortId
,
new JavaStringValue( "' not declared as port" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST343;
// $$$$$$$$ 
} // CONDITION345 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=343 N=324
if (javadummy) break CONDITION324;
} // CONDLIST343 @@@ end of alternative group
// *** CONTINUE ***
Prefix = 
NodeFactory.NewNode (
"NoneOf-ZInLineTemplate_A1_M1"
,  new JavaNode [] {}
)
;
YyProcs.
Trafo_TemplateBody
(
Body
,
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
Port2 = 
NodeFactory.NewNode(
"expr_runsonc_port"
, new JavaNode [] {
PortId
}
)
;
Code = 
NodeFactory.NewNode(
"stmt_send"
, new JavaNode [] {
Port2
,
Res
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST323;
// $$$$$$$$ 
} // CONDITION324 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=323 N=322
if (javadummy) break CONDITION322;
} // CONDLIST323 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST321;
// $$$$$$$$ 
} // CONDITION322 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=321 N=320
if (javadummy) break CONDITION320;
} // CONDLIST321 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION320
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_SendStatement");
}



public
static
void
Stmt_DoneStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc DoneStatement
JavaNode DoneStatement = null;
// DECLARE for proc Comp
JavaNode Comp = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION346:
while(javadummy) {
// ***** begin condlist 347 (in cond 346) *****
CONDLIST347: // @@@ begin of alternative group
while(javadummy) {
CONDITION348: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to DoneStatement --- JJ.M4
DoneStatement = current0 ;
};
// ***** begin condlist 349 (in cond 348) *****
CONDLIST349: // @@@ begin of alternative group
while(javadummy) {
CONDITION350: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = DoneStatement;
if (! current0 .Name
.equals( "DoneStatement_A1") )
   if (javadummy) break  CONDITION350;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Comp --- JJ.M4
Comp = current1 ;
} //)) children level 1
};
// ***** begin condlist 351 (in cond 350) *****
CONDLIST351: // @@@ begin of alternative group
while(javadummy) {
CONDITION352: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = Comp;
if (! current0 .Name
.equals( "ComponentId_A1") )
   if (javadummy) break  CONDITION352;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 353 (in cond 352) *****
CONDLIST353: // @@@ begin of alternative group
while(javadummy) {
CONDITION354: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
// DECLARE for alternative Ref
JavaNode Ref= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ComponentOrDefaultReference_A1") )
   if (javadummy) break  CONDITION354;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 355 (in cond 354) *****
CONDLIST355: // @@@ begin of alternative group
while(javadummy) {
CONDITION356: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "VariableRef_A1") )
   if (javadummy) break  CONDITION356;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Ref --- JJ.M4
Ref = current1 ;
} //)) children level 1
};
// ***** begin condlist 357 (in cond 356) *****
CONDLIST357: // @@@ begin of alternative group
while(javadummy) {
CONDITION358: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Ref;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-VariableRef_A1_M2")
if (javadummy) break CONDITION358;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST357;
// $$$$$$$$ 
} // CONDITION358 // @@@ end of alternative
CONDITION359: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Ref;
if (current0.Name
!= "OneOf-VariableRef_A1_M2")
if (javadummy) break CONDITION359;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "component id a1 m2" )
,
Ref
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST357;
// $$$$$$$$ 
} // CONDITION359 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=357 N=356
if (javadummy) break CONDITION356;
} // CONDLIST357 @@@ end of alternative group
// *** CONTINUE ***
Code = 
NodeFactory.NewNode(
"stmt_done"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST355;
// $$$$$$$$ 
} // CONDITION356 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=355 N=354
if (javadummy) break CONDITION354;
} // CONDLIST355 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST353;
// $$$$$$$$ 
} // CONDITION354 // @@@ end of alternative
CONDITION360: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ComponentOrDefaultReference_A2") )
   if (javadummy) break  CONDITION360;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "component or default reference" )
,
X
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST353;
// $$$$$$$$ 
} // CONDITION360 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=353 N=352
if (javadummy) break CONDITION352;
} // CONDLIST353 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST351;
// $$$$$$$$ 
} // CONDITION352 // @@@ end of alternative
CONDITION361: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Comp;
if (! current0 .Name
.equals( "ComponentId_A2") )
   if (javadummy) break  CONDITION361;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "component id a2" )
,
Comp
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST351;
// $$$$$$$$ 
} // CONDITION361 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=351 N=350
if (javadummy) break CONDITION350;
} // CONDLIST351 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST349;
// $$$$$$$$ 
} // CONDITION350 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=349 N=348
if (javadummy) break CONDITION348;
} // CONDLIST349 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST347;
// $$$$$$$$ 
} // CONDITION348 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=347 N=346
if (javadummy) break CONDITION346;
} // CONDLIST347 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION346
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_DoneStatement");
}



public
static
void
Trafo_SetLocalVerdict(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc S6
JavaNode S6 = null;
// DECLARE for proc Code
JavaNode Code = null;
// DECLARE for proc Res
JavaNode Res = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc EXPR
JavaNode EXPR = null;
CONDITION362:
while(javadummy) {
// ***** begin condlist 363 (in cond 362) *****
CONDLIST363: // @@@ begin of alternative group
while(javadummy) {
CONDITION364: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to S6 --- JJ.M4
S6 = current0 ;
};
// ***** begin condlist 365 (in cond 364) *****
CONDLIST365: // @@@ begin of alternative group
while(javadummy) {
CONDITION366: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S6;
if (! current0 .Name
.equals( "SetLocalVerdict_A1") )
   if (javadummy) break  CONDITION366;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to EXPR --- JJ.M4
EXPR = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 367 (in cond 366) *****
CONDLIST367: // @@@ begin of alternative group
while(javadummy) {
CONDITION368: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (current0.Name
!= "NilOf-SetLocalVerdict_A1_M4")
if (javadummy) break CONDITION368;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST367;
// $$$$$$$$ 
} // CONDITION368 // @@@ end of alternative
CONDITION369: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (current0.Name
!= "SeqOf-SetLocalVerdict_A1_M4")
if (javadummy) break CONDITION369;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST367;
// $$$$$$$$ 
} // CONDITION369 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=367 N=366
if (javadummy) break CONDITION366;
} // CONDLIST367 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Trafo_SingleExpression
(
EXPR
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// ***** begin condlist 370 (in cond 366) *****
CONDLIST370: // @@@ begin of alternative group
while(javadummy) {
CONDITION371: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_verdict") )
   if (javadummy) break  CONDITION371;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST370;
// $$$$$$$$ 
} // CONDITION371 // @@@ end of alternative
CONDITION372: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(EXPR);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "verdict value required" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST370;
// $$$$$$$$ 
} // CONDITION372 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=370 N=366
if (javadummy) break CONDITION366;
} // CONDLIST370 @@@ end of alternative group
// *** CONTINUE ***
Code = 
NodeFactory.NewNode(
"stmt_verdict"
, new JavaNode [] {
Res
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST365;
// $$$$$$$$ 
} // CONDITION366 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=365 N=364
if (javadummy) break CONDITION364;
} // CONDLIST365 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST363;
// $$$$$$$$ 
} // CONDITION364 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=363 N=362
if (javadummy) break CONDITION362;
} // CONDLIST363 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION362
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_SetLocalVerdict");
}



public
static
void
Trafo_SUTStatements(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc S7
JavaNode S7 = null;
// DECLARE for proc QQQ
JavaNode QQQ = null;
// DECLARE for proc AT
JavaNode AT = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION373:
while(javadummy) {
// ***** begin condlist 374 (in cond 373) *****
CONDLIST374: // @@@ begin of alternative group
while(javadummy) {
CONDITION375: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to S7 --- JJ.M4
S7 = current0 ;
};
// ***** begin condlist 376 (in cond 375) *****
CONDLIST376: // @@@ begin of alternative group
while(javadummy) {
CONDITION377: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S7;
if (! current0 .Name
.equals( "SUTStatements_A1") )
   if (javadummy) break  CONDITION377;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to AT --- JJ.M4
AT = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to QQQ --- JJ.M4
QQQ = current1 ;
} //)) children level 1
};
// ***** begin condlist 378 (in cond 377) *****
CONDLIST378: // @@@ begin of alternative group
while(javadummy) {
CONDITION379: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative FT
JavaNode FT= null;
// DECLARE for alternative FT2
JavaNode FT2= null;
// DECLARE for alternative Str
JavaNode Str= null;
{
JavaNode current0 = AT;
if (! current0 .Name
.equals( "ActionText_A1") )
   if (javadummy) break  CONDITION379;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FT --- JJ.M4
FT = current1 ;
} //)) children level 1
};
// ***** begin condlist 380 (in cond 379) *****
CONDLIST380: // @@@ begin of alternative group
while(javadummy) {
CONDITION381: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FT;
if (! current0 .Name
.equals( "FreeText_A1") )
   if (javadummy) break  CONDITION381;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FT2 --- JJ.M4
FT2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 382 (in cond 381) *****
CONDLIST382: // @@@ begin of alternative group
while(javadummy) {
CONDITION383: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FT2;
if (! current0 .Name
.equals( "FREETEXT_A1") )
   if (javadummy) break  CONDITION383;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Str --- JJ.M4
Str = current1 ;
} //)) children level 1
};
Code = 
NodeFactory.NewNode(
"stmt_action"
, new JavaNode [] {
Str
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST382;
// $$$$$$$$ 
} // CONDITION383 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=382 N=381
if (javadummy) break CONDITION381;
} // CONDLIST382 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST380;
// $$$$$$$$ 
} // CONDITION381 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=380 N=379
if (javadummy) break CONDITION379;
} // CONDLIST380 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST378;
// $$$$$$$$ 
} // CONDITION379 // @@@ end of alternative
CONDITION384: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = AT;
if (! current0 .Name
.equals( "ActionText_A2") )
   if (javadummy) break  CONDITION384;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "action text a2" )
,
AT
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST378;
// $$$$$$$$ 
} // CONDITION384 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=378 N=377
if (javadummy) break CONDITION377;
} // CONDLIST378 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 385 (in cond 377) *****
CONDLIST385: // @@@ begin of alternative group
while(javadummy) {
CONDITION386: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = QQQ;
if (current0.Name
!= "NilOf-SUTStatements_A1_M4")
if (javadummy) break CONDITION386;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST385;
// $$$$$$$$ 
} // CONDITION386 // @@@ end of alternative
CONDITION387: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = QQQ;
if (current0.Name
!= "SeqOf-SUTStatements_A1_M4")
if (javadummy) break CONDITION387;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "action text extended" )
,
QQQ
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST385;
// $$$$$$$$ 
} // CONDITION387 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=385 N=377
if (javadummy) break CONDITION377;
} // CONDLIST385 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST376;
// $$$$$$$$ 
} // CONDITION377 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=376 N=375
if (javadummy) break CONDITION375;
} // CONDLIST376 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST374;
// $$$$$$$$ 
} // CONDITION375 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=374 N=373
if (javadummy) break CONDITION373;
} // CONDLIST374 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION373
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_SUTStatements");
}



public
static
void
Trafo_LogStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc E
JavaNode E = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
CONDITION388:
while(javadummy) {
// ***** begin condlist 389 (in cond 388) *****
CONDLIST389: // @@@ begin of alternative group
while(javadummy) {
CONDITION390: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 391 (in cond 390) *****
CONDLIST391: // @@@ begin of alternative group
while(javadummy) {
CONDITION392: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "LogStatement_A1") )
   if (javadummy) break  CONDITION392;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_LogItem
(
X1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to E --- JJ.M4
E = current0 ;
}
// ***** begin condlist 393 (in cond 392) *****
CONDLIST393: // @@@ begin of alternative group
while(javadummy) {
CONDITION394: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
!= "NilOf-LogStatement_A1_M4")
if (javadummy) break CONDITION394;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST393;
// $$$$$$$$ 
} // CONDITION394 // @@@ end of alternative
CONDITION395: // @@@ begin of alternative
while(javadummy) {
YyProcs.
NotCovered
(
new JavaStringValue( "multiple items in log" )
,
X2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST393;
// $$$$$$$$ 
} // CONDITION395 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=393 N=392
if (javadummy) break CONDITION392;
} // CONDLIST393 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST391;
// $$$$$$$$ 
} // CONDITION392 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=391 N=390
if (javadummy) break CONDITION390;
} // CONDLIST391 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
NodeFactory.NewNode(
"stmt_log"
, new JavaNode [] {
E
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST389;
// $$$$$$$$ 
} // CONDITION390 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=389 N=388
if (javadummy) break CONDITION388;
} // CONDLIST389 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION388
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_LogStatement");
}



public
static
void
Trafo_LogItem(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc RES
JavaNode RES = null;
CONDITION396:
while(javadummy) {
// ***** begin condlist 397 (in cond 396) *****
CONDLIST397: // @@@ begin of alternative group
while(javadummy) {
CONDITION398: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 399 (in cond 398) *****
CONDLIST399: // @@@ begin of alternative group
while(javadummy) {
CONDITION400: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Text
JavaNode Text= null;
// DECLARE for alternative FT
JavaNode FT= null;
// DECLARE for alternative Str
JavaNode Str= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "LogItem_A1") )
   if (javadummy) break  CONDITION400;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Text --- JJ.M4
Text = current1 ;
} //)) children level 1
};
// ***** begin condlist 401 (in cond 400) *****
CONDLIST401: // @@@ begin of alternative group
while(javadummy) {
CONDITION402: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Text;
if (! current0 .Name
.equals( "FreeText_A1") )
   if (javadummy) break  CONDITION402;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FT --- JJ.M4
FT = current1 ;
} //)) children level 1
};
// ***** begin condlist 403 (in cond 402) *****
CONDLIST403: // @@@ begin of alternative group
while(javadummy) {
CONDITION404: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FT;
if (! current0 .Name
.equals( "FREETEXT_A1") )
   if (javadummy) break  CONDITION404;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Str --- JJ.M4
Str = current1 ;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"expr_cstring"
, new JavaNode [] {
Str
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST403;
// $$$$$$$$ 
} // CONDITION404 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=403 N=402
if (javadummy) break CONDITION402;
} // CONDLIST403 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST401;
// $$$$$$$$ 
} // CONDITION402 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=401 N=400
if (javadummy) break CONDITION400;
} // CONDLIST401 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST399;
// $$$$$$$$ 
} // CONDITION400 // @@@ end of alternative
CONDITION405: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
// DECLARE for alternative Templ
JavaNode Templ= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "LogItem_A2") )
   if (javadummy) break  CONDITION405;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Templ --- JJ.M4
Templ = current1 ;
} //)) children level 1
};
YyProcs.
primaTrafo_InLineTemplate
(
Templ
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST399;
// $$$$$$$$ 
} // CONDITION405 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=399 N=398
if (javadummy) break CONDITION398;
} // CONDLIST399 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST397;
// $$$$$$$$ 
} // CONDITION398 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=397 N=396
if (javadummy) break CONDITION396;
} // CONDLIST397 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION396
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_LogItem");
}



public
static
void
Stmt_Loop(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Loop
JavaNode Loop = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION406:
while(javadummy) {
// ***** begin condlist 407 (in cond 406) *****
CONDLIST407: // @@@ begin of alternative group
while(javadummy) {
CONDITION408: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Loop --- JJ.M4
Loop = current0 ;
};
// ***** begin condlist 409 (in cond 408) *****
CONDLIST409: // @@@ begin of alternative group
while(javadummy) {
CONDITION410: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative For
JavaNode For= null;
{
JavaNode current0 = Loop;
if (! current0 .Name
.equals( "LoopConstruct_A1") )
   if (javadummy) break  CONDITION410;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to For --- JJ.M4
For = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "for statement" )
,
For
);
Code = 
NodeFactory.NewNode(
"stmt_error"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST409;
// $$$$$$$$ 
} // CONDITION410 // @@@ end of alternative
CONDITION411: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ResBlock
JavaNode ResBlock= null;
// DECLARE for alternative Res
JavaNode Res= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
// DECLARE for alternative Expr
JavaNode Expr= null;
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
// DECLARE for alternative While
JavaNode While= null;
{
JavaNode current0 = Loop;
if (! current0 .Name
.equals( "LoopConstruct_A2") )
   if (javadummy) break  CONDITION411;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to While --- JJ.M4
While = current1 ;
} //)) children level 1
};
{
JavaNode current0 = While;
if (! current0 .Name
.equals( "WhileStatement_A1") )
   if (javadummy) break  CONDITION411;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BooleanExpression_A1") )
   if (javadummy) break  CONDITION411;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Expr --- JJ.M4
Expr = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SingleExpression
(
Expr
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// ***** begin condlist 412 (in cond 411) *****
CONDLIST412: // @@@ begin of alternative group
while(javadummy) {
CONDITION413: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_boolean") )
   if (javadummy) break  CONDITION413;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST412;
// $$$$$$$$ 
} // CONDITION413 // @@@ end of alternative
CONDITION414: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Expr);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "boolean expression required" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST412;
// $$$$$$$$ 
} // CONDITION414 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=412 N=411
if (javadummy) break CONDITION411;
} // CONDLIST412 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Trafo_StatementBlock
(
X2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ResBlock --- JJ.M4
ResBlock = current0 ;
}
Code = 
NodeFactory.NewNode(
"stmt_while"
, new JavaNode [] {
Res
,
ResBlock
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST409;
// $$$$$$$$ 
} // CONDITION411 // @@@ end of alternative
CONDITION415: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative DoWhile
JavaNode DoWhile= null;
{
JavaNode current0 = Loop;
if (! current0 .Name
.equals( "LoopConstruct_A3") )
   if (javadummy) break  CONDITION415;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to DoWhile --- JJ.M4
DoWhile = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "do while statement" )
,
DoWhile
);
Code = 
NodeFactory.NewNode(
"stmt_error"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST409;
// $$$$$$$$ 
} // CONDITION415 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=409 N=408
if (javadummy) break CONDITION408;
} // CONDLIST409 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST407;
// $$$$$$$$ 
} // CONDITION408 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=407 N=406
if (javadummy) break CONDITION406;
} // CONDLIST407 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION406
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_Loop");
}



public
static
void
Stmt_Conditional(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Conditional
JavaNode Conditional = null;
// DECLARE for proc Code
JavaNode Code = null;
// DECLARE for proc CodeElsifs
JavaNode CodeElsifs = null;
// DECLARE for proc CodeThenPart
JavaNode CodeThenPart = null;
// DECLARE for proc ElsePart
JavaNode ElsePart = null;
// DECLARE for proc Elsifs
JavaNode Elsifs = null;
// DECLARE for proc ThenPart
JavaNode ThenPart = null;
// DECLARE for proc Condition
JavaNode Condition = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc CodeCondition
JavaNode CodeCondition = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc Expr
JavaNode Expr = null;
// DECLARE for proc CodeElsePart
JavaNode CodeElsePart = null;
CONDITION416:
while(javadummy) {
// ***** begin condlist 417 (in cond 416) *****
CONDLIST417: // @@@ begin of alternative group
while(javadummy) {
CONDITION418: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Conditional --- JJ.M4
Conditional = current0 ;
};
// ***** begin condlist 419 (in cond 418) *****
CONDLIST419: // @@@ begin of alternative group
while(javadummy) {
CONDITION420: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Conditional;
if (! current0 .Name
.equals( "ConditionalConstruct_A1") )
   if (javadummy) break  CONDITION420;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Condition --- JJ.M4
Condition = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to ThenPart --- JJ.M4
ThenPart = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Elsifs --- JJ.M4
Elsifs = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to ElsePart --- JJ.M4
ElsePart = current1 ;
} //)) children level 1
};
// ***** begin condlist 421 (in cond 420) *****
CONDLIST421: // @@@ begin of alternative group
while(javadummy) {
CONDITION422: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Condition;
if (! current0 .Name
.equals( "BooleanExpression_A1") )
   if (javadummy) break  CONDITION422;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Expr --- JJ.M4
Expr = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SingleExpression
(
Expr
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to CodeCondition --- JJ.M4
CodeCondition = current0 ;
}
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Expr);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
CheckBool
(
Tp
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST421;
// $$$$$$$$ 
} // CONDITION422 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=421 N=420
if (javadummy) break CONDITION420;
} // CONDLIST421 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Trafo_StatementBlock
(
ThenPart
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeThenPart --- JJ.M4
CodeThenPart = current0 ;
}
YyProcs.
Trafo_Elsifs
(
Elsifs
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeElsifs --- JJ.M4
CodeElsifs = current0 ;
}
// ***** begin condlist 423 (in cond 420) *****
CONDLIST423: // @@@ begin of alternative group
while(javadummy) {
CONDITION424: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Else
JavaNode Else= null;
// DECLARE for alternative Else2
JavaNode Else2= null;
// DECLARE for alternative Block
JavaNode Block= null;
{
JavaNode current0 = ElsePart;
if (current0.Name
!= "OneOf-ConditionalConstruct_A1_M7")
if (javadummy) break CONDITION424;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to Else --- JJ.M4
Else = current1 ;
} //)) children level 1
};
// ***** begin condlist 425 (in cond 424) *****
CONDLIST425: // @@@ begin of alternative group
while(javadummy) {
CONDITION426: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Else;
if (! current0 .Name
.equals( "ConditionalConstruct_A1_M7_A1") )
   if (javadummy) break  CONDITION426;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Else2 --- JJ.M4
Else2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 427 (in cond 426) *****
CONDLIST427: // @@@ begin of alternative group
while(javadummy) {
CONDITION428: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Else2;
if (! current0 .Name
.equals( "ElseClause_A1") )
   if (javadummy) break  CONDITION428;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Block --- JJ.M4
Block = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_StatementBlock
(
Block
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeElsePart --- JJ.M4
CodeElsePart = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST427;
// $$$$$$$$ 
} // CONDITION428 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=427 N=426
if (javadummy) break CONDITION426;
} // CONDLIST427 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST425;
// $$$$$$$$ 
} // CONDITION426 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=425 N=424
if (javadummy) break CONDITION424;
} // CONDLIST425 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST423;
// $$$$$$$$ 
} // CONDITION424 // @@@ end of alternative
CONDITION429: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ElsePart;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ConditionalConstruct_A1_M7")
if (javadummy) break CONDITION429;
{ //(( children level 1
} //)) children level 1
};
CodeElsePart = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST423;
// $$$$$$$$ 
} // CONDITION429 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=423 N=420
if (javadummy) break CONDITION420;
} // CONDLIST423 @@@ end of alternative group
// *** CONTINUE ***
Code = 
NodeFactory.NewNode(
"stmt_if"
, new JavaNode [] {
CodeCondition
,
CodeThenPart
,
CodeElsifs
,
CodeElsePart
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST419;
// $$$$$$$$ 
} // CONDITION420 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=419 N=418
if (javadummy) break CONDITION418;
} // CONDLIST419 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST417;
// $$$$$$$$ 
} // CONDITION418 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=417 N=416
if (javadummy) break CONDITION416;
} // CONDLIST417 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION416
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_Conditional");
}



public
static
void
Trafo_Elsifs(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
CONDITION430:
while(javadummy) {
// ***** begin condlist 431 (in cond 430) *****
CONDLIST431: // @@@ begin of alternative group
while(javadummy) {
CONDITION432: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative CodeTl
JavaNode CodeTl= null;
// DECLARE for alternative Tl
JavaNode Tl= null;
// DECLARE for alternative Hd
JavaNode Hd= null;
// DECLARE for alternative ElsifCl
JavaNode ElsifCl= null;
// DECLARE for alternative Block
JavaNode Block= null;
// DECLARE for alternative Cond
JavaNode Cond= null;
// DECLARE for alternative CodeHd
JavaNode CodeHd= null;
// DECLARE for alternative ThenPartCode
JavaNode ThenPartCode= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative CodeCondition
JavaNode CodeCondition= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
// DECLARE for alternative Expr
JavaNode Expr= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-ConditionalConstruct_A1_M6")
if (javadummy) break CONDITION432;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Hd --- JJ.M4
Hd = current1 ;
current1 = current0.Child1[1];
//assign current1 to Tl --- JJ.M4
Tl = current1 ;
} //)) children level 1
};
// ***** begin condlist 433 (in cond 432) *****
CONDLIST433: // @@@ begin of alternative group
while(javadummy) {
CONDITION434: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Hd;
if (! current0 .Name
.equals( "ConditionalConstruct_A1_M6_A1") )
   if (javadummy) break  CONDITION434;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ElsifCl --- JJ.M4
ElsifCl = current1 ;
} //)) children level 1
};
// ***** begin condlist 435 (in cond 434) *****
CONDLIST435: // @@@ begin of alternative group
while(javadummy) {
CONDITION436: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ElsifCl;
if (! current0 .Name
.equals( "ElseIfClause_A1") )
   if (javadummy) break  CONDITION436;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Cond --- JJ.M4
Cond = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Block --- JJ.M4
Block = current1 ;
} //)) children level 1
};
// ***** begin condlist 437 (in cond 436) *****
CONDLIST437: // @@@ begin of alternative group
while(javadummy) {
CONDITION438: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Cond;
if (! current0 .Name
.equals( "BooleanExpression_A1") )
   if (javadummy) break  CONDITION438;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Expr --- JJ.M4
Expr = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SingleExpression
(
Expr
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to CodeCondition --- JJ.M4
CodeCondition = current0 ;
}
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Expr);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
CheckBool
(
Tp
,
Pos
);
YyProcs.
Trafo_StatementBlock
(
Block
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ThenPartCode --- JJ.M4
ThenPartCode = current0 ;
}
CodeHd = 
NodeFactory.NewNode(
"elseif"
, new JavaNode [] {
CodeCondition
,
ThenPartCode
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST437;
// $$$$$$$$ 
} // CONDITION438 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=437 N=436
if (javadummy) break CONDITION436;
} // CONDLIST437 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST435;
// $$$$$$$$ 
} // CONDITION436 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=435 N=434
if (javadummy) break CONDITION434;
} // CONDLIST435 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST433;
// $$$$$$$$ 
} // CONDITION434 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=433 N=432
if (javadummy) break CONDITION432;
} // CONDLIST433 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Trafo_Elsifs
(
Tl
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeTl --- JJ.M4
CodeTl = current0 ;
}
yy_outparam_0 = 
NodeFactory.NewNode (
"SeqOf-ELSEIF"
, new JavaNode [] {
CodeHd
,
CodeTl
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST431;
// $$$$$$$$ 
} // CONDITION432 // @@@ end of alternative
CONDITION439: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-ConditionalConstruct_A1_M6")
if (javadummy) break CONDITION439;
};
yy_outparam_0 = 
NodeFactory.NewNode (
"NilOf-ELSEIF"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST431;
// $$$$$$$$ 
} // CONDITION439 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=431 N=430
if (javadummy) break CONDITION430;
} // CONDLIST431 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION430
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_Elsifs");
}



public
static
void
CheckBool(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION440:
while(javadummy) {
// ***** begin condlist 441 (in cond 440) *****
CONDLIST441: // @@@ begin of alternative group
while(javadummy) {
CONDITION442: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
// ***** begin condlist 443 (in cond 442) *****
CONDLIST443: // @@@ begin of alternative group
while(javadummy) {
CONDITION444: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_boolean") )
   if (javadummy) break  CONDITION444;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST443;
// $$$$$$$$ 
} // CONDITION444 // @@@ end of alternative
CONDITION445: // @@@ begin of alternative
while(javadummy) {
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "boolean expected" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST443;
// $$$$$$$$ 
} // CONDITION445 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=443 N=442
if (javadummy) break CONDITION442;
} // CONDLIST443 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST441;
// $$$$$$$$ 
} // CONDITION442 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=441 N=440
if (javadummy) break CONDITION440;
} // CONDLIST441 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION440
// failed:
JavaLib.rtsAllAlternativesFailed("CheckBool");
}



public
static
void
Stmt_TestcaseInstance(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc ZZ11
JavaNode ZZ11 = null;
// DECLARE for proc ZZ112
JavaNode ZZ112 = null;
// DECLARE for proc ZZ111
JavaNode ZZ111 = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION446:
while(javadummy) {
// ***** begin condlist 447 (in cond 446) *****
CONDLIST447: // @@@ begin of alternative group
while(javadummy) {
CONDITION448: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to ZZ11 --- JJ.M4
ZZ11 = current0 ;
};
// ***** begin condlist 449 (in cond 448) *****
CONDLIST449: // @@@ begin of alternative group
while(javadummy) {
CONDITION450: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ZZ11;
if (! current0 .Name
.equals( "TestcaseInstance_A1") )
   if (javadummy) break  CONDITION450;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ZZ111 --- JJ.M4
ZZ111 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to ZZ112 --- JJ.M4
ZZ112 = current1 ;
} //)) children level 1
};
// ***** begin condlist 451 (in cond 450) *****
CONDLIST451: // @@@ begin of alternative group
while(javadummy) {
CONDITION452: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X3
JavaNode X3= null;
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
// DECLARE for alternative Id
JavaNode Id= null;
// DECLARE for alternative X11
JavaNode X11= null;
{
JavaNode current0 = ZZ111;
if (! current0 .Name
.equals( "TestcaseInstance_A1_M3_A1") )
   if (javadummy) break  CONDITION452;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
} //)) children level 1
};
// ***** begin condlist 453 (in cond 452) *****
CONDLIST453: // @@@ begin of alternative group
while(javadummy) {
CONDITION454: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ExtendedIdentifier_A1") )
   if (javadummy) break  CONDITION454;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X11 --- JJ.M4
X11 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST453;
// $$$$$$$$ 
} // CONDITION454 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=453 N=452
if (javadummy) break CONDITION452;
} // CONDLIST453 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 455 (in cond 452) *****
CONDLIST455: // @@@ begin of alternative group
while(javadummy) {
CONDITION456: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X11;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ExtendedIdentifier_A1_M1")
if (javadummy) break CONDITION456;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST455;
// $$$$$$$$ 
} // CONDITION456 // @@@ end of alternative
CONDITION457: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X11;
if (current0.Name
!= "OneOf-ExtendedIdentifier_A1_M1")
if (javadummy) break CONDITION457;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "TestCase extended identifier a1 m1" )
,
X11
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST455;
// $$$$$$$$ 
} // CONDITION457 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=455 N=452
if (javadummy) break CONDITION452;
} // CONDLIST455 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 458 (in cond 452) *****
CONDLIST458: // @@@ begin of alternative group
while(javadummy) {
CONDITION459: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-TestcaseInstance_A1_M3_A1_M2")
if (javadummy) break CONDITION459;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST458;
// $$$$$$$$ 
} // CONDITION459 // @@@ end of alternative
CONDITION460: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
!= "OneOf-TestcaseInstance_A1_M3_A1_M2")
if (javadummy) break CONDITION460;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "TestCase extended identifier a1 m3 a1 m2" )
,
X11
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST458;
// $$$$$$$$ 
} // CONDITION460 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=458 N=452
if (javadummy) break CONDITION452;
} // CONDLIST458 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 461 (in cond 452) *****
CONDLIST461: // @@@ begin of alternative group
while(javadummy) {
CONDITION462: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-TestcaseInstance_A1_M3_A1_M4")
if (javadummy) break CONDITION462;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST461;
// $$$$$$$$ 
} // CONDITION462 // @@@ end of alternative
CONDITION463: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X3;
if (current0.Name
!= "OneOf-TestcaseInstance_A1_M3_A1_M4")
if (javadummy) break CONDITION463;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "TestCase extended identifier a1 m3 a1 m4" )
,
X11
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST461;
// $$$$$$$$ 
} // CONDITION463 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=461 N=452
if (javadummy) break CONDITION452;
} // CONDLIST461 @@@ end of alternative group
// *** CONTINUE ***
Code = 
NodeFactory.NewNode(
"stmt_testcaseinst"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST451;
// $$$$$$$$ 
} // CONDITION452 // @@@ end of alternative
CONDITION464: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ZZ111;
if (! current0 .Name
.equals( "TestcaseInstance_A1_M3_A2") )
   if (javadummy) break  CONDITION464;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "TestCase extended identifier a1 m3 a2" )
,
ZZ111
);
Code = 
NodeFactory.NewNode(
"stmt_testcaseinst"
, new JavaNode [] {
new JavaStringValue( "" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST451;
// $$$$$$$$ 
} // CONDITION464 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=451 N=450
if (javadummy) break CONDITION450;
} // CONDLIST451 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 465 (in cond 450) *****
CONDLIST465: // @@@ begin of alternative group
while(javadummy) {
CONDITION466: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ZZ112;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-TestcaseInstance_A1_M4")
if (javadummy) break CONDITION466;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST465;
// $$$$$$$$ 
} // CONDITION466 // @@@ end of alternative
CONDITION467: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ZZ112;
if (current0.Name
!= "OneOf-TestcaseInstance_A1_M4")
if (javadummy) break CONDITION467;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "TestCase extended identifier a1 m4" )
,
ZZ112
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST465;
// $$$$$$$$ 
} // CONDITION467 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=465 N=450
if (javadummy) break CONDITION450;
} // CONDLIST465 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST449;
// $$$$$$$$ 
} // CONDITION450 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=449 N=448
if (javadummy) break CONDITION448;
} // CONDLIST449 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST447;
// $$$$$$$$ 
} // CONDITION448 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=447 N=446
if (javadummy) break CONDITION446;
} // CONDLIST447 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION446
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_TestcaseInstance");
}



public
static
void
Stmt_FunctionInstance(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X11
JavaNode X11 = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION468:
while(javadummy) {
// ***** begin condlist 469 (in cond 468) *****
CONDLIST469: // @@@ begin of alternative group
while(javadummy) {
CONDITION470: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X11 --- JJ.M4
X11 = current0 ;
};
// ***** begin condlist 471 (in cond 470) *****
CONDLIST471: // @@@ begin of alternative group
while(javadummy) {
CONDITION472: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative X113
JavaNode X113= null;
// DECLARE for alternative X112
JavaNode X112= null;
// DECLARE for alternative FR
JavaNode FR= null;
// DECLARE for alternative Fun
JavaNode Fun= null;
// DECLARE for alternative X111
JavaNode X111= null;
{
JavaNode current0 = X11;
if (! current0 .Name
.equals( "FunctionInstance_A1") )
   if (javadummy) break  CONDITION472;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FR --- JJ.M4
FR = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X112 --- JJ.M4
X112 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X113 --- JJ.M4
X113 = current1 ;
} //)) children level 1
};
// ***** begin condlist 473 (in cond 472) *****
CONDLIST473: // @@@ begin of alternative group
while(javadummy) {
CONDITION474: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FR;
if (! current0 .Name
.equals( "FunctionRef_A1") )
   if (javadummy) break  CONDITION474;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X111 --- JJ.M4
X111 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Fun --- JJ.M4
Fun = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST473;
// $$$$$$$$ 
} // CONDITION474 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=473 N=472
if (javadummy) break CONDITION472;
} // CONDLIST473 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 475 (in cond 472) *****
CONDLIST475: // @@@ begin of alternative group
while(javadummy) {
CONDITION476: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X111;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionRef_A1_M1")
if (javadummy) break CONDITION476;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST475;
// $$$$$$$$ 
} // CONDITION476 // @@@ end of alternative
CONDITION477: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X111;
if (current0.Name
!= "OneOf-FunctionRef_A1_M1")
if (javadummy) break CONDITION477;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Functionref a1 m1" )
,
X111
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST475;
// $$$$$$$$ 
} // CONDITION477 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=475 N=472
if (javadummy) break CONDITION472;
} // CONDLIST475 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 478 (in cond 472) *****
CONDLIST478: // @@@ begin of alternative group
while(javadummy) {
CONDITION479: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X112;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionInstance_A1_M2")
if (javadummy) break CONDITION479;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST478;
// $$$$$$$$ 
} // CONDITION479 // @@@ end of alternative
CONDITION480: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X112;
if (current0.Name
!= "OneOf-FunctionInstance_A1_M2")
if (javadummy) break CONDITION480;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Functionref a1 m2" )
,
X112
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST478;
// $$$$$$$$ 
} // CONDITION480 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=478 N=472
if (javadummy) break CONDITION472;
} // CONDLIST478 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 481 (in cond 472) *****
CONDLIST481: // @@@ begin of alternative group
while(javadummy) {
CONDITION482: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X113;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionInstance_A1_M4")
if (javadummy) break CONDITION482;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST481;
// $$$$$$$$ 
} // CONDITION482 // @@@ end of alternative
CONDITION483: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X113;
if (current0.Name
!= "OneOf-FunctionInstance_A1_M4")
if (javadummy) break CONDITION483;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Functionref a1 m4" )
,
X113
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST481;
// $$$$$$$$ 
} // CONDITION483 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=481 N=472
if (javadummy) break CONDITION472;
} // CONDLIST481 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Fun);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
GloballyDefined
(
Fun
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 484 (in cond 472) *****
CONDLIST484: // @@@ begin of alternative group
while(javadummy) {
CONDITION485: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative CallerRunsOnC
JavaNode CallerRunsOnC= null;
// DECLARE for alternative Block
JavaNode Block= null;
// DECLARE for alternative RunsOnC
JavaNode RunsOnC= null;
// DECLARE for alternative Val
JavaNode Val= null;
// DECLARE for alternative RefNormalizedFunction
JavaNode RefNormalizedFunction= null;
// DECLARE for alternative D
JavaNode D= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "functiondefinition") )
   if (javadummy) break  CONDITION485;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D --- JJ.M4
D = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedFunction --- JJ.M4
RefNormalizedFunction = current1 ;
} //)) children level 1
};
Val = JavaLib.rtsBoundToKey(RefNormalizedFunction);
{
JavaNode current0 = Val;
if (! current0 .Name
.equals( "normalizedfunction") )
   if (javadummy) break  CONDITION485;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RunsOnC --- JJ.M4
RunsOnC = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Block --- JJ.M4
Block = current1 ;
} //)) children level 1
};
JavaLib.rtsCheckDefined(ActiveRunsOnComponent,"/line,offset,length,file=/ 592 19561 21 Stmt_Div.g");
CallerRunsOnC = ActiveRunsOnComponent;
// ***** begin condlist 486 (in cond 485) *****
CONDLIST486: // @@@ begin of alternative group
while(javadummy) {
CONDITION487: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = RunsOnC;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"(none)"))
   if (javadummy) break  CONDITION487;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST486;
// $$$$$$$$ 
} // CONDITION487 // @@@ end of alternative
CONDITION488: // @@@ begin of alternative
while(javadummy) {
{
if (! JavaLib.rtsEqualString(
CallerRunsOnC
,
RunsOnC
)
)
   if (javadummy) break  CONDITION488;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST486;
// $$$$$$$$ 
} // CONDITION488 // @@@ end of alternative
CONDITION489: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "caller must run on '" )
,
RunsOnC
,
new JavaStringValue( "'" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST486;
// $$$$$$$$ 
} // CONDITION489 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=486 N=485
if (javadummy) break CONDITION485;
} // CONDLIST486 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST484;
// $$$$$$$$ 
} // CONDITION485 // @@@ end of alternative
CONDITION490: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Fun
,
new JavaStringValue( "' not defined as function" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST484;
// $$$$$$$$ 
} // CONDITION490 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=484 N=472
if (javadummy) break CONDITION472;
} // CONDLIST484 @@@ end of alternative group
// *** CONTINUE ***
Code = 
NodeFactory.NewNode(
"stmt_call"
, new JavaNode [] {
Fun
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST471;
// $$$$$$$$ 
} // CONDITION472 // @@@ end of alternative
CONDITION491: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X11;
if (! current0 .Name
.equals( "FunctionInstance_A2") )
   if (javadummy) break  CONDITION491;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "/call 2/" )
,
X11
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST471;
// $$$$$$$$ 
} // CONDITION491 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=471 N=470
if (javadummy) break CONDITION470;
} // CONDLIST471 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST469;
// $$$$$$$$ 
} // CONDITION470 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=469 N=468
if (javadummy) break CONDITION468;
} // CONDLIST469 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION468
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_FunctionInstance");
}



public
static
void
Stmt_MapStatement_A1(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc MapStatement
JavaNode MapStatement = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc PORTCODE2
JavaNode PORTCODE2 = null;
// DECLARE for proc PORTCODE1
JavaNode PORTCODE1 = null;
// DECLARE for proc X3
JavaNode X3 = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION492:
while(javadummy) {
// ***** begin condlist 493 (in cond 492) *****
CONDLIST493: // @@@ begin of alternative group
while(javadummy) {
CONDITION494: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to MapStatement --- JJ.M4
MapStatement = current0 ;
};
// ***** begin condlist 495 (in cond 494) *****
CONDLIST495: // @@@ begin of alternative group
while(javadummy) {
CONDITION496: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MapStatement;
if (! current0 .Name
.equals( "MapStatement_A1") )
   if (javadummy) break  CONDITION496;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
} //)) children level 1
};
YyProcs.
SingleConnection
(
X1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to PORTCODE1 --- JJ.M4
PORTCODE1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to PORTCODE2 --- JJ.M4
PORTCODE2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(MapStatement);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
// ***** begin condlist 497 (in cond 496) *****
CONDLIST497: // @@@ begin of alternative group
while(javadummy) {
CONDITION498: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PORTCODE1;
if (! current0 .Name
.equals( "expr_compportref") )
   if (javadummy) break  CONDITION498;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
{
JavaNode current0 = PORTCODE2;
if (! current0 .Name
.equals( "expr_systemc_port") )
   if (javadummy) break  CONDITION498;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
Code = 
NodeFactory.NewNode(
"stmt_map"
, new JavaNode [] {
PORTCODE1
,
PORTCODE2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST497;
// $$$$$$$$ 
} // CONDITION498 // @@@ end of alternative
CONDITION499: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PORTCODE1;
if (! current0 .Name
.equals( "expr_systemc_port") )
   if (javadummy) break  CONDITION499;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
{
JavaNode current0 = PORTCODE2;
if (! current0 .Name
.equals( "expr_compportref") )
   if (javadummy) break  CONDITION499;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
Code = 
NodeFactory.NewNode(
"stmt_map"
, new JavaNode [] {
PORTCODE2
,
PORTCODE1
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST497;
// $$$$$$$$ 
} // CONDITION499 // @@@ end of alternative
CONDITION500: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PORTCODE1;
if (! current0 .Name
.equals( "expr_systemc_port") )
   if (javadummy) break  CONDITION500;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
{
JavaNode current0 = PORTCODE2;
if (! current0 .Name
.equals( "expr_systemc_port") )
   if (javadummy) break  CONDITION500;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "Cannot map system port onto system port" )
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST497;
// $$$$$$$$ 
} // CONDITION500 // @@@ end of alternative
CONDITION501: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PORTCODE1;
if (! current0 .Name
.equals( "expr_compportref") )
   if (javadummy) break  CONDITION501;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
{
JavaNode current0 = PORTCODE2;
if (! current0 .Name
.equals( "expr_compportref") )
   if (javadummy) break  CONDITION501;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "Cannot map component port onto component port" )
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST497;
// $$$$$$$$ 
} // CONDITION501 // @@@ end of alternative
CONDITION502: // @@@ begin of alternative
while(javadummy) {
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "One of the ports must a system port" )
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST497;
// $$$$$$$$ 
} // CONDITION502 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=497 N=496
if (javadummy) break CONDITION496;
} // CONDLIST497 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 503 (in cond 496) *****
CONDLIST503: // @@@ begin of alternative group
while(javadummy) {
CONDITION504: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-MapStatement_A1_M3")
if (javadummy) break CONDITION504;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST503;
// $$$$$$$$ 
} // CONDITION504 // @@@ end of alternative
CONDITION505: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
!= "OneOf-MapStatement_A1_M3")
if (javadummy) break CONDITION505;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of map" )
,
X2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST503;
// $$$$$$$$ 
} // CONDITION505 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=503 N=496
if (javadummy) break CONDITION496;
} // CONDLIST503 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 506 (in cond 496) *****
CONDLIST506: // @@@ begin of alternative group
while(javadummy) {
CONDITION507: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-MapStatement_A1_M4")
if (javadummy) break CONDITION507;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST506;
// $$$$$$$$ 
} // CONDITION507 // @@@ end of alternative
CONDITION508: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X3;
if (current0.Name
!= "OneOf-MapStatement_A1_M4")
if (javadummy) break CONDITION508;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of map" )
,
X3
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST506;
// $$$$$$$$ 
} // CONDITION508 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=506 N=496
if (javadummy) break CONDITION496;
} // CONDLIST506 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST495;
// $$$$$$$$ 
} // CONDITION496 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=495 N=494
if (javadummy) break CONDITION494;
} // CONDLIST495 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST493;
// $$$$$$$$ 
} // CONDITION494 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=493 N=492
if (javadummy) break CONDITION492;
} // CONDLIST493 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION492
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_MapStatement_A1");
}



public
static
void
Stmt_UnmapStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc UnmapStatement
JavaNode UnmapStatement = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION509:
while(javadummy) {
// ***** begin condlist 510 (in cond 509) *****
CONDLIST510: // @@@ begin of alternative group
while(javadummy) {
CONDITION511: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to UnmapStatement --- JJ.M4
UnmapStatement = current0 ;
};
// ***** begin condlist 512 (in cond 511) *****
CONDLIST512: // @@@ begin of alternative group
while(javadummy) {
CONDITION513: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = UnmapStatement;
if (! current0 .Name
.equals( "UnmapStatement_A1") )
   if (javadummy) break  CONDITION513;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 514 (in cond 513) *****
CONDLIST514: // @@@ begin of alternative group
while(javadummy) {
CONDITION515: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = X;
if (current0.Name
!= "OneOf-UnmapStatement_A1_M2")
if (javadummy) break CONDITION515;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 516 (in cond 515) *****
CONDLIST516: // @@@ begin of alternative group
while(javadummy) {
CONDITION517: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative PORTCODE2
JavaNode PORTCODE2= null;
// DECLARE for alternative PORTCODE1
JavaNode PORTCODE1= null;
// DECLARE for alternative X12
JavaNode X12= null;
// DECLARE for alternative X11
JavaNode X11= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "UnmapStatement_A1_M2_A1") )
   if (javadummy) break  CONDITION517;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X11 --- JJ.M4
X11 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X12 --- JJ.M4
X12 = current1 ;
} //)) children level 1
};
YyProcs.
SingleConnection
(
X11
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to PORTCODE1 --- JJ.M4
PORTCODE1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to PORTCODE2 --- JJ.M4
PORTCODE2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(UnmapStatement);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
// ***** begin condlist 518 (in cond 517) *****
CONDLIST518: // @@@ begin of alternative group
while(javadummy) {
CONDITION519: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PORTCODE1;
if (! current0 .Name
.equals( "expr_compportref") )
   if (javadummy) break  CONDITION519;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
{
JavaNode current0 = PORTCODE2;
if (! current0 .Name
.equals( "expr_systemc_port") )
   if (javadummy) break  CONDITION519;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
Code = 
NodeFactory.NewNode(
"stmt_unmap"
, new JavaNode [] {
PORTCODE1
,
PORTCODE2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST518;
// $$$$$$$$ 
} // CONDITION519 // @@@ end of alternative
CONDITION520: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PORTCODE1;
if (! current0 .Name
.equals( "expr_systemc_port") )
   if (javadummy) break  CONDITION520;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
{
JavaNode current0 = PORTCODE2;
if (! current0 .Name
.equals( "expr_compportref") )
   if (javadummy) break  CONDITION520;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
Code = 
NodeFactory.NewNode(
"stmt_unmap"
, new JavaNode [] {
PORTCODE2
,
PORTCODE1
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST518;
// $$$$$$$$ 
} // CONDITION520 // @@@ end of alternative
CONDITION521: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PORTCODE1;
if (! current0 .Name
.equals( "expr_systemc_port") )
   if (javadummy) break  CONDITION521;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
{
JavaNode current0 = PORTCODE2;
if (! current0 .Name
.equals( "expr_systemc_port") )
   if (javadummy) break  CONDITION521;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "Cannot unmap system port from system port" )
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST518;
// $$$$$$$$ 
} // CONDITION521 // @@@ end of alternative
CONDITION522: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PORTCODE1;
if (! current0 .Name
.equals( "expr_compportref") )
   if (javadummy) break  CONDITION522;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
{
JavaNode current0 = PORTCODE2;
if (! current0 .Name
.equals( "expr_compportref") )
   if (javadummy) break  CONDITION522;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "Cannot unmap component port from component port" )
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST518;
// $$$$$$$$ 
} // CONDITION522 // @@@ end of alternative
CONDITION523: // @@@ begin of alternative
while(javadummy) {
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "One of the ports must a system port" )
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST518;
// $$$$$$$$ 
} // CONDITION523 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=518 N=517
if (javadummy) break CONDITION517;
} // CONDLIST518 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 524 (in cond 517) *****
CONDLIST524: // @@@ begin of alternative group
while(javadummy) {
CONDITION525: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X12;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-UnmapStatement_A1_M2_A1_M2")
if (javadummy) break CONDITION525;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST524;
// $$$$$$$$ 
} // CONDITION525 // @@@ end of alternative
CONDITION526: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X12;
if (current0.Name
!= "OneOf-UnmapStatement_A1_M2_A1_M2")
if (javadummy) break CONDITION526;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of unmap" )
,
X12
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST524;
// $$$$$$$$ 
} // CONDITION526 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=524 N=517
if (javadummy) break CONDITION517;
} // CONDLIST524 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST516;
// $$$$$$$$ 
} // CONDITION517 // @@@ end of alternative
CONDITION527: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "UnmapStatement_A1_M2_A2") )
   if (javadummy) break  CONDITION527;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of unmap" )
,
X1
);
Code = 
NodeFactory.NewNode(
"stmt_error"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST516;
// $$$$$$$$ 
} // CONDITION527 // @@@ end of alternative
CONDITION528: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "UnmapStatement_A1_M2_A3") )
   if (javadummy) break  CONDITION528;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of unmap" )
,
X1
);
Code = 
NodeFactory.NewNode(
"stmt_error"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST516;
// $$$$$$$$ 
} // CONDITION528 // @@@ end of alternative
CONDITION529: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "UnmapStatement_A1_M2_A4") )
   if (javadummy) break  CONDITION529;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of unmap" )
,
X1
);
Code = 
NodeFactory.NewNode(
"stmt_error"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST516;
// $$$$$$$$ 
} // CONDITION529 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=516 N=515
if (javadummy) break CONDITION515;
} // CONDLIST516 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST514;
// $$$$$$$$ 
} // CONDITION515 // @@@ end of alternative
CONDITION530: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-UnmapStatement_A1_M2")
if (javadummy) break CONDITION530;
{ //(( children level 1
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of unmap" )
,
X
);
Code = 
NodeFactory.NewNode(
"stmt_error"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST514;
// $$$$$$$$ 
} // CONDITION530 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=514 N=513
if (javadummy) break CONDITION513;
} // CONDLIST514 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST512;
// $$$$$$$$ 
} // CONDITION513 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=512 N=511
if (javadummy) break CONDITION511;
} // CONDLIST512 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST510;
// $$$$$$$$ 
} // CONDITION511 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=510 N=509
if (javadummy) break CONDITION509;
} // CONDLIST510 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION509
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_UnmapStatement");
}



public
static
void
Stmt_ConnectStatement_A1(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc ConnectStatement
JavaNode ConnectStatement = null;
// DECLARE for proc Code
JavaNode Code = null;
// DECLARE for proc PORTCODE2
JavaNode PORTCODE2 = null;
// DECLARE for proc PORTCODE1
JavaNode PORTCODE1 = null;
// DECLARE for proc CST
JavaNode CST = null;
// DECLARE for proc X
JavaNode X = null;
CONDITION531:
while(javadummy) {
// ***** begin condlist 532 (in cond 531) *****
CONDLIST532: // @@@ begin of alternative group
while(javadummy) {
CONDITION533: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to ConnectStatement --- JJ.M4
ConnectStatement = current0 ;
};
// ***** begin condlist 534 (in cond 533) *****
CONDLIST534: // @@@ begin of alternative group
while(javadummy) {
CONDITION535: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ConnectStatement;
if (! current0 .Name
.equals( "ConnectStatement_A1") )
   if (javadummy) break  CONDITION535;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to CST --- JJ.M4
CST = current1 ;
} //)) children level 1
};
YyProcs.
SingleConnection
(
X
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to PORTCODE1 --- JJ.M4
PORTCODE1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to PORTCODE2 --- JJ.M4
PORTCODE2 = current0 ;
}
// ***** begin condlist 536 (in cond 535) *****
CONDLIST536: // @@@ begin of alternative group
while(javadummy) {
CONDITION537: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CST;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ConnectStatement_A1_M3")
if (javadummy) break CONDITION537;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST536;
// $$$$$$$$ 
} // CONDITION537 // @@@ end of alternative
CONDITION538: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CST;
if (current0.Name
!= "OneOf-ConnectStatement_A1_M3")
if (javadummy) break CONDITION538;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of connect" )
,
CST
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST536;
// $$$$$$$$ 
} // CONDITION538 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=536 N=535
if (javadummy) break CONDITION535;
} // CONDLIST536 @@@ end of alternative group
// *** CONTINUE ***
Code = 
NodeFactory.NewNode(
"stmt_connect"
, new JavaNode [] {
PORTCODE1
,
PORTCODE2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST534;
// $$$$$$$$ 
} // CONDITION535 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=534 N=533
if (javadummy) break CONDITION533;
} // CONDLIST534 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST532;
// $$$$$$$$ 
} // CONDITION533 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=532 N=531
if (javadummy) break CONDITION531;
} // CONDLIST532 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION531
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_ConnectStatement_A1");
}



public
static
void
SingleConnection(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc PORTCODE2
JavaNode PORTCODE2 = null;
// DECLARE for proc PORTCODE1
JavaNode PORTCODE1 = null;
// DECLARE for proc PORT2
JavaNode PORT2 = null;
// DECLARE for proc PORT1
JavaNode PORT1 = null;
CONDITION539:
while(javadummy) {
// ***** begin condlist 540 (in cond 539) *****
CONDLIST540: // @@@ begin of alternative group
while(javadummy) {
CONDITION541: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 542 (in cond 541) *****
CONDLIST542: // @@@ begin of alternative group
while(javadummy) {
CONDITION543: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "SingleConnectionSpec_A1") )
   if (javadummy) break  CONDITION543;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to PORT1 --- JJ.M4
PORT1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to PORT2 --- JJ.M4
PORT2 = current1 ;
} //)) children level 1
};
YyProcs.
PortReference
(
PORT1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to PORTCODE1 --- JJ.M4
PORTCODE1 = current0 ;
}
YyProcs.
PortReference
(
PORT2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to PORTCODE2 --- JJ.M4
PORTCODE2 = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST542;
// $$$$$$$$ 
} // CONDITION543 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=542 N=541
if (javadummy) break CONDITION541;
} // CONDLIST542 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
PORTCODE1
;
yy_outparam_1 = 
PORTCODE2
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST540;
// $$$$$$$$ 
} // CONDITION541 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=540 N=539
if (javadummy) break CONDITION539;
} // CONDLIST540 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION539
// failed:
JavaLib.rtsAllAlternativesFailed("SingleConnection");
}



public
static
void
PortReference(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc PORT
JavaNode PORT = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc X22
JavaNode X22 = null;
// DECLARE for proc PortId
JavaNode PortId = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION544:
while(javadummy) {
// ***** begin condlist 545 (in cond 544) *****
CONDLIST545: // @@@ begin of alternative group
while(javadummy) {
CONDITION546: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to PORT --- JJ.M4
PORT = current0 ;
};
// ***** begin condlist 547 (in cond 546) *****
CONDLIST547: // @@@ begin of alternative group
while(javadummy) {
CONDITION548: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PORT;
if (! current0 .Name
.equals( "PortRef_A1") )
   if (javadummy) break  CONDITION548;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 549 (in cond 548) *****
CONDLIST549: // @@@ begin of alternative group
while(javadummy) {
CONDITION550: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (! current0 .Name
.equals( "ArrayIdentifierRef_A1") )
   if (javadummy) break  CONDITION550;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to PortId --- JJ.M4
PortId = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X22 --- JJ.M4
X22 = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST549;
// $$$$$$$$ 
} // CONDITION550 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=549 N=548
if (javadummy) break CONDITION548;
} // CONDLIST549 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 551 (in cond 548) *****
CONDLIST551: // @@@ begin of alternative group
while(javadummy) {
CONDITION552: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X22;
if (current0.Name
!= "NilOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION552;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST551;
// $$$$$$$$ 
} // CONDITION552 // @@@ end of alternative
CONDITION553: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X22;
if (current0.Name
!= "SeqOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION553;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of port specification" )
,
X22
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST551;
// $$$$$$$$ 
} // CONDITION553 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=551 N=548
if (javadummy) break CONDITION548;
} // CONDLIST551 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 554 (in cond 548) *****
CONDLIST554: // @@@ begin of alternative group
while(javadummy) {
CONDITION555: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X11
JavaNode X11= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ComponentRef_A1") )
   if (javadummy) break  CONDITION555;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X11 --- JJ.M4
X11 = current1 ;
} //)) children level 1
};
// ***** begin condlist 556 (in cond 555) *****
CONDLIST556: // @@@ begin of alternative group
while(javadummy) {
CONDITION557: // @@@ begin of alternative
while(javadummy) {
// ***** begin condlist 558 (in cond 557) *****
CONDLIST558: // @@@ begin of alternative group
while(javadummy) {
CONDITION559: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative XX
JavaNode XX= null;
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative XXX
JavaNode XXX= null;
// DECLARE for alternative ComponentId
JavaNode ComponentId= null;
{
JavaNode current0 = X11;
if (! current0 .Name
.equals( "ComponentOrDefaultReference_A1") )
   if (javadummy) break  CONDITION559;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX --- JJ.M4
XX = current1 ;
} //)) children level 1
};
// ***** begin condlist 560 (in cond 559) *****
CONDLIST560: // @@@ begin of alternative group
while(javadummy) {
CONDITION561: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX;
if (! current0 .Name
.equals( "VariableRef_A1") )
   if (javadummy) break  CONDITION561;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ComponentId --- JJ.M4
ComponentId = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to XXX --- JJ.M4
XXX = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(ComponentId);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
LocallyDefined
(
ComponentId
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 562 (in cond 561) *****
CONDLIST562: // @@@ begin of alternative group
while(javadummy) {
CONDITION563: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative C
JavaNode C= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "localvar") )
   if (javadummy) break  CONDITION563;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tp --- JJ.M4
Tp = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_referenced") )
   if (javadummy) break  CONDITION563;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to C --- JJ.M4
C = current1 ;
} //)) children level 1
};
{
JavaNode current0 = C;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION563;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST562;
// $$$$$$$$ 
} // CONDITION563 // @@@ end of alternative
CONDITION564: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
ComponentId
,
new JavaStringValue( "' not declared as component" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST562;
// $$$$$$$$ 
} // CONDITION564 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=562 N=561
if (javadummy) break CONDITION561;
} // CONDLIST562 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 565 (in cond 561) *****
CONDLIST565: // @@@ begin of alternative group
while(javadummy) {
CONDITION566: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-VariableRef_A1_M2")
if (javadummy) break CONDITION566;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST565;
// $$$$$$$$ 
} // CONDITION566 // @@@ end of alternative
CONDITION567: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX;
if (current0.Name
!= "OneOf-VariableRef_A1_M2")
if (javadummy) break CONDITION567;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this form of port spec" )
,
XXX
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST565;
// $$$$$$$$ 
} // CONDITION567 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=565 N=561
if (javadummy) break CONDITION561;
} // CONDLIST565 @@@ end of alternative group
// *** CONTINUE ***
Code = 
NodeFactory.NewNode(
"expr_compportref"
, new JavaNode [] {
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
ComponentId
}
)
,
PortId
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST560;
// $$$$$$$$ 
} // CONDITION561 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=560 N=559
if (javadummy) break CONDITION559;
} // CONDLIST560 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST558;
// $$$$$$$$ 
} // CONDITION559 // @@@ end of alternative
CONDITION568: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X11;
if (! current0 .Name
.equals( "ComponentOrDefaultReference_A2") )
   if (javadummy) break  CONDITION568;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this port spec" )
,
X11
);
Code = 
NodeFactory.NewNode(
"expr_systemc_port"
, new JavaNode [] {
new JavaStringValue( "-" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST558;
// $$$$$$$$ 
} // CONDITION568 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=558 N=557
if (javadummy) break CONDITION557;
} // CONDLIST558 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST556;
// $$$$$$$$ 
} // CONDITION557 // @@@ end of alternative
CONDITION569: // @@@ begin of alternative
while(javadummy) {
YyProcs.
NotCovered
(
new JavaStringValue( "this port spec" )
,
X1
);
Code = 
NodeFactory.NewNode(
"expr_systemc_port"
, new JavaNode [] {
new JavaStringValue( "-" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST556;
// $$$$$$$$ 
} // CONDITION569 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=556 N=555
if (javadummy) break CONDITION555;
} // CONDLIST556 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST554;
// $$$$$$$$ 
} // CONDITION555 // @@@ end of alternative
CONDITION570: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ComponentRef_A2") )
   if (javadummy) break  CONDITION570;
};
Code = 
NodeFactory.NewNode(
"expr_systemc_port"
, new JavaNode [] {
PortId
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST554;
// $$$$$$$$ 
} // CONDITION570 // @@@ end of alternative
CONDITION571: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ComponentRef_A3") )
   if (javadummy) break  CONDITION571;
};
YyProcs.
NotCovered
(
new JavaStringValue( "self port" )
,
X1
);
Code = 
NodeFactory.NewNode(
"expr_systemc_port"
, new JavaNode [] {
new JavaStringValue( "-" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST554;
// $$$$$$$$ 
} // CONDITION571 // @@@ end of alternative
CONDITION572: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ComponentRef_A4") )
   if (javadummy) break  CONDITION572;
};
YyProcs.
NotCovered
(
new JavaStringValue( "mtc port" )
,
X1
);
Code = 
NodeFactory.NewNode(
"expr_systemc_port"
, new JavaNode [] {
new JavaStringValue( "-" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST554;
// $$$$$$$$ 
} // CONDITION572 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=554 N=548
if (javadummy) break CONDITION548;
} // CONDLIST554 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST547;
// $$$$$$$$ 
} // CONDITION548 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=547 N=546
if (javadummy) break CONDITION546;
} // CONDLIST547 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST545;
// $$$$$$$$ 
} // CONDITION546 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=545 N=544
if (javadummy) break CONDITION544;
} // CONDLIST545 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION544
// failed:
JavaLib.rtsAllAlternativesFailed("PortReference");
}



public
static
void
Trafo_Assignment(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc ASSIGN
JavaNode ASSIGN = null;
// DECLARE for proc RhsCode
JavaNode RhsCode = null;
// DECLARE for proc RhsType
JavaNode RhsType = null;
// DECLARE for proc LhsCode
JavaNode LhsCode = null;
// DECLARE for proc LhsType
JavaNode LhsType = null;
// DECLARE for proc RHS
JavaNode RHS = null;
// DECLARE for proc LHS
JavaNode LHS = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION573:
while(javadummy) {
// ***** begin condlist 574 (in cond 573) *****
CONDLIST574: // @@@ begin of alternative group
while(javadummy) {
CONDITION575: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to ASSIGN --- JJ.M4
ASSIGN = current0 ;
};
// ***** begin condlist 576 (in cond 575) *****
CONDLIST576: // @@@ begin of alternative group
while(javadummy) {
CONDITION577: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ASSIGN;
if (! current0 .Name
.equals( "Assignment_A1") )
   if (javadummy) break  CONDITION577;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to LHS --- JJ.M4
LHS = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RHS --- JJ.M4
RHS = current1 ;
} //)) children level 1
};
YyProcs.
Handle_Lhs
(
LHS
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to LhsType --- JJ.M4
LhsType = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to LhsCode --- JJ.M4
LhsCode = current0 ;
}
YyProcs.
Handle_Rhs
(
RHS
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to RhsType --- JJ.M4
RhsType = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RhsCode --- JJ.M4
RhsCode = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST576;
// $$$$$$$$ 
} // CONDITION577 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=576 N=575
if (javadummy) break CONDITION575;
} // CONDLIST576 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 578 (in cond 575) *****
CONDLIST578: // @@@ begin of alternative group
while(javadummy) {
CONDITION579: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Exprs
JavaNode Exprs= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Tps
JavaNode Tps= null;
{
JavaNode current0 = RhsType;
if (! current0 .Name
.equals( "tp_compound") )
   if (javadummy) break  CONDITION579;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tps --- JJ.M4
Tps = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(RHS);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
CheckCompoundType
(
RhsType
,
LhsType
,
Pos
);
{
JavaNode current0 = RhsCode;
if (! current0 .Name
.equals( "expr_array") )
   if (javadummy) break  CONDITION579;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Exprs --- JJ.M4
Exprs = current1 ;
} //)) children level 1
};
Code = 
NodeFactory.NewNode(
"stmt_assigncompound1"
, new JavaNode [] {
LhsCode
,
Exprs
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST578;
// $$$$$$$$ 
} // CONDITION579 // @@@ end of alternative
CONDITION580: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Fields
JavaNode Fields= null;
// DECLARE for alternative Tps
JavaNode Tps= null;
{
JavaNode current0 = RhsType;
if (! current0 .Name
.equals( "tp_compound") )
   if (javadummy) break  CONDITION580;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tps --- JJ.M4
Tps = current1 ;
} //)) children level 1
};
{
JavaNode current0 = RhsCode;
if (! current0 .Name
.equals( "expr_compound") )
   if (javadummy) break  CONDITION580;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Fields --- JJ.M4
Fields = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "record literals with field names" )
,
RHS
);
Code = 
NodeFactory.NewNode(
"stmt_assigncompound2"
, new JavaNode [] {
LhsCode
,
Fields
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST578;
// $$$$$$$$ 
} // CONDITION580 // @@@ end of alternative
CONDITION581: // @@@ begin of alternative
while(javadummy) {
{
if (! JavaLib.rtsEqualNode(
RhsType
,
LhsType
)
)
   if (javadummy) break  CONDITION581;
};
Code = 
NodeFactory.NewNode(
"stmt_assign"
, new JavaNode [] {
LhsCode
,
RhsCode
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST578;
// $$$$$$$$ 
} // CONDITION581 // @@@ end of alternative
CONDITION582: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(LHS);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "types are not compatible" )
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_assign"
, new JavaNode [] {
LhsCode
,
RhsCode
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST578;
// $$$$$$$$ 
} // CONDITION582 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=578 N=575
if (javadummy) break CONDITION575;
} // CONDLIST578 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST574;
// $$$$$$$$ 
} // CONDITION575 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=574 N=573
if (javadummy) break CONDITION573;
} // CONDLIST574 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION573
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_Assignment");
}



public
static
void
Handle_Lhs(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LHS
JavaNode LHS = null;
// DECLARE for proc Meaning
JavaNode Meaning = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Access
JavaNode Access = null;
// DECLARE for proc Id
JavaNode Id = null;
// DECLARE for proc LhsCode
JavaNode LhsCode = null;
// DECLARE for proc LhsType
JavaNode LhsType = null;
// DECLARE for proc LhsCode2
JavaNode LhsCode2 = null;
// DECLARE for proc LhsType2
JavaNode LhsType2 = null;
CONDITION583:
while(javadummy) {
// ***** begin condlist 584 (in cond 583) *****
CONDLIST584: // @@@ begin of alternative group
while(javadummy) {
CONDITION585: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to LHS --- JJ.M4
LHS = current0 ;
};
// ***** begin condlist 586 (in cond 585) *****
CONDLIST586: // @@@ begin of alternative group
while(javadummy) {
CONDITION587: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = LHS;
if (! current0 .Name
.equals( "VariableRef_A1") )
   if (javadummy) break  CONDITION587;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Access --- JJ.M4
Access = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
LocallyDefined
(
Id
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Meaning --- JJ.M4
Meaning = current0 ;
}
// ***** begin condlist 588 (in cond 587) *****
CONDLIST588: // @@@ begin of alternative group
while(javadummy) {
CONDITION589: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "componentmember_port") )
   if (javadummy) break  CONDITION589;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "Assigment to port not allowed" )
,
Pos
);
LhsType = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
LhsCode = 
NodeFactory.NewNode(
"compidexpr"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST588;
// $$$$$$$$ 
} // CONDITION589 // @@@ end of alternative
CONDITION590: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "componentmember_var") )
   if (javadummy) break  CONDITION590;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tp --- JJ.M4
Tp = current1 ;
} //)) children level 1
};
LhsType = 
Tp
;
LhsCode = 
NodeFactory.NewNode(
"compidexpr"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST588;
// $$$$$$$$ 
} // CONDITION590 // @@@ end of alternative
CONDITION591: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "localtimer") )
   if (javadummy) break  CONDITION591;
};
LhsType = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
LhsCode = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST588;
// $$$$$$$$ 
} // CONDITION591 // @@@ end of alternative
CONDITION592: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "localvar") )
   if (javadummy) break  CONDITION592;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tp --- JJ.M4
Tp = current1 ;
} //)) children level 1
};
LhsType = 
Tp
;
LhsCode = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST588;
// $$$$$$$$ 
} // CONDITION592 // @@@ end of alternative
CONDITION593: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedTestcase
JavaNode RefNormalizedTestcase= null;
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "testcasedefinition") )
   if (javadummy) break  CONDITION593;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedTestcase --- JJ.M4
RefNormalizedTestcase = current1 ;
} //)) children level 1
};
YyProcs.
ErrorI
(
new JavaStringValue( "Cannot assign to testcase '" )
,
Id
,
new JavaStringValue( "'" )
,
Pos
);
LhsType = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
LhsCode = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
new JavaStringValue( "/error/" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST588;
// $$$$$$$$ 
} // CONDITION593 // @@@ end of alternative
CONDITION594: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedFunction
JavaNode RefNormalizedFunction= null;
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "functiondefinition") )
   if (javadummy) break  CONDITION594;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedFunction --- JJ.M4
RefNormalizedFunction = current1 ;
} //)) children level 1
};
YyProcs.
ErrorI
(
new JavaStringValue( "Cannot assign to function '" )
,
Id
,
new JavaStringValue( "'" )
,
Pos
);
LhsType = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
LhsCode = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
new JavaStringValue( "/error/" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST588;
// $$$$$$$$ 
} // CONDITION594 // @@@ end of alternative
CONDITION595: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Zusatz
JavaNode Zusatz= null;
// DECLARE for alternative X4
JavaNode X4= null;
// DECLARE for alternative N
JavaNode N= null;
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION595;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N --- JJ.M4
N = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X4 --- JJ.M4
X4 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Zusatz --- JJ.M4
Zusatz = current1 ;
} //)) children level 1
};
YyProcs.
ErrorI
(
new JavaStringValue( "Cannot assign to record type '" )
,
Id
,
new JavaStringValue( "'" )
,
Pos
);
LhsType = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
LhsCode = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
new JavaStringValue( "/error/" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST588;
// $$$$$$$$ 
} // CONDITION595 // @@@ end of alternative
CONDITION596: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative N
JavaNode N= null;
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "porttype") )
   if (javadummy) break  CONDITION596;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N --- JJ.M4
N = current1 ;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
} //)) children level 1
};
YyProcs.
ErrorI
(
new JavaStringValue( "Cannot assign to port type '" )
,
Id
,
new JavaStringValue( "'" )
,
Pos
);
LhsType = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
LhsCode = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
new JavaStringValue( "/error/" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST588;
// $$$$$$$$ 
} // CONDITION596 // @@@ end of alternative
CONDITION597: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION597;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
ErrorI
(
new JavaStringValue( "Cannot assign to component type '" )
,
Id
,
new JavaStringValue( "'" )
,
Pos
);
LhsType = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
LhsCode = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
new JavaStringValue( "/error/" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST588;
// $$$$$$$$ 
} // CONDITION597 // @@@ end of alternative
CONDITION598: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Meaning;
if (! current0 .Name
.equals( "nodefinition") )
   if (javadummy) break  CONDITION598;
};
YyProcs.
ErrorI
(
new JavaStringValue( "Cannot assign to '" )
,
Id
,
new JavaStringValue( "'" )
,
Pos
);
LhsType = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
LhsCode = 
NodeFactory.NewNode(
"idexpr"
, new JavaNode [] {
new JavaStringValue( "/error/" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST588;
// $$$$$$$$ 
} // CONDITION598 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=588 N=587
if (javadummy) break CONDITION587;
} // CONDLIST588 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 599 (in cond 587) *****
CONDLIST599: // @@@ begin of alternative group
while(javadummy) {
CONDITION600: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Access;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-VariableRef_A1_M2")
if (javadummy) break CONDITION600;
{ //(( children level 1
} //)) children level 1
};
LhsType2 = 
LhsType
;
LhsCode2 = 
LhsCode
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST599;
// $$$$$$$$ 
} // CONDITION600 // @@@ end of alternative
CONDITION601: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = Access;
if (current0.Name
!= "OneOf-VariableRef_A1_M2")
if (javadummy) break CONDITION601;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 602 (in cond 601) *****
CONDLIST602: // @@@ begin of alternative group
while(javadummy) {
CONDITION603: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "VariableRef_A1_M2_A1") )
   if (javadummy) break  CONDITION603;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
YyProcs.
HandleExtendedFieldReference
(
X1
,
LhsType
,
LhsCode
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to LhsType2 --- JJ.M4
LhsType2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to LhsCode2 --- JJ.M4
LhsCode2 = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST602;
// $$$$$$$$ 
} // CONDITION603 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=602 N=601
if (javadummy) break CONDITION601;
} // CONDLIST602 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST599;
// $$$$$$$$ 
} // CONDITION601 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=599 N=587
if (javadummy) break CONDITION587;
} // CONDLIST599 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST586;
// $$$$$$$$ 
} // CONDITION587 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=586 N=585
if (javadummy) break CONDITION585;
} // CONDLIST586 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
LhsType2
;
yy_outparam_1 = 
LhsCode2
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST584;
// $$$$$$$$ 
} // CONDITION585 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=584 N=583
if (javadummy) break CONDITION583;
} // CONDLIST584 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION583
// failed:
JavaLib.rtsAllAlternativesFailed("Handle_Lhs");
}



public
static
void
Handle_Rhs(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RHS
JavaNode RHS = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION604:
while(javadummy) {
// ***** begin condlist 605 (in cond 604) *****
CONDLIST605: // @@@ begin of alternative group
while(javadummy) {
CONDITION606: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to RHS --- JJ.M4
RHS = current0 ;
};
// ***** begin condlist 607 (in cond 606) *****
CONDLIST607: // @@@ begin of alternative group
while(javadummy) {
CONDITION608: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = RHS;
if (! current0 .Name
.equals( "Assignment_A1_M3_A1") )
   if (javadummy) break  CONDITION608;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_Expression
(
X
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST607;
// $$$$$$$$ 
} // CONDITION608 // @@@ end of alternative
CONDITION609: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative TEMPL
JavaNode TEMPL= null;
{
JavaNode current0 = RHS;
if (! current0 .Name
.equals( "Assignment_A1_M3_A2") )
   if (javadummy) break  CONDITION609;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to TEMPL --- JJ.M4
TEMPL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_TemplateBody0
(
TEMPL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST607;
// $$$$$$$$ 
} // CONDITION609 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=607 N=606
if (javadummy) break CONDITION606;
} // CONDLIST607 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST605;
// $$$$$$$$ 
} // CONDITION606 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=605 N=604
if (javadummy) break CONDITION604;
} // CONDLIST605 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION604
// failed:
JavaLib.rtsAllAlternativesFailed("Handle_Rhs");
}



public
static
void
CheckCompoundType(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc LhsType
JavaNode LhsType = null;
// DECLARE for proc RhsType
JavaNode RhsType = null;
CONDITION610:
while(javadummy) {
// ***** begin condlist 611 (in cond 610) *****
CONDLIST611: // @@@ begin of alternative group
while(javadummy) {
CONDITION612: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Fields
JavaNode Fields= null;
// DECLARE for alternative Val
JavaNode Val= null;
// DECLARE for alternative Ref
JavaNode Ref= null;
// DECLARE for alternative R
JavaNode R= null;
// DECLARE for alternative Tps
JavaNode Tps= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to RhsType --- JJ.M4
RhsType = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to LhsType --- JJ.M4
LhsType = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
{
JavaNode current0 = RhsType;
if (! current0 .Name
.equals( "tp_compound") )
   if (javadummy) break  CONDITION612;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tps --- JJ.M4
Tps = current1 ;
} //)) children level 1
};
{
JavaNode current0 = LhsType;
if (! current0 .Name
.equals( "tp_referenced") )
   if (javadummy) break  CONDITION612;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to R --- JJ.M4
R = current1 ;
} //)) children level 1
};
{
JavaNode current0 = R;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION612;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
//assign current1 to Ref --- JJ.M4
Ref = current1 ;
} //)) children level 1
};
Val = JavaLib.rtsBoundToKey(Ref);
{
JavaNode current0 = Val;
if (! current0 .Name
.equals( "normalizedfields") )
   if (javadummy) break  CONDITION612;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Fields --- JJ.M4
Fields = current1 ;
} //)) children level 1
};
YyProcs.
CheckCompoundFields
(
Fields
,
Tps
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST611;
// $$$$$$$$ 
} // CONDITION612 // @@@ end of alternative
CONDITION613: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to RhsType --- JJ.M4
RhsType = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to LhsType --- JJ.M4
LhsType = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "type of literal is not compatble" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST611;
// $$$$$$$$ 
} // CONDITION613 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=611 N=610
if (javadummy) break CONDITION610;
} // CONDLIST611 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION610
// failed:
JavaLib.rtsAllAlternativesFailed("CheckCompoundType");
}



public
static
void
CheckCompoundFields(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
CONDITION614:
while(javadummy) {
// ***** begin condlist 615 (in cond 614) *****
CONDLIST615: // @@@ begin of alternative group
while(javadummy) {
CONDITION616: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative TTp
JavaNode TTp= null;
// DECLARE for alternative HTp
JavaNode HTp= null;
// DECLARE for alternative TFd
JavaNode TFd= null;
// DECLARE for alternative HFd
JavaNode HFd= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-FIELD")
if (javadummy) break CONDITION616;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HFd --- JJ.M4
HFd = current1 ;
current1 = current0.Child1[1];
//assign current1 to TFd --- JJ.M4
TFd = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_1;
if (current0.Name
!= "SeqOf-Tp")
if (javadummy) break CONDITION616;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HTp --- JJ.M4
HTp = current1 ;
current1 = current0.Child1[1];
//assign current1 to TTp --- JJ.M4
TTp = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
CheckCompoundField
(
HFd
,
HTp
,
Pos
);
YyProcs.
CheckCompoundFields
(
TFd
,
TTp
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST615;
// $$$$$$$$ 
} // CONDITION616 // @@@ end of alternative
CONDITION617: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-FIELD")
if (javadummy) break CONDITION617;
};
{
JavaNode current0 = yy_inparam_1;
if (current0.Name
!= "NilOf-Tp")
if (javadummy) break CONDITION617;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST615;
// $$$$$$$$ 
} // CONDITION617 // @@@ end of alternative
CONDITION618: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Fields
JavaNode Fields= null;
// DECLARE for alternative Tps
JavaNode Tps= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Tps --- JJ.M4
Tps = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Fields --- JJ.M4
Fields = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "types are not compatible (number of fields)" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST615;
// $$$$$$$$ 
} // CONDITION618 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=615 N=614
if (javadummy) break CONDITION614;
} // CONDLIST615 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION614
// failed:
JavaLib.rtsAllAlternativesFailed("CheckCompoundFields");
}



public
static
void
CheckCompoundField(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc FieldTp
JavaNode FieldTp = null;
// DECLARE for proc FieldName
JavaNode FieldName = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc FIELD
JavaNode FIELD = null;
CONDITION619:
while(javadummy) {
// ***** begin condlist 620 (in cond 619) *****
CONDLIST620: // @@@ begin of alternative group
while(javadummy) {
CONDITION621: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to FIELD --- JJ.M4
FIELD = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
{
JavaNode current0 = FIELD;
if (! current0 .Name
.equals( "field") )
   if (javadummy) break  CONDITION621;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FieldName --- JJ.M4
FieldName = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to FieldTp --- JJ.M4
FieldTp = current1 ;
} //)) children level 1
};
// ***** begin condlist 622 (in cond 621) *****
CONDLIST622: // @@@ begin of alternative group
while(javadummy) {
CONDITION623: // @@@ begin of alternative
while(javadummy) {
{
if (! JavaLib.rtsEqualNode(
FieldTp
,
Tp
)
)
   if (javadummy) break  CONDITION623;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST622;
// $$$$$$$$ 
} // CONDITION623 // @@@ end of alternative
CONDITION624: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "types are not compatible (field '" )
,
FieldName
,
new JavaStringValue( "')" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST622;
// $$$$$$$$ 
} // CONDITION624 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=622 N=621
if (javadummy) break CONDITION621;
} // CONDLIST622 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST620;
// $$$$$$$$ 
} // CONDITION621 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=620 N=619
if (javadummy) break CONDITION619;
} // CONDLIST620 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION619
// failed:
JavaLib.rtsAllAlternativesFailed("CheckCompoundField");
}



public
static
void
Stmt_AltConstruct(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc AltConstruct
JavaNode AltConstruct = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Code
JavaNode Code = null;
// DECLARE for proc ALTGUARDLIST
JavaNode ALTGUARDLIST = null;
// DECLARE for proc LIST
JavaNode LIST = null;
CONDITION625:
while(javadummy) {
// ***** begin condlist 626 (in cond 625) *****
CONDLIST626: // @@@ begin of alternative group
while(javadummy) {
CONDITION627: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to AltConstruct --- JJ.M4
AltConstruct = current0 ;
};
// ***** begin condlist 628 (in cond 627) *****
CONDLIST628: // @@@ begin of alternative group
while(javadummy) {
CONDITION629: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = AltConstruct;
if (! current0 .Name
.equals( "AltConstruct_A1") )
   if (javadummy) break  CONDITION629;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 630 (in cond 629) *****
CONDLIST630: // @@@ begin of alternative group
while(javadummy) {
CONDITION631: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "AltGuardList_A1") )
   if (javadummy) break  CONDITION631;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to LIST --- JJ.M4
LIST = current1 ;
} //)) children level 1
};
YyProcs.
BuildAltGuardList
(
LIST
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ALTGUARDLIST --- JJ.M4
ALTGUARDLIST = current0 ;
}
Code = 
NodeFactory.NewNode(
"stmt_altn"
, new JavaNode [] {
ALTGUARDLIST
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST630;
// $$$$$$$$ 
} // CONDITION631 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=630 N=629
if (javadummy) break CONDITION629;
} // CONDLIST630 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST628;
// $$$$$$$$ 
} // CONDITION629 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=628 N=627
if (javadummy) break CONDITION627;
} // CONDLIST628 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST626;
// $$$$$$$$ 
} // CONDITION627 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=626 N=625
if (javadummy) break CONDITION625;
} // CONDLIST626 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION625
// failed:
JavaLib.rtsAllAlternativesFailed("Stmt_AltConstruct");
}



public
static
void
BuildAltGuardList(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
CONDITION632:
while(javadummy) {
// ***** begin condlist 633 (in cond 632) *****
CONDLIST633: // @@@ begin of alternative group
while(javadummy) {
CONDITION634: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative CT
JavaNode CT= null;
// DECLARE for alternative CH
JavaNode CH= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-AltGuardList_A1_M1")
if (javadummy) break CONDITION634;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
HandleAltGuard
(
H
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CH --- JJ.M4
CH = current0 ;
}
YyProcs.
BuildAltGuardList
(
T
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CT --- JJ.M4
CT = current0 ;
}
yy_outparam_0 = 
NodeFactory.NewNode (
"SeqOf-ALTGUARD"
, new JavaNode [] {
CH
,
CT
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST633;
// $$$$$$$$ 
} // CONDITION634 // @@@ end of alternative
CONDITION635: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-AltGuardList_A1_M1")
if (javadummy) break CONDITION635;
};
yy_outparam_0 = 
NodeFactory.NewNode (
"NilOf-ALTGUARD"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST633;
// $$$$$$$$ 
} // CONDITION635 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=633 N=632
if (javadummy) break CONDITION632;
} // CONDLIST633 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION632
// failed:
JavaLib.rtsAllAlternativesFailed("BuildAltGuardList");
}



public
static
void
HandleAltGuard(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc M1
JavaNode M1 = null;
// DECLARE for proc GUARDSTMT
JavaNode GUARDSTMT = null;
// DECLARE for proc ALTGUARDCHAR
JavaNode ALTGUARDCHAR = null;
// DECLARE for proc XX
JavaNode XX = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION636:
while(javadummy) {
// ***** begin condlist 637 (in cond 636) *****
CONDLIST637: // @@@ begin of alternative group
while(javadummy) {
CONDITION638: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to M1 --- JJ.M4
M1 = current0 ;
};
// ***** begin condlist 639 (in cond 638) *****
CONDLIST639: // @@@ begin of alternative group
while(javadummy) {
CONDITION640: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = M1;
if (! current0 .Name
.equals( "AltGuardList_A1_M1_A1") )
   if (javadummy) break  CONDITION640;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 641 (in cond 640) *****
CONDLIST641: // @@@ begin of alternative group
while(javadummy) {
CONDITION642: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "GuardStatement_A1") )
   if (javadummy) break  CONDITION642;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ALTGUARDCHAR --- JJ.M4
ALTGUARDCHAR = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to GUARDSTMT --- JJ.M4
GUARDSTMT = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST641;
// $$$$$$$$ 
} // CONDITION642 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=641 N=640
if (javadummy) break CONDITION640;
} // CONDLIST641 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST639;
// $$$$$$$$ 
} // CONDITION640 // @@@ end of alternative
CONDITION643: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M1;
if (! current0 .Name
.equals( "AltGuardList_A1_M1_A2") )
   if (javadummy) break  CONDITION643;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "alt guard list" )
,
M1
);
{
JavaNode current0 = M1;
if (! current0 .Name
.equals( "AltGuardList_A1_M1_A1") )
   if (javadummy) break  CONDITION643;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
if (! current1 .Name
.equals( "GuardStatement_A1") )
   if (javadummy) break  CONDITION643;
{ //(( children level 2
JavaNode current2 =
   current1 . Child1[0];
JavaNode kurrent1 = current1;
//assign current2 to ALTGUARDCHAR --- JJ.M4
ALTGUARDCHAR = current2 ;
current2 = kurrent1.Child1[1];
//assign current2 to GUARDSTMT --- JJ.M4
GUARDSTMT = current2 ;
} //)) children level 2
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST639;
// $$$$$$$$ 
} // CONDITION643 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=639 N=638
if (javadummy) break CONDITION638;
} // CONDLIST639 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 644 (in cond 638) *****
CONDLIST644: // @@@ begin of alternative group
while(javadummy) {
CONDITION645: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ALTGUARDCHAR;
if (! current0 .Name
.equals( "AltGuardChar_A1") )
   if (javadummy) break  CONDITION645;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX --- JJ.M4
XX = current1 ;
} //)) children level 1
};
// ***** begin condlist 646 (in cond 645) *****
CONDLIST646: // @@@ begin of alternative group
while(javadummy) {
CONDITION647: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-AltGuardChar_A1_M2")
if (javadummy) break CONDITION647;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST646;
// $$$$$$$$ 
} // CONDITION647 // @@@ end of alternative
CONDITION648: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX;
if (current0.Name
!= "OneOf-AltGuardChar_A1_M2")
if (javadummy) break CONDITION648;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "alt guard char" )
,
XX
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST646;
// $$$$$$$$ 
} // CONDITION648 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=646 N=645
if (javadummy) break CONDITION645;
} // CONDLIST646 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST644;
// $$$$$$$$ 
} // CONDITION645 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=644 N=638
if (javadummy) break CONDITION638;
} // CONDLIST644 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 649 (in cond 638) *****
CONDLIST649: // @@@ begin of alternative group
while(javadummy) {
CONDITION650: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = GUARDSTMT;
if (! current0 .Name
.equals( "GuardStatement_A1_M2_A1") )
   if (javadummy) break  CONDITION650;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "guard statement a1 m2 a1" )
,
GUARDSTMT
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST649;
// $$$$$$$$ 
} // CONDITION650 // @@@ end of alternative
CONDITION651: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative BLOCK
JavaNode BLOCK= null;
// DECLARE for alternative GUARDOP
JavaNode GUARDOP= null;
{
JavaNode current0 = GUARDSTMT;
if (! current0 .Name
.equals( "GuardStatement_A1_M2_A2") )
   if (javadummy) break  CONDITION651;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to GUARDOP --- JJ.M4
GUARDOP = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to BLOCK --- JJ.M4
BLOCK = current1 ;
} //)) children level 1
};
// ***** begin condlist 652 (in cond 651) *****
CONDLIST652: // @@@ begin of alternative group
while(javadummy) {
CONDITION653: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative TS
JavaNode TS= null;
// DECLARE for alternative TS1
JavaNode TS1= null;
{
JavaNode current0 = GUARDOP;
if (! current0 .Name
.equals( "GuardOp_A1") )
   if (javadummy) break  CONDITION653;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to TS --- JJ.M4
TS = current1 ;
} //)) children level 1
};
// ***** begin condlist 654 (in cond 653) *****
CONDLIST654: // @@@ begin of alternative group
while(javadummy) {
CONDITION655: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TS;
if (! current0 .Name
.equals( "TimeoutStatement_A1") )
   if (javadummy) break  CONDITION655;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to TS1 --- JJ.M4
TS1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 656 (in cond 655) *****
CONDLIST656: // @@@ begin of alternative group
while(javadummy) {
CONDITION657: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative TS2
JavaNode TS2= null;
// DECLARE for alternative TS3
JavaNode TS3= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = TS1;
if (! current0 .Name
.equals( "TimerRefOrAny_A1") )
   if (javadummy) break  CONDITION657;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to TS2 --- JJ.M4
TS2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 658 (in cond 657) *****
CONDLIST658: // @@@ begin of alternative group
while(javadummy) {
CONDITION659: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TS2;
if (! current0 .Name
.equals( "ArrayIdentifierRef_A1") )
   if (javadummy) break  CONDITION659;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TS3 --- JJ.M4
TS3 = current1 ;
} //)) children level 1
};
// ***** begin condlist 660 (in cond 659) *****
CONDLIST660: // @@@ begin of alternative group
while(javadummy) {
CONDITION661: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ResBlock
JavaNode ResBlock= null;
{
JavaNode current0 = TS3;
if (current0.Name
!= "NilOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION661;
};
YyProcs.
Trafo_StatementBlock
(
BLOCK
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ResBlock --- JJ.M4
ResBlock = current0 ;
}
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
Id
}
)
,
ResBlock
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST660;
// $$$$$$$$ 
} // CONDITION661 // @@@ end of alternative
CONDITION662: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TS3;
if (current0.Name
!= "SeqOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION662;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
if (current1.Name
!= "NilOf-ArrayIdentifierRef_A1_M2")
if (javadummy) break CONDITION662;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "array" )
,
TS3
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST660;
// $$$$$$$$ 
} // CONDITION662 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=660 N=659
if (javadummy) break CONDITION659;
} // CONDLIST660 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST658;
// $$$$$$$$ 
} // CONDITION659 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=658 N=657
if (javadummy) break CONDITION657;
} // CONDLIST658 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST656;
// $$$$$$$$ 
} // CONDITION657 // @@@ end of alternative
CONDITION663: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TS1;
if (! current0 .Name
.equals( "TimerRefOrAny_A2") )
   if (javadummy) break  CONDITION663;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "timer ref or any 2" )
,
TS1
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST656;
// $$$$$$$$ 
} // CONDITION663 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=656 N=655
if (javadummy) break CONDITION655;
} // CONDLIST656 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST654;
// $$$$$$$$ 
} // CONDITION655 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=654 N=653
if (javadummy) break CONDITION653;
} // CONDLIST654 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST652;
// $$$$$$$$ 
} // CONDITION653 // @@@ end of alternative
CONDITION664: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ResBlock
JavaNode ResBlock= null;
// DECLARE for alternative CodeRECEIVE
JavaNode CodeRECEIVE= null;
// DECLARE for alternative RECEIVE
JavaNode RECEIVE= null;
{
JavaNode current0 = GUARDOP;
if (! current0 .Name
.equals( "GuardOp_A2") )
   if (javadummy) break  CONDITION664;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RECEIVE --- JJ.M4
RECEIVE = current1 ;
} //)) children level 1
};
YyProcs.
HandleReceive
(
RECEIVE
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeRECEIVE --- JJ.M4
CodeRECEIVE = current0 ;
}
YyProcs.
Trafo_StatementBlock
(
BLOCK
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ResBlock --- JJ.M4
ResBlock = current0 ;
}
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
CodeRECEIVE
,
ResBlock
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST652;
// $$$$$$$$ 
} // CONDITION664 // @@@ end of alternative
CONDITION665: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = GUARDOP;
if (! current0 .Name
.equals( "GuardOp_A3") )
   if (javadummy) break  CONDITION665;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "guard op 3" )
,
GUARDOP
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST652;
// $$$$$$$$ 
} // CONDITION665 // @@@ end of alternative
CONDITION666: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = GUARDOP;
if (! current0 .Name
.equals( "GuardOp_A4") )
   if (javadummy) break  CONDITION666;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "guard op 4" )
,
GUARDOP
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST652;
// $$$$$$$$ 
} // CONDITION666 // @@@ end of alternative
CONDITION667: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = GUARDOP;
if (! current0 .Name
.equals( "GuardOp_A5") )
   if (javadummy) break  CONDITION667;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "guard op 5" )
,
GUARDOP
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST652;
// $$$$$$$$ 
} // CONDITION667 // @@@ end of alternative
CONDITION668: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = GUARDOP;
if (! current0 .Name
.equals( "GuardOp_A6") )
   if (javadummy) break  CONDITION668;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "guard op 6" )
,
GUARDOP
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST652;
// $$$$$$$$ 
} // CONDITION668 // @@@ end of alternative
CONDITION669: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = GUARDOP;
if (! current0 .Name
.equals( "GuardOp_A7") )
   if (javadummy) break  CONDITION669;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "guard op 7" )
,
GUARDOP
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST652;
// $$$$$$$$ 
} // CONDITION669 // @@@ end of alternative
CONDITION670: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = GUARDOP;
if (! current0 .Name
.equals( "GuardOp_A8") )
   if (javadummy) break  CONDITION670;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "guard op 8" )
,
GUARDOP
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST652;
// $$$$$$$$ 
} // CONDITION670 // @@@ end of alternative
CONDITION671: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = GUARDOP;
if (! current0 .Name
.equals( "GuardOp_A9") )
   if (javadummy) break  CONDITION671;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "guard op 9" )
,
GUARDOP
);
Code = 
NodeFactory.NewNode(
"altguard"
, new JavaNode [] {
NodeFactory.NewNode(
"receive_timeout"
, new JavaNode [] {
new JavaStringValue( "dummy" )
}
)
,
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST652;
// $$$$$$$$ 
} // CONDITION671 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=652 N=651
if (javadummy) break CONDITION651;
} // CONDLIST652 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST649;
// $$$$$$$$ 
} // CONDITION651 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=649 N=638
if (javadummy) break CONDITION638;
} // CONDLIST649 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST637;
// $$$$$$$$ 
} // CONDITION638 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=637 N=636
if (javadummy) break CONDITION636;
} // CONDLIST637 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION636
// failed:
JavaLib.rtsAllAlternativesFailed("HandleAltGuard");
}



public
static
void
Trafo_FunctionStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc FunctionSt
JavaNode FunctionSt = null;
// DECLARE for proc Res
JavaNode Res = null;
CONDITION672:
while(javadummy) {
// ***** begin condlist 673 (in cond 672) *****
CONDLIST673: // @@@ begin of alternative group
while(javadummy) {
CONDITION674: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to FunctionSt --- JJ.M4
FunctionSt = current0 ;
};
// ***** begin condlist 675 (in cond 674) *****
CONDLIST675: // @@@ begin of alternative group
while(javadummy) {
CONDITION676: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S1
JavaNode S1= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A1") )
   if (javadummy) break  CONDITION676;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S1 --- JJ.M4
S1 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ConfigurationStatements
(
S1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST675;
// $$$$$$$$ 
} // CONDITION676 // @@@ end of alternative
CONDITION677: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S2
JavaNode S2= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A2") )
   if (javadummy) break  CONDITION677;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S2 --- JJ.M4
S2 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_TimerStatements
(
S2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST675;
// $$$$$$$$ 
} // CONDITION677 // @@@ end of alternative
CONDITION678: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S3
JavaNode S3= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A3") )
   if (javadummy) break  CONDITION678;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S3 --- JJ.M4
S3 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_CommunicationStatements
(
S3
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST675;
// $$$$$$$$ 
} // CONDITION678 // @@@ end of alternative
CONDITION679: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S4
JavaNode S4= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A4") )
   if (javadummy) break  CONDITION679;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S4 --- JJ.M4
S4 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BasicStatements
(
S4
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST675;
// $$$$$$$$ 
} // CONDITION679 // @@@ end of alternative
CONDITION680: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S5
JavaNode S5= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A5") )
   if (javadummy) break  CONDITION680;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S5 --- JJ.M4
S5 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BehaviourStatements
(
S5
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST675;
// $$$$$$$$ 
} // CONDITION680 // @@@ end of alternative
CONDITION681: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S6
JavaNode S6= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A6") )
   if (javadummy) break  CONDITION681;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S6 --- JJ.M4
S6 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SetLocalVerdict
(
S6
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST675;
// $$$$$$$$ 
} // CONDITION681 // @@@ end of alternative
CONDITION682: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S7
JavaNode S7= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A7") )
   if (javadummy) break  CONDITION682;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S7 --- JJ.M4
S7 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SUTStatements
(
S7
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST675;
// $$$$$$$$ 
} // CONDITION682 // @@@ end of alternative
CONDITION683: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S8
JavaNode S8= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A8") )
   if (javadummy) break  CONDITION683;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S8 --- JJ.M4
S8 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "TestcaseOperation" )
,
FunctionSt
);
Res = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST675;
// $$$$$$$$ 
} // CONDITION683 // @@@ end of alternative
CONDITION684: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S9
JavaNode S9= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A9") )
   if (javadummy) break  CONDITION684;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S9 --- JJ.M4
S9 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "RealtimeStatement" )
,
FunctionSt
);
Res = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST675;
// $$$$$$$$ 
} // CONDITION684 // @@@ end of alternative
CONDITION685: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S10
JavaNode S10= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A10") )
   if (javadummy) break  CONDITION685;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S10 --- JJ.M4
S10 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "AssertStatement" )
,
FunctionSt
);
Res = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST675;
// $$$$$$$$ 
} // CONDITION685 // @@@ end of alternative
CONDITION686: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S11
JavaNode S11= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A11") )
   if (javadummy) break  CONDITION686;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S11 --- JJ.M4
S11 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "WaitStatement" )
,
FunctionSt
);
Res = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST675;
// $$$$$$$$ 
} // CONDITION686 // @@@ end of alternative
CONDITION687: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S12
JavaNode S12= null;
{
JavaNode current0 = FunctionSt;
if (! current0 .Name
.equals( "FunctionStatement_A12") )
   if (javadummy) break  CONDITION687;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S12 --- JJ.M4
S12 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "ModeSpecification" )
,
FunctionSt
);
Res = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST675;
// $$$$$$$$ 
} // CONDITION687 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=675 N=674
if (javadummy) break CONDITION674;
} // CONDLIST675 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Res
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST673;
// $$$$$$$$ 
} // CONDITION674 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=673 N=672
if (javadummy) break CONDITION672;
} // CONDLIST673 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION672
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_FunctionStatement");
}



public
static
void
Trafo_ControlStatement(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc ZWEIDREI
JavaNode ZWEIDREI = null;
// DECLARE for proc Res
JavaNode Res = null;
CONDITION688:
while(javadummy) {
// ***** begin condlist 689 (in cond 688) *****
CONDLIST689: // @@@ begin of alternative group
while(javadummy) {
CONDITION690: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to ZWEIDREI --- JJ.M4
ZWEIDREI = current0 ;
};
// ***** begin condlist 691 (in cond 690) *****
CONDLIST691: // @@@ begin of alternative group
while(javadummy) {
CONDITION692: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S1
JavaNode S1= null;
{
JavaNode current0 = ZWEIDREI;
if (! current0 .Name
.equals( "ControlStatement_A1") )
   if (javadummy) break  CONDITION692;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S1 --- JJ.M4
S1 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_TimerStatements
(
S1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST691;
// $$$$$$$$ 
} // CONDITION692 // @@@ end of alternative
CONDITION693: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S2
JavaNode S2= null;
{
JavaNode current0 = ZWEIDREI;
if (! current0 .Name
.equals( "ControlStatement_A2") )
   if (javadummy) break  CONDITION693;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S2 --- JJ.M4
S2 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BasicStatements
(
S2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST691;
// $$$$$$$$ 
} // CONDITION693 // @@@ end of alternative
CONDITION694: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S3
JavaNode S3= null;
{
JavaNode current0 = ZWEIDREI;
if (! current0 .Name
.equals( "ControlStatement_A3") )
   if (javadummy) break  CONDITION694;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S3 --- JJ.M4
S3 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BehaviourStatements
(
S3
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST691;
// $$$$$$$$ 
} // CONDITION694 // @@@ end of alternative
CONDITION695: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S4
JavaNode S4= null;
{
JavaNode current0 = ZWEIDREI;
if (! current0 .Name
.equals( "ControlStatement_A4") )
   if (javadummy) break  CONDITION695;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S4 --- JJ.M4
S4 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SUTStatements
(
S4
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST691;
// $$$$$$$$ 
} // CONDITION695 // @@@ end of alternative
CONDITION696: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ZWEIDREI;
if (! current0 .Name
.equals( "ControlStatement_A5") )
   if (javadummy) break  CONDITION696;
};
YyProcs.
NotCovered
(
new JavaStringValue( "StopStatement" )
,
ZWEIDREI
);
Res = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST691;
// $$$$$$$$ 
} // CONDITION696 // @@@ end of alternative
CONDITION697: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S6
JavaNode S6= null;
{
JavaNode current0 = ZWEIDREI;
if (! current0 .Name
.equals( "ControlStatement_A6") )
   if (javadummy) break  CONDITION697;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S6 --- JJ.M4
S6 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "KillStatement" )
,
ZWEIDREI
);
Res = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST691;
// $$$$$$$$ 
} // CONDITION697 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=691 N=690
if (javadummy) break CONDITION690;
} // CONDLIST691 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Res
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST689;
// $$$$$$$$ 
} // CONDITION690 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=689 N=688
if (javadummy) break CONDITION688;
} // CONDLIST689 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION688
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ControlStatement");
}



public
static
void
Trafo_ConfigurationStatements(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc S
JavaNode S = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION698:
while(javadummy) {
// ***** begin condlist 699 (in cond 698) *****
CONDLIST699: // @@@ begin of alternative group
while(javadummy) {
CONDITION700: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to S --- JJ.M4
S = current0 ;
};
// ***** begin condlist 701 (in cond 700) *****
CONDLIST701: // @@@ begin of alternative group
while(javadummy) {
CONDITION702: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Map_Statement_A1
JavaNode Map_Statement_A1= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "ConfigurationStatements_A2") )
   if (javadummy) break  CONDITION702;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Map_Statement_A1 --- JJ.M4
Map_Statement_A1 = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_MapStatement_A1
(
Map_Statement_A1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST701;
// $$$$$$$$ 
} // CONDITION702 // @@@ end of alternative
CONDITION703: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ConnectStatement_A1
JavaNode ConnectStatement_A1= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "ConfigurationStatements_A1") )
   if (javadummy) break  CONDITION703;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ConnectStatement_A1 --- JJ.M4
ConnectStatement_A1 = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_ConnectStatement_A1
(
ConnectStatement_A1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST701;
// $$$$$$$$ 
} // CONDITION703 // @@@ end of alternative
CONDITION704: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative StartTCStatement
JavaNode StartTCStatement= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "ConfigurationStatements_A7") )
   if (javadummy) break  CONDITION704;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to StartTCStatement --- JJ.M4
StartTCStatement = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_StartTCStatement
(
StartTCStatement
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST701;
// $$$$$$$$ 
} // CONDITION704 // @@@ end of alternative
CONDITION705: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative DoneStatement
JavaNode DoneStatement= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "ConfigurationStatements_A5") )
   if (javadummy) break  CONDITION705;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to DoneStatement --- JJ.M4
DoneStatement = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_DoneStatement
(
DoneStatement
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST701;
// $$$$$$$$ 
} // CONDITION705 // @@@ end of alternative
CONDITION706: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative UnmapStatement
JavaNode UnmapStatement= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "ConfigurationStatements_A4") )
   if (javadummy) break  CONDITION706;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to UnmapStatement --- JJ.M4
UnmapStatement = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_UnmapStatement
(
UnmapStatement
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST701;
// $$$$$$$$ 
} // CONDITION706 // @@@ end of alternative
CONDITION707: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X3
JavaNode X3= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "ConfigurationStatements_A3") )
   if (javadummy) break  CONDITION707;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "disconnect statement" )
,
X3
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST701;
// $$$$$$$$ 
} // CONDITION707 // @@@ end of alternative
CONDITION708: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X6
JavaNode X6= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "ConfigurationStatements_A6") )
   if (javadummy) break  CONDITION708;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X6 --- JJ.M4
X6 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "killed statement" )
,
X6
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST701;
// $$$$$$$$ 
} // CONDITION708 // @@@ end of alternative
CONDITION709: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X8
JavaNode X8= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "ConfigurationStatements_A8") )
   if (javadummy) break  CONDITION709;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X8 --- JJ.M4
X8 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "stop component" )
,
X8
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST701;
// $$$$$$$$ 
} // CONDITION709 // @@@ end of alternative
CONDITION710: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X9
JavaNode X9= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "ConfigurationStatements_A9") )
   if (javadummy) break  CONDITION710;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X9 --- JJ.M4
X9 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "kill component" )
,
X9
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST701;
// $$$$$$$$ 
} // CONDITION710 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=701 N=700
if (javadummy) break CONDITION700;
} // CONDLIST701 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST699;
// $$$$$$$$ 
} // CONDITION700 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=699 N=698
if (javadummy) break CONDITION698;
} // CONDLIST699 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION698
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ConfigurationStatements");
}



public
static
void
Trafo_TimerStatements(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc S
JavaNode S = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION711:
while(javadummy) {
// ***** begin condlist 712 (in cond 711) *****
CONDLIST712: // @@@ begin of alternative group
while(javadummy) {
CONDITION713: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to S --- JJ.M4
S = current0 ;
};
// ***** begin condlist 714 (in cond 713) *****
CONDLIST714: // @@@ begin of alternative group
while(javadummy) {
CONDITION715: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative StartTimerStatement
JavaNode StartTimerStatement= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "TimerStatements_A1") )
   if (javadummy) break  CONDITION715;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to StartTimerStatement --- JJ.M4
StartTimerStatement = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_StartTimerStatement
(
StartTimerStatement
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST714;
// $$$$$$$$ 
} // CONDITION715 // @@@ end of alternative
CONDITION716: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "TimerStatements_A3") )
   if (javadummy) break  CONDITION716;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "standalone timeout (use alt)" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST714;
// $$$$$$$$ 
} // CONDITION716 // @@@ end of alternative
CONDITION717: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative StopTimerStatement
JavaNode StopTimerStatement= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "TimerStatements_A2") )
   if (javadummy) break  CONDITION717;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to StopTimerStatement --- JJ.M4
StopTimerStatement = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_StopTimerStatement
(
StopTimerStatement
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST714;
// $$$$$$$$ 
} // CONDITION717 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=714 N=713
if (javadummy) break CONDITION713;
} // CONDLIST714 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST712;
// $$$$$$$$ 
} // CONDITION713 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=712 N=711
if (javadummy) break CONDITION711;
} // CONDLIST712 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION711
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_TimerStatements");
}



public
static
void
Trafo_CommunicationStatements(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc S
JavaNode S = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION718:
while(javadummy) {
// ***** begin condlist 719 (in cond 718) *****
CONDLIST719: // @@@ begin of alternative group
while(javadummy) {
CONDITION720: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to S --- JJ.M4
S = current0 ;
};
// ***** begin condlist 721 (in cond 720) *****
CONDLIST721: // @@@ begin of alternative group
while(javadummy) {
CONDITION722: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative SendStmt
JavaNode SendStmt= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A1") )
   if (javadummy) break  CONDITION722;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to SendStmt --- JJ.M4
SendStmt = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SendStatement
(
SendStmt
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST721;
// $$$$$$$$ 
} // CONDITION722 // @@@ end of alternative
CONDITION723: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A2") )
   if (javadummy) break  CONDITION723;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 2" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST721;
// $$$$$$$$ 
} // CONDITION723 // @@@ end of alternative
CONDITION724: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A3") )
   if (javadummy) break  CONDITION724;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 3" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST721;
// $$$$$$$$ 
} // CONDITION724 // @@@ end of alternative
CONDITION725: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A4") )
   if (javadummy) break  CONDITION725;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 4" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST721;
// $$$$$$$$ 
} // CONDITION725 // @@@ end of alternative
CONDITION726: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RECEIVE
JavaNode RECEIVE= null;
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A5") )
   if (javadummy) break  CONDITION726;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RECEIVE --- JJ.M4
RECEIVE = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_ReceiveStatement
(
RECEIVE
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST721;
// $$$$$$$$ 
} // CONDITION726 // @@@ end of alternative
CONDITION727: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A6") )
   if (javadummy) break  CONDITION727;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 6" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST721;
// $$$$$$$$ 
} // CONDITION727 // @@@ end of alternative
CONDITION728: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A7") )
   if (javadummy) break  CONDITION728;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 7" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST721;
// $$$$$$$$ 
} // CONDITION728 // @@@ end of alternative
CONDITION729: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A8") )
   if (javadummy) break  CONDITION729;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 8" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST721;
// $$$$$$$$ 
} // CONDITION729 // @@@ end of alternative
CONDITION730: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A9") )
   if (javadummy) break  CONDITION730;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 9" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST721;
// $$$$$$$$ 
} // CONDITION730 // @@@ end of alternative
CONDITION731: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A10") )
   if (javadummy) break  CONDITION731;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 10" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST721;
// $$$$$$$$ 
} // CONDITION731 // @@@ end of alternative
CONDITION732: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A11") )
   if (javadummy) break  CONDITION732;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 11" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST721;
// $$$$$$$$ 
} // CONDITION732 // @@@ end of alternative
CONDITION733: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A12") )
   if (javadummy) break  CONDITION733;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
JavaLib.Log
(
S
);
YyProcs.
NotCovered
(
new JavaStringValue( "start statement" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST721;
// $$$$$$$$ 
} // CONDITION733 // @@@ end of alternative
CONDITION734: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A13") )
   if (javadummy) break  CONDITION734;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 13" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST721;
// $$$$$$$$ 
} // CONDITION734 // @@@ end of alternative
CONDITION735: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A14") )
   if (javadummy) break  CONDITION735;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 14" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST721;
// $$$$$$$$ 
} // CONDITION735 // @@@ end of alternative
CONDITION736: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A15") )
   if (javadummy) break  CONDITION736;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 15" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST721;
// $$$$$$$$ 
} // CONDITION736 // @@@ end of alternative
CONDITION737: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S;
if (! current0 .Name
.equals( "CommunicationStatements_A16") )
   if (javadummy) break  CONDITION737;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "communication statement 16" )
,
S
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST721;
// $$$$$$$$ 
} // CONDITION737 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=721 N=720
if (javadummy) break CONDITION720;
} // CONDLIST721 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST719;
// $$$$$$$$ 
} // CONDITION720 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=719 N=718
if (javadummy) break CONDITION718;
} // CONDLIST719 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION718
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_CommunicationStatements");
}



public
static
void
Trafo_BasicStatements(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Res
JavaNode Res = null;
CONDITION738:
while(javadummy) {
// ***** begin condlist 739 (in cond 738) *****
CONDLIST739: // @@@ begin of alternative group
while(javadummy) {
CONDITION740: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 741 (in cond 740) *****
CONDLIST741: // @@@ begin of alternative group
while(javadummy) {
CONDITION742: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ASSIGN
JavaNode ASSIGN= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "BasicStatements_A1") )
   if (javadummy) break  CONDITION742;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ASSIGN --- JJ.M4
ASSIGN = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_Assignment
(
ASSIGN
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST741;
// $$$$$$$$ 
} // CONDITION742 // @@@ end of alternative
CONDITION743: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative LOG
JavaNode LOG= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "BasicStatements_A2") )
   if (javadummy) break  CONDITION743;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to LOG --- JJ.M4
LOG = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_LogStatement
(
LOG
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST741;
// $$$$$$$$ 
} // CONDITION743 // @@@ end of alternative
CONDITION744: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Loop
JavaNode Loop= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "BasicStatements_A3") )
   if (javadummy) break  CONDITION744;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Loop --- JJ.M4
Loop = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_Loop
(
Loop
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST741;
// $$$$$$$$ 
} // CONDITION744 // @@@ end of alternative
CONDITION745: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Conditional
JavaNode Conditional= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "BasicStatements_A4") )
   if (javadummy) break  CONDITION745;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Conditional --- JJ.M4
Conditional = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_Conditional
(
Conditional
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST741;
// $$$$$$$$ 
} // CONDITION745 // @@@ end of alternative
CONDITION746: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "BasicStatements_A5") )
   if (javadummy) break  CONDITION746;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "BasicStatement 5" )
,
X
);
Res = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST741;
// $$$$$$$$ 
} // CONDITION746 // @@@ end of alternative
CONDITION747: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "BasicStatements_A6") )
   if (javadummy) break  CONDITION747;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "BasicStatement 6" )
,
X
);
Res = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST741;
// $$$$$$$$ 
} // CONDITION747 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=741 N=740
if (javadummy) break CONDITION740;
} // CONDLIST741 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Res
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST739;
// $$$$$$$$ 
} // CONDITION740 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=739 N=738
if (javadummy) break CONDITION738;
} // CONDLIST739 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION738
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_BasicStatements");
}



public
static
void
Trafo_BehaviourStatements(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION748:
while(javadummy) {
// ***** begin condlist 749 (in cond 748) *****
CONDLIST749: // @@@ begin of alternative group
while(javadummy) {
CONDITION750: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X1 --- JJ.M4
X1 = current0 ;
};
// ***** begin condlist 751 (in cond 750) *****
CONDLIST751: // @@@ begin of alternative group
while(javadummy) {
CONDITION752: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ZZ11
JavaNode ZZ11= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A1") )
   if (javadummy) break  CONDITION752;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ZZ11 --- JJ.M4
ZZ11 = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_TestcaseInstance
(
ZZ11
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST751;
// $$$$$$$$ 
} // CONDITION752 // @@@ end of alternative
CONDITION753: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X11
JavaNode X11= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A2") )
   if (javadummy) break  CONDITION753;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X11 --- JJ.M4
X11 = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_FunctionInstance
(
X11
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST751;
// $$$$$$$$ 
} // CONDITION753 // @@@ end of alternative
CONDITION754: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ReturnStatement
JavaNode ReturnStatement= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A3") )
   if (javadummy) break  CONDITION754;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ReturnStatement --- JJ.M4
ReturnStatement = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "return" )
,
X1
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST751;
// $$$$$$$$ 
} // CONDITION754 // @@@ end of alternative
CONDITION755: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative AltConstruct
JavaNode AltConstruct= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A4") )
   if (javadummy) break  CONDITION755;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to AltConstruct --- JJ.M4
AltConstruct = current1 ;
} //)) children level 1
};
YyProcs.
Stmt_AltConstruct
(
AltConstruct
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST751;
// $$$$$$$$ 
} // CONDITION755 // @@@ end of alternative
CONDITION756: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative InterleaveStatement
JavaNode InterleaveStatement= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A5") )
   if (javadummy) break  CONDITION756;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to InterleaveStatement --- JJ.M4
InterleaveStatement = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "interleave" )
,
X1
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST751;
// $$$$$$$$ 
} // CONDITION756 // @@@ end of alternative
CONDITION757: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative LabelStatement
JavaNode LabelStatement= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A6") )
   if (javadummy) break  CONDITION757;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to LabelStatement --- JJ.M4
LabelStatement = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "label" )
,
X1
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST751;
// $$$$$$$$ 
} // CONDITION757 // @@@ end of alternative
CONDITION758: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative GotoStatement
JavaNode GotoStatement= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A7") )
   if (javadummy) break  CONDITION758;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to GotoStatement --- JJ.M4
GotoStatement = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "goto" )
,
X1
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST751;
// $$$$$$$$ 
} // CONDITION758 // @@@ end of alternative
CONDITION759: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A8") )
   if (javadummy) break  CONDITION759;
};
Code = 
NodeFactory.NewNode(
"stmt_repeat"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST751;
// $$$$$$$$ 
} // CONDITION759 // @@@ end of alternative
CONDITION760: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative DeactivateStatement
JavaNode DeactivateStatement= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A9") )
   if (javadummy) break  CONDITION760;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to DeactivateStatement --- JJ.M4
DeactivateStatement = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "deactivate" )
,
X1
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST751;
// $$$$$$$$ 
} // CONDITION760 // @@@ end of alternative
CONDITION761: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative AltstepInstance
JavaNode AltstepInstance= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A10") )
   if (javadummy) break  CONDITION761;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to AltstepInstance --- JJ.M4
AltstepInstance = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "altstep" )
,
X1
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST751;
// $$$$$$$$ 
} // CONDITION761 // @@@ end of alternative
CONDITION762: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ActivateOp
JavaNode ActivateOp= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A11") )
   if (javadummy) break  CONDITION762;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ActivateOp --- JJ.M4
ActivateOp = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "activate" )
,
X1
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST751;
// $$$$$$$$ 
} // CONDITION762 // @@@ end of alternative
CONDITION763: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A12") )
   if (javadummy) break  CONDITION763;
};
YyProcs.
NotCovered
(
new JavaStringValue( "break" )
,
X1
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST751;
// $$$$$$$$ 
} // CONDITION763 // @@@ end of alternative
CONDITION764: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "BehaviourStatements_A13") )
   if (javadummy) break  CONDITION764;
};
YyProcs.
NotCovered
(
new JavaStringValue( "continue" )
,
X1
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST751;
// $$$$$$$$ 
} // CONDITION764 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=751 N=750
if (javadummy) break CONDITION750;
} // CONDLIST751 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST749;
// $$$$$$$$ 
} // CONDITION750 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=749 N=748
if (javadummy) break CONDITION748;
} // CONDLIST749 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION748
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_BehaviourStatements");
}



public
static
void
Trafo_SingleExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc RES0
JavaNode RES0 = null;
// DECLARE for proc Tp0
JavaNode Tp0 = null;
// DECLARE for proc Rest
JavaNode Rest = null;
// DECLARE for proc XOR
JavaNode XOR = null;
CONDITION765:
while(javadummy) {
// ***** begin condlist 766 (in cond 765) *****
CONDLIST766: // @@@ begin of alternative group
while(javadummy) {
CONDITION767: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 768 (in cond 767) *****
CONDLIST768: // @@@ begin of alternative group
while(javadummy) {
CONDITION769: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "SingleExpression_A1") )
   if (javadummy) break  CONDITION769;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XOR --- JJ.M4
XOR = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Rest --- JJ.M4
Rest = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_XorExpression
(
XOR
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES0 --- JJ.M4
RES0 = current0 ;
}
YyProcs.
Trafo_OrRest
(
Rest
,
Tp0
,
RES0
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST768;
// $$$$$$$$ 
} // CONDITION769 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=768 N=767
if (javadummy) break CONDITION767;
} // CONDLIST768 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST766;
// $$$$$$$$ 
} // CONDITION767 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=766 N=765
if (javadummy) break CONDITION765;
} // CONDLIST766 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION765
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_SingleExpression");
}



public
static
void
Trafo_OrRest(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc EXPR0
JavaNode EXPR0 = null;
// DECLARE for proc Tp0
JavaNode Tp0 = null;
CONDITION770:
while(javadummy) {
// ***** begin condlist 771 (in cond 770) *****
CONDLIST771: // @@@ begin of alternative group
while(javadummy) {
CONDITION772: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-SingleExpression_A1_M2")
if (javadummy) break CONDITION772;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to EXPR0 --- JJ.M4
EXPR0 = current0 ;
};
yy_outparam_0 = 
Tp0
;
yy_outparam_1 = 
EXPR0
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST771;
// $$$$$$$$ 
} // CONDITION772 // @@@ end of alternative
CONDITION773: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES3
JavaNode RES3= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
// DECLARE for alternative RES1
JavaNode RES1= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative Tl
JavaNode Tl= null;
// DECLARE for alternative Hd
JavaNode Hd= null;
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-SingleExpression_A1_M2")
if (javadummy) break CONDITION773;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Hd --- JJ.M4
Hd = current1 ;
current1 = current0.Child1[1];
//assign current1 to Tl --- JJ.M4
Tl = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to EXPR0 --- JJ.M4
EXPR0 = current0 ;
};
// ***** begin condlist 774 (in cond 773) *****
CONDLIST774: // @@@ begin of alternative group
while(javadummy) {
CONDITION775: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Hd;
if (! current0 .Name
.equals( "SingleExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION775;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST774;
// $$$$$$$$ 
} // CONDITION775 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=774 N=773
if (javadummy) break CONDITION773;
} // CONDLIST774 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Trafo_XorExpression
(
X
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES1 --- JJ.M4
RES1 = current0 ;
}
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "or" )
,
EXPR0
,
RES1
}
)
;
YyProcs.
CheckExpr
(
new JavaStringValue( "and" )
,
Hd
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
YyProcs.
Trafo_OrRest
(
Tl
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES3 --- JJ.M4
RES3 = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES3
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST771;
// $$$$$$$$ 
} // CONDITION773 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=771 N=770
if (javadummy) break CONDITION770;
} // CONDLIST771 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION770
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_OrRest");
}



public
static
void
Trafo_XorExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc XOR
JavaNode XOR = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc RES2
JavaNode RES2 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc TAIL
JavaNode TAIL = null;
// DECLARE for proc AND
JavaNode AND = null;
CONDITION776:
while(javadummy) {
// ***** begin condlist 777 (in cond 776) *****
CONDLIST777: // @@@ begin of alternative group
while(javadummy) {
CONDITION778: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to XOR --- JJ.M4
XOR = current0 ;
};
// ***** begin condlist 779 (in cond 778) *****
CONDLIST779: // @@@ begin of alternative group
while(javadummy) {
CONDITION780: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XOR;
if (! current0 .Name
.equals( "XorExpression_A1") )
   if (javadummy) break  CONDITION780;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to AND --- JJ.M4
AND = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_AndExpression
(
AND
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
YyProcs.
Trafo_XorSequence
(
TAIL
,
Tp1
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST779;
// $$$$$$$$ 
} // CONDITION780 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=779 N=778
if (javadummy) break CONDITION778;
} // CONDLIST779 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST777;
// $$$$$$$$ 
} // CONDITION778 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=777 N=776
if (javadummy) break CONDITION776;
} // CONDLIST777 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION776
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_XorExpression");
}



public
static
void
Trafo_XorSequence(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
CONDITION781:
while(javadummy) {
// ***** begin condlist 782 (in cond 781) *****
CONDLIST782: // @@@ begin of alternative group
while(javadummy) {
CONDITION783: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "NilOf-XorExpression_A1_M2")
if (javadummy) break CONDITION783;
};
yy_outparam_0 = 
Tp1
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST782;
// $$$$$$$$ 
} // CONDITION783 // @@@ end of alternative
CONDITION784: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES
JavaNode RES= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
// DECLARE for alternative ARG2
JavaNode ARG2= null;
// DECLARE for alternative AND
JavaNode AND= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "SeqOf-XorExpression_A1_M2")
if (javadummy) break CONDITION784;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "XorExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION784;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to AND --- JJ.M4
AND = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_AndExpression
(
AND
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ARG2 --- JJ.M4
ARG2 = current0 ;
}
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "xor" )
,
LEFT
,
ARG2
}
)
;
YyProcs.
CheckExpr
(
new JavaStringValue( "and" )
,
HEAD
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
YyProcs.
Trafo_XorSequence
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST782;
// $$$$$$$$ 
} // CONDITION784 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=782 N=781
if (javadummy) break CONDITION781;
} // CONDLIST782 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION781
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_XorSequence");
}



public
static
void
Trafo_AndExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc RES2
JavaNode RES2 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
// DECLARE for proc NOT
JavaNode NOT = null;
// DECLARE for proc AND
JavaNode AND = null;
CONDITION785:
while(javadummy) {
// ***** begin condlist 786 (in cond 785) *****
CONDLIST786: // @@@ begin of alternative group
while(javadummy) {
CONDITION787: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to AND --- JJ.M4
AND = current0 ;
};
{
JavaNode current0 = AND;
if (! current0 .Name
.equals( "AndExpression_A1") )
   if (javadummy) break  CONDITION787;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NOT --- JJ.M4
NOT = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to SEQ --- JJ.M4
SEQ = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_NotExpression
(
NOT
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
YyProcs.
Trafo_AndSequence
(
SEQ
,
Tp1
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST786;
// $$$$$$$$ 
} // CONDITION787 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=786 N=785
if (javadummy) break CONDITION785;
} // CONDLIST786 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION785
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_AndExpression");
}



public
static
void
Trafo_AndSequence(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
CONDITION788:
while(javadummy) {
// ***** begin condlist 789 (in cond 788) *****
CONDLIST789: // @@@ begin of alternative group
while(javadummy) {
CONDITION790: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "NilOf-AndExpression_A1_M2")
if (javadummy) break CONDITION790;
};
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST789;
// $$$$$$$$ 
} // CONDITION790 // @@@ end of alternative
CONDITION791: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES
JavaNode RES= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
// DECLARE for alternative ARG2
JavaNode ARG2= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative NOT
JavaNode NOT= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "SeqOf-AndExpression_A1_M2")
if (javadummy) break CONDITION791;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "AndExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION791;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NOT --- JJ.M4
NOT = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_NotExpression
(
NOT
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ARG2 --- JJ.M4
ARG2 = current0 ;
}
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "and" )
,
LEFT
,
ARG2
}
)
;
YyProcs.
CheckExpr
(
new JavaStringValue( "and" )
,
HEAD
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
YyProcs.
Trafo_AndSequence
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST789;
// $$$$$$$$ 
} // CONDITION791 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=789 N=788
if (javadummy) break CONDITION788;
} // CONDLIST789 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION788
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_AndSequence");
}



public
static
void
Trafo_NotExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES2
JavaNode RES2 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc EQUAL
JavaNode EQUAL = null;
// DECLARE for proc OP
JavaNode OP = null;
// DECLARE for proc NOT
JavaNode NOT = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc RES
JavaNode RES = null;
CONDITION792:
while(javadummy) {
// ***** begin condlist 793 (in cond 792) *****
CONDLIST793: // @@@ begin of alternative group
while(javadummy) {
CONDITION794: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NOT --- JJ.M4
NOT = current0 ;
};
{
JavaNode current0 = NOT;
if (! current0 .Name
.equals( "NotExpression_A1") )
   if (javadummy) break  CONDITION794;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to OP --- JJ.M4
OP = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to EQUAL --- JJ.M4
EQUAL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_EqualExpression
(
EQUAL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
// ***** begin condlist 795 (in cond 794) *****
CONDLIST795: // @@@ begin of alternative group
while(javadummy) {
CONDITION796: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-NotExpression_A1_M1")
if (javadummy) break CONDITION796;
{ //(( children level 1
} //)) children level 1
};
RES = 
RES2
;
Tp2 = 
Tp1
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST795;
// $$$$$$$$ 
} // CONDITION796 // @@@ end of alternative
CONDITION797: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (current0.Name
!= "OneOf-NotExpression_A1_M1")
if (javadummy) break CONDITION797;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
if (! current1 .Name
.equals( "NotExpression_A1_M1_A1") )
   if (javadummy) break  CONDITION797;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"monexpr"
, new JavaNode [] {
new JavaStringValue( "not" )
,
RES2
}
)
;
YyProcs.
CheckExpr1
(
new JavaStringValue( "not" )
,
OP
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST795;
// $$$$$$$$ 
} // CONDITION797 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=795 N=794
if (javadummy) break CONDITION794;
} // CONDLIST795 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST793;
// $$$$$$$$ 
} // CONDITION794 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=793 N=792
if (javadummy) break CONDITION792;
} // CONDLIST793 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION792
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_NotExpression");
}



public
static
void
Trafo_EqualExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc RES2
JavaNode RES2 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc TAIL
JavaNode TAIL = null;
// DECLARE for proc REL
JavaNode REL = null;
// DECLARE for proc EQUAL
JavaNode EQUAL = null;
CONDITION798:
while(javadummy) {
// ***** begin condlist 799 (in cond 798) *****
CONDLIST799: // @@@ begin of alternative group
while(javadummy) {
CONDITION800: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to EQUAL --- JJ.M4
EQUAL = current0 ;
};
{
JavaNode current0 = EQUAL;
if (! current0 .Name
.equals( "EqualExpression_A1") )
   if (javadummy) break  CONDITION800;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to REL --- JJ.M4
REL = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_RelExpression
(
REL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
YyProcs.
Trafo_EqualSequence
(
TAIL
,
Tp1
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST799;
// $$$$$$$$ 
} // CONDITION800 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=799 N=798
if (javadummy) break CONDITION798;
} // CONDLIST799 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION798
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_EqualExpression");
}



public
static
void
Trafo_EqualSequence(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
CONDITION801:
while(javadummy) {
// ***** begin condlist 802 (in cond 801) *****
CONDLIST802: // @@@ begin of alternative group
while(javadummy) {
CONDITION803: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "NilOf-EqualExpression_A1_M2")
if (javadummy) break CONDITION803;
};
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST802;
// $$$$$$$$ 
} // CONDITION803 // @@@ end of alternative
CONDITION804: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES
JavaNode RES= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative ARG2
JavaNode ARG2= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative REL
JavaNode REL= null;
// DECLARE for alternative OP
JavaNode OP= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "SeqOf-EqualExpression_A1_M2")
if (javadummy) break CONDITION804;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "EqualExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION804;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to OP --- JJ.M4
OP = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to REL --- JJ.M4
REL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_RelExpression
(
REL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ARG2 --- JJ.M4
ARG2 = current0 ;
}
// ***** begin condlist 805 (in cond 804) *****
CONDLIST805: // @@@ begin of alternative group
while(javadummy) {
CONDITION806: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "EqualOp_A1") )
   if (javadummy) break  CONDITION806;
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "equal" )
,
LEFT
,
ARG2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST805;
// $$$$$$$$ 
} // CONDITION806 // @@@ end of alternative
CONDITION807: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "EqualOp_A2") )
   if (javadummy) break  CONDITION807;
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "notequal" )
,
LEFT
,
ARG2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST805;
// $$$$$$$$ 
} // CONDITION807 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=805 N=804
if (javadummy) break CONDITION804;
} // CONDLIST805 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
CheckExpr
(
new JavaStringValue( "equal" )
,
OP
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
YyProcs.
Trafo_EqualSequence
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST802;
// $$$$$$$$ 
} // CONDITION804 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=802 N=801
if (javadummy) break CONDITION801;
} // CONDLIST802 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION801
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_EqualSequence");
}



public
static
void
Trafo_RelExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc REL
JavaNode REL = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
CONDITION808:
while(javadummy) {
// ***** begin condlist 809 (in cond 808) *****
CONDLIST809: // @@@ begin of alternative group
while(javadummy) {
CONDITION810: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to REL --- JJ.M4
REL = current0 ;
};
// ***** begin condlist 811 (in cond 810) *****
CONDLIST811: // @@@ begin of alternative group
while(javadummy) {
CONDITION812: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES2
JavaNode RES2= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative SHIFT
JavaNode SHIFT= null;
{
JavaNode current0 = REL;
if (! current0 .Name
.equals( "RelExpression_A1") )
   if (javadummy) break  CONDITION812;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to SHIFT --- JJ.M4
SHIFT = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ShiftExpression
(
SHIFT
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
YyProcs.
Trafo_RelSequence
(
TAIL
,
Tp1
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST811;
// $$$$$$$$ 
} // CONDITION812 // @@@ end of alternative
CONDITION813: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tps
JavaNode Tps= null;
// DECLARE for alternative Compound
JavaNode Compound= null;
{
JavaNode current0 = REL;
if (! current0 .Name
.equals( "RelExpression_A2") )
   if (javadummy) break  CONDITION813;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Compound --- JJ.M4
Compound = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_CompoundExpression
(
Compound
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tps --- JJ.M4
Tps = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
Tp2 = 
NodeFactory.NewNode(
"tp_compound"
, new JavaNode [] {
Tps
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST811;
// $$$$$$$$ 
} // CONDITION813 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=811 N=810
if (javadummy) break CONDITION810;
} // CONDLIST811 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST809;
// $$$$$$$$ 
} // CONDITION810 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=809 N=808
if (javadummy) break CONDITION808;
} // CONDLIST809 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION808
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_RelExpression");
}



public
static
void
Trafo_RelSequence(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc HEAD
JavaNode HEAD = null;
CONDITION814:
while(javadummy) {
// ***** begin condlist 815 (in cond 814) *****
CONDLIST815: // @@@ begin of alternative group
while(javadummy) {
CONDITION816: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to HEAD --- JJ.M4
HEAD = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = HEAD;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-RelExpression_A1_M2")
if (javadummy) break CONDITION816;
{ //(( children level 1
} //)) children level 1
};
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST815;
// $$$$$$$$ 
} // CONDITION816 // @@@ end of alternative
CONDITION817: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative ARG2
JavaNode ARG2= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative REL
JavaNode REL= null;
// DECLARE for alternative OP
JavaNode OP= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
// DECLARE for alternative RES
JavaNode RES= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to HEAD --- JJ.M4
HEAD = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = HEAD;
if (current0.Name
!= "OneOf-RelExpression_A1_M2")
if (javadummy) break CONDITION817;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
if (! current1 .Name
.equals( "RelExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION817;
{ //(( children level 2
JavaNode current2 =
   current1 . Child1[0];
JavaNode kurrent1 = current1;
//assign current2 to OP --- JJ.M4
OP = current2 ;
current2 = kurrent1.Child1[1];
//assign current2 to REL --- JJ.M4
REL = current2 ;
} //)) children level 2
} //)) children level 1
};
YyProcs.
Trafo_ShiftExpression
(
REL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ARG2 --- JJ.M4
ARG2 = current0 ;
}
// ***** begin condlist 818 (in cond 817) *****
CONDLIST818: // @@@ begin of alternative group
while(javadummy) {
CONDITION819: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "RelOp_A1") )
   if (javadummy) break  CONDITION819;
};
RES = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "less" )
,
LEFT
,
ARG2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST818;
// $$$$$$$$ 
} // CONDITION819 // @@@ end of alternative
CONDITION820: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "RelOp_A2") )
   if (javadummy) break  CONDITION820;
};
RES = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "greater" )
,
LEFT
,
ARG2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST818;
// $$$$$$$$ 
} // CONDITION820 // @@@ end of alternative
CONDITION821: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "RelOp_A3") )
   if (javadummy) break  CONDITION821;
};
RES = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "greaterequal" )
,
LEFT
,
ARG2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST818;
// $$$$$$$$ 
} // CONDITION821 // @@@ end of alternative
CONDITION822: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "RelOp_A4") )
   if (javadummy) break  CONDITION822;
};
RES = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "lessequal" )
,
LEFT
,
ARG2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST818;
// $$$$$$$$ 
} // CONDITION822 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=818 N=817
if (javadummy) break CONDITION817;
} // CONDLIST818 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
CheckExpr
(
new JavaStringValue( "less" )
,
OP
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST815;
// $$$$$$$$ 
} // CONDITION817 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=815 N=814
if (javadummy) break CONDITION814;
} // CONDLIST815 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION814
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_RelSequence");
}



public
static
void
Trafo_ShiftExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc RES2
JavaNode RES2 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc TAIL
JavaNode TAIL = null;
// DECLARE for proc BITOR
JavaNode BITOR = null;
// DECLARE for proc SHIFT
JavaNode SHIFT = null;
CONDITION823:
while(javadummy) {
// ***** begin condlist 824 (in cond 823) *****
CONDLIST824: // @@@ begin of alternative group
while(javadummy) {
CONDITION825: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SHIFT --- JJ.M4
SHIFT = current0 ;
};
{
JavaNode current0 = SHIFT;
if (! current0 .Name
.equals( "ShiftExpression_A1") )
   if (javadummy) break  CONDITION825;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to BITOR --- JJ.M4
BITOR = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BitOrExpression
(
BITOR
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
YyProcs.
Trafo_ShiftSequence
(
TAIL
,
Tp1
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST824;
// $$$$$$$$ 
} // CONDITION825 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=824 N=823
if (javadummy) break CONDITION823;
} // CONDLIST824 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION823
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ShiftExpression");
}



public
static
void
Trafo_ShiftSequence(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc X
JavaNode X = null;
CONDITION826:
while(javadummy) {
// ***** begin condlist 827 (in cond 826) *****
CONDLIST827: // @@@ begin of alternative group
while(javadummy) {
CONDITION828: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = X;
if (current0.Name
!= "NilOf-ShiftExpression_A1_M2")
if (javadummy) break CONDITION828;
};
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST827;
// $$$$$$$$ 
} // CONDITION828 // @@@ end of alternative
CONDITION829: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES
JavaNode RES= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative ARG2
JavaNode ARG2= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative SHIFT
JavaNode SHIFT= null;
// DECLARE for alternative OP
JavaNode OP= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = X;
if (current0.Name
!= "SeqOf-ShiftExpression_A1_M2")
if (javadummy) break CONDITION829;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "ShiftExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION829;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to OP --- JJ.M4
OP = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to SHIFT --- JJ.M4
SHIFT = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BitOrExpression
(
SHIFT
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ARG2 --- JJ.M4
ARG2 = current0 ;
}
// ***** begin condlist 830 (in cond 829) *****
CONDLIST830: // @@@ begin of alternative group
while(javadummy) {
CONDITION831: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "ShiftOp_A1") )
   if (javadummy) break  CONDITION831;
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "shiftleft" )
,
LEFT
,
ARG2
}
)
;
YyProcs.
NotCovered
(
new JavaStringValue( "shift left operator" )
,
OP
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST830;
// $$$$$$$$ 
} // CONDITION831 // @@@ end of alternative
CONDITION832: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "ShiftOp_A2") )
   if (javadummy) break  CONDITION832;
};
YyProcs.
NotCovered
(
new JavaStringValue( "shift right operator" )
,
OP
);
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "shiftright" )
,
LEFT
,
ARG2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST830;
// $$$$$$$$ 
} // CONDITION832 // @@@ end of alternative
CONDITION833: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "ShiftOp_A3") )
   if (javadummy) break  CONDITION833;
};
YyProcs.
NotCovered
(
new JavaStringValue( "rotate left operator" )
,
OP
);
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "rotateleft" )
,
LEFT
,
ARG2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST830;
// $$$$$$$$ 
} // CONDITION833 // @@@ end of alternative
CONDITION834: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "ShiftOp_A4") )
   if (javadummy) break  CONDITION834;
};
YyProcs.
NotCovered
(
new JavaStringValue( "rotate right operator" )
,
OP
);
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "rotateright" )
,
LEFT
,
ARG2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST830;
// $$$$$$$$ 
} // CONDITION834 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=830 N=829
if (javadummy) break CONDITION829;
} // CONDLIST830 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
CheckExpr
(
new JavaStringValue( "rotate" )
,
OP
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
YyProcs.
Trafo_ShiftSequence
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST827;
// $$$$$$$$ 
} // CONDITION829 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=827 N=826
if (javadummy) break CONDITION826;
} // CONDLIST827 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION826
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ShiftSequence");
}



public
static
void
Trafo_BitOrExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc RES2
JavaNode RES2 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc TAIL
JavaNode TAIL = null;
// DECLARE for proc BITXOR
JavaNode BITXOR = null;
// DECLARE for proc BITOR
JavaNode BITOR = null;
CONDITION835:
while(javadummy) {
// ***** begin condlist 836 (in cond 835) *****
CONDLIST836: // @@@ begin of alternative group
while(javadummy) {
CONDITION837: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to BITOR --- JJ.M4
BITOR = current0 ;
};
{
JavaNode current0 = BITOR;
if (! current0 .Name
.equals( "BitOrExpression_A1") )
   if (javadummy) break  CONDITION837;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to BITXOR --- JJ.M4
BITXOR = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BitXorExpression
(
BITXOR
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
YyProcs.
Trafo_BitOrSequence
(
TAIL
,
Tp1
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST836;
// $$$$$$$$ 
} // CONDITION837 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=836 N=835
if (javadummy) break CONDITION835;
} // CONDLIST836 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION835
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_BitOrExpression");
}



public
static
void
Trafo_BitOrSequence(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
CONDITION838:
while(javadummy) {
// ***** begin condlist 839 (in cond 838) *****
CONDLIST839: // @@@ begin of alternative group
while(javadummy) {
CONDITION840: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "NilOf-BitOrExpression_A1_M2")
if (javadummy) break CONDITION840;
};
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST839;
// $$$$$$$$ 
} // CONDITION840 // @@@ end of alternative
CONDITION841: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES
JavaNode RES= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
// DECLARE for alternative ARG2
JavaNode ARG2= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative XOR
JavaNode XOR= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "SeqOf-BitOrExpression_A1_M2")
if (javadummy) break CONDITION841;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "BitOrExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION841;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XOR --- JJ.M4
XOR = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BitXorExpression
(
XOR
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ARG2 --- JJ.M4
ARG2 = current0 ;
}
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "bitor" )
,
LEFT
,
ARG2
}
)
;
YyProcs.
CheckExpr
(
new JavaStringValue( "bitor" )
,
HEAD
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
YyProcs.
NotCovered
(
new JavaStringValue( "or4b operator" )
,
HEAD
);
YyProcs.
Trafo_BitOrSequence
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST839;
// $$$$$$$$ 
} // CONDITION841 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=839 N=838
if (javadummy) break CONDITION838;
} // CONDLIST839 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION838
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_BitOrSequence");
}



public
static
void
Trafo_BitXorExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc RES2
JavaNode RES2 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc TAIL
JavaNode TAIL = null;
// DECLARE for proc BITAND
JavaNode BITAND = null;
// DECLARE for proc BITXOR
JavaNode BITXOR = null;
CONDITION842:
while(javadummy) {
// ***** begin condlist 843 (in cond 842) *****
CONDLIST843: // @@@ begin of alternative group
while(javadummy) {
CONDITION844: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to BITXOR --- JJ.M4
BITXOR = current0 ;
};
{
JavaNode current0 = BITXOR;
if (! current0 .Name
.equals( "BitXorExpression_A1") )
   if (javadummy) break  CONDITION844;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to BITAND --- JJ.M4
BITAND = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BitAndExpression
(
BITAND
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
YyProcs.
Trafo_BitXorSequence
(
TAIL
,
Tp1
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST843;
// $$$$$$$$ 
} // CONDITION844 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=843 N=842
if (javadummy) break CONDITION842;
} // CONDLIST843 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION842
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_BitXorExpression");
}



public
static
void
Trafo_BitXorSequence(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
CONDITION845:
while(javadummy) {
// ***** begin condlist 846 (in cond 845) *****
CONDLIST846: // @@@ begin of alternative group
while(javadummy) {
CONDITION847: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "NilOf-BitXorExpression_A1_M2")
if (javadummy) break CONDITION847;
};
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST846;
// $$$$$$$$ 
} // CONDITION847 // @@@ end of alternative
CONDITION848: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES
JavaNode RES= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
// DECLARE for alternative ARG2
JavaNode ARG2= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative AND
JavaNode AND= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "SeqOf-BitXorExpression_A1_M2")
if (javadummy) break CONDITION848;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "BitXorExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION848;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to AND --- JJ.M4
AND = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BitAndExpression
(
AND
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ARG2 --- JJ.M4
ARG2 = current0 ;
}
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "bitxor" )
,
LEFT
,
ARG2
}
)
;
YyProcs.
CheckExpr
(
new JavaStringValue( "bitxor" )
,
HEAD
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
YyProcs.
NotCovered
(
new JavaStringValue( "xor4b operator" )
,
HEAD
);
YyProcs.
Trafo_BitXorSequence
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST846;
// $$$$$$$$ 
} // CONDITION848 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=846 N=845
if (javadummy) break CONDITION845;
} // CONDLIST846 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION845
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_BitXorSequence");
}



public
static
void
Trafo_BitAndExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp3
JavaNode Tp3 = null;
// DECLARE for proc RES2
JavaNode RES2 = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc TAIL
JavaNode TAIL = null;
// DECLARE for proc BITNOT
JavaNode BITNOT = null;
// DECLARE for proc BITAND
JavaNode BITAND = null;
CONDITION849:
while(javadummy) {
// ***** begin condlist 850 (in cond 849) *****
CONDLIST850: // @@@ begin of alternative group
while(javadummy) {
CONDITION851: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to BITAND --- JJ.M4
BITAND = current0 ;
};
{
JavaNode current0 = BITAND;
if (! current0 .Name
.equals( "BitAndExpression_A1") )
   if (javadummy) break  CONDITION851;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to BITNOT --- JJ.M4
BITNOT = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BitNotExpression
(
BITNOT
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
YyProcs.
Trafo_BitAndSequence
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST850;
// $$$$$$$$ 
} // CONDITION851 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=850 N=849
if (javadummy) break CONDITION849;
} // CONDLIST850 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION849
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_BitAndExpression");
}



public
static
void
Trafo_BitAndSequence(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
CONDITION852:
while(javadummy) {
// ***** begin condlist 853 (in cond 852) *****
CONDLIST853: // @@@ begin of alternative group
while(javadummy) {
CONDITION854: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "NilOf-BitAndExpression_A1_M2")
if (javadummy) break CONDITION854;
};
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST853;
// $$$$$$$$ 
} // CONDITION854 // @@@ end of alternative
CONDITION855: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES
JavaNode RES= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
// DECLARE for alternative ARG2
JavaNode ARG2= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative NOT
JavaNode NOT= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "SeqOf-BitAndExpression_A1_M2")
if (javadummy) break CONDITION855;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "BitAndExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION855;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NOT --- JJ.M4
NOT = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_BitNotExpression
(
NOT
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ARG2 --- JJ.M4
ARG2 = current0 ;
}
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "bitand" )
,
LEFT
,
ARG2
}
)
;
YyProcs.
NotCovered
(
new JavaStringValue( "and4b operator" )
,
HEAD
);
YyProcs.
CheckExpr
(
new JavaStringValue( "bitand" )
,
HEAD
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
YyProcs.
Trafo_BitAndSequence
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST853;
// $$$$$$$$ 
} // CONDITION855 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=853 N=852
if (javadummy) break CONDITION852;
} // CONDLIST853 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION852
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_BitAndSequence");
}



public
static
void
Trafo_BitNotExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES2
JavaNode RES2 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc ADD
JavaNode ADD = null;
// DECLARE for proc OP
JavaNode OP = null;
// DECLARE for proc BITNOT
JavaNode BITNOT = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc RES
JavaNode RES = null;
CONDITION856:
while(javadummy) {
// ***** begin condlist 857 (in cond 856) *****
CONDLIST857: // @@@ begin of alternative group
while(javadummy) {
CONDITION858: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to BITNOT --- JJ.M4
BITNOT = current0 ;
};
{
JavaNode current0 = BITNOT;
if (! current0 .Name
.equals( "BitNotExpression_A1") )
   if (javadummy) break  CONDITION858;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to OP --- JJ.M4
OP = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to ADD --- JJ.M4
ADD = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ADD
(
ADD
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES2 --- JJ.M4
RES2 = current0 ;
}
// ***** begin condlist 859 (in cond 858) *****
CONDLIST859: // @@@ begin of alternative group
while(javadummy) {
CONDITION860: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-BitNotExpression_A1_M1")
if (javadummy) break CONDITION860;
{ //(( children level 1
} //)) children level 1
};
RES = 
RES2
;
Tp2 = 
Tp1
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST859;
// $$$$$$$$ 
} // CONDITION860 // @@@ end of alternative
CONDITION861: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (current0.Name
!= "OneOf-BitNotExpression_A1_M1")
if (javadummy) break CONDITION861;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
if (! current1 .Name
.equals( "BitNotExpression_A1_M1_A1") )
   if (javadummy) break  CONDITION861;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"monexpr"
, new JavaNode [] {
new JavaStringValue( "bitnot" )
,
RES2
}
)
;
YyProcs.
NotCovered
(
new JavaStringValue( "bit4b operator" )
,
OP
);
YyProcs.
CheckExpr1
(
new JavaStringValue( "bitnot" )
,
OP
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST859;
// $$$$$$$$ 
} // CONDITION861 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=859 N=858
if (javadummy) break CONDITION858;
} // CONDLIST859 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST857;
// $$$$$$$$ 
} // CONDITION858 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=857 N=856
if (javadummy) break CONDITION856;
} // CONDLIST857 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION856
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_BitNotExpression");
}



public
static
void
Trafo_ADD(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc RES1
JavaNode RES1 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
// DECLARE for proc MUL
JavaNode MUL = null;
// DECLARE for proc ADD
JavaNode ADD = null;
CONDITION862:
while(javadummy) {
// ***** begin condlist 863 (in cond 862) *****
CONDLIST863: // @@@ begin of alternative group
while(javadummy) {
CONDITION864: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to ADD --- JJ.M4
ADD = current0 ;
};
{
JavaNode current0 = ADD;
if (! current0 .Name
.equals( "AddExpression_A1") )
   if (javadummy) break  CONDITION864;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to MUL --- JJ.M4
MUL = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to SEQ --- JJ.M4
SEQ = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_MUL
(
MUL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES1 --- JJ.M4
RES1 = current0 ;
}
YyProcs.
Trafo_ADDSEQ
(
SEQ
,
Tp1
,
RES1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST863;
// $$$$$$$$ 
} // CONDITION864 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=863 N=862
if (javadummy) break CONDITION862;
} // CONDLIST863 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION862
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ADD");
}



public
static
void
Trafo_ADDSEQ(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
CONDITION865:
while(javadummy) {
// ***** begin condlist 866 (in cond 865) *****
CONDLIST866: // @@@ begin of alternative group
while(javadummy) {
CONDITION867: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "NilOf-AddExpression_A1_M2")
if (javadummy) break CONDITION867;
};
yy_outparam_0 = 
Tp1
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST866;
// $$$$$$$$ 
} // CONDITION867 // @@@ end of alternative
CONDITION868: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES
JavaNode RES= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative ARG1
JavaNode ARG1= null;
// DECLARE for alternative MUL
JavaNode MUL= null;
// DECLARE for alternative OP
JavaNode OP= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "SeqOf-AddExpression_A1_M2")
if (javadummy) break CONDITION868;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "AddExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION868;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to OP --- JJ.M4
OP = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to MUL --- JJ.M4
MUL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_MUL
(
MUL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ARG1 --- JJ.M4
ARG1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(OP);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
// ***** begin condlist 869 (in cond 868) *****
CONDLIST869: // @@@ begin of alternative group
while(javadummy) {
CONDITION870: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "AddOp_A1") )
   if (javadummy) break  CONDITION870;
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "add" )
,
LEFT
,
ARG1
}
)
;
YyProcs.
CheckExpr
(
new JavaStringValue( "add" )
,
OP
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST869;
// $$$$$$$$ 
} // CONDITION870 // @@@ end of alternative
CONDITION871: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "AddOp_A2") )
   if (javadummy) break  CONDITION871;
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "sub" )
,
LEFT
,
ARG1
}
)
;
YyProcs.
CheckExpr
(
new JavaStringValue( "add" )
,
OP
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST869;
// $$$$$$$$ 
} // CONDITION871 // @@@ end of alternative
CONDITION872: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "AddOp_A3") )
   if (javadummy) break  CONDITION872;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "concat" )
,
LEFT
,
ARG1
}
)
;
YyProcs.
CheckExpr
(
new JavaStringValue( "concat" )
,
OP
,
Tp0
,
Tp1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST869;
// $$$$$$$$ 
} // CONDITION872 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=869 N=868
if (javadummy) break CONDITION868;
} // CONDLIST869 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Trafo_ADDSEQ
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST866;
// $$$$$$$$ 
} // CONDITION868 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=866 N=865
if (javadummy) break CONDITION865;
} // CONDLIST866 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION865
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ADDSEQ");
}



public
static
void
Trafo_UnaryExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc UNARY
JavaNode UNARY = null;
// DECLARE for proc PRIMARY
JavaNode PRIMARY = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc ResUnary
JavaNode ResUnary = null;
// DECLARE for proc TpUnary
JavaNode TpUnary = null;
CONDITION873:
while(javadummy) {
// ***** begin condlist 874 (in cond 873) *****
CONDLIST874: // @@@ begin of alternative group
while(javadummy) {
CONDITION875: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to UNARY --- JJ.M4
UNARY = current0 ;
};
// ***** begin condlist 876 (in cond 875) *****
CONDLIST876: // @@@ begin of alternative group
while(javadummy) {
CONDITION877: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = UNARY;
if (! current0 .Name
.equals( "UnaryExpression_A1") )
   if (javadummy) break  CONDITION877;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to PRIMARY --- JJ.M4
PRIMARY = current1 ;
} //)) children level 1
};
// ***** begin condlist 878 (in cond 877) *****
CONDLIST878: // @@@ begin of alternative group
while(javadummy) {
CONDITION879: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-UnaryExpression_A1_M1")
if (javadummy) break CONDITION879;
{ //(( children level 1
} //)) children level 1
};
YyProcs.
Trafo_Primary
(
PRIMARY
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpUnary --- JJ.M4
TpUnary = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResUnary --- JJ.M4
ResUnary = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST878;
// $$$$$$$$ 
} // CONDITION879 // @@@ end of alternative
CONDITION880: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative XX1
JavaNode XX1= null;
// DECLARE for alternative XXX1
JavaNode XXX1= null;
{
JavaNode current0 = X1;
if (current0.Name
!= "OneOf-UnaryExpression_A1_M1")
if (javadummy) break CONDITION880;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to XX1 --- JJ.M4
XX1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 881 (in cond 880) *****
CONDLIST881: // @@@ begin of alternative group
while(javadummy) {
CONDITION882: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX1;
if (! current0 .Name
.equals( "UnaryExpression_A1_M1_A1") )
   if (javadummy) break  CONDITION882;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XXX1 --- JJ.M4
XXX1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 883 (in cond 882) *****
CONDLIST883: // @@@ begin of alternative group
while(javadummy) {
CONDITION884: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX1;
if (! current0 .Name
.equals( "UnaryOp_A1") )
   if (javadummy) break  CONDITION884;
};
YyProcs.
Trafo_Primary
(
PRIMARY
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpUnary --- JJ.M4
TpUnary = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResUnary --- JJ.M4
ResUnary = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST883;
// $$$$$$$$ 
} // CONDITION884 // @@@ end of alternative
CONDITION885: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ResUnary0
JavaNode ResUnary0= null;
// DECLARE for alternative TpUnary0
JavaNode TpUnary0= null;
{
JavaNode current0 = XXX1;
if (! current0 .Name
.equals( "UnaryOp_A2") )
   if (javadummy) break  CONDITION885;
};
YyProcs.
Trafo_Primary
(
PRIMARY
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpUnary0 --- JJ.M4
TpUnary0 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResUnary0 --- JJ.M4
ResUnary0 = current0 ;
}
YyProcs.
CheckExpr1
(
new JavaStringValue( "minus" )
,
XX1
,
TpUnary0
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpUnary --- JJ.M4
TpUnary = current0 ;
}
ResUnary = 
NodeFactory.NewNode(
"monexpr"
, new JavaNode [] {
new JavaStringValue( "minus" )
,
ResUnary0
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST883;
// $$$$$$$$ 
} // CONDITION885 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=883 N=882
if (javadummy) break CONDITION882;
} // CONDLIST883 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST881;
// $$$$$$$$ 
} // CONDITION882 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=881 N=880
if (javadummy) break CONDITION880;
} // CONDLIST881 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST878;
// $$$$$$$$ 
} // CONDITION880 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=878 N=877
if (javadummy) break CONDITION877;
} // CONDLIST878 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST876;
// $$$$$$$$ 
} // CONDITION877 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=876 N=875
if (javadummy) break CONDITION875;
} // CONDLIST876 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
TpUnary
;
yy_outparam_1 = 
ResUnary
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST874;
// $$$$$$$$ 
} // CONDITION875 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=874 N=873
if (javadummy) break CONDITION873;
} // CONDLIST874 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION873
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_UnaryExpression");
}



public
static
void
Trafo_MUL(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc MUL
JavaNode MUL = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION886:
while(javadummy) {
// ***** begin condlist 887 (in cond 886) *****
CONDLIST887: // @@@ begin of alternative group
while(javadummy) {
CONDITION888: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to MUL --- JJ.M4
MUL = current0 ;
};
// ***** begin condlist 889 (in cond 888) *****
CONDLIST889: // @@@ begin of alternative group
while(javadummy) {
CONDITION890: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ResUnary
JavaNode ResUnary= null;
// DECLARE for alternative TpUnary
JavaNode TpUnary= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative UNARY
JavaNode UNARY= null;
{
JavaNode current0 = MUL;
if (! current0 .Name
.equals( "MulExpression_A1") )
   if (javadummy) break  CONDITION890;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to UNARY --- JJ.M4
UNARY = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_UnaryExpression
(
UNARY
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpUnary --- JJ.M4
TpUnary = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResUnary --- JJ.M4
ResUnary = current0 ;
}
YyProcs.
Trafo_MulSEQ
(
TAIL
,
TpUnary
,
ResUnary
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST889;
// $$$$$$$$ 
} // CONDITION890 // @@@ end of alternative
CONDITION891: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MUL;
if (! current0 .Name
.equals( "MulExpression_A2") )
   if (javadummy) break  CONDITION891;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "///" )
,
MUL
);
Tp = 
NodeFactory.NewNode(
"tp_undef"
, new JavaNode [] {
}
)
;
RES = 
NodeFactory.NewNode(
"expr_undef"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST889;
// $$$$$$$$ 
} // CONDITION891 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=889 N=888
if (javadummy) break CONDITION888;
} // CONDLIST889 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST887;
// $$$$$$$$ 
} // CONDITION888 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=887 N=886
if (javadummy) break CONDITION886;
} // CONDLIST887 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION886
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_MUL");
}



public
static
void
Trafo_MulSEQ(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc LEFT
JavaNode LEFT = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
CONDITION892:
while(javadummy) {
// ***** begin condlist 893 (in cond 892) *****
CONDLIST893: // @@@ begin of alternative group
while(javadummy) {
CONDITION894: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "NilOf-MulExpression_A1_M2")
if (javadummy) break CONDITION894;
};
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
LEFT
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST893;
// $$$$$$$$ 
} // CONDITION894 // @@@ end of alternative
CONDITION895: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RES
JavaNode RES= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
// DECLARE for alternative ResUnary
JavaNode ResUnary= null;
// DECLARE for alternative TpUnary
JavaNode TpUnary= null;
// DECLARE for alternative UNARY
JavaNode UNARY= null;
// DECLARE for alternative OP
JavaNode OP= null;
// DECLARE for alternative RES2
JavaNode RES2= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to LEFT --- JJ.M4
LEFT = current0 ;
};
{
JavaNode current0 = SEQ;
if (current0.Name
!= "SeqOf-MulExpression_A1_M2")
if (javadummy) break CONDITION895;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
// ***** begin condlist 896 (in cond 895) *****
CONDLIST896: // @@@ begin of alternative group
while(javadummy) {
CONDITION897: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "MulExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION897;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to OP --- JJ.M4
OP = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to UNARY --- JJ.M4
UNARY = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_UnaryExpression
(
UNARY
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpUnary --- JJ.M4
TpUnary = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResUnary --- JJ.M4
ResUnary = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST896;
// $$$$$$$$ 
} // CONDITION897 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=896 N=895
if (javadummy) break CONDITION895;
} // CONDLIST896 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 898 (in cond 895) *****
CONDLIST898: // @@@ begin of alternative group
while(javadummy) {
CONDITION899: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "MultiplyOp_A1") )
   if (javadummy) break  CONDITION899;
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "mul" )
,
LEFT
,
ResUnary
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST898;
// $$$$$$$$ 
} // CONDITION899 // @@@ end of alternative
CONDITION900: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "MultiplyOp_A2") )
   if (javadummy) break  CONDITION900;
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "div" )
,
LEFT
,
ResUnary
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST898;
// $$$$$$$$ 
} // CONDITION900 // @@@ end of alternative
CONDITION901: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "MultiplyOp_A3") )
   if (javadummy) break  CONDITION901;
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "mod" )
,
LEFT
,
ResUnary
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST898;
// $$$$$$$$ 
} // CONDITION901 // @@@ end of alternative
CONDITION902: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = OP;
if (! current0 .Name
.equals( "MultiplyOp_A4") )
   if (javadummy) break  CONDITION902;
};
RES2 = 
NodeFactory.NewNode(
"binexpr"
, new JavaNode [] {
new JavaStringValue( "rem" )
,
LEFT
,
ResUnary
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST898;
// $$$$$$$$ 
} // CONDITION902 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=898 N=895
if (javadummy) break CONDITION895;
} // CONDLIST898 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
CheckExpr
(
new JavaStringValue( "mul" )
,
OP
,
Tp0
,
TpUnary
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
YyProcs.
Trafo_MulSEQ
(
TAIL
,
Tp2
,
RES2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST893;
// $$$$$$$$ 
} // CONDITION895 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=893 N=892
if (javadummy) break CONDITION892;
} // CONDLIST893 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION892
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_MulSEQ");
}



public
static
void
CheckExpr1(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X
JavaNode X = null;
CONDITION903:
while(javadummy) {
// ***** begin condlist 904 (in cond 903) *****
CONDLIST904: // @@@ begin of alternative group
while(javadummy) {
CONDITION905: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"not"))
   if (javadummy) break  CONDITION905;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
if (! current0 .Name
.equals( "tp_boolean") )
   if (javadummy) break  CONDITION905;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST904;
// $$$$$$$$ 
} // CONDITION905 // @@@ end of alternative
CONDITION906: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"bitnot"))
   if (javadummy) break  CONDITION906;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
if (! current0 .Name
.equals( "tp_boolean") )
   if (javadummy) break  CONDITION906;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST904;
// $$$$$$$$ 
} // CONDITION906 // @@@ end of alternative
CONDITION907: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"minus"))
   if (javadummy) break  CONDITION907;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION907;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST904;
// $$$$$$$$ 
} // CONDITION907 // @@@ end of alternative
CONDITION908: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
// DECLARE for alternative Operator
JavaNode Operator= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Operator --- JJ.M4
Operator = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(X);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "invalid type of argument" )
,
Pos
);
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST904;
// $$$$$$$$ 
} // CONDITION908 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=904 N=903
if (javadummy) break CONDITION903;
} // CONDLIST904 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION903
// failed:
JavaLib.rtsAllAlternativesFailed("CheckExpr1");
}



public
static
void
CheckExpr(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
,

JavaNode yy_inparam_3
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X
JavaNode X = null;
CONDITION909:
while(javadummy) {
// ***** begin condlist 910 (in cond 909) *****
CONDLIST910: // @@@ begin of alternative group
while(javadummy) {
CONDITION911: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"and"))
   if (javadummy) break  CONDITION911;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
if (! current0 .Name
.equals( "tp_boolean") )
   if (javadummy) break  CONDITION911;
};
{
JavaNode current0 = yy_inparam_3;
if (! current0 .Name
.equals( "tp_boolean") )
   if (javadummy) break  CONDITION911;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST910;
// $$$$$$$$ 
} // CONDITION911 // @@@ end of alternative
CONDITION912: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"equal"))
   if (javadummy) break  CONDITION912;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION912;
};
{
JavaNode current0 = yy_inparam_3;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION912;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST910;
// $$$$$$$$ 
} // CONDITION912 // @@@ end of alternative
CONDITION913: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"less"))
   if (javadummy) break  CONDITION913;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION913;
};
{
JavaNode current0 = yy_inparam_3;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION913;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST910;
// $$$$$$$$ 
} // CONDITION913 // @@@ end of alternative
CONDITION914: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"rotate"))
   if (javadummy) break  CONDITION914;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_3;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST910;
// $$$$$$$$ 
} // CONDITION914 // @@@ end of alternative
CONDITION915: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"bitor"))
   if (javadummy) break  CONDITION915;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_3;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST910;
// $$$$$$$$ 
} // CONDITION915 // @@@ end of alternative
CONDITION916: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"bitxor"))
   if (javadummy) break  CONDITION916;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_3;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST910;
// $$$$$$$$ 
} // CONDITION916 // @@@ end of alternative
CONDITION917: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative Tp0
JavaNode Tp0= null;
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"bitand"))
   if (javadummy) break  CONDITION917;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_3;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST910;
// $$$$$$$$ 
} // CONDITION917 // @@@ end of alternative
CONDITION918: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"add"))
   if (javadummy) break  CONDITION918;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION918;
};
{
JavaNode current0 = yy_inparam_3;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION918;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST910;
// $$$$$$$$ 
} // CONDITION918 // @@@ end of alternative
CONDITION919: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"concat"))
   if (javadummy) break  CONDITION919;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
if (! current0 .Name
.equals( "tp_charstring") )
   if (javadummy) break  CONDITION919;
};
{
JavaNode current0 = yy_inparam_3;
if (! current0 .Name
.equals( "tp_charstring") )
   if (javadummy) break  CONDITION919;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_charstring"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST910;
// $$$$$$$$ 
} // CONDITION919 // @@@ end of alternative
CONDITION920: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"mul"))
   if (javadummy) break  CONDITION920;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION920;
};
{
JavaNode current0 = yy_inparam_3;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION920;
};
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST910;
// $$$$$$$$ 
} // CONDITION920 // @@@ end of alternative
CONDITION921: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative Operator
JavaNode Operator= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Operator --- JJ.M4
Operator = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
{
JavaNode current0 = yy_inparam_3;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(X);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "invalid type of argument" )
,
Pos
);
yy_outparam_0 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST910;
// $$$$$$$$ 
} // CONDITION921 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=910 N=909
if (javadummy) break CONDITION909;
} // CONDLIST910 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION909
// failed:
JavaLib.rtsAllAlternativesFailed("CheckExpr");
}



public
static
void
Trafo_Primary(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc PRIMARY
JavaNode PRIMARY = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION922:
while(javadummy) {
// ***** begin condlist 923 (in cond 922) *****
CONDLIST923: // @@@ begin of alternative group
while(javadummy) {
CONDITION924: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to PRIMARY --- JJ.M4
PRIMARY = current0 ;
};
// ***** begin condlist 925 (in cond 924) *****
CONDLIST925: // @@@ begin of alternative group
while(javadummy) {
CONDITION926: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative CALL
JavaNode CALL= null;
{
JavaNode current0 = PRIMARY;
if (! current0 .Name
.equals( "Primary_A1") )
   if (javadummy) break  CONDITION926;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to CALL --- JJ.M4
CALL = current1 ;
} //)) children level 1
};
// ***** begin condlist 927 (in cond 926) *****
CONDLIST927: // @@@ begin of alternative group
while(javadummy) {
CONDITION928: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A1") )
   if (javadummy) break  CONDITION928;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 929 (in cond 928) *****
CONDLIST929: // @@@ begin of alternative group
while(javadummy) {
CONDITION930: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative CreateOp
JavaNode CreateOp= null;
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative XX3
JavaNode XX3= null;
// DECLARE for alternative XX2
JavaNode XX2= null;
// DECLARE for alternative XX1
JavaNode XX1= null;
// DECLARE for alternative XXX4
JavaNode XXX4= null;
// DECLARE for alternative XXX3
JavaNode XXX3= null;
// DECLARE for alternative Id
JavaNode Id= null;
// DECLARE for alternative XXX1
JavaNode XXX1= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ConfigurationOps_A1") )
   if (javadummy) break  CONDITION930;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to CreateOp --- JJ.M4
CreateOp = current1 ;
} //)) children level 1
};
// ***** begin condlist 931 (in cond 930) *****
CONDLIST931: // @@@ begin of alternative group
while(javadummy) {
CONDITION932: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CreateOp;
if (! current0 .Name
.equals( "CreateOp_A1") )
   if (javadummy) break  CONDITION932;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX1 --- JJ.M4
XX1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to XX2 --- JJ.M4
XX2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to XX3 --- JJ.M4
XX3 = current1 ;
} //)) children level 1
};
// ***** begin condlist 933 (in cond 932) *****
CONDLIST933: // @@@ begin of alternative group
while(javadummy) {
CONDITION934: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX1;
if (! current0 .Name
.equals( "ComponentType_A1") )
   if (javadummy) break  CONDITION934;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XXX1 --- JJ.M4
XXX1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to XXX3 --- JJ.M4
XXX3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to XXX4 --- JJ.M4
XXX4 = current1 ;
} //)) children level 1
};
// ***** begin condlist 935 (in cond 934) *****
CONDLIST935: // @@@ begin of alternative group
while(javadummy) {
CONDITION936: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentType_A1_M1")
if (javadummy) break CONDITION936;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST935;
// $$$$$$$$ 
} // CONDITION936 // @@@ end of alternative
CONDITION937: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX1;
if (current0.Name
!= "OneOf-ComponentType_A1_M1")
if (javadummy) break CONDITION937;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "xxx1" )
,
XXX1
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST935;
// $$$$$$$$ 
} // CONDITION937 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=935 N=934
if (javadummy) break CONDITION934;
} // CONDLIST935 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 938 (in cond 934) *****
CONDLIST938: // @@@ begin of alternative group
while(javadummy) {
CONDITION939: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentType_A1_M3")
if (javadummy) break CONDITION939;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST938;
// $$$$$$$$ 
} // CONDITION939 // @@@ end of alternative
CONDITION940: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX3;
if (current0.Name
!= "OneOf-ComponentType_A1_M3")
if (javadummy) break CONDITION940;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "xxx3" )
,
XXX3
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST938;
// $$$$$$$$ 
} // CONDITION940 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=938 N=934
if (javadummy) break CONDITION934;
} // CONDLIST938 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 941 (in cond 934) *****
CONDLIST941: // @@@ begin of alternative group
while(javadummy) {
CONDITION942: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX4;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentType_A1_M4")
if (javadummy) break CONDITION942;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST941;
// $$$$$$$$ 
} // CONDITION942 // @@@ end of alternative
CONDITION943: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX4;
if (current0.Name
!= "OneOf-ComponentType_A1_M4")
if (javadummy) break CONDITION943;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "xxx4" )
,
XXX4
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST941;
// $$$$$$$$ 
} // CONDITION943 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=941 N=934
if (javadummy) break CONDITION934;
} // CONDLIST941 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST933;
// $$$$$$$$ 
} // CONDITION934 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=933 N=932
if (javadummy) break CONDITION932;
} // CONDLIST933 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 944 (in cond 932) *****
CONDLIST944: // @@@ begin of alternative group
while(javadummy) {
CONDITION945: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-CreateOp_A1_M4")
if (javadummy) break CONDITION945;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST944;
// $$$$$$$$ 
} // CONDITION945 // @@@ end of alternative
CONDITION946: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX2;
if (current0.Name
!= "OneOf-CreateOp_A1_M4")
if (javadummy) break CONDITION946;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "xx2" )
,
XX2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST944;
// $$$$$$$$ 
} // CONDITION946 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=944 N=932
if (javadummy) break CONDITION932;
} // CONDLIST944 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 947 (in cond 932) *****
CONDLIST947: // @@@ begin of alternative group
while(javadummy) {
CONDITION948: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-CreateOp_A1_M5")
if (javadummy) break CONDITION948;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST947;
// $$$$$$$$ 
} // CONDITION948 // @@@ end of alternative
CONDITION949: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX3;
if (current0.Name
!= "OneOf-CreateOp_A1_M5")
if (javadummy) break CONDITION949;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "xx3" )
,
XX3
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST947;
// $$$$$$$$ 
} // CONDITION949 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=947 N=932
if (javadummy) break CONDITION932;
} // CONDLIST947 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
GloballyDefined
(
Id
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 950 (in cond 932) *****
CONDLIST950: // @@@ begin of alternative group
while(javadummy) {
CONDITION951: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION951;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST950;
// $$$$$$$$ 
} // CONDITION951 // @@@ end of alternative
CONDITION952: // @@@ begin of alternative
while(javadummy) {
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "component type expected" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST950;
// $$$$$$$$ 
} // CONDITION952 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=950 N=932
if (javadummy) break CONDITION932;
} // CONDLIST950 @@@ end of alternative group
// *** CONTINUE ***
Tp = 
NodeFactory.NewNode(
"tp_referenced"
, new JavaNode [] {
Def
}
)
;
RES = 
NodeFactory.NewNode(
"createcomponent"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST931;
// $$$$$$$$ 
} // CONDITION932 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=931 N=930
if (javadummy) break CONDITION930;
} // CONDLIST931 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST929;
// $$$$$$$$ 
} // CONDITION930 // @@@ end of alternative
CONDITION953: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ConfigurationOps_A2") )
   if (javadummy) break  CONDITION953;
};
YyProcs.
NotCovered
(
new JavaStringValue( "configuration op 2" )
,
X
);
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST929;
// $$$$$$$$ 
} // CONDITION953 // @@@ end of alternative
CONDITION954: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ConfigurationOps_A3") )
   if (javadummy) break  CONDITION954;
};
YyProcs.
NotCovered
(
new JavaStringValue( "configuration op 3" )
,
X
);
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST929;
// $$$$$$$$ 
} // CONDITION954 // @@@ end of alternative
CONDITION955: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ConfigurationOps_A4") )
   if (javadummy) break  CONDITION955;
};
YyProcs.
NotCovered
(
new JavaStringValue( "configuration op 4" )
,
X
);
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST929;
// $$$$$$$$ 
} // CONDITION955 // @@@ end of alternative
CONDITION956: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ConfigurationOps_A5") )
   if (javadummy) break  CONDITION956;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "configuration op 5" )
,
X
);
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST929;
// $$$$$$$$ 
} // CONDITION956 // @@@ end of alternative
CONDITION957: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ConfigurationOps_A6") )
   if (javadummy) break  CONDITION957;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "configuration op 6" )
,
X
);
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST929;
// $$$$$$$$ 
} // CONDITION957 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=929 N=928
if (javadummy) break CONDITION928;
} // CONDLIST929 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST927;
// $$$$$$$$ 
} // CONDITION928 // @@@ end of alternative
CONDITION958: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A2") )
   if (javadummy) break  CONDITION958;
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A2" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST927;
// $$$$$$$$ 
} // CONDITION958 // @@@ end of alternative
CONDITION959: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A3") )
   if (javadummy) break  CONDITION959;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A3" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST927;
// $$$$$$$$ 
} // CONDITION959 // @@@ end of alternative
CONDITION960: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A4") )
   if (javadummy) break  CONDITION960;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A4" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST927;
// $$$$$$$$ 
} // CONDITION960 // @@@ end of alternative
CONDITION961: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A5") )
   if (javadummy) break  CONDITION961;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A5" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST927;
// $$$$$$$$ 
} // CONDITION961 // @@@ end of alternative
CONDITION962: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X62
JavaNode X62= null;
// DECLARE for alternative X61
JavaNode X61= null;
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A6") )
   if (javadummy) break  CONDITION962;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X61 --- JJ.M4
X61 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X62 --- JJ.M4
X62 = current1 ;
} //)) children level 1
};
// ***** begin condlist 963 (in cond 962) *****
CONDLIST963: // @@@ begin of alternative group
while(javadummy) {
CONDITION964: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X611
JavaNode X611= null;
// DECLARE for alternative Pattern
JavaNode Pattern= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
// DECLARE for alternative Value
JavaNode Value= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative X6112
JavaNode X6112= null;
// DECLARE for alternative X6111
JavaNode X6111= null;
{
JavaNode current0 = X61;
if (! current0 .Name
.equals( "TemplateOps_A1") )
   if (javadummy) break  CONDITION964;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X611 --- JJ.M4
X611 = current1 ;
} //)) children level 1
};
// ***** begin condlist 965 (in cond 964) *****
CONDLIST965: // @@@ begin of alternative group
while(javadummy) {
CONDITION966: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X611;
if (! current0 .Name
.equals( "MatchOp_A1") )
   if (javadummy) break  CONDITION966;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X6111 --- JJ.M4
X6111 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X6112 --- JJ.M4
X6112 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_Expression
(
X6111
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Value --- JJ.M4
Value = current0 ;
}
YyProcs.
primaTrafo_InLineTemplate
(
X6112
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Pattern --- JJ.M4
Pattern = current0 ;
}
// ***** begin condlist 967 (in cond 966) *****
CONDLIST967: // @@@ begin of alternative group
while(javadummy) {
CONDITION968: // @@@ begin of alternative
while(javadummy) {
{
if (! JavaLib.rtsEqualNode(
Tp1
,
Tp2
)
)
   if (javadummy) break  CONDITION968;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST967;
// $$$$$$$$ 
} // CONDITION968 // @@@ end of alternative
CONDITION969: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Fields
JavaNode Fields= null;
// DECLARE for alternative Val
JavaNode Val= null;
// DECLARE for alternative Ref
JavaNode Ref= null;
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative Tps
JavaNode Tps= null;
{
JavaNode current0 = Tp2;
if (! current0 .Name
.equals( "tp_nimmdas") )
   if (javadummy) break  CONDITION969;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tps --- JJ.M4
Tps = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Tp1;
if (! current0 .Name
.equals( "tp_referenced") )
   if (javadummy) break  CONDITION969;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Def --- JJ.M4
Def = current1 ;
} //)) children level 1
};
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION969;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
//assign current1 to Ref --- JJ.M4
Ref = current1 ;
} //)) children level 1
};
Val = JavaLib.rtsBoundToKey(Ref);
{
JavaNode current0 = Val;
if (! current0 .Name
.equals( "normalizedfields") )
   if (javadummy) break  CONDITION969;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Fields --- JJ.M4
Fields = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(X611);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
CheckCompoundFields
(
Fields
,
Tps
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST967;
// $$$$$$$$ 
} // CONDITION969 // @@@ end of alternative
CONDITION970: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(X611);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "Types are not compatible" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST967;
// $$$$$$$$ 
} // CONDITION970 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=967 N=966
if (javadummy) break CONDITION966;
} // CONDLIST967 @@@ end of alternative group
// *** CONTINUE ***
RES = 
NodeFactory.NewNode(
"expr_match"
, new JavaNode [] {
Value
,
Pattern
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST965;
// $$$$$$$$ 
} // CONDITION966 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=965 N=964
if (javadummy) break CONDITION964;
} // CONDLIST965 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST963;
// $$$$$$$$ 
} // CONDITION964 // @@@ end of alternative
CONDITION971: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X61;
if (! current0 .Name
.equals( "TemplateOps_A2") )
   if (javadummy) break  CONDITION971;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "this variant of 'match'" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST963;
// $$$$$$$$ 
} // CONDITION971 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=963 N=962
if (javadummy) break CONDITION962;
} // CONDLIST963 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST927;
// $$$$$$$$ 
} // CONDITION962 // @@@ end of alternative
CONDITION972: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A7") )
   if (javadummy) break  CONDITION972;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A7" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST927;
// $$$$$$$$ 
} // CONDITION972 // @@@ end of alternative
CONDITION973: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A8") )
   if (javadummy) break  CONDITION973;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A8" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST927;
// $$$$$$$$ 
} // CONDITION973 // @@@ end of alternative
CONDITION974: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A9") )
   if (javadummy) break  CONDITION974;
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A9" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST927;
// $$$$$$$$ 
} // CONDITION974 // @@@ end of alternative
CONDITION975: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A10") )
   if (javadummy) break  CONDITION975;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A10" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST927;
// $$$$$$$$ 
} // CONDITION975 // @@@ end of alternative
CONDITION976: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A11") )
   if (javadummy) break  CONDITION976;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A11" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST927;
// $$$$$$$$ 
} // CONDITION976 // @@@ end of alternative
CONDITION977: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CALL;
if (! current0 .Name
.equals( "OpCall_A12") )
   if (javadummy) break  CONDITION977;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "OpCall_A12" )
,
CALL
);
RES = 
NodeFactory.NewNode(
"nullexpr"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_primary"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST927;
// $$$$$$$$ 
} // CONDITION977 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=927 N=926
if (javadummy) break CONDITION926;
} // CONDLIST927 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST925;
// $$$$$$$$ 
} // CONDITION926 // @@@ end of alternative
CONDITION978: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative VALUE
JavaNode VALUE= null;
{
JavaNode current0 = PRIMARY;
if (! current0 .Name
.equals( "Primary_A2") )
   if (javadummy) break  CONDITION978;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to VALUE --- JJ.M4
VALUE = current1 ;
} //)) children level 1
};
YyProcs.
prima_Trafo_Value
(
VALUE
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST925;
// $$$$$$$$ 
} // CONDITION978 // @@@ end of alternative
CONDITION979: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative SINGLE
JavaNode SINGLE= null;
{
JavaNode current0 = PRIMARY;
if (! current0 .Name
.equals( "Primary_A3") )
   if (javadummy) break  CONDITION979;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to SINGLE --- JJ.M4
SINGLE = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SingleExpression
(
SINGLE
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST925;
// $$$$$$$$ 
} // CONDITION979 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=925 N=924
if (javadummy) break CONDITION924;
} // CONDLIST925 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST923;
// $$$$$$$$ 
} // CONDITION924 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=923 N=922
if (javadummy) break CONDITION922;
} // CONDLIST923 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION922
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_Primary");
}



public
static
void
primaTrafo_InLineTemplate(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Templ
JavaNode Templ = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc TemplateBody
JavaNode TemplateBody = null;
// DECLARE for proc Modifies
JavaNode Modifies = null;
// DECLARE for proc Prefix
JavaNode Prefix = null;
CONDITION980:
while(javadummy) {
// ***** begin condlist 981 (in cond 980) *****
CONDLIST981: // @@@ begin of alternative group
while(javadummy) {
CONDITION982: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Templ --- JJ.M4
Templ = current0 ;
};
// ***** begin condlist 983 (in cond 982) *****
CONDLIST983: // @@@ begin of alternative group
while(javadummy) {
CONDITION984: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Templ;
if (! current0 .Name
.equals( "InLineTemplate_A1") )
   if (javadummy) break  CONDITION984;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Prefix --- JJ.M4
Prefix = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Modifies --- JJ.M4
Modifies = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to TemplateBody --- JJ.M4
TemplateBody = current1 ;
} //)) children level 1
};
// ***** begin condlist 985 (in cond 984) *****
CONDLIST985: // @@@ begin of alternative group
while(javadummy) {
CONDITION986: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Modifies;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-InLineTemplate_A1_M2")
if (javadummy) break CONDITION986;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST985;
// $$$$$$$$ 
} // CONDITION986 // @@@ end of alternative
CONDITION987: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Modifies;
if (current0.Name
!= "OneOf-InLineTemplate_A1_M2")
if (javadummy) break CONDITION987;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "modifies" )
,
Modifies
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST985;
// $$$$$$$$ 
} // CONDITION987 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=985 N=984
if (javadummy) break CONDITION984;
} // CONDLIST985 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Trafo_TemplateBody1
(
TemplateBody
,
Prefix
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST983;
// $$$$$$$$ 
} // CONDITION984 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=983 N=982
if (javadummy) break CONDITION982;
} // CONDLIST983 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST981;
// $$$$$$$$ 
} // CONDITION982 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=981 N=980
if (javadummy) break CONDITION980;
} // CONDLIST981 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION980
// failed:
JavaLib.rtsAllAlternativesFailed("primaTrafo_InLineTemplate");
}



public
static
void
prima_Trafo_Value(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc VALUE
JavaNode VALUE = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION988:
while(javadummy) {
// ***** begin condlist 989 (in cond 988) *****
CONDLIST989: // @@@ begin of alternative group
while(javadummy) {
CONDITION990: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to VALUE --- JJ.M4
VALUE = current0 ;
};
// ***** begin condlist 991 (in cond 990) *****
CONDLIST991: // @@@ begin of alternative group
while(javadummy) {
CONDITION992: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative PREDEF
JavaNode PREDEF= null;
{
JavaNode current0 = VALUE;
if (! current0 .Name
.equals( "Value_A1") )
   if (javadummy) break  CONDITION992;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to PREDEF --- JJ.M4
PREDEF = current1 ;
} //)) children level 1
};
YyProcs.
prima_Trafo_PredefinedValue
(
PREDEF
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST991;
// $$$$$$$$ 
} // CONDITION992 // @@@ end of alternative
CONDITION993: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative REFERENCE
JavaNode REFERENCE= null;
{
JavaNode current0 = VALUE;
if (! current0 .Name
.equals( "Value_A2") )
   if (javadummy) break  CONDITION993;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to REFERENCE --- JJ.M4
REFERENCE = current1 ;
} //)) children level 1
};
YyProcs.
prima_Trafo_ReferencedValue
(
REFERENCE
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST991;
// $$$$$$$$ 
} // CONDITION993 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=991 N=990
if (javadummy) break CONDITION990;
} // CONDLIST991 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST989;
// $$$$$$$$ 
} // CONDITION990 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=989 N=988
if (javadummy) break CONDITION988;
} // CONDLIST989 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION988
// failed:
JavaLib.rtsAllAlternativesFailed("prima_Trafo_Value");
}



public
static
void
prima_Trafo_ReferencedValue(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc REFERENCE
JavaNode REFERENCE = null;
// DECLARE for proc FinalRES
JavaNode FinalRES = null;
// DECLARE for proc FinalTp
JavaNode FinalTp = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc SUB
JavaNode SUB = null;
// DECLARE for proc X1
JavaNode X1 = null;
CONDITION994:
while(javadummy) {
// ***** begin condlist 995 (in cond 994) *****
CONDLIST995: // @@@ begin of alternative group
while(javadummy) {
CONDITION996: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to REFERENCE --- JJ.M4
REFERENCE = current0 ;
};
// ***** begin condlist 997 (in cond 996) *****
CONDLIST997: // @@@ begin of alternative group
while(javadummy) {
CONDITION998: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = REFERENCE;
if (! current0 .Name
.equals( "ReferencedValue_A1") )
   if (javadummy) break  CONDITION998;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to SUB --- JJ.M4
SUB = current1 ;
} //)) children level 1
};
YyProcs.
LaLa
(
X1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
YyProcs.
LaSub
(
SUB
,
Tp
,
RES
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to FinalTp --- JJ.M4
FinalTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to FinalRES --- JJ.M4
FinalRES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST997;
// $$$$$$$$ 
} // CONDITION998 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=997 N=996
if (javadummy) break CONDITION996;
} // CONDLIST997 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
FinalTp
;
yy_outparam_1 = 
FinalRES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST995;
// $$$$$$$$ 
} // CONDITION996 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=995 N=994
if (javadummy) break CONDITION994;
} // CONDLIST995 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION994
// failed:
JavaLib.rtsAllAlternativesFailed("prima_Trafo_ReferencedValue");
}



public
static
void
LaSub(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Code0
JavaNode Code0 = null;
// DECLARE for proc Tp0
JavaNode Tp0 = null;
// DECLARE for proc SUB
JavaNode SUB = null;
// DECLARE for proc FinalRES
JavaNode FinalRES = null;
// DECLARE for proc FinalTp
JavaNode FinalTp = null;
CONDITION999:
while(javadummy) {
// ***** begin condlist 1000 (in cond 999) *****
CONDLIST1000: // @@@ begin of alternative group
while(javadummy) {
CONDITION1001: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SUB --- JJ.M4
SUB = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp0 --- JJ.M4
Tp0 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Code0 --- JJ.M4
Code0 = current0 ;
};
// ***** begin condlist 1002 (in cond 1001) *****
CONDLIST1002: // @@@ begin of alternative group
while(javadummy) {
CONDITION1003: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = SUB;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ReferencedValue_A1_M2")
if (javadummy) break CONDITION1003;
{ //(( children level 1
} //)) children level 1
};
FinalTp = 
Tp0
;
FinalRES = 
Code0
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1002;
// $$$$$$$$ 
} // CONDITION1003 // @@@ end of alternative
CONDITION1004: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative XX
JavaNode XX= null;
{
JavaNode current0 = SUB;
if (current0.Name
!= "OneOf-ReferencedValue_A1_M2")
if (javadummy) break CONDITION1004;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 1005 (in cond 1004) *****
CONDLIST1005: // @@@ begin of alternative group
while(javadummy) {
CONDITION1006: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ReferencedValue_A1_M2_A1") )
   if (javadummy) break  CONDITION1006;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX --- JJ.M4
XX = current1 ;
} //)) children level 1
};
YyProcs.
HandleExtendedFieldReference
(
XX
,
Tp0
,
Code0
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to FinalTp --- JJ.M4
FinalTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to FinalRES --- JJ.M4
FinalRES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1005;
// $$$$$$$$ 
} // CONDITION1006 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1005 N=1004
if (javadummy) break CONDITION1004;
} // CONDLIST1005 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1002;
// $$$$$$$$ 
} // CONDITION1004 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1002 N=1001
if (javadummy) break CONDITION1001;
} // CONDLIST1002 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
FinalTp
;
yy_outparam_1 = 
FinalRES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1000;
// $$$$$$$$ 
} // CONDITION1001 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1000 N=999
if (javadummy) break CONDITION999;
} // CONDLIST1000 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION999
// failed:
JavaLib.rtsAllAlternativesFailed("LaSub");
}



public
static
void
prima_Trafo_PredefinedValue(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc PREDEF
JavaNode PREDEF = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc RES
JavaNode RES = null;
CONDITION1007:
while(javadummy) {
// ***** begin condlist 1008 (in cond 1007) *****
CONDLIST1008: // @@@ begin of alternative group
while(javadummy) {
CONDITION1009: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to PREDEF --- JJ.M4
PREDEF = current0 ;
};
// ***** begin condlist 1010 (in cond 1009) *****
CONDLIST1010: // @@@ begin of alternative group
while(javadummy) {
CONDITION1011: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
// DECLARE for alternative BSTRING
JavaNode BSTRING= null;
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A1") )
   if (javadummy) break  CONDITION1011;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to BSTRING --- JJ.M4
BSTRING = current1 ;
} //)) children level 1
};
{
JavaNode current0 = BSTRING;
if (! current0 .Name
.equals( "Bstring_A1") )
   if (javadummy) break  CONDITION1011;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"expr_bstring"
, new JavaNode [] {
str
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1010;
// $$$$$$$$ 
} // CONDITION1011 // @@@ end of alternative
CONDITION1012: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative BV
JavaNode BV= null;
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A2") )
   if (javadummy) break  CONDITION1012;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to BV --- JJ.M4
BV = current1 ;
} //)) children level 1
};
// ***** begin condlist 1013 (in cond 1012) *****
CONDLIST1013: // @@@ begin of alternative group
while(javadummy) {
CONDITION1014: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = BV;
if (! current0 .Name
.equals( "BooleanValue_A1") )
   if (javadummy) break  CONDITION1014;
};
RES = 
NodeFactory.NewNode(
"expr_true"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1013;
// $$$$$$$$ 
} // CONDITION1014 // @@@ end of alternative
CONDITION1015: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = BV;
if (! current0 .Name
.equals( "BooleanValue_A2") )
   if (javadummy) break  CONDITION1015;
};
RES = 
NodeFactory.NewNode(
"expr_false"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1013;
// $$$$$$$$ 
} // CONDITION1015 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1013 N=1012
if (javadummy) break CONDITION1012;
} // CONDLIST1013 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1010;
// $$$$$$$$ 
} // CONDITION1012 // @@@ end of alternative
CONDITION1016: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative CSTRING
JavaNode CSTRING= null;
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A3") )
   if (javadummy) break  CONDITION1016;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to CSTRING --- JJ.M4
CSTRING = current1 ;
} //)) children level 1
};
// ***** begin condlist 1017 (in cond 1016) *****
CONDLIST1017: // @@@ begin of alternative group
while(javadummy) {
CONDITION1018: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
// DECLARE for alternative str00
JavaNode str00= null;
{
JavaNode current0 = CSTRING;
if (! current0 .Name
.equals( "CharStringValue_A1") )
   if (javadummy) break  CONDITION1018;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str00 --- JJ.M4
str00 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = str00;
if (! current0 .Name
.equals( "Cstring_A1") )
   if (javadummy) break  CONDITION1018;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"expr_cstring"
, new JavaNode [] {
str
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_charstring"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1017;
// $$$$$$$$ 
} // CONDITION1018 // @@@ end of alternative
CONDITION1019: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative m4
JavaNode m4= null;
// DECLARE for alternative m3
JavaNode m3= null;
// DECLARE for alternative m2
JavaNode m2= null;
// DECLARE for alternative m1
JavaNode m1= null;
// DECLARE for alternative n4
JavaNode n4= null;
// DECLARE for alternative n3
JavaNode n3= null;
// DECLARE for alternative n2
JavaNode n2= null;
// DECLARE for alternative n1
JavaNode n1= null;
// DECLARE for alternative str0
JavaNode str0= null;
{
JavaNode current0 = CSTRING;
if (! current0 .Name
.equals( "CharStringValue_A2") )
   if (javadummy) break  CONDITION1019;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str0 --- JJ.M4
str0 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = str0;
if (! current0 .Name
.equals( "Quadruple_A1") )
   if (javadummy) break  CONDITION1019;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to n1 --- JJ.M4
n1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to n2 --- JJ.M4
n2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to n3 --- JJ.M4
n3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to n4 --- JJ.M4
n4 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = n1;
if (! current0 .Name
.equals( "Number_A1") )
   if (javadummy) break  CONDITION1019;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to m1 --- JJ.M4
m1 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = n2;
if (! current0 .Name
.equals( "Number_A1") )
   if (javadummy) break  CONDITION1019;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to m2 --- JJ.M4
m2 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = n3;
if (! current0 .Name
.equals( "Number_A1") )
   if (javadummy) break  CONDITION1019;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to m3 --- JJ.M4
m3 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = n4;
if (! current0 .Name
.equals( "Number_A1") )
   if (javadummy) break  CONDITION1019;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to m4 --- JJ.M4
m4 = current1 ;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"expr_quadrupel"
, new JavaNode [] {
m1
,
m2
,
m3
,
m4
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_charstring"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1017;
// $$$$$$$$ 
} // CONDITION1019 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1017 N=1016
if (javadummy) break CONDITION1016;
} // CONDLIST1017 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1010;
// $$$$$$$$ 
} // CONDITION1016 // @@@ end of alternative
CONDITION1020: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative NUMBER
JavaNode NUMBER= null;
// DECLARE for alternative N
JavaNode N= null;
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A4") )
   if (javadummy) break  CONDITION1020;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N --- JJ.M4
N = current1 ;
} //)) children level 1
};
{
JavaNode current0 = N;
if (! current0 .Name
.equals( "Number_A1") )
   if (javadummy) break  CONDITION1020;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NUMBER --- JJ.M4
NUMBER = current1 ;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"intexpr"
, new JavaNode [] {
NUMBER
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1010;
// $$$$$$$$ 
} // CONDITION1020 // @@@ end of alternative
CONDITION1021: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
// DECLARE for alternative OSTRING
JavaNode OSTRING= null;
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A5") )
   if (javadummy) break  CONDITION1021;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to OSTRING --- JJ.M4
OSTRING = current1 ;
} //)) children level 1
};
{
JavaNode current0 = OSTRING;
if (! current0 .Name
.equals( "Ostring_A1") )
   if (javadummy) break  CONDITION1021;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"expr_ostring"
, new JavaNode [] {
str
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1010;
// $$$$$$$$ 
} // CONDITION1021 // @@@ end of alternative
CONDITION1022: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
// DECLARE for alternative HSTRING
JavaNode HSTRING= null;
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A6") )
   if (javadummy) break  CONDITION1022;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to HSTRING --- JJ.M4
HSTRING = current1 ;
} //)) children level 1
};
{
JavaNode current0 = HSTRING;
if (! current0 .Name
.equals( "Hstring_A1") )
   if (javadummy) break  CONDITION1022;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"expr_hstring"
, new JavaNode [] {
str
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1010;
// $$$$$$$$ 
} // CONDITION1022 // @@@ end of alternative
CONDITION1023: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative VERDICT
JavaNode VERDICT= null;
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A7") )
   if (javadummy) break  CONDITION1023;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to VERDICT --- JJ.M4
VERDICT = current1 ;
} //)) children level 1
};
// ***** begin condlist 1024 (in cond 1023) *****
CONDLIST1024: // @@@ begin of alternative group
while(javadummy) {
CONDITION1025: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = VERDICT;
if (! current0 .Name
.equals( "VerdictTypeValue_A1") )
   if (javadummy) break  CONDITION1025;
};
RES = 
NodeFactory.NewNode(
"expr_verdict"
, new JavaNode [] {
new JavaStringValue( "pass" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1024;
// $$$$$$$$ 
} // CONDITION1025 // @@@ end of alternative
CONDITION1026: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = VERDICT;
if (! current0 .Name
.equals( "VerdictTypeValue_A2") )
   if (javadummy) break  CONDITION1026;
};
RES = 
NodeFactory.NewNode(
"expr_verdict"
, new JavaNode [] {
new JavaStringValue( "fail" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1024;
// $$$$$$$$ 
} // CONDITION1026 // @@@ end of alternative
CONDITION1027: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = VERDICT;
if (! current0 .Name
.equals( "VerdictTypeValue_A3") )
   if (javadummy) break  CONDITION1027;
};
RES = 
NodeFactory.NewNode(
"expr_verdict"
, new JavaNode [] {
new JavaStringValue( "inconc" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1024;
// $$$$$$$$ 
} // CONDITION1027 // @@@ end of alternative
CONDITION1028: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = VERDICT;
if (! current0 .Name
.equals( "VerdictTypeValue_A4") )
   if (javadummy) break  CONDITION1028;
};
RES = 
NodeFactory.NewNode(
"expr_verdict"
, new JavaNode [] {
new JavaStringValue( "none" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1024;
// $$$$$$$$ 
} // CONDITION1028 // @@@ end of alternative
CONDITION1029: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = VERDICT;
if (! current0 .Name
.equals( "VerdictTypeValue_A5") )
   if (javadummy) break  CONDITION1029;
};
RES = 
NodeFactory.NewNode(
"expr_verdict"
, new JavaNode [] {
new JavaStringValue( "error" )
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1024;
// $$$$$$$$ 
} // CONDITION1029 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1024 N=1023
if (javadummy) break CONDITION1023;
} // CONDLIST1024 @@@ end of alternative group
// *** CONTINUE ***
Tp = 
NodeFactory.NewNode(
"tp_verdict"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1010;
// $$$$$$$$ 
} // CONDITION1023 // @@@ end of alternative
CONDITION1030: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
// DECLARE for alternative F
JavaNode F= null;
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A8") )
   if (javadummy) break  CONDITION1030;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to F --- JJ.M4
F = current1 ;
} //)) children level 1
};
{
JavaNode current0 = F;
if (! current0 .Name
.equals( "FloatValue_A1") )
   if (javadummy) break  CONDITION1030;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"expr_float"
, new JavaNode [] {
str
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_float"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1010;
// $$$$$$$$ 
} // CONDITION1030 // @@@ end of alternative
CONDITION1031: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A9") )
   if (javadummy) break  CONDITION1031;
};
RES = 
NodeFactory.NewNode(
"expr_omit"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1010;
// $$$$$$$$ 
} // CONDITION1031 // @@@ end of alternative
CONDITION1032: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative BEHAVIOUR
JavaNode BEHAVIOUR= null;
{
JavaNode current0 = PREDEF;
if (! current0 .Name
.equals( "PredefinedValue_A10") )
   if (javadummy) break  CONDITION1032;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to BEHAVIOUR --- JJ.M4
BEHAVIOUR = current1 ;
} //)) children level 1
};
// ***** begin condlist 1033 (in cond 1032) *****
CONDLIST1033: // @@@ begin of alternative group
while(javadummy) {
CONDITION1034: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative I2
JavaNode I2= null;
// DECLARE for alternative I1
JavaNode I1= null;
{
JavaNode current0 = BEHAVIOUR;
if (! current0 .Name
.equals( "BehaviourValue_A1") )
   if (javadummy) break  CONDITION1034;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to I1 --- JJ.M4
I1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to I2 --- JJ.M4
I2 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "Behaviour" )
,
BEHAVIOUR
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1033;
// $$$$$$$$ 
} // CONDITION1034 // @@@ end of alternative
CONDITION1035: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = BEHAVIOUR;
if (! current0 .Name
.equals( "BehaviourValue_A2") )
   if (javadummy) break  CONDITION1035;
};
YyProcs.
NotCovered
(
new JavaStringValue( "Behaviour" )
,
BEHAVIOUR
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1033;
// $$$$$$$$ 
} // CONDITION1035 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1033 N=1032
if (javadummy) break CONDITION1032;
} // CONDLIST1033 @@@ end of alternative group
// *** CONTINUE ***
RES = 
NodeFactory.NewNode(
"expr_omit"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1010;
// $$$$$$$$ 
} // CONDITION1032 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1010 N=1009
if (javadummy) break CONDITION1009;
} // CONDLIST1010 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1008;
// $$$$$$$$ 
} // CONDITION1009 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1008 N=1007
if (javadummy) break CONDITION1007;
} // CONDLIST1008 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1007
// failed:
JavaLib.rtsAllAlternativesFailed("prima_Trafo_PredefinedValue");
}


// global variable OutlineObjects
static JavaNode OutlineObjects = null;

public
static
void
HEADER(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X11
JavaNode X11 = null;
// DECLARE for proc Id
JavaNode Id = null;
// DECLARE for proc X5
JavaNode X5 = null;
// DECLARE for proc X4
JavaNode X4 = null;
// DECLARE for proc X3
JavaNode X3 = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc X
JavaNode X = null;
CONDITION1036:
while(javadummy) {
// ***** begin condlist 1037 (in cond 1036) *****
CONDLIST1037: // @@@ begin of alternative group
while(javadummy) {
CONDITION1038: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "TTCN3Module_A1") )
   if (javadummy) break  CONDITION1038;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to X4 --- JJ.M4
X4 = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to X5 --- JJ.M4
X5 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ModuleId_A1") )
   if (javadummy) break  CONDITION1038;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X11 --- JJ.M4
X11 = current1 ;
} //)) children level 1
};
yy_outparam_0 = 
Id
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1037;
// $$$$$$$$ 
} // CONDITION1038 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1037 N=1036
if (javadummy) break CONDITION1036;
} // CONDLIST1037 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1036
// failed:
JavaLib.rtsAllAlternativesFailed("HEADER");
}



public
static
void
OUTLINE(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Outline
JavaNode Outline = null;
// DECLARE for proc Rt
JavaNode Rt = null;
// DECLARE for proc SUITE
JavaNode SUITE = null;
// DECLARE for proc L
JavaNode L = null;
// DECLARE for proc n
JavaNode n = null;
CONDITION1039:
while(javadummy) {
// ***** begin condlist 1040 (in cond 1039) *****
CONDLIST1040: // @@@ begin of alternative group
while(javadummy) {
CONDITION1041: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to n --- JJ.M4
n = current0 ;
};
OutlineObjects=
NodeFactory.NewNode (
"NilOf-OutlineEntry"
,  new JavaNode [] {})
;
YyProcs.
Sammle
(
n
);
JavaLib.rtsCheckDefined(OutlineObjects,"/line,offset,length,file=/ 16 363 14 Outline.g");
L = OutlineObjects;
YyProcs.
HEADER
(
n
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to SUITE --- JJ.M4
SUITE = current0 ;
}
Rt = 
NodeFactory.NewNode(
"outlineentry"
, new JavaNode [] {
SUITE
,
new JavaStringValue( "module" )
,
n
,
L
}
)
;
Outline = 
NodeFactory.NewNode (
"SeqOf-OutlineEntry"
, new JavaNode [] {
Rt
,
NodeFactory.NewNode (
"NilOf-OutlineEntry"
,  new JavaNode [] {})
}
)
;
yy_outparam_0 = 
Outline
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1040;
// $$$$$$$$ 
} // CONDITION1041 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1040 N=1039
if (javadummy) break CONDITION1039;
} // CONDLIST1040 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1039
// failed:
JavaLib.rtsAllAlternativesFailed("OUTLINE");
}



public
static
void
Sammle(

JavaNode yy_inparam_0
)
{
// DECLARE for proc L
JavaNode L = null;
// DECLARE for proc H
JavaNode H = null;
// DECLARE for proc NAME0
JavaNode NAME0 = null;
// DECLARE for proc X
JavaNode X = null;
CONDITION1042:
while(javadummy) {
// ***** begin condlist 1043 (in cond 1042) *****
CONDLIST1043: // @@@ begin of alternative group
while(javadummy) {
CONDITION1044: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
if (! current0 .Name
.equals( "FunctionDef_A1") )
   if (javadummy) break  CONDITION1044;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME0 --- JJ.M4
NAME0 = current1 ;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
current1 = kurrent0.Child1[3];
current1 = kurrent0.Child1[4];
current1 = kurrent0.Child1[5];
} //)) children level 1
};
H = 
NodeFactory.NewNode(
"outlineentry"
, new JavaNode [] {
NAME0
,
new JavaStringValue( "function" )
,
X
,
NodeFactory.NewNode (
"NilOf-OutlineEntry"
,  new JavaNode [] {})
}
)
;
JavaLib.rtsCheckDefined(OutlineObjects,"/line,offset,length,file=/ 28 777 14 Outline.g");
L = OutlineObjects;
OutlineObjects=
NodeFactory.NewNode (
"SeqOf-OutlineEntry"
, new JavaNode [] {
H
,
L
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1043;
// $$$$$$$$ 
} // CONDITION1044 // @@@ end of alternative
CONDITION1045: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
if (! current0 .Name
.equals( "TestcaseDef_A1") )
   if (javadummy) break  CONDITION1045;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME0 --- JJ.M4
NAME0 = current1 ;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
current1 = kurrent0.Child1[3];
current1 = kurrent0.Child1[4];
} //)) children level 1
};
H = 
NodeFactory.NewNode(
"outlineentry"
, new JavaNode [] {
NAME0
,
new JavaStringValue( "testcase" )
,
X
,
NodeFactory.NewNode (
"NilOf-OutlineEntry"
,  new JavaNode [] {})
}
)
;
JavaLib.rtsCheckDefined(OutlineObjects,"/line,offset,length,file=/ 33 993 14 Outline.g");
L = OutlineObjects;
OutlineObjects=
NodeFactory.NewNode (
"SeqOf-OutlineEntry"
, new JavaNode [] {
H
,
L
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1043;
// $$$$$$$$ 
} // CONDITION1045 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1043 N=1042
if (javadummy) break CONDITION1042;
} // CONDLIST1043 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1042
// failed:
// sweep schema 1
for(JavaNode child : yy_inparam_0.Child1)
{
Sammle(child);
}
}



public
static
void
Trafo_TTCN3Module(

JavaNode yy_inparam_0
)
{
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Semicolon
JavaNode Semicolon = null;
// DECLARE for proc With
JavaNode With = null;
// DECLARE for proc X3
JavaNode X3 = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc LanguageSpec
JavaNode LanguageSpec = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1046:
while(javadummy) {
// ***** begin condlist 1047 (in cond 1046) *****
CONDLIST1047: // @@@ begin of alternative group
while(javadummy) {
CONDITION1048: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 1049 (in cond 1048) *****
CONDLIST1049: // @@@ begin of alternative group
while(javadummy) {
CONDITION1050: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "TTCN3Module_A1") )
   if (javadummy) break  CONDITION1050;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to With --- JJ.M4
With = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to Semicolon --- JJ.M4
Semicolon = current1 ;
} //)) children level 1
};
// ***** begin condlist 1051 (in cond 1050) *****
CONDLIST1051: // @@@ begin of alternative group
while(javadummy) {
CONDITION1052: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ModuleId_A1") )
   if (javadummy) break  CONDITION1052;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to LanguageSpec --- JJ.M4
LanguageSpec = current1 ;
} //)) children level 1
};
// ***** begin condlist 1053 (in cond 1052) *****
CONDLIST1053: // @@@ begin of alternative group
while(javadummy) {
CONDITION1054: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = LanguageSpec;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ModuleId_A1_M2")
if (javadummy) break CONDITION1054;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1053;
// $$$$$$$$ 
} // CONDITION1054 // @@@ end of alternative
CONDITION1055: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative L
JavaNode L= null;
{
JavaNode current0 = LanguageSpec;
if (current0.Name
!= "OneOf-ModuleId_A1_M2")
if (javadummy) break CONDITION1055;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to L --- JJ.M4
L = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "language specification" )
,
L
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1053;
// $$$$$$$$ 
} // CONDITION1055 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1053 N=1052
if (javadummy) break CONDITION1052;
} // CONDLIST1053 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1051;
// $$$$$$$$ 
} // CONDITION1052 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1051 N=1050
if (javadummy) break CONDITION1050;
} // CONDLIST1051 @@@ end of alternative group
// *** CONTINUE ***
NameOfModule=
Id
;
YyProcs.
Trafo_yyDeclsOpt
(
X2
);
YyProcs.
DeclareControlPart
(
X3
);
// ***** begin condlist 1056 (in cond 1050) *****
CONDLIST1056: // @@@ begin of alternative group
while(javadummy) {
CONDITION1057: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = With;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-TTCN3Module_A1_M7")
if (javadummy) break CONDITION1057;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1056;
// $$$$$$$$ 
} // CONDITION1057 // @@@ end of alternative
CONDITION1058: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative W
JavaNode W= null;
{
JavaNode current0 = With;
if (current0.Name
!= "OneOf-TTCN3Module_A1_M7")
if (javadummy) break CONDITION1058;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to W --- JJ.M4
W = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "'with' for modules" )
,
W
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1056;
// $$$$$$$$ 
} // CONDITION1058 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1056 N=1050
if (javadummy) break CONDITION1050;
} // CONDLIST1056 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1059 (in cond 1050) *****
CONDLIST1059: // @@@ begin of alternative group
while(javadummy) {
CONDITION1060: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Semicolon;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-TTCN3Module_A1_M8")
if (javadummy) break CONDITION1060;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1059;
// $$$$$$$$ 
} // CONDITION1060 // @@@ end of alternative
CONDITION1061: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Sem
JavaNode Sem= null;
{
JavaNode current0 = Semicolon;
if (current0.Name
!= "OneOf-TTCN3Module_A1_M8")
if (javadummy) break CONDITION1061;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to Sem --- JJ.M4
Sem = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1059;
// $$$$$$$$ 
} // CONDITION1061 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1059 N=1050
if (javadummy) break CONDITION1050;
} // CONDLIST1059 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1049;
// $$$$$$$$ 
} // CONDITION1050 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1049 N=1048
if (javadummy) break CONDITION1048;
} // CONDLIST1049 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1047;
// $$$$$$$$ 
} // CONDITION1048 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1047 N=1046
if (javadummy) break CONDITION1046;
} // CONDLIST1047 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1046
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_TTCN3Module");
}



public
static
void
Trafo_yyDeclsOpt(

JavaNode yy_inparam_0
)
{
// DECLARE for proc X
JavaNode X = null;
CONDITION1062:
while(javadummy) {
// ***** begin condlist 1063 (in cond 1062) *****
CONDLIST1063: // @@@ begin of alternative group
while(javadummy) {
CONDITION1064: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 1065 (in cond 1064) *****
CONDLIST1065: // @@@ begin of alternative group
while(javadummy) {
CONDITION1066: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-yyDecls")
if (javadummy) break CONDITION1066;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1065;
// $$$$$$$$ 
} // CONDITION1066 // @@@ end of alternative
CONDITION1067: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = X;
if (current0.Name
!= "OneOf-yyDecls")
if (javadummy) break CONDITION1067;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_yyDecls
(
X1
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1065;
// $$$$$$$$ 
} // CONDITION1067 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1065 N=1064
if (javadummy) break CONDITION1064;
} // CONDLIST1065 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1063;
// $$$$$$$$ 
} // CONDITION1064 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1063 N=1062
if (javadummy) break CONDITION1062;
} // CONDLIST1063 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1062
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_yyDeclsOpt");
}



public
static
void
Trafo_yyDecls(

JavaNode yy_inparam_0
)
{
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc LIST
JavaNode LIST = null;
CONDITION1068:
while(javadummy) {
// ***** begin condlist 1069 (in cond 1068) *****
CONDLIST1069: // @@@ begin of alternative group
while(javadummy) {
CONDITION1070: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 1071 (in cond 1070) *****
CONDLIST1071: // @@@ begin of alternative group
while(javadummy) {
CONDITION1072: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "yyDecls_A1") )
   if (javadummy) break  CONDITION1072;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1073 (in cond 1072) *****
CONDLIST1073: // @@@ begin of alternative group
while(javadummy) {
CONDITION1074: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ModuleDefinitionsList_A1") )
   if (javadummy) break  CONDITION1074;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to LIST --- JJ.M4
LIST = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ModuleDefinitionsList_A1_M1_LIST
(
LIST
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1073;
// $$$$$$$$ 
} // CONDITION1074 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1073 N=1072
if (javadummy) break CONDITION1072;
} // CONDLIST1073 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1071;
// $$$$$$$$ 
} // CONDITION1072 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1071 N=1070
if (javadummy) break CONDITION1070;
} // CONDLIST1071 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1069;
// $$$$$$$$ 
} // CONDITION1070 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1069 N=1068
if (javadummy) break CONDITION1068;
} // CONDLIST1069 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1068
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_yyDecls");
}



public
static
void
Trafo_ModuleDefinitionsList_A1_M1_LIST(

JavaNode yy_inparam_0
)
{
// DECLARE for proc LIST
JavaNode LIST = null;
CONDITION1075:
while(javadummy) {
// ***** begin condlist 1076 (in cond 1075) *****
CONDLIST1076: // @@@ begin of alternative group
while(javadummy) {
CONDITION1077: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to LIST --- JJ.M4
LIST = current0 ;
};
// ***** begin condlist 1078 (in cond 1077) *****
CONDLIST1078: // @@@ begin of alternative group
while(javadummy) {
CONDITION1079: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
{
JavaNode current0 = LIST;
if (current0.Name
!= "SeqOf-ModuleDefinitionsList_A1_M1")
if (javadummy) break CONDITION1079;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ModuleDefinitionsList_A1_M1
(
HEAD
);
YyProcs.
Trafo_ModuleDefinitionsList_A1_M1_LIST
(
TAIL
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1078;
// $$$$$$$$ 
} // CONDITION1079 // @@@ end of alternative
CONDITION1080: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = LIST;
if (current0.Name
!= "NilOf-ModuleDefinitionsList_A1_M1")
if (javadummy) break CONDITION1080;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1078;
// $$$$$$$$ 
} // CONDITION1080 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1078 N=1077
if (javadummy) break CONDITION1077;
} // CONDLIST1078 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1076;
// $$$$$$$$ 
} // CONDITION1077 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1076 N=1075
if (javadummy) break CONDITION1075;
} // CONDLIST1076 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1075
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ModuleDefinitionsList_A1_M1_LIST");
}



public
static
void
Trafo_ModuleDefinitionsList_A1_M1(

JavaNode yy_inparam_0
)
{
// DECLARE for proc HEAD
JavaNode HEAD = null;
// DECLARE for proc SemicolonOpt
JavaNode SemicolonOpt = null;
// DECLARE for proc Def
JavaNode Def = null;
CONDITION1081:
while(javadummy) {
// ***** begin condlist 1082 (in cond 1081) *****
CONDLIST1082: // @@@ begin of alternative group
while(javadummy) {
CONDITION1083: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to HEAD --- JJ.M4
HEAD = current0 ;
};
// ***** begin condlist 1084 (in cond 1083) *****
CONDLIST1084: // @@@ begin of alternative group
while(javadummy) {
CONDITION1085: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "ModuleDefinitionsList_A1_M1_A1") )
   if (javadummy) break  CONDITION1085;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Def --- JJ.M4
Def = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to SemicolonOpt --- JJ.M4
SemicolonOpt = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ModuleDefinition
(
Def
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1084;
// $$$$$$$$ 
} // CONDITION1085 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1084 N=1083
if (javadummy) break CONDITION1083;
} // CONDLIST1084 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1082;
// $$$$$$$$ 
} // CONDITION1083 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1082 N=1081
if (javadummy) break CONDITION1081;
} // CONDLIST1082 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1081
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ModuleDefinitionsList_A1_M1");
}



public
static
void
Trafo_ModuleDefinition(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D
JavaNode D = null;
// DECLARE for proc With
JavaNode With = null;
// DECLARE for proc Def
JavaNode Def = null;
CONDITION1086:
while(javadummy) {
// ***** begin condlist 1087 (in cond 1086) *****
CONDLIST1087: // @@@ begin of alternative group
while(javadummy) {
CONDITION1088: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D --- JJ.M4
D = current0 ;
};
// ***** begin condlist 1089 (in cond 1088) *****
CONDLIST1089: // @@@ begin of alternative group
while(javadummy) {
CONDITION1090: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = D;
if (! current0 .Name
.equals( "ModuleDefinition_A1") )
   if (javadummy) break  CONDITION1090;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Def --- JJ.M4
Def = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to With --- JJ.M4
With = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ModuleDefinition_A1_M1
(
Def
);
// ***** begin condlist 1091 (in cond 1090) *****
CONDLIST1091: // @@@ begin of alternative group
while(javadummy) {
CONDITION1092: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = With;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ModuleDefinition_A1_M2")
if (javadummy) break CONDITION1092;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1091;
// $$$$$$$$ 
} // CONDITION1092 // @@@ end of alternative
CONDITION1093: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative W
JavaNode W= null;
{
JavaNode current0 = With;
if (current0.Name
!= "OneOf-ModuleDefinition_A1_M2")
if (javadummy) break CONDITION1093;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to W --- JJ.M4
W = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "'with' for module definitions" )
,
W
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1091;
// $$$$$$$$ 
} // CONDITION1093 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1091 N=1090
if (javadummy) break CONDITION1090;
} // CONDLIST1091 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1089;
// $$$$$$$$ 
} // CONDITION1090 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1089 N=1088
if (javadummy) break CONDITION1088;
} // CONDLIST1089 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1087;
// $$$$$$$$ 
} // CONDITION1088 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1087 N=1086
if (javadummy) break CONDITION1086;
} // CONDLIST1087 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1086
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ModuleDefinition");
}



public
static
void
Trafo_ModuleDefinition_A1_M1(

JavaNode yy_inparam_0
)
{
// DECLARE for proc Arg1
JavaNode Arg1 = null;
CONDITION1094:
while(javadummy) {
// ***** begin condlist 1095 (in cond 1094) *****
CONDLIST1095: // @@@ begin of alternative group
while(javadummy) {
CONDITION1096: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Arg1 --- JJ.M4
Arg1 = current0 ;
};
// ***** begin condlist 1097 (in cond 1096) *****
CONDLIST1097: // @@@ begin of alternative group
while(javadummy) {
CONDITION1098: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
// DECLARE for alternative Item
JavaNode Item= null;
// DECLARE for alternative Visibility
JavaNode Visibility= null;
{
JavaNode current0 = Arg1;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1") )
   if (javadummy) break  CONDITION1098;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1099 (in cond 1098) *****
CONDLIST1099: // @@@ begin of alternative group
while(javadummy) {
CONDITION1100: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1") )
   if (javadummy) break  CONDITION1100;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Visibility --- JJ.M4
Visibility = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Item --- JJ.M4
Item = current1 ;
} //)) children level 1
};
// ***** begin condlist 1101 (in cond 1100) *****
CONDLIST1101: // @@@ begin of alternative group
while(javadummy) {
CONDITION1102: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Visibility;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ModuleDefinition_A1_M1_A1_M1_A1_M1")
if (javadummy) break CONDITION1102;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1101;
// $$$$$$$$ 
} // CONDITION1102 // @@@ end of alternative
CONDITION1103: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative V
JavaNode V= null;
{
JavaNode current0 = Visibility;
if (current0.Name
!= "OneOf-ModuleDefinition_A1_M1_A1_M1_A1_M1")
if (javadummy) break CONDITION1103;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to V --- JJ.M4
V = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "visibility specification" )
,
V
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1101;
// $$$$$$$$ 
} // CONDITION1103 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1101 N=1100
if (javadummy) break CONDITION1100;
} // CONDLIST1101 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Trafo_Item
(
Item
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1099;
// $$$$$$$$ 
} // CONDITION1100 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1099 N=1098
if (javadummy) break CONDITION1098;
} // CONDLIST1099 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1097;
// $$$$$$$$ 
} // CONDITION1098 // @@@ end of alternative
CONDITION1104: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative GroupDef
JavaNode GroupDef= null;
{
JavaNode current0 = Arg1;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A2") )
   if (javadummy) break  CONDITION1104;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to GroupDef --- JJ.M4
GroupDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "groups" )
,
GroupDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1097;
// $$$$$$$$ 
} // CONDITION1104 // @@@ end of alternative
CONDITION1105: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative FriendDef
JavaNode FriendDef= null;
{
JavaNode current0 = Arg1;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A3") )
   if (javadummy) break  CONDITION1105;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FriendDef --- JJ.M4
FriendDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "'friend' definition" )
,
FriendDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1097;
// $$$$$$$$ 
} // CONDITION1105 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1097 N=1096
if (javadummy) break CONDITION1096;
} // CONDLIST1097 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1095;
// $$$$$$$$ 
} // CONDITION1096 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1095 N=1094
if (javadummy) break CONDITION1094;
} // CONDLIST1095 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1094
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ModuleDefinition_A1_M1");
}



public
static
void
Trafo_Item(

JavaNode yy_inparam_0
)
{
// DECLARE for proc Item
JavaNode Item = null;
CONDITION1106:
while(javadummy) {
// ***** begin condlist 1107 (in cond 1106) *****
CONDLIST1107: // @@@ begin of alternative group
while(javadummy) {
CONDITION1108: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Item --- JJ.M4
Item = current0 ;
};
// ***** begin condlist 1109 (in cond 1108) *****
CONDLIST1109: // @@@ begin of alternative group
while(javadummy) {
CONDITION1110: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D1
JavaNode D1= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A1") )
   if (javadummy) break  CONDITION1110;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D1 --- JJ.M4
D1 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_TypeDef
(
D1
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1109;
// $$$$$$$$ 
} // CONDITION1110 // @@@ end of alternative
CONDITION1111: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D2
JavaNode D2= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A2") )
   if (javadummy) break  CONDITION1111;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D2 --- JJ.M4
D2 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ConstDef
(
D2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1109;
// $$$$$$$$ 
} // CONDITION1111 // @@@ end of alternative
CONDITION1112: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D3
JavaNode D3= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A3") )
   if (javadummy) break  CONDITION1112;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D3 --- JJ.M4
D3 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_TemplateDef
(
D3
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1109;
// $$$$$$$$ 
} // CONDITION1112 // @@@ end of alternative
CONDITION1113: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D4
JavaNode D4= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A4") )
   if (javadummy) break  CONDITION1113;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D4 --- JJ.M4
D4 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ModuleParDef
(
D4
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1109;
// $$$$$$$$ 
} // CONDITION1113 // @@@ end of alternative
CONDITION1114: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D5
JavaNode D5= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A5") )
   if (javadummy) break  CONDITION1114;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D5 --- JJ.M4
D5 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_FunctionDef
(
D5
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1109;
// $$$$$$$$ 
} // CONDITION1114 // @@@ end of alternative
CONDITION1115: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D6
JavaNode D6= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A6") )
   if (javadummy) break  CONDITION1115;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D6 --- JJ.M4
D6 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SignatureDef
(
D6
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1109;
// $$$$$$$$ 
} // CONDITION1115 // @@@ end of alternative
CONDITION1116: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D7
JavaNode D7= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A7") )
   if (javadummy) break  CONDITION1116;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D7 --- JJ.M4
D7 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_TestcaseDef
(
D7
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1109;
// $$$$$$$$ 
} // CONDITION1116 // @@@ end of alternative
CONDITION1117: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D8
JavaNode D8= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A8") )
   if (javadummy) break  CONDITION1117;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D8 --- JJ.M4
D8 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_AltstepDef
(
D8
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1109;
// $$$$$$$$ 
} // CONDITION1117 // @@@ end of alternative
CONDITION1118: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D9
JavaNode D9= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A9") )
   if (javadummy) break  CONDITION1118;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D9 --- JJ.M4
D9 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ImportDef
(
D9
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1109;
// $$$$$$$$ 
} // CONDITION1118 // @@@ end of alternative
CONDITION1119: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D10
JavaNode D10= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A10") )
   if (javadummy) break  CONDITION1119;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D10 --- JJ.M4
D10 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ExtFunctionDef
(
D10
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1109;
// $$$$$$$$ 
} // CONDITION1119 // @@@ end of alternative
CONDITION1120: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D11
JavaNode D11= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A11") )
   if (javadummy) break  CONDITION1120;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D11 --- JJ.M4
D11 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ExtConstDef
(
D11
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1109;
// $$$$$$$$ 
} // CONDITION1120 // @@@ end of alternative
CONDITION1121: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative D12
JavaNode D12= null;
{
JavaNode current0 = Item;
if (! current0 .Name
.equals( "ModuleDefinition_A1_M1_A1_M1_A1_M2_A12") )
   if (javadummy) break  CONDITION1121;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D12 --- JJ.M4
D12 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ConfigurationDef
(
D12
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1109;
// $$$$$$$$ 
} // CONDITION1121 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1109 N=1108
if (javadummy) break CONDITION1108;
} // CONDLIST1109 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1107;
// $$$$$$$$ 
} // CONDITION1108 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1107 N=1106
if (javadummy) break CONDITION1106;
} // CONDLIST1107 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1106
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_Item");
}



public
static
void
Trafo_TypeDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc TYPEDEF
JavaNode TYPEDEF = null;
// DECLARE for proc B
JavaNode B = null;
CONDITION1122:
while(javadummy) {
// ***** begin condlist 1123 (in cond 1122) *****
CONDLIST1123: // @@@ begin of alternative group
while(javadummy) {
CONDITION1124: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to TYPEDEF --- JJ.M4
TYPEDEF = current0 ;
};
// ***** begin condlist 1125 (in cond 1124) *****
CONDLIST1125: // @@@ begin of alternative group
while(javadummy) {
CONDITION1126: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TYPEDEF;
if (! current0 .Name
.equals( "TypeDef_A1") )
   if (javadummy) break  CONDITION1126;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to B --- JJ.M4
B = current1 ;
} //)) children level 1
};
// ***** begin condlist 1127 (in cond 1126) *****
CONDLIST1127: // @@@ begin of alternative group
while(javadummy) {
CONDITION1128: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative StructuredTypeDef
JavaNode StructuredTypeDef= null;
{
JavaNode current0 = B;
if (! current0 .Name
.equals( "TypeDefBody_A1") )
   if (javadummy) break  CONDITION1128;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to StructuredTypeDef --- JJ.M4
StructuredTypeDef = current1 ;
} //)) children level 1
};
// ***** begin condlist 1129 (in cond 1128) *****
CONDLIST1129: // @@@ begin of alternative group
while(javadummy) {
CONDITION1130: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RecordDef
JavaNode RecordDef= null;
// DECLARE for alternative StrucDefBody
JavaNode StrucDefBody= null;
// DECLARE for alternative X4
JavaNode X4= null;
// DECLARE for alternative X3
JavaNode X3= null;
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = StructuredTypeDef;
if (! current0 .Name
.equals( "StructuredTypeDef_A1") )
   if (javadummy) break  CONDITION1130;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RecordDef --- JJ.M4
RecordDef = current1 ;
} //)) children level 1
};
// ***** begin condlist 1131 (in cond 1130) *****
CONDLIST1131: // @@@ begin of alternative group
while(javadummy) {
CONDITION1132: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = RecordDef;
if (! current0 .Name
.equals( "RecordDef_A1") )
   if (javadummy) break  CONDITION1132;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to StrucDefBody --- JJ.M4
StrucDefBody = current1 ;
} //)) children level 1
};
// ***** begin condlist 1133 (in cond 1132) *****
CONDLIST1133: // @@@ begin of alternative group
while(javadummy) {
CONDITION1134: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = StrucDefBody;
if (! current0 .Name
.equals( "StructDefBody_A1") )
   if (javadummy) break  CONDITION1134;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to X4 --- JJ.M4
X4 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1135 (in cond 1134) *****
CONDLIST1135: // @@@ begin of alternative group
while(javadummy) {
CONDITION1136: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Name
JavaNode Name= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "StructDefBody_A1_M1_A1") )
   if (javadummy) break  CONDITION1136;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Name --- JJ.M4
Name = current1 ;
} //)) children level 1
};
YyProcs.
HandleRecordType
(
Name
,
X2
,
X3
,
X4
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1135;
// $$$$$$$$ 
} // CONDITION1136 // @@@ end of alternative
CONDITION1137: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "StructDefBody_A1_M1_A2") )
   if (javadummy) break  CONDITION1137;
};
YyProcs.
NotCovered
(
new JavaStringValue( "address in record type definitions" )
,
X1
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1135;
// $$$$$$$$ 
} // CONDITION1137 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1135 N=1134
if (javadummy) break CONDITION1134;
} // CONDLIST1135 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1133;
// $$$$$$$$ 
} // CONDITION1134 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1133 N=1132
if (javadummy) break CONDITION1132;
} // CONDLIST1133 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1131;
// $$$$$$$$ 
} // CONDITION1132 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1131 N=1130
if (javadummy) break CONDITION1130;
} // CONDLIST1131 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1129;
// $$$$$$$$ 
} // CONDITION1130 // @@@ end of alternative
CONDITION1138: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative UnionDef
JavaNode UnionDef= null;
{
JavaNode current0 = StructuredTypeDef;
if (! current0 .Name
.equals( "StructuredTypeDef_A2") )
   if (javadummy) break  CONDITION1138;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to UnionDef --- JJ.M4
UnionDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "union type definitions" )
,
UnionDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1129;
// $$$$$$$$ 
} // CONDITION1138 // @@@ end of alternative
CONDITION1139: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative SetDef
JavaNode SetDef= null;
{
JavaNode current0 = StructuredTypeDef;
if (! current0 .Name
.equals( "StructuredTypeDef_A3") )
   if (javadummy) break  CONDITION1139;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to SetDef --- JJ.M4
SetDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "set type definitions" )
,
SetDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1129;
// $$$$$$$$ 
} // CONDITION1139 // @@@ end of alternative
CONDITION1140: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RecordOfDef
JavaNode RecordOfDef= null;
{
JavaNode current0 = StructuredTypeDef;
if (! current0 .Name
.equals( "StructuredTypeDef_A4") )
   if (javadummy) break  CONDITION1140;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RecordOfDef --- JJ.M4
RecordOfDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "record-of type definitions, nur geduld" )
,
RecordOfDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1129;
// $$$$$$$$ 
} // CONDITION1140 // @@@ end of alternative
CONDITION1141: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative SetOfDef
JavaNode SetOfDef= null;
{
JavaNode current0 = StructuredTypeDef;
if (! current0 .Name
.equals( "StructuredTypeDef_A5") )
   if (javadummy) break  CONDITION1141;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to SetOfDef --- JJ.M4
SetOfDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "set-of type definitions" )
,
SetOfDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1129;
// $$$$$$$$ 
} // CONDITION1141 // @@@ end of alternative
CONDITION1142: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative EnumDef
JavaNode EnumDef= null;
{
JavaNode current0 = StructuredTypeDef;
if (! current0 .Name
.equals( "StructuredTypeDef_A6") )
   if (javadummy) break  CONDITION1142;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to EnumDef --- JJ.M4
EnumDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "enum type definitions" )
,
EnumDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1129;
// $$$$$$$$ 
} // CONDITION1142 // @@@ end of alternative
CONDITION1143: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative PortDef
JavaNode PortDef= null;
// DECLARE for alternative PP
JavaNode PP= null;
// DECLARE for alternative PortDefAttribs
JavaNode PortDefAttribs= null;
// DECLARE for alternative StructDefFormalTypePar
JavaNode StructDefFormalTypePar= null;
// DECLARE for alternative FormalTypePar
JavaNode FormalTypePar= null;
// DECLARE for alternative NAME
JavaNode NAME= null;
{
JavaNode current0 = StructuredTypeDef;
if (! current0 .Name
.equals( "StructuredTypeDef_A7") )
   if (javadummy) break  CONDITION1143;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to PortDef --- JJ.M4
PortDef = current1 ;
} //)) children level 1
};
// ***** begin condlist 1144 (in cond 1143) *****
CONDLIST1144: // @@@ begin of alternative group
while(javadummy) {
CONDITION1145: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PortDef;
if (! current0 .Name
.equals( "PortDef_A1") )
   if (javadummy) break  CONDITION1145;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to PP --- JJ.M4
PP = current1 ;
} //)) children level 1
};
// ***** begin condlist 1146 (in cond 1145) *****
CONDLIST1146: // @@@ begin of alternative group
while(javadummy) {
CONDITION1147: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PP;
if (! current0 .Name
.equals( "PortDefBody_A1") )
   if (javadummy) break  CONDITION1147;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME --- JJ.M4
NAME = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to FormalTypePar --- JJ.M4
FormalTypePar = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to StructDefFormalTypePar --- JJ.M4
StructDefFormalTypePar = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to PortDefAttribs --- JJ.M4
PortDefAttribs = current1 ;
} //)) children level 1
};
YyProcs.
HandlePortType
(
NAME
,
FormalTypePar
,
StructDefFormalTypePar
,
PortDefAttribs
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1146;
// $$$$$$$$ 
} // CONDITION1147 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1146 N=1145
if (javadummy) break CONDITION1145;
} // CONDLIST1146 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1144;
// $$$$$$$$ 
} // CONDITION1145 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1144 N=1143
if (javadummy) break CONDITION1143;
} // CONDLIST1144 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1129;
// $$$$$$$$ 
} // CONDITION1143 // @@@ end of alternative
CONDITION1148: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ComponentDef
JavaNode ComponentDef= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative NAME
JavaNode NAME= null;
{
JavaNode current0 = StructuredTypeDef;
if (! current0 .Name
.equals( "StructuredTypeDef_A8") )
   if (javadummy) break  CONDITION1148;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ComponentDef --- JJ.M4
ComponentDef = current1 ;
} //)) children level 1
};
// ***** begin condlist 1149 (in cond 1148) *****
CONDLIST1149: // @@@ begin of alternative group
while(javadummy) {
CONDITION1150: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ComponentDef;
if (! current0 .Name
.equals( "ComponentDef_A1") )
   if (javadummy) break  CONDITION1150;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME --- JJ.M4
NAME = current1 ;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
current1 = kurrent0.Child1[3];
current1 = kurrent0.Child1[4];
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(ComponentDef);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DeclareComponentType
(
NAME
,
ComponentDef
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1149;
// $$$$$$$$ 
} // CONDITION1150 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1149 N=1148
if (javadummy) break CONDITION1148;
} // CONDLIST1149 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1129;
// $$$$$$$$ 
} // CONDITION1148 // @@@ end of alternative
CONDITION1151: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative BehaviorDef
JavaNode BehaviorDef= null;
{
JavaNode current0 = StructuredTypeDef;
if (! current0 .Name
.equals( "StructuredTypeDef_A9") )
   if (javadummy) break  CONDITION1151;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to BehaviorDef --- JJ.M4
BehaviorDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "behavior definitions" )
,
BehaviorDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1129;
// $$$$$$$$ 
} // CONDITION1151 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1129 N=1128
if (javadummy) break CONDITION1128;
} // CONDLIST1129 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1127;
// $$$$$$$$ 
} // CONDITION1128 // @@@ end of alternative
CONDITION1152: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative SubTypeDef
JavaNode SubTypeDef= null;
{
JavaNode current0 = B;
if (! current0 .Name
.equals( "TypeDefBody_A2") )
   if (javadummy) break  CONDITION1152;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to SubTypeDef --- JJ.M4
SubTypeDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "subtype definitions" )
,
SubTypeDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1127;
// $$$$$$$$ 
} // CONDITION1152 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1127 N=1126
if (javadummy) break CONDITION1126;
} // CONDLIST1127 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1125;
// $$$$$$$$ 
} // CONDITION1126 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1125 N=1124
if (javadummy) break CONDITION1124;
} // CONDLIST1125 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1123;
// $$$$$$$$ 
} // CONDITION1124 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1123 N=1122
if (javadummy) break CONDITION1122;
} // CONDLIST1123 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1122
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_TypeDef");
}



public
static
void
HandlePortType(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
,

JavaNode yy_inparam_3
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc PortDefAttribs
JavaNode PortDefAttribs = null;
// DECLARE for proc StructDefFormalTypePar
JavaNode StructDefFormalTypePar = null;
// DECLARE for proc FormalTypePar
JavaNode FormalTypePar = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION1153:
while(javadummy) {
// ***** begin condlist 1154 (in cond 1153) *****
CONDLIST1154: // @@@ begin of alternative group
while(javadummy) {
CONDITION1155: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to FormalTypePar --- JJ.M4
FormalTypePar = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to StructDefFormalTypePar --- JJ.M4
StructDefFormalTypePar = current0 ;
};
{
JavaNode current0 = yy_inparam_3;
//assign current0 to PortDefAttribs --- JJ.M4
PortDefAttribs = current0 ;
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(NAME);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DeclarePortType
(
NAME
,
PortDefAttribs
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1154;
// $$$$$$$$ 
} // CONDITION1155 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1154 N=1153
if (javadummy) break CONDITION1153;
} // CONDLIST1154 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1153
// failed:
JavaLib.rtsAllAlternativesFailed("HandlePortType");
}



public
static
void
HandleRecordType(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
,

JavaNode yy_inparam_3
)
{
// DECLARE for proc PosX4
JavaNode PosX4 = null;
// DECLARE for proc X4
JavaNode X4 = null;
// DECLARE for proc X3
JavaNode X3 = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc Name
JavaNode Name = null;
CONDITION1156:
while(javadummy) {
// ***** begin condlist 1157 (in cond 1156) *****
CONDLIST1157: // @@@ begin of alternative group
while(javadummy) {
CONDITION1158: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Name --- JJ.M4
Name = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X2 --- JJ.M4
X2 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to X3 --- JJ.M4
X3 = current0 ;
};
{
JavaNode current0 = yy_inparam_3;
//assign current0 to X4 --- JJ.M4
X4 = current0 ;
};
// ***** begin condlist 1159 (in cond 1158) *****
CONDLIST1159: // @@@ begin of alternative group
while(javadummy) {
CONDITION1160: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-StructDefBody_A1_M2")
if (javadummy) break CONDITION1160;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1159;
// $$$$$$$$ 
} // CONDITION1160 // @@@ end of alternative
CONDITION1161: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative F
JavaNode F= null;
{
JavaNode current0 = X2;
if (current0.Name
!= "OneOf-StructDefBody_A1_M2")
if (javadummy) break CONDITION1161;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to F --- JJ.M4
F = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "formal type parameters for record types" )
,
F
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1159;
// $$$$$$$$ 
} // CONDITION1161 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1159 N=1158
if (javadummy) break CONDITION1158;
} // CONDLIST1159 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1162 (in cond 1158) *****
CONDLIST1162: // @@@ begin of alternative group
while(javadummy) {
CONDITION1163: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-StructDefBody_A1_M3")
if (javadummy) break CONDITION1163;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1162;
// $$$$$$$$ 
} // CONDITION1163 // @@@ end of alternative
CONDITION1164: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative FP
JavaNode FP= null;
{
JavaNode current0 = X3;
if (current0.Name
!= "OneOf-StructDefBody_A1_M3")
if (javadummy) break CONDITION1164;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to FP --- JJ.M4
FP = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "formal parameters for recod types" )
,
FP
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1162;
// $$$$$$$$ 
} // CONDITION1164 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1162 N=1158
if (javadummy) break CONDITION1158;
} // CONDLIST1162 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Name);
//assign current0 to PosX4 --- JJ.M4
PosX4 = current0 ;
};
YyProcs.
DeclareRecordType
(
Name
,
X4
,
PosX4
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1157;
// $$$$$$$$ 
} // CONDITION1158 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1157 N=1156
if (javadummy) break CONDITION1156;
} // CONDLIST1157 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1156
// failed:
JavaLib.rtsAllAlternativesFailed("HandleRecordType");
}



public
static
void
Trafo_ConstDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D2
JavaNode D2 = null;
CONDITION1165:
while(javadummy) {
// ***** begin condlist 1166 (in cond 1165) *****
CONDLIST1166: // @@@ begin of alternative group
while(javadummy) {
CONDITION1167: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D2 --- JJ.M4
D2 = current0 ;
};
YyProcs.
NotCovered
(
new JavaStringValue( "constant definitions" )
,
D2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1166;
// $$$$$$$$ 
} // CONDITION1167 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1166 N=1165
if (javadummy) break CONDITION1165;
} // CONDLIST1166 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1165
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ConstDef");
}



public
static
void
Trafo_TemplateDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D3
JavaNode D3 = null;
CONDITION1168:
while(javadummy) {
// ***** begin condlist 1169 (in cond 1168) *****
CONDLIST1169: // @@@ begin of alternative group
while(javadummy) {
CONDITION1170: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D3 --- JJ.M4
D3 = current0 ;
};
YyProcs.
NotCovered
(
new JavaStringValue( "template definitions" )
,
D3
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1169;
// $$$$$$$$ 
} // CONDITION1170 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1169 N=1168
if (javadummy) break CONDITION1168;
} // CONDLIST1169 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1168
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_TemplateDef");
}



public
static
void
Trafo_ModuleParDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D4
JavaNode D4 = null;
CONDITION1171:
while(javadummy) {
// ***** begin condlist 1172 (in cond 1171) *****
CONDLIST1172: // @@@ begin of alternative group
while(javadummy) {
CONDITION1173: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D4 --- JJ.M4
D4 = current0 ;
};
YyProcs.
NotCovered
(
new JavaStringValue( "modulepar definitions" )
,
D4
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1172;
// $$$$$$$$ 
} // CONDITION1173 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1172 N=1171
if (javadummy) break CONDITION1171;
} // CONDLIST1172 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1171
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ModuleParDef");
}



public
static
void
Trafo_FunctionDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc FDEF
JavaNode FDEF = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION1174:
while(javadummy) {
// ***** begin condlist 1175 (in cond 1174) *****
CONDLIST1175: // @@@ begin of alternative group
while(javadummy) {
CONDITION1176: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to FDEF --- JJ.M4
FDEF = current0 ;
};
// ***** begin condlist 1177 (in cond 1176) *****
CONDLIST1177: // @@@ begin of alternative group
while(javadummy) {
CONDITION1178: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FDEF;
if (! current0 .Name
.equals( "FunctionDef_A1") )
   if (javadummy) break  CONDITION1178;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME --- JJ.M4
NAME = current1 ;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
current1 = kurrent0.Child1[3];
current1 = kurrent0.Child1[4];
current1 = kurrent0.Child1[5];
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(NAME);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DeclareFunction
(
NAME
,
FDEF
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1177;
// $$$$$$$$ 
} // CONDITION1178 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1177 N=1176
if (javadummy) break CONDITION1176;
} // CONDLIST1177 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1175;
// $$$$$$$$ 
} // CONDITION1176 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1175 N=1174
if (javadummy) break CONDITION1174;
} // CONDLIST1175 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1174
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_FunctionDef");
}



public
static
void
Trafo_SignatureDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D6
JavaNode D6 = null;
CONDITION1179:
while(javadummy) {
// ***** begin condlist 1180 (in cond 1179) *****
CONDLIST1180: // @@@ begin of alternative group
while(javadummy) {
CONDITION1181: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D6 --- JJ.M4
D6 = current0 ;
};
YyProcs.
NotCovered
(
new JavaStringValue( "signature definitions" )
,
D6
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1180;
// $$$$$$$$ 
} // CONDITION1181 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1180 N=1179
if (javadummy) break CONDITION1179;
} // CONDLIST1180 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1179
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_SignatureDef");
}



public
static
void
Trafo_TestcaseDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D7
JavaNode D7 = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION1182:
while(javadummy) {
// ***** begin condlist 1183 (in cond 1182) *****
CONDLIST1183: // @@@ begin of alternative group
while(javadummy) {
CONDITION1184: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D7 --- JJ.M4
D7 = current0 ;
};
// ***** begin condlist 1185 (in cond 1184) *****
CONDLIST1185: // @@@ begin of alternative group
while(javadummy) {
CONDITION1186: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = D7;
if (! current0 .Name
.equals( "TestcaseDef_A1") )
   if (javadummy) break  CONDITION1186;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME --- JJ.M4
NAME = current1 ;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
current1 = kurrent0.Child1[3];
current1 = kurrent0.Child1[4];
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(NAME);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DeclareTestcase
(
NAME
,
D7
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1185;
// $$$$$$$$ 
} // CONDITION1186 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1185 N=1184
if (javadummy) break CONDITION1184;
} // CONDLIST1185 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1183;
// $$$$$$$$ 
} // CONDITION1184 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1183 N=1182
if (javadummy) break CONDITION1182;
} // CONDLIST1183 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1182
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_TestcaseDef");
}



public
static
void
Trafo_AltstepDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D8
JavaNode D8 = null;
CONDITION1187:
while(javadummy) {
// ***** begin condlist 1188 (in cond 1187) *****
CONDLIST1188: // @@@ begin of alternative group
while(javadummy) {
CONDITION1189: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D8 --- JJ.M4
D8 = current0 ;
};
YyProcs.
NotCovered
(
new JavaStringValue( "altstep definitions" )
,
D8
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1188;
// $$$$$$$$ 
} // CONDITION1189 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1188 N=1187
if (javadummy) break CONDITION1187;
} // CONDLIST1188 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1187
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_AltstepDef");
}



public
static
void
Trafo_ImportDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D9
JavaNode D9 = null;
CONDITION1190:
while(javadummy) {
// ***** begin condlist 1191 (in cond 1190) *****
CONDLIST1191: // @@@ begin of alternative group
while(javadummy) {
CONDITION1192: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D9 --- JJ.M4
D9 = current0 ;
};
{
JavaNode current0 = D9;
if (! current0 .Name
.equals( "ImportDef_A1") )
   if (javadummy) break  CONDITION1192;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
if (! current1 .Name
.equals( "ImportFromSpec_A1") )
   if (javadummy) break  CONDITION1192;
{ //(( children level 2
JavaNode current2 =
   current1 . Child1[0];
JavaNode kurrent1 = current1;
if (! current2 .Name
.equals( "ModuleId_A1") )
   if (javadummy) break  CONDITION1192;
{ //(( children level 3
JavaNode current3 =
   current2 . Child1[0];
JavaNode kurrent2 = current2;
//assign current3 to Id --- JJ.M4
Id = current3 ;
current3 = kurrent2.Child1[1];
} //)) children level 3
current2 = kurrent1.Child1[1];
} //)) children level 2
current1 = kurrent0.Child1[1];
} //)) children level 1
};
YyProcs.
RegisterImport
(
Id
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1191;
// $$$$$$$$ 
} // CONDITION1192 // @@@ end of alternative
CONDITION1193: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D9 --- JJ.M4
D9 = current0 ;
};
YyProcs.
NotCovered
(
new JavaStringValue( "import definitions" )
,
D9
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1191;
// $$$$$$$$ 
} // CONDITION1193 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1191 N=1190
if (javadummy) break CONDITION1190;
} // CONDLIST1191 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1190
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ImportDef");
}



public
static
void
Trafo_ExtFunctionDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D10
JavaNode D10 = null;
CONDITION1194:
while(javadummy) {
// ***** begin condlist 1195 (in cond 1194) *****
CONDLIST1195: // @@@ begin of alternative group
while(javadummy) {
CONDITION1196: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D10 --- JJ.M4
D10 = current0 ;
};
YyProcs.
NotCovered
(
new JavaStringValue( "external function definitions" )
,
D10
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1195;
// $$$$$$$$ 
} // CONDITION1196 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1195 N=1194
if (javadummy) break CONDITION1194;
} // CONDLIST1195 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1194
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ExtFunctionDef");
}



public
static
void
Trafo_ExtConstDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D11
JavaNode D11 = null;
CONDITION1197:
while(javadummy) {
// ***** begin condlist 1198 (in cond 1197) *****
CONDLIST1198: // @@@ begin of alternative group
while(javadummy) {
CONDITION1199: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D11 --- JJ.M4
D11 = current0 ;
};
YyProcs.
NotCovered
(
new JavaStringValue( "external constant definitions" )
,
D11
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1198;
// $$$$$$$$ 
} // CONDITION1199 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1198 N=1197
if (javadummy) break CONDITION1197;
} // CONDLIST1198 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1197
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ExtConstDef");
}



public
static
void
Trafo_ConfigurationDef(

JavaNode yy_inparam_0
)
{
// DECLARE for proc D12
JavaNode D12 = null;
CONDITION1200:
while(javadummy) {
// ***** begin condlist 1201 (in cond 1200) *****
CONDLIST1201: // @@@ begin of alternative group
while(javadummy) {
CONDITION1202: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to D12 --- JJ.M4
D12 = current0 ;
};
YyProcs.
NotCovered
(
new JavaStringValue( "configuration definitions" )
,
D12
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1201;
// $$$$$$$$ 
} // CONDITION1202 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1201 N=1200
if (javadummy) break CONDITION1200;
} // CONDLIST1201 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1200
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_ConfigurationDef");
}


// global variable Imported
static JavaNode Imported = null;

public
static
void
RegisterImport(

JavaNode yy_inparam_0
)
{
// DECLARE for proc L
JavaNode L = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1203:
while(javadummy) {
// ***** begin condlist 1204 (in cond 1203) *****
CONDLIST1204: // @@@ begin of alternative group
while(javadummy) {
CONDITION1205: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
JavaLib.rtsCheckDefined(Imported,"/line,offset,length,file=/ 393 12687 8 Modules.g");
L = Imported;
Imported=
NodeFactory.NewNode (
"SeqOf-string"
, new JavaNode [] {
Id
,
L
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1204;
// $$$$$$$$ 
} // CONDITION1205 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1204 N=1203
if (javadummy) break CONDITION1203;
} // CONDLIST1204 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1203
// failed:
JavaLib.rtsAllAlternativesFailed("RegisterImport");
}



public
static
void
InitImports(
)
{
CONDITION1206:
while(javadummy) {
// ***** begin condlist 1207 (in cond 1206) *****
CONDLIST1207: // @@@ begin of alternative group
while(javadummy) {
CONDITION1208: // @@@ begin of alternative
while(javadummy) {
Imported=
NodeFactory.NewNode (
"NilOf-string"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1207;
// $$$$$$$$ 
} // CONDITION1208 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1207 N=1206
if (javadummy) break CONDITION1206;
} // CONDLIST1207 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1206
// failed:
JavaLib.rtsAllAlternativesFailed("InitImports");
}



public
static
void
DoImports(
)
{
// DECLARE for proc L
JavaNode L = null;
// DECLARE for proc Imp
JavaNode Imp = null;
CONDITION1209:
while(javadummy) {
// ***** begin condlist 1210 (in cond 1209) *****
CONDLIST1210: // @@@ begin of alternative group
while(javadummy) {
CONDITION1211: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsCheckDefined(Imported,"/line,offset,length,file=/ 404 12908 8 Modules.g");
Imp = Imported;
L = 
Imp
;
// ***** begin condlist 1212 (in cond 1211) *****
CONDLIST1212: // @@@ begin of alternative group
while(javadummy) {
CONDITION1213: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = L;
if (current0.Name
!= "SeqOf-string")
if (javadummy) break CONDITION1213;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
DoImport
(
H
);
L = 
T
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) continue CONDLIST1212;
// $$$$$$$$ 
} // CONDITION1213 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1212 N=1211
if (javadummy) break CONDLIST1212;
} // CONDLIST1212 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1210;
// $$$$$$$$ 
} // CONDITION1211 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1210 N=1209
if (javadummy) break CONDITION1209;
} // CONDLIST1210 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1209
// failed:
JavaLib.rtsAllAlternativesFailed("DoImports");
}



public
static
void
DoImport(

JavaNode yy_inparam_0
)
{
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1214:
while(javadummy) {
// ***** begin condlist 1215 (in cond 1214) *****
CONDLIST1215: // @@@ begin of alternative group
while(javadummy) {
CONDITION1216: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1215;
// $$$$$$$$ 
} // CONDITION1216 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1215 N=1214
if (javadummy) break CONDITION1214;
} // CONDLIST1215 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1214
// failed:
JavaLib.rtsAllAlternativesFailed("DoImport");
}



public
static
void
Start(
)
{
// DECLARE for proc X
JavaNode X = null;
CONDITION1217:
while(javadummy) {
// ***** begin condlist 1218 (in cond 1217) *****
CONDLIST1218: // @@@ begin of alternative group
while(javadummy) {
CONDITION1219: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = 
Gently.GrammarLib.ParseStandardFile();
//assign current0 to X --- JJ.M4
X = current0 ;
}
YyProcs.
Semantics
(
X
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1218;
// $$$$$$$$ 
} // CONDITION1219 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1218 N=1217
if (javadummy) break CONDITION1217;
} // CONDLIST1218 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1217
// failed:
JavaLib.rtsAllAlternativesFailed("Start");
}


// global variable NameOfModule
static JavaNode NameOfModule = null;

public
static
void
v_2013_07_23(
)
{
CONDITION1220:
while(javadummy) {
// ***** begin condlist 1221 (in cond 1220) *****
CONDLIST1221: // @@@ begin of alternative group
while(javadummy) {
CONDITION1222: // @@@ begin of alternative
while(javadummy) {
JavaLib.Log
(
new JavaStringValue( "Version 2013/07/23" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1221;
// $$$$$$$$ 
} // CONDITION1222 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1221 N=1220
if (javadummy) break CONDITION1220;
} // CONDLIST1221 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1220
// failed:
JavaLib.rtsAllAlternativesFailed("v_2013_07_23");
}



public
static
void
Semantics(

JavaNode yy_inparam_0
)
{
// DECLARE for proc X
JavaNode X = null;
CONDITION1223:
while(javadummy) {
// ***** begin condlist 1224 (in cond 1223) *****
CONDLIST1224: // @@@ begin of alternative group
while(javadummy) {
CONDITION1225: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
YyProcs.
InitScopeHandling
(
);
YyProcs.
InitImports
(
);
YyProcs.
InitEmit
(
);
YyProcs.
BeginGlobalScope
(
);
YyProcs.
Trafo_TTCN3Module
(
X
);
YyProcs.
DoImports
(
);
YyProcs.
ProcessGlobals
(
);
YyProcs.
EndGlobalScope
(
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1224;
// $$$$$$$$ 
} // CONDITION1225 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1224 N=1223
if (javadummy) break CONDITION1223;
} // CONDLIST1224 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1223
// failed:
JavaLib.rtsAllAlternativesFailed("Semantics");
}


// global variable ScopeStack
static JavaNode ScopeStack = null;
// global variable GlobalScope
static JavaNode GlobalScope = null;

public
static
void
InitScopeHandling(
)
{
CONDITION1226:
while(javadummy) {
// ***** begin condlist 1227 (in cond 1226) *****
CONDLIST1227: // @@@ begin of alternative group
while(javadummy) {
CONDITION1228: // @@@ begin of alternative
while(javadummy) {
ScopeStack=
NodeFactory.NewNode (
"NilOf-Seq-SYMTABENTRY"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1227;
// $$$$$$$$ 
} // CONDITION1228 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1227 N=1226
if (javadummy) break CONDITION1226;
} // CONDLIST1227 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1226
// failed:
JavaLib.rtsAllAlternativesFailed("InitScopeHandling");
}



public
static
void
GloballyDefined(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Def
JavaNode Def = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Name
JavaNode Name = null;
CONDITION1229:
while(javadummy) {
// ***** begin condlist 1230 (in cond 1229) *****
CONDLIST1230: // @@@ begin of alternative group
while(javadummy) {
CONDITION1231: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Name --- JJ.M4
Name = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
xDefined
(
Name
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
yy_outparam_0 = 
Def
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1230;
// $$$$$$$$ 
} // CONDITION1231 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1230 N=1229
if (javadummy) break CONDITION1229;
} // CONDLIST1230 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1229
// failed:
JavaLib.rtsAllAlternativesFailed("GloballyDefined");
}



public
static
void
LocallyDefined(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Def
JavaNode Def = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Name
JavaNode Name = null;
CONDITION1232:
while(javadummy) {
// ***** begin condlist 1233 (in cond 1232) *****
CONDLIST1233: // @@@ begin of alternative group
while(javadummy) {
CONDITION1234: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Name --- JJ.M4
Name = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
xDefined
(
Name
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
yy_outparam_0 = 
Def
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1233;
// $$$$$$$$ 
} // CONDITION1234 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1233 N=1232
if (javadummy) break CONDITION1232;
} // CONDLIST1233 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1232
// failed:
JavaLib.rtsAllAlternativesFailed("LocallyDefined");
}



public
static
void
xDefined(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1235:
while(javadummy) {
// ***** begin condlist 1236 (in cond 1235) *****
CONDLIST1236: // @@@ begin of alternative group
while(javadummy) {
CONDITION1237: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative M
JavaNode M= null;
// DECLARE for alternative S
JavaNode S= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
if (! JavaLib.rtsTestDefined(ScopeStack,"/line,offset,length,file=/ 40 843 10 Globals.g"))
if (javadummy) break CONDITION1237;
{
JavaNode current0 = ScopeStack;
//assign current0 to S --- JJ.M4
S = current0 ;
};
if (! 
YyProcs.
IsInSymtabEntryListList
(
S
,
Id
)
)
if (javadummy) break CONDITION1237;
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to M --- JJ.M4
M = current0 ;
}
yy_outparam_0 = 
M
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1236;
// $$$$$$$$ 
} // CONDITION1237 // @@@ end of alternative
CONDITION1238: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Id
,
new JavaStringValue( "' has not been declared" )
,
Pos
);
yy_outparam_0 = 
NodeFactory.NewNode(
"nodefinition"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1236;
// $$$$$$$$ 
} // CONDITION1238 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1236 N=1235
if (javadummy) break CONDITION1235;
} // CONDLIST1236 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1235
// failed:
JavaLib.rtsAllAlternativesFailed("xDefined");
}



public
static
boolean
IsInSymtabEntryListList(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Id
JavaNode Id = null;
// DECLARE for proc Tl
JavaNode Tl = null;
// DECLARE for proc Hd
JavaNode Hd = null;
// DECLARE for proc M
JavaNode M = null;
CONDITION1239:
while(javadummy) {
// ***** begin condlist 1240 (in cond 1239) *****
CONDLIST1240: // @@@ begin of alternative group
while(javadummy) {
CONDITION1241: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-Seq-SYMTABENTRY")
if (javadummy) break CONDITION1241;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Hd --- JJ.M4
Hd = current1 ;
current1 = current0.Child1[1];
//assign current1 to Tl --- JJ.M4
Tl = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
// ***** begin condlist 1242 (in cond 1241) *****
CONDLIST1242: // @@@ begin of alternative group
while(javadummy) {
CONDITION1243: // @@@ begin of alternative
while(javadummy) {
if (! 
YyProcs.
IsInSymtabEntryList
(
Hd
,
Id
)
)
if (javadummy) break CONDITION1243;
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to M --- JJ.M4
M = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1242;
// $$$$$$$$ 
} // CONDITION1243 // @@@ end of alternative
CONDITION1244: // @@@ begin of alternative
while(javadummy) {
if (! 
YyProcs.
IsInSymtabEntryListList
(
Tl
,
Id
)
)
if (javadummy) break CONDITION1244;
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to M --- JJ.M4
M = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1242;
// $$$$$$$$ 
} // CONDITION1244 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1242 N=1241
if (javadummy) break CONDITION1241;
} // CONDLIST1242 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
M
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1240;
// $$$$$$$$ 
} // CONDITION1241 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1240 N=1239
if (javadummy) break CONDITION1239;
} // CONDLIST1240 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
return true;
} // CONDITION1239
// failed:
return false;
}



public
static
boolean
IsInSymtabEntryList(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Id
JavaNode Id = null;
// DECLARE for proc Tl
JavaNode Tl = null;
// DECLARE for proc Hd
JavaNode Hd = null;
// DECLARE for proc M
JavaNode M = null;
CONDITION1245:
while(javadummy) {
// ***** begin condlist 1246 (in cond 1245) *****
CONDLIST1246: // @@@ begin of alternative group
while(javadummy) {
CONDITION1247: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-SYMTABENTRY")
if (javadummy) break CONDITION1247;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Hd --- JJ.M4
Hd = current1 ;
current1 = current0.Child1[1];
//assign current1 to Tl --- JJ.M4
Tl = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
// ***** begin condlist 1248 (in cond 1247) *****
CONDLIST1248: // @@@ begin of alternative group
while(javadummy) {
CONDITION1249: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id0
JavaNode Id0= null;
{
JavaNode current0 = Hd;
if (! current0 .Name
.equals( "symtabentry") )
   if (javadummy) break  CONDITION1249;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id0 --- JJ.M4
Id0 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to M --- JJ.M4
M = current1 ;
} //)) children level 1
};
{
if (! JavaLib.rtsEqualString(
Id
,
Id0
)
)
   if (javadummy) break  CONDITION1249;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1248;
// $$$$$$$$ 
} // CONDITION1249 // @@@ end of alternative
CONDITION1250: // @@@ begin of alternative
while(javadummy) {
if (! 
YyProcs.
IsInSymtabEntryList
(
Tl
,
Id
)
)
if (javadummy) break CONDITION1250;
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to M --- JJ.M4
M = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1248;
// $$$$$$$$ 
} // CONDITION1250 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1248 N=1247
if (javadummy) break CONDITION1247;
} // CONDLIST1248 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
M
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1246;
// $$$$$$$$ 
} // CONDITION1247 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1246 N=1245
if (javadummy) break CONDITION1245;
} // CONDLIST1246 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
return true;
} // CONDITION1245
// failed:
return false;
}



public
static
void
BeginGlobalScope(
)
{
CONDITION1251:
while(javadummy) {
// ***** begin condlist 1252 (in cond 1251) *****
CONDLIST1252: // @@@ begin of alternative group
while(javadummy) {
CONDITION1253: // @@@ begin of alternative
while(javadummy) {
YyProcs.
xBeginScope
(
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1252;
// $$$$$$$$ 
} // CONDITION1253 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1252 N=1251
if (javadummy) break CONDITION1251;
} // CONDLIST1252 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1251
// failed:
JavaLib.rtsAllAlternativesFailed("BeginGlobalScope");
}



public
static
void
EndGlobalScope(
)
{
CONDITION1254:
while(javadummy) {
// ***** begin condlist 1255 (in cond 1254) *****
CONDLIST1255: // @@@ begin of alternative group
while(javadummy) {
CONDITION1256: // @@@ begin of alternative
while(javadummy) {
YyProcs.
xEndScope
(
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1255;
// $$$$$$$$ 
} // CONDITION1256 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1255 N=1254
if (javadummy) break CONDITION1254;
} // CONDLIST1255 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1254
// failed:
JavaLib.rtsAllAlternativesFailed("EndGlobalScope");
}



public
static
void
BeginLocalScope(
)
{
CONDITION1257:
while(javadummy) {
// ***** begin condlist 1258 (in cond 1257) *****
CONDLIST1258: // @@@ begin of alternative group
while(javadummy) {
CONDITION1259: // @@@ begin of alternative
while(javadummy) {
YyProcs.
xBeginScope
(
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1258;
// $$$$$$$$ 
} // CONDITION1259 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1258 N=1257
if (javadummy) break CONDITION1257;
} // CONDLIST1258 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1257
// failed:
JavaLib.rtsAllAlternativesFailed("BeginLocalScope");
}



public
static
void
EndLocalScope(
)
{
CONDITION1260:
while(javadummy) {
// ***** begin condlist 1261 (in cond 1260) *****
CONDLIST1261: // @@@ begin of alternative group
while(javadummy) {
CONDITION1262: // @@@ begin of alternative
while(javadummy) {
YyProcs.
xEndScope
(
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1261;
// $$$$$$$$ 
} // CONDITION1262 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1261 N=1260
if (javadummy) break CONDITION1260;
} // CONDLIST1261 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1260
// failed:
JavaLib.rtsAllAlternativesFailed("EndLocalScope");
}



public
static
void
xBeginScope(
)
{
// DECLARE for proc Tl
JavaNode Tl = null;
CONDITION1263:
while(javadummy) {
// ***** begin condlist 1264 (in cond 1263) *****
CONDLIST1264: // @@@ begin of alternative group
while(javadummy) {
CONDITION1265: // @@@ begin of alternative
while(javadummy) {
if (! JavaLib.rtsTestDefined(ScopeStack,"/line,offset,length,file=/ 88 2000 10 Globals.g"))
if (javadummy) break CONDITION1265;
{
JavaNode current0 = ScopeStack;
//assign current0 to Tl --- JJ.M4
Tl = current0 ;
};
ScopeStack=
NodeFactory.NewNode (
"SeqOf-Seq-SYMTABENTRY"
, new JavaNode [] {
NodeFactory.NewNode (
"NilOf-SYMTABENTRY"
,  new JavaNode [] {})
,
Tl
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1264;
// $$$$$$$$ 
} // CONDITION1265 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1264 N=1263
if (javadummy) break CONDITION1263;
} // CONDLIST1264 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1263
// failed:
JavaLib.rtsAllAlternativesFailed("xBeginScope");
}



public
static
void
xEndScope(
)
{
// DECLARE for proc Tl
JavaNode Tl = null;
// DECLARE for proc Hd
JavaNode Hd = null;
CONDITION1266:
while(javadummy) {
// ***** begin condlist 1267 (in cond 1266) *****
CONDLIST1267: // @@@ begin of alternative group
while(javadummy) {
CONDITION1268: // @@@ begin of alternative
while(javadummy) {
if (! JavaLib.rtsTestDefined(ScopeStack,"/line,offset,length,file=/ 94 2143 10 Globals.g"))
if (javadummy) break CONDITION1268;
{
JavaNode current0 = ScopeStack;
if (current0.Name
!= "SeqOf-Seq-SYMTABENTRY")
if (javadummy) break CONDITION1268;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Hd --- JJ.M4
Hd = current1 ;
current1 = current0.Child1[1];
//assign current1 to Tl --- JJ.M4
Tl = current1 ;
} //)) children level 1
};
ScopeStack=
Tl
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1267;
// $$$$$$$$ 
} // CONDITION1268 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1267 N=1266
if (javadummy) break CONDITION1266;
} // CONDLIST1267 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1266
// failed:
JavaLib.rtsAllAlternativesFailed("xEndScope");
}



public
static
void
DefineLocalTimer(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1269:
while(javadummy) {
// ***** begin condlist 1270 (in cond 1269) *****
CONDLIST1270: // @@@ begin of alternative group
while(javadummy) {
CONDITION1271: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
EnterIntoSymtab
(
Id
,
NodeFactory.NewNode(
"localtimer"
, new JavaNode [] {
}
)
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1270;
// $$$$$$$$ 
} // CONDITION1271 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1270 N=1269
if (javadummy) break CONDITION1269;
} // CONDLIST1270 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1269
// failed:
JavaLib.rtsAllAlternativesFailed("DefineLocalTimer");
}



public
static
void
DefineLocalVar(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1272:
while(javadummy) {
// ***** begin condlist 1273 (in cond 1272) *****
CONDLIST1273: // @@@ begin of alternative group
while(javadummy) {
CONDITION1274: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
EnterIntoSymtab
(
Id
,
NodeFactory.NewNode(
"localvar"
, new JavaNode [] {
Tp
}
)
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1273;
// $$$$$$$$ 
} // CONDITION1274 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1273 N=1272
if (javadummy) break CONDITION1272;
} // CONDLIST1273 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1272
// failed:
JavaLib.rtsAllAlternativesFailed("DefineLocalVar");
}



public
static
void
DefineComponentMember_Var(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1275:
while(javadummy) {
// ***** begin condlist 1276 (in cond 1275) *****
CONDLIST1276: // @@@ begin of alternative group
while(javadummy) {
CONDITION1277: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
EnterIntoSymtab
(
Id
,
NodeFactory.NewNode(
"componentmember_var"
, new JavaNode [] {
Tp
}
)
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1276;
// $$$$$$$$ 
} // CONDITION1277 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1276 N=1275
if (javadummy) break CONDITION1275;
} // CONDLIST1276 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1275
// failed:
JavaLib.rtsAllAlternativesFailed("DefineComponentMember_Var");
}



public
static
void
DefineComponentMember_Port(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1278:
while(javadummy) {
// ***** begin condlist 1279 (in cond 1278) *****
CONDLIST1279: // @@@ begin of alternative group
while(javadummy) {
CONDITION1280: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
EnterIntoSymtab
(
Id
,
NodeFactory.NewNode(
"componentmember_port"
, new JavaNode [] {
NodeFactory.NewNode(
"port_notyet"
, new JavaNode [] {
}
)
}
)
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1279;
// $$$$$$$$ 
} // CONDITION1280 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1279 N=1278
if (javadummy) break CONDITION1278;
} // CONDLIST1279 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1278
// failed:
JavaLib.rtsAllAlternativesFailed("DefineComponentMember_Port");
}



public
static
void
DefineGlobal(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Def
JavaNode Def = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1281:
while(javadummy) {
// ***** begin condlist 1282 (in cond 1281) *****
CONDLIST1282: // @@@ begin of alternative group
while(javadummy) {
CONDITION1283: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
EnterIntoSymtab
(
Id
,
Def
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1282;
// $$$$$$$$ 
} // CONDITION1283 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1282 N=1281
if (javadummy) break CONDITION1281;
} // CONDLIST1282 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1281
// failed:
JavaLib.rtsAllAlternativesFailed("DefineGlobal");
}



public
static
void
EnterIntoSymtab(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc New
JavaNode New = null;
// DECLARE for proc NewInner
JavaNode NewInner = null;
// DECLARE for proc Outer
JavaNode Outer = null;
// DECLARE for proc Inner
JavaNode Inner = null;
// DECLARE for proc Old
JavaNode Old = null;
// DECLARE for proc P
JavaNode P = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Def
JavaNode Def = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1284:
while(javadummy) {
// ***** begin condlist 1285 (in cond 1284) *****
CONDLIST1285: // @@@ begin of alternative group
while(javadummy) {
CONDITION1286: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
P = 
NodeFactory.NewNode(
"symtabentry"
, new JavaNode [] {
Id
,
Def
}
)
;
if (! JavaLib.rtsTestDefined(ScopeStack,"/line,offset,length,file=/ 142 3420 10 Globals.g"))
if (javadummy) break CONDITION1286;
{
JavaNode current0 = ScopeStack;
//assign current0 to Old --- JJ.M4
Old = current0 ;
};
{
JavaNode current0 = Old;
if (current0.Name
!= "SeqOf-Seq-SYMTABENTRY")
if (javadummy) break CONDITION1286;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Inner --- JJ.M4
Inner = current1 ;
current1 = current0.Child1[1];
//assign current1 to Outer --- JJ.M4
Outer = current1 ;
} //)) children level 1
};
// ***** begin condlist 1287 (in cond 1286) *****
CONDLIST1287: // @@@ begin of alternative group
while(javadummy) {
CONDITION1288: // @@@ begin of alternative
while(javadummy) {
if (! 
YyProcs.
IsDef
(
Id
,
Inner
)
)
if (javadummy) break CONDITION1288;
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Id
,
new JavaStringValue( "' already declared" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1287;
// $$$$$$$$ 
} // CONDITION1288 // @@@ end of alternative
CONDITION1289: // @@@ begin of alternative
while(javadummy) {
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1287;
// $$$$$$$$ 
} // CONDITION1289 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1287 N=1286
if (javadummy) break CONDITION1286;
} // CONDLIST1287 @@@ end of alternative group
// *** CONTINUE ***
NewInner = 
NodeFactory.NewNode (
"SeqOf-SYMTABENTRY"
, new JavaNode [] {
P
,
Inner
}
)
;
New = 
NodeFactory.NewNode (
"SeqOf-Seq-SYMTABENTRY"
, new JavaNode [] {
NewInner
,
Outer
}
)
;
ScopeStack=
New
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1285;
// $$$$$$$$ 
} // CONDITION1286 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1285 N=1284
if (javadummy) break CONDITION1284;
} // CONDLIST1285 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1284
// failed:
JavaLib.rtsAllAlternativesFailed("EnterIntoSymtab");
}



public
static
boolean
IsDef(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc T
JavaNode T = null;
// DECLARE for proc H
JavaNode H = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1290:
while(javadummy) {
// ***** begin condlist 1291 (in cond 1290) *****
CONDLIST1291: // @@@ begin of alternative group
while(javadummy) {
CONDITION1292: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Id --- JJ.M4
Id = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
if (current0.Name
!= "SeqOf-SYMTABENTRY")
if (javadummy) break CONDITION1292;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
// ***** begin condlist 1293 (in cond 1292) *****
CONDLIST1293: // @@@ begin of alternative group
while(javadummy) {
CONDITION1294: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative J
JavaNode J= null;
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "symtabentry") )
   if (javadummy) break  CONDITION1294;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to J --- JJ.M4
J = current1 ;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
{
if (! JavaLib.rtsEqualString(
Id
,
J
)
)
   if (javadummy) break  CONDITION1294;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1293;
// $$$$$$$$ 
} // CONDITION1294 // @@@ end of alternative
CONDITION1295: // @@@ begin of alternative
while(javadummy) {
if (! 
YyProcs.
IsDef
(
Id
,
T
)
)
if (javadummy) break CONDITION1295;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1293;
// $$$$$$$$ 
} // CONDITION1295 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1293 N=1292
if (javadummy) break CONDITION1292;
} // CONDLIST1293 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1291;
// $$$$$$$$ 
} // CONDITION1292 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1291 N=1290
if (javadummy) break CONDITION1290;
} // CONDLIST1291 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
return true;
} // CONDITION1290
// failed:
return false;
}



public
static
void
DeclarePortType(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc PortDefAttribs
JavaNode PortDefAttribs = null;
// DECLARE for proc Name
JavaNode Name = null;
CONDITION1296:
while(javadummy) {
// ***** begin condlist 1297 (in cond 1296) *****
CONDLIST1297: // @@@ begin of alternative group
while(javadummy) {
CONDITION1298: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Name --- JJ.M4
Name = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to PortDefAttribs --- JJ.M4
PortDefAttribs = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineGlobal
(
Name
,
NodeFactory.NewNode(
"porttype"
, new JavaNode [] {
Name
,
PortDefAttribs
,
JavaLib.rtsNewKey()
}
)
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1297;
// $$$$$$$$ 
} // CONDITION1298 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1297 N=1296
if (javadummy) break CONDITION1296;
} // CONDLIST1297 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1296
// failed:
JavaLib.rtsAllAlternativesFailed("DeclarePortType");
}



public
static
void
DeclareRecordType(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Name
JavaNode Name = null;
CONDITION1299:
while(javadummy) {
// ***** begin condlist 1300 (in cond 1299) *****
CONDLIST1300: // @@@ begin of alternative group
while(javadummy) {
CONDITION1301: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Name --- JJ.M4
Name = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineGlobal
(
Name
,
NodeFactory.NewNode(
"recordtype"
, new JavaNode [] {
Name
,
X
,
JavaLib.rtsNewKey()
}
)
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1300;
// $$$$$$$$ 
} // CONDITION1301 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1300 N=1299
if (javadummy) break CONDITION1299;
} // CONDLIST1300 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1299
// failed:
JavaLib.rtsAllAlternativesFailed("DeclareRecordType");
}



public
static
void
DeclareComponentType(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc COMPDEF
JavaNode COMPDEF = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION1302:
while(javadummy) {
// ***** begin condlist 1303 (in cond 1302) *****
CONDLIST1303: // @@@ begin of alternative group
while(javadummy) {
CONDITION1304: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to COMPDEF --- JJ.M4
COMPDEF = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineGlobal
(
NAME
,
NodeFactory.NewNode(
"componenttype"
, new JavaNode [] {
COMPDEF
,
JavaLib.rtsNewKey()
}
)
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1303;
// $$$$$$$$ 
} // CONDITION1304 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1303 N=1302
if (javadummy) break CONDITION1302;
} // CONDLIST1303 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1302
// failed:
JavaLib.rtsAllAlternativesFailed("DeclareComponentType");
}



public
static
void
DeclareTestcase(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION1305:
while(javadummy) {
// ***** begin condlist 1306 (in cond 1305) *****
CONDLIST1306: // @@@ begin of alternative group
while(javadummy) {
CONDITION1307: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineGlobal
(
NAME
,
NodeFactory.NewNode(
"testcasedefinition"
, new JavaNode [] {
X
,
JavaLib.rtsNewKey()
}
)
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1306;
// $$$$$$$$ 
} // CONDITION1307 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1306 N=1305
if (javadummy) break CONDITION1305;
} // CONDLIST1306 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1305
// failed:
JavaLib.rtsAllAlternativesFailed("DeclareTestcase");
}



public
static
void
DeclareFunction(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc FDEF
JavaNode FDEF = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION1308:
while(javadummy) {
// ***** begin condlist 1309 (in cond 1308) *****
CONDLIST1309: // @@@ begin of alternative group
while(javadummy) {
CONDITION1310: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to FDEF --- JJ.M4
FDEF = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineGlobal
(
NAME
,
NodeFactory.NewNode(
"functiondefinition"
, new JavaNode [] {
FDEF
,
JavaLib.rtsNewKey()
}
)
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1309;
// $$$$$$$$ 
} // CONDITION1310 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1309 N=1308
if (javadummy) break CONDITION1308;
} // CONDLIST1309 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1308
// failed:
JavaLib.rtsAllAlternativesFailed("DeclareFunction");
}



public
static
void
ProcessGlobals(
)
{
// DECLARE for proc X
JavaNode X = null;
CONDITION1311:
while(javadummy) {
// ***** begin condlist 1312 (in cond 1311) *****
CONDLIST1312: // @@@ begin of alternative group
while(javadummy) {
CONDITION1313: // @@@ begin of alternative
while(javadummy) {
YyProcs.
PhaseTwo
(
);
YyProcs.
Emit_Prelude
(
);
YyProcs.
PhaseThree
(
);
if (! JavaLib.rtsTestDefined(ZzControlPart,"/line,offset,length,file=/ 209 5610 13 Globals.g"))
if (javadummy) break CONDITION1313;
{
JavaNode current0 = ZzControlPart;
//assign current0 to X --- JJ.M4
X = current0 ;
};
YyProcs.
ProcessControlPart
(
X
);
YyProcs.
Emit_Postlude
(
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1312;
// $$$$$$$$ 
} // CONDITION1313 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1312 N=1311
if (javadummy) break CONDITION1311;
} // CONDLIST1312 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1311
// failed:
JavaLib.rtsAllAlternativesFailed("ProcessGlobals");
}



public
static
void
PhaseTwo(
)
{
// DECLARE for proc GL
JavaNode GL = null;
// DECLARE for proc Globals
JavaNode Globals = null;
CONDITION1314:
while(javadummy) {
// ***** begin condlist 1315 (in cond 1314) *****
CONDLIST1315: // @@@ begin of alternative group
while(javadummy) {
CONDITION1316: // @@@ begin of alternative
while(javadummy) {
if (! JavaLib.rtsTestDefined(ScopeStack,"/line,offset,length,file=/ 216 5751 10 Globals.g"))
if (javadummy) break CONDITION1316;
{
JavaNode current0 = ScopeStack;
if (current0.Name
!= "SeqOf-Seq-SYMTABENTRY")
if (javadummy) break CONDITION1316;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Globals --- JJ.M4
Globals = current1 ;
current1 = current0.Child1[1];
if (current1.Name
!= "NilOf-Seq-SYMTABENTRY")
if (javadummy) break CONDITION1316;
} //)) children level 1
};
GL = 
Globals
;
// ***** begin condlist 1317 (in cond 1316) *****
CONDLIST1317: // @@@ begin of alternative group
while(javadummy) {
CONDITION1318: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative NAME
JavaNode NAME= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = GL;
if (current0.Name
!= "SeqOf-SYMTABENTRY")
if (javadummy) break CONDITION1318;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "symtabentry") )
   if (javadummy) break  CONDITION1318;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME --- JJ.M4
NAME = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Def --- JJ.M4
Def = current1 ;
} //)) children level 1
};
// ***** begin condlist 1319 (in cond 1318) *****
CONDLIST1319: // @@@ begin of alternative group
while(javadummy) {
CONDITION1320: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedComponentType
JavaNode RefNormalizedComponentType= null;
// DECLARE for alternative ComponentDef
JavaNode ComponentDef= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION1320;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ComponentDef --- JJ.M4
ComponentDef = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedComponentType --- JJ.M4
RefNormalizedComponentType = current1 ;
} //)) children level 1
};
YyProcs.
ActivateComponentType
(
NAME
,
ComponentDef
,
RefNormalizedComponentType
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1319;
// $$$$$$$$ 
} // CONDITION1320 // @@@ end of alternative
CONDITION1321: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedPortType
JavaNode RefNormalizedPortType= null;
// DECLARE for alternative PortDefAttribs
JavaNode PortDefAttribs= null;
// DECLARE for alternative N
JavaNode N= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "porttype") )
   if (javadummy) break  CONDITION1321;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N --- JJ.M4
N = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to PortDefAttribs --- JJ.M4
PortDefAttribs = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to RefNormalizedPortType --- JJ.M4
RefNormalizedPortType = current1 ;
} //)) children level 1
};
YyProcs.
ActivatePortType
(
N
,
PortDefAttribs
,
RefNormalizedPortType
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1319;
// $$$$$$$$ 
} // CONDITION1321 // @@@ end of alternative
CONDITION1322: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedFields
JavaNode RefNormalizedFields= null;
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative N
JavaNode N= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION1322;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N --- JJ.M4
N = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X --- JJ.M4
X = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to RefNormalizedFields --- JJ.M4
RefNormalizedFields = current1 ;
} //)) children level 1
};
YyProcs.
ActivateRecordType
(
NAME
,
X
,
RefNormalizedFields
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1319;
// $$$$$$$$ 
} // CONDITION1322 // @@@ end of alternative
CONDITION1323: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedFunction
JavaNode RefNormalizedFunction= null;
// DECLARE for alternative FunctionDef
JavaNode FunctionDef= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "functiondefinition") )
   if (javadummy) break  CONDITION1323;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FunctionDef --- JJ.M4
FunctionDef = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedFunction --- JJ.M4
RefNormalizedFunction = current1 ;
} //)) children level 1
};
YyProcs.
ActivateFunction
(
NAME
,
FunctionDef
,
RefNormalizedFunction
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1319;
// $$$$$$$$ 
} // CONDITION1323 // @@@ end of alternative
CONDITION1324: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedTestcase
JavaNode RefNormalizedTestcase= null;
// DECLARE for alternative TestcaseDef
JavaNode TestcaseDef= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "testcasedefinition") )
   if (javadummy) break  CONDITION1324;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to TestcaseDef --- JJ.M4
TestcaseDef = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedTestcase --- JJ.M4
RefNormalizedTestcase = current1 ;
} //)) children level 1
};
YyProcs.
ActivateTestcase
(
NAME
,
TestcaseDef
,
RefNormalizedTestcase
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1319;
// $$$$$$$$ 
} // CONDITION1324 // @@@ end of alternative
CONDITION1325: // @@@ begin of alternative
while(javadummy) {
YyProcs.
CompilerError
(
new JavaStringValue( "unexpected global item" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1319;
// $$$$$$$$ 
} // CONDITION1325 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1319 N=1318
if (javadummy) break CONDITION1318;
} // CONDLIST1319 @@@ end of alternative group
// *** CONTINUE ***
GL = 
T
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) continue CONDLIST1317;
// $$$$$$$$ 
} // CONDITION1318 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1317 N=1316
if (javadummy) break CONDLIST1317;
} // CONDLIST1317 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1315;
// $$$$$$$$ 
} // CONDITION1316 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1315 N=1314
if (javadummy) break CONDITION1314;
} // CONDLIST1315 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1314
// failed:
JavaLib.rtsAllAlternativesFailed("PhaseTwo");
}



public
static
void
PhaseThree(
)
{
// DECLARE for proc GL
JavaNode GL = null;
// DECLARE for proc Globals
JavaNode Globals = null;
CONDITION1326:
while(javadummy) {
// ***** begin condlist 1327 (in cond 1326) *****
CONDLIST1327: // @@@ begin of alternative group
while(javadummy) {
CONDITION1328: // @@@ begin of alternative
while(javadummy) {
if (! JavaLib.rtsTestDefined(ScopeStack,"/line,offset,length,file=/ 245 6900 10 Globals.g"))
if (javadummy) break CONDITION1328;
{
JavaNode current0 = ScopeStack;
if (current0.Name
!= "SeqOf-Seq-SYMTABENTRY")
if (javadummy) break CONDITION1328;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Globals --- JJ.M4
Globals = current1 ;
current1 = current0.Child1[1];
if (current1.Name
!= "NilOf-Seq-SYMTABENTRY")
if (javadummy) break CONDITION1328;
} //)) children level 1
};
GL = 
Globals
;
// ***** begin condlist 1329 (in cond 1328) *****
CONDLIST1329: // @@@ begin of alternative group
while(javadummy) {
CONDITION1330: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative NAME
JavaNode NAME= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = GL;
if (current0.Name
!= "SeqOf-SYMTABENTRY")
if (javadummy) break CONDITION1330;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "symtabentry") )
   if (javadummy) break  CONDITION1330;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME --- JJ.M4
NAME = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Def --- JJ.M4
Def = current1 ;
} //)) children level 1
};
// ***** begin condlist 1331 (in cond 1330) *****
CONDLIST1331: // @@@ begin of alternative group
while(javadummy) {
CONDITION1332: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedComponentType
JavaNode RefNormalizedComponentType= null;
// DECLARE for alternative ComponentDef
JavaNode ComponentDef= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION1332;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ComponentDef --- JJ.M4
ComponentDef = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedComponentType --- JJ.M4
RefNormalizedComponentType = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1331;
// $$$$$$$$ 
} // CONDITION1332 // @@@ end of alternative
CONDITION1333: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedPortType
JavaNode RefNormalizedPortType= null;
// DECLARE for alternative PortDefAttribs
JavaNode PortDefAttribs= null;
// DECLARE for alternative N
JavaNode N= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "porttype") )
   if (javadummy) break  CONDITION1333;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N --- JJ.M4
N = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to PortDefAttribs --- JJ.M4
PortDefAttribs = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to RefNormalizedPortType --- JJ.M4
RefNormalizedPortType = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1331;
// $$$$$$$$ 
} // CONDITION1333 // @@@ end of alternative
CONDITION1334: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedFields
JavaNode RefNormalizedFields= null;
// DECLARE for alternative X4
JavaNode X4= null;
// DECLARE for alternative N
JavaNode N= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION1334;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N --- JJ.M4
N = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X4 --- JJ.M4
X4 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to RefNormalizedFields --- JJ.M4
RefNormalizedFields = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1331;
// $$$$$$$$ 
} // CONDITION1334 // @@@ end of alternative
CONDITION1335: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedFunction
JavaNode RefNormalizedFunction= null;
// DECLARE for alternative FunctionDef
JavaNode FunctionDef= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "functiondefinition") )
   if (javadummy) break  CONDITION1335;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FunctionDef --- JJ.M4
FunctionDef = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedFunction --- JJ.M4
RefNormalizedFunction = current1 ;
} //)) children level 1
};
YyProcs.
ActivateFunction2
(
NAME
,
RefNormalizedFunction
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1331;
// $$$$$$$$ 
} // CONDITION1335 // @@@ end of alternative
CONDITION1336: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedTestcase
JavaNode RefNormalizedTestcase= null;
// DECLARE for alternative TestcaseDef
JavaNode TestcaseDef= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "testcasedefinition") )
   if (javadummy) break  CONDITION1336;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to TestcaseDef --- JJ.M4
TestcaseDef = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedTestcase --- JJ.M4
RefNormalizedTestcase = current1 ;
} //)) children level 1
};
YyProcs.
ActivateTestcase2
(
NAME
,
RefNormalizedTestcase
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1331;
// $$$$$$$$ 
} // CONDITION1336 // @@@ end of alternative
CONDITION1337: // @@@ begin of alternative
while(javadummy) {
YyProcs.
CompilerError
(
new JavaStringValue( "unexpected global item" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1331;
// $$$$$$$$ 
} // CONDITION1337 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1331 N=1330
if (javadummy) break CONDITION1330;
} // CONDLIST1331 @@@ end of alternative group
// *** CONTINUE ***
GL = 
T
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) continue CONDLIST1329;
// $$$$$$$$ 
} // CONDITION1330 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1329 N=1328
if (javadummy) break CONDLIST1329;
} // CONDLIST1329 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1327;
// $$$$$$$$ 
} // CONDITION1328 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1327 N=1326
if (javadummy) break CONDITION1326;
} // CONDLIST1327 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1326
// failed:
JavaLib.rtsAllAlternativesFailed("PhaseThree");
}



public
static
void
OpenFile(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc Name
JavaNode Name = null;
// DECLARE for proc Pkg
JavaNode Pkg = null;
CONDITION1338:
while(javadummy) {
// ***** begin condlist 1339 (in cond 1338) *****
CONDLIST1339: // @@@ begin of alternative group
while(javadummy) {
CONDITION1340: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Pkg --- JJ.M4
Pkg = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Name --- JJ.M4
Name = current0 ;
};
YyExternalPackage.ExternalFunctions.
OpenJavaTargetFile
(
Pkg
,
Name
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1339;
// $$$$$$$$ 
} // CONDITION1340 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1339 N=1338
if (javadummy) break CONDITION1338;
} // CONDLIST1339 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1338
// failed:
JavaLib.rtsAllAlternativesFailed("OpenFile");
}


// global variable ZzControlPart
static JavaNode ZzControlPart = null;

public
static
void
DeclareControlPart(

JavaNode yy_inparam_0
)
{
// DECLARE for proc X
JavaNode X = null;
CONDITION1341:
while(javadummy) {
// ***** begin condlist 1342 (in cond 1341) *****
CONDLIST1342: // @@@ begin of alternative group
while(javadummy) {
CONDITION1343: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
ZzControlPart=
X
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1342;
// $$$$$$$$ 
} // CONDITION1343 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1342 N=1341
if (javadummy) break CONDITION1341;
} // CONDLIST1342 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1341
// failed:
JavaLib.rtsAllAlternativesFailed("DeclareControlPart");
}



public
static
void
ActivateFunction(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc NormalizedFunction
JavaNode NormalizedFunction = null;
// DECLARE for proc RefNormalizedFunction
JavaNode RefNormalizedFunction = null;
// DECLARE for proc FDEF
JavaNode FDEF = null;
// DECLARE for proc NAME
JavaNode NAME = null;
// DECLARE for proc BLOCK
JavaNode BLOCK = null;
// DECLARE for proc FDEF18
JavaNode FDEF18 = null;
// DECLARE for proc M7
JavaNode M7 = null;
// DECLARE for proc FDEF15
JavaNode FDEF15 = null;
// DECLARE for proc FDEF13
JavaNode FDEF13 = null;
// DECLARE for proc NAME0
JavaNode NAME0 = null;
// DECLARE for proc RunsOnC
JavaNode RunsOnC = null;
CONDITION1344:
while(javadummy) {
// ***** begin condlist 1345 (in cond 1344) *****
CONDLIST1345: // @@@ begin of alternative group
while(javadummy) {
CONDITION1346: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to FDEF --- JJ.M4
FDEF = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to RefNormalizedFunction --- JJ.M4
RefNormalizedFunction = current0 ;
};
// ***** begin condlist 1347 (in cond 1346) *****
CONDLIST1347: // @@@ begin of alternative group
while(javadummy) {
CONDITION1348: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FDEF;
if (! current0 .Name
.equals( "FunctionDef_A1") )
   if (javadummy) break  CONDITION1348;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME0 --- JJ.M4
NAME0 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to FDEF13 --- JJ.M4
FDEF13 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to FDEF15 --- JJ.M4
FDEF15 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to M7 --- JJ.M4
M7 = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to FDEF18 --- JJ.M4
FDEF18 = current1 ;
current1 = kurrent0.Child1[5];
//assign current1 to BLOCK --- JJ.M4
BLOCK = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1347;
// $$$$$$$$ 
} // CONDITION1348 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1347 N=1346
if (javadummy) break CONDITION1346;
} // CONDLIST1347 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1349 (in cond 1346) *****
CONDLIST1349: // @@@ begin of alternative group
while(javadummy) {
CONDITION1350: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FDEF13;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionDef_A1_M3")
if (javadummy) break CONDITION1350;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1349;
// $$$$$$$$ 
} // CONDITION1350 // @@@ end of alternative
CONDITION1351: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FDEF13;
if (current0.Name
!= "OneOf-FunctionDef_A1_M3")
if (javadummy) break CONDITION1351;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "fdef13" )
,
FDEF13
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1349;
// $$$$$$$$ 
} // CONDITION1351 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1349 N=1346
if (javadummy) break CONDITION1346;
} // CONDLIST1349 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1352 (in cond 1346) *****
CONDLIST1352: // @@@ begin of alternative group
while(javadummy) {
CONDITION1353: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FDEF15;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionDef_A1_M5")
if (javadummy) break CONDITION1353;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1352;
// $$$$$$$$ 
} // CONDITION1353 // @@@ end of alternative
CONDITION1354: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FDEF15;
if (current0.Name
!= "OneOf-FunctionDef_A1_M5")
if (javadummy) break CONDITION1354;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "fdef15" )
,
FDEF15
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1352;
// $$$$$$$$ 
} // CONDITION1354 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1352 N=1346
if (javadummy) break CONDITION1346;
} // CONDLIST1352 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1355 (in cond 1346) *****
CONDLIST1355: // @@@ begin of alternative group
while(javadummy) {
CONDITION1356: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FDEF18;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionDef_A1_M8")
if (javadummy) break CONDITION1356;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1355;
// $$$$$$$$ 
} // CONDITION1356 // @@@ end of alternative
CONDITION1357: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = FDEF18;
if (current0.Name
!= "OneOf-FunctionDef_A1_M8")
if (javadummy) break CONDITION1357;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "fdef18" )
,
FDEF18
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1355;
// $$$$$$$$ 
} // CONDITION1357 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1355 N=1346
if (javadummy) break CONDITION1346;
} // CONDLIST1355 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1358 (in cond 1346) *****
CONDLIST1358: // @@@ begin of alternative group
while(javadummy) {
CONDITION1359: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RO
JavaNode RO= null;
// DECLARE for alternative RUNSON
JavaNode RUNSON= null;
{
JavaNode current0 = M7;
if (current0.Name
!= "OneOf-FunctionDef_A1_M7")
if (javadummy) break CONDITION1359;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to RO --- JJ.M4
RO = current1 ;
} //)) children level 1
};
// ***** begin condlist 1360 (in cond 1359) *****
CONDLIST1360: // @@@ begin of alternative group
while(javadummy) {
CONDITION1361: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = RO;
if (! current0 .Name
.equals( "FunctionDef_A1_M7_A1") )
   if (javadummy) break  CONDITION1361;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RUNSON --- JJ.M4
RUNSON = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1360;
// $$$$$$$$ 
} // CONDITION1361 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1360 N=1359
if (javadummy) break CONDITION1359;
} // CONDLIST1360 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
HandleRunsOn
(
RUNSON
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to RunsOnC --- JJ.M4
RunsOnC = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1358;
// $$$$$$$$ 
} // CONDITION1359 // @@@ end of alternative
CONDITION1362: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M7;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionDef_A1_M7")
if (javadummy) break CONDITION1362;
{ //(( children level 1
} //)) children level 1
};
RunsOnC = 
new JavaStringValue( "(none)" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1358;
// $$$$$$$$ 
} // CONDITION1362 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1358 N=1346
if (javadummy) break CONDITION1346;
} // CONDLIST1358 @@@ end of alternative group
// *** CONTINUE ***
NormalizedFunction = 
NodeFactory.NewNode(
"normalizedfunction"
, new JavaNode [] {
RunsOnC
,
BLOCK
}
)
;
JavaLib.rtsBindToKey(RefNormalizedFunction,
NormalizedFunction
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1345;
// $$$$$$$$ 
} // CONDITION1346 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1345 N=1344
if (javadummy) break CONDITION1344;
} // CONDLIST1345 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1344
// failed:
JavaLib.rtsAllAlternativesFailed("ActivateFunction");
}



public
static
void
HandleSystem(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc SYSTEMOPT
JavaNode SYSTEMOPT = null;
// DECLARE for proc SystemC
JavaNode SystemC = null;
CONDITION1363:
while(javadummy) {
// ***** begin condlist 1364 (in cond 1363) *****
CONDLIST1364: // @@@ begin of alternative group
while(javadummy) {
CONDITION1365: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SYSTEMOPT --- JJ.M4
SYSTEMOPT = current0 ;
};
// ***** begin condlist 1366 (in cond 1365) *****
CONDLIST1366: // @@@ begin of alternative group
while(javadummy) {
CONDITION1367: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative ConfigSpec
JavaNode ConfigSpec= null;
// DECLARE for alternative SYSSPEC
JavaNode SYSSPEC= null;
// DECLARE for alternative KOMPTYPE
JavaNode KOMPTYPE= null;
// DECLARE for alternative KOMPTYPE14
JavaNode KOMPTYPE14= null;
// DECLARE for alternative KOMPTYPE13
JavaNode KOMPTYPE13= null;
// DECLARE for alternative KOMPTYPE11
JavaNode KOMPTYPE11= null;
{
JavaNode current0 = SYSTEMOPT;
if (current0.Name
!= "OneOf-ConfigSpec_A1_M2")
if (javadummy) break CONDITION1367;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to ConfigSpec --- JJ.M4
ConfigSpec = current1 ;
} //)) children level 1
};
// ***** begin condlist 1368 (in cond 1367) *****
CONDLIST1368: // @@@ begin of alternative group
while(javadummy) {
CONDITION1369: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ConfigSpec;
if (! current0 .Name
.equals( "ConfigSpec_A1_M2_A1") )
   if (javadummy) break  CONDITION1369;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to SYSSPEC --- JJ.M4
SYSSPEC = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1368;
// $$$$$$$$ 
} // CONDITION1369 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1368 N=1367
if (javadummy) break CONDITION1367;
} // CONDLIST1368 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1370 (in cond 1367) *****
CONDLIST1370: // @@@ begin of alternative group
while(javadummy) {
CONDITION1371: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = SYSSPEC;
if (! current0 .Name
.equals( "SystemSpec_A1") )
   if (javadummy) break  CONDITION1371;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to KOMPTYPE --- JJ.M4
KOMPTYPE = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1370;
// $$$$$$$$ 
} // CONDITION1371 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1370 N=1367
if (javadummy) break CONDITION1367;
} // CONDLIST1370 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1372 (in cond 1367) *****
CONDLIST1372: // @@@ begin of alternative group
while(javadummy) {
CONDITION1373: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = KOMPTYPE;
if (! current0 .Name
.equals( "ComponentType_A1") )
   if (javadummy) break  CONDITION1373;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to KOMPTYPE11 --- JJ.M4
KOMPTYPE11 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to SystemC --- JJ.M4
SystemC = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to KOMPTYPE13 --- JJ.M4
KOMPTYPE13 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to KOMPTYPE14 --- JJ.M4
KOMPTYPE14 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1374 (in cond 1373) *****
CONDLIST1374: // @@@ begin of alternative group
while(javadummy) {
CONDITION1375: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = KOMPTYPE11;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentType_A1_M1")
if (javadummy) break CONDITION1375;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1374;
// $$$$$$$$ 
} // CONDITION1375 // @@@ end of alternative
CONDITION1376: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative C11
JavaNode C11= null;
{
JavaNode current0 = KOMPTYPE11;
if (current0.Name
!= "OneOf-ComponentType_A1_M1")
if (javadummy) break CONDITION1376;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to C11 --- JJ.M4
C11 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "qualified component in 'system'" )
,
C11
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1374;
// $$$$$$$$ 
} // CONDITION1376 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1374 N=1373
if (javadummy) break CONDITION1373;
} // CONDLIST1374 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1377 (in cond 1373) *****
CONDLIST1377: // @@@ begin of alternative group
while(javadummy) {
CONDITION1378: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = KOMPTYPE13;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentType_A1_M3")
if (javadummy) break CONDITION1378;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1377;
// $$$$$$$$ 
} // CONDITION1378 // @@@ end of alternative
CONDITION1379: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative C13
JavaNode C13= null;
{
JavaNode current0 = KOMPTYPE13;
if (current0.Name
!= "OneOf-ComponentType_A1_M3")
if (javadummy) break CONDITION1379;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to C13 --- JJ.M4
C13 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "generic component in 'system'" )
,
C13
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1377;
// $$$$$$$$ 
} // CONDITION1379 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1377 N=1373
if (javadummy) break CONDITION1373;
} // CONDLIST1377 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1380 (in cond 1373) *****
CONDLIST1380: // @@@ begin of alternative group
while(javadummy) {
CONDITION1381: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = KOMPTYPE14;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentType_A1_M4")
if (javadummy) break CONDITION1381;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1380;
// $$$$$$$$ 
} // CONDITION1381 // @@@ end of alternative
CONDITION1382: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative C14
JavaNode C14= null;
{
JavaNode current0 = KOMPTYPE14;
if (current0.Name
!= "OneOf-ComponentType_A1_M4")
if (javadummy) break CONDITION1382;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to C14 --- JJ.M4
C14 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "paramerized component in 'system'" )
,
C14
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1380;
// $$$$$$$$ 
} // CONDITION1382 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1380 N=1373
if (javadummy) break CONDITION1373;
} // CONDLIST1380 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1372;
// $$$$$$$$ 
} // CONDITION1373 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1372 N=1367
if (javadummy) break CONDITION1367;
} // CONDLIST1372 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(SystemC);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
GloballyDefined
(
SystemC
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 1383 (in cond 1367) *****
CONDLIST1383: // @@@ begin of alternative group
while(javadummy) {
CONDITION1384: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedComponentType
JavaNode RefNormalizedComponentType= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION1384;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedComponentType --- JJ.M4
RefNormalizedComponentType = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1383;
// $$$$$$$$ 
} // CONDITION1384 // @@@ end of alternative
CONDITION1385: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
SystemC
,
new JavaStringValue( "' not defined as component" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1383;
// $$$$$$$$ 
} // CONDITION1385 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1383 N=1367
if (javadummy) break CONDITION1367;
} // CONDLIST1383 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1366;
// $$$$$$$$ 
} // CONDITION1367 // @@@ end of alternative
CONDITION1386: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = SYSTEMOPT;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ConfigSpec_A1_M2")
if (javadummy) break CONDITION1386;
{ //(( children level 1
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "no 'system' specified" )
,
SYSTEMOPT
);
SystemC = 
new JavaStringValue( "" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1366;
// $$$$$$$$ 
} // CONDITION1386 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1366 N=1365
if (javadummy) break CONDITION1365;
} // CONDLIST1366 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
SystemC
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1364;
// $$$$$$$$ 
} // CONDITION1365 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1364 N=1363
if (javadummy) break CONDITION1363;
} // CONDLIST1364 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1363
// failed:
JavaLib.rtsAllAlternativesFailed("HandleSystem");
}



public
static
void
ActivateTestcase(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc NormalizedTestcase
JavaNode NormalizedTestcase = null;
// DECLARE for proc RefNormalizedTestcase
JavaNode RefNormalizedTestcase = null;
// DECLARE for proc TestcaseDef
JavaNode TestcaseDef = null;
// DECLARE for proc NAME
JavaNode NAME = null;
// DECLARE for proc BLOCK
JavaNode BLOCK = null;
// DECLARE for proc TT7
JavaNode TT7 = null;
// DECLARE for proc TT5
JavaNode TT5 = null;
// DECLARE for proc TT3
JavaNode TT3 = null;
// DECLARE for proc NAME0
JavaNode NAME0 = null;
// DECLARE for proc SystemC
JavaNode SystemC = null;
// DECLARE for proc RunsOnC
JavaNode RunsOnC = null;
CONDITION1387:
while(javadummy) {
// ***** begin condlist 1388 (in cond 1387) *****
CONDLIST1388: // @@@ begin of alternative group
while(javadummy) {
CONDITION1389: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to TestcaseDef --- JJ.M4
TestcaseDef = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to RefNormalizedTestcase --- JJ.M4
RefNormalizedTestcase = current0 ;
};
// ***** begin condlist 1390 (in cond 1389) *****
CONDLIST1390: // @@@ begin of alternative group
while(javadummy) {
CONDITION1391: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TestcaseDef;
if (! current0 .Name
.equals( "TestcaseDef_A1") )
   if (javadummy) break  CONDITION1391;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NAME0 --- JJ.M4
NAME0 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TT3 --- JJ.M4
TT3 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to TT5 --- JJ.M4
TT5 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to TT7 --- JJ.M4
TT7 = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to BLOCK --- JJ.M4
BLOCK = current1 ;
} //)) children level 1
};
// ***** begin condlist 1392 (in cond 1391) *****
CONDLIST1392: // @@@ begin of alternative group
while(javadummy) {
CONDITION1393: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TT3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-TestcaseDef_A1_M3")
if (javadummy) break CONDITION1393;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1392;
// $$$$$$$$ 
} // CONDITION1393 // @@@ end of alternative
CONDITION1394: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TT3;
if (current0.Name
!= "OneOf-TestcaseDef_A1_M3")
if (javadummy) break CONDITION1394;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "testcase tt3" )
,
TT3
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1392;
// $$$$$$$$ 
} // CONDITION1394 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1392 N=1391
if (javadummy) break CONDITION1391;
} // CONDLIST1392 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1395 (in cond 1391) *****
CONDLIST1395: // @@@ begin of alternative group
while(javadummy) {
CONDITION1396: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TT5;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-TestcaseDef_A1_M5")
if (javadummy) break CONDITION1396;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1395;
// $$$$$$$$ 
} // CONDITION1396 // @@@ end of alternative
CONDITION1397: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TT5;
if (current0.Name
!= "OneOf-TestcaseDef_A1_M5")
if (javadummy) break CONDITION1397;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "testcase arguments" )
,
TT5
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1395;
// $$$$$$$$ 
} // CONDITION1397 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1395 N=1391
if (javadummy) break CONDITION1391;
} // CONDLIST1395 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1398 (in cond 1391) *****
CONDLIST1398: // @@@ begin of alternative group
while(javadummy) {
CONDITION1399: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ConfigSpec2
JavaNode ConfigSpec2= null;
// DECLARE for alternative SYSTEMOPT
JavaNode SYSTEMOPT= null;
// DECLARE for alternative RUNSON
JavaNode RUNSON= null;
{
JavaNode current0 = TT7;
if (! current0 .Name
.equals( "TestcaseDef_A1_M7_A1") )
   if (javadummy) break  CONDITION1399;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ConfigSpec2 --- JJ.M4
ConfigSpec2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1400 (in cond 1399) *****
CONDLIST1400: // @@@ begin of alternative group
while(javadummy) {
CONDITION1401: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ConfigSpec2;
if (! current0 .Name
.equals( "ConfigSpec_A1") )
   if (javadummy) break  CONDITION1401;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RUNSON --- JJ.M4
RUNSON = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to SYSTEMOPT --- JJ.M4
SYSTEMOPT = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1400;
// $$$$$$$$ 
} // CONDITION1401 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1400 N=1399
if (javadummy) break CONDITION1399;
} // CONDLIST1400 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
HandleRunsOn
(
RUNSON
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to RunsOnC --- JJ.M4
RunsOnC = current0 ;
}
YyProcs.
HandleSystem
(
SYSTEMOPT
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to SystemC --- JJ.M4
SystemC = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1398;
// $$$$$$$$ 
} // CONDITION1399 // @@@ end of alternative
CONDITION1402: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TT7;
if (! current0 .Name
.equals( "TestcaseDef_A1_M7_A2") )
   if (javadummy) break  CONDITION1402;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
RunsOnC = 
new JavaStringValue( "-" )
;
SystemC = 
new JavaStringValue( "-" )
;
TokenStream.ReportError
(
new JavaStringValue( "cover" )
,new JavaStringValue( "nopos" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1398;
// $$$$$$$$ 
} // CONDITION1402 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1398 N=1391
if (javadummy) break CONDITION1391;
} // CONDLIST1398 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1390;
// $$$$$$$$ 
} // CONDITION1391 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1390 N=1389
if (javadummy) break CONDITION1389;
} // CONDLIST1390 @@@ end of alternative group
// *** CONTINUE ***
NormalizedTestcase = 
NodeFactory.NewNode(
"normalizedtestcase"
, new JavaNode [] {
RunsOnC
,
SystemC
,
BLOCK
}
)
;
JavaLib.rtsBindToKey(RefNormalizedTestcase,
NormalizedTestcase
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1388;
// $$$$$$$$ 
} // CONDITION1389 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1388 N=1387
if (javadummy) break CONDITION1387;
} // CONDLIST1388 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1387
// failed:
JavaLib.rtsAllAlternativesFailed("ActivateTestcase");
}



public
static
void
ActivateRecordType(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc RefNormalizedFields
JavaNode RefNormalizedFields = null;
// DECLARE for proc X4
JavaNode X4 = null;
// DECLARE for proc Name
JavaNode Name = null;
CONDITION1403:
while(javadummy) {
// ***** begin condlist 1404 (in cond 1403) *****
CONDLIST1404: // @@@ begin of alternative group
while(javadummy) {
CONDITION1405: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Name --- JJ.M4
Name = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X4 --- JJ.M4
X4 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to RefNormalizedFields --- JJ.M4
RefNormalizedFields = current0 ;
};
// ***** begin condlist 1406 (in cond 1405) *****
CONDLIST1406: // @@@ begin of alternative group
while(javadummy) {
CONDITION1407: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X4;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-StructDefBody_A1_M5")
if (javadummy) break CONDITION1407;
{ //(( children level 1
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "empty field list in record types" )
,
X4
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1406;
// $$$$$$$$ 
} // CONDITION1407 // @@@ end of alternative
CONDITION1408: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative XX
JavaNode XX= null;
// DECLARE for alternative PKG
JavaNode PKG= null;
// DECLARE for alternative Flds
JavaNode Flds= null;
// DECLARE for alternative Tl
JavaNode Tl= null;
// DECLARE for alternative Hd
JavaNode Hd= null;
// DECLARE for alternative XX2
JavaNode XX2= null;
// DECLARE for alternative XX1
JavaNode XX1= null;
{
JavaNode current0 = X4;
if (current0.Name
!= "OneOf-StructDefBody_A1_M5")
if (javadummy) break CONDITION1408;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to XX --- JJ.M4
XX = current1 ;
} //)) children level 1
};
// ***** begin condlist 1409 (in cond 1408) *****
CONDLIST1409: // @@@ begin of alternative group
while(javadummy) {
CONDITION1410: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX;
if (! current0 .Name
.equals( "StructDefBody_A1_M5_A1") )
   if (javadummy) break  CONDITION1410;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX1 --- JJ.M4
XX1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to XX2 --- JJ.M4
XX2 = current1 ;
} //)) children level 1
};
YyProcs.
HandleStructFieldDef
(
XX1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Hd --- JJ.M4
Hd = current0 ;
}
YyProcs.
HandleStructFieldDefs
(
XX2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tl --- JJ.M4
Tl = current0 ;
}
Flds = 
NodeFactory.NewNode (
"SeqOf-FIELD"
, new JavaNode [] {
Hd
,
Tl
}
)
;
JavaLib.rtsBindToKey(RefNormalizedFields,
NodeFactory.NewNode(
"normalizedfields"
, new JavaNode [] {
Flds
}
)
);
JavaLib.rtsCheckDefined(NameOfModule,"/line,offset,length,file=/ 437 13199 12 Globals.g");
PKG = NameOfModule;
YyExternalPackage.ExternalFunctions.
OpenJavaTargetFileMeta
(
PKG
,
Name
);
JavaLib.rtsEmitCode
("// EMITFILE 1 meta\n");
JavaLib.rtsEmitCode
("package ");
JavaLib.rtsEmitString
(
PKG
);
JavaLib.rtsEmitCode
(";\n");
JavaLib.rtsEmitCode
("import org.etsi.ttcn.tci.Type;\n");
JavaLib.rtsEmitCode
("import org.etsi.ttcn.tci.Value;\n");
JavaLib.rtsEmitCode
("import org.etsi.ttcn.tci.TciTypeClass;\n");
JavaLib.rtsEmitCode
("import targetcode.Instructions;\n");
JavaLib.rtsEmitCode
("public class Meta");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
(" extends de.fraunhofer.fokus.ttcn.tci.TypeImpl\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("   public static Type Instance = new Meta");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
("();\n");
JavaLib.rtsEmitCode
("   public Meta");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
("()\n");
JavaLib.rtsEmitCode
("   {\n");
JavaLib.rtsEmitCode
("      super(null, \"");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
("\", TciTypeClass.RECORD, \"typeEnc\", \"typeEncVar\", null, null, null) ;\n");
JavaLib.rtsEmitCode
("      Instructions.RegisterType(this);\n");
JavaLib.rtsEmitCode
("   }\n");
JavaLib.rtsEmitCode
("   @Override public Value newInstance()\n");
JavaLib.rtsEmitCode
("   {\n");
JavaLib.rtsEmitCode
("      return new ");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
("(\"/NewInstance/\");\n");
JavaLib.rtsEmitCode
("   }\n");
JavaLib.rtsEmitCode
("}\n");
// openfile
JavaLib.rtsCloseAlphaFile
(
);
// openfile end
YyProcs.
OpenFile
(
PKG
,
Name
);
JavaLib.rtsEmitCode
("// EMITFILE 2 record type\n");
JavaLib.rtsEmitCode
("package ");
JavaLib.rtsEmitString
(
PKG
);
JavaLib.rtsEmitCode
(";\n");
YyProcs.
Emit_Imports
(
);
JavaLib.rtsEmitCode
("import de.fraunhofer.fokus.ttcn.tci.IntegerValueImpl;\n");
JavaLib.rtsEmitCode
("import de.fraunhofer.fokus.ttcn.tci.CharstringValueImpl;\n");
JavaLib.rtsEmitCode
("import de.fraunhofer.fokus.ttcn.tci.BooleanValueImpl;\n");
JavaLib.rtsEmitCode
("import org.etsi.ttcn.tci.Type;\n");
JavaLib.rtsEmitCode
("public class ");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
(" extends de.fraunhofer.fokus.ttcn.tci.RecordValueImpl\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("   //public Type MetaType = Meta");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
(".Instance;\n");
JavaLib.rtsEmitCode
("   public ");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
("(String id) {\n");
JavaLib.rtsEmitCode
("      super(Meta");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
(".Instance);\n");
JavaLib.rtsEmitCode
("      fieldNames = new String[] {\n");
YyProcs.
FieldNames
(
Flds
);
JavaLib.rtsEmitCode
("      };\n");
JavaLib.rtsEmitCode
("      vals = new Value[] {\n");
YyProcs.
FieldTypes
(
Flds
);
JavaLib.rtsEmitCode
("};\n");
JavaLib.rtsEmitCode
("   }\n");
JavaLib.rtsEmitCode
("}\n");
// openfile
JavaLib.rtsCloseAlphaFile
(
);
// openfile end
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1409;
// $$$$$$$$ 
} // CONDITION1410 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1409 N=1408
if (javadummy) break CONDITION1408;
} // CONDLIST1409 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1406;
// $$$$$$$$ 
} // CONDITION1408 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1406 N=1405
if (javadummy) break CONDITION1405;
} // CONDLIST1406 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1404;
// $$$$$$$$ 
} // CONDITION1405 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1404 N=1403
if (javadummy) break CONDITION1403;
} // CONDLIST1404 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1403
// failed:
JavaLib.rtsAllAlternativesFailed("ActivateRecordType");
}



public
static
void
FieldNames(

JavaNode yy_inparam_0
)
{
CONDITION1411:
while(javadummy) {
// ***** begin condlist 1412 (in cond 1411) *****
CONDLIST1412: // @@@ begin of alternative group
while(javadummy) {
CONDITION1413: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Type
JavaNode Type= null;
// DECLARE for alternative Name
JavaNode Name= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-FIELD")
if (javadummy) break CONDITION1413;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "field") )
   if (javadummy) break  CONDITION1413;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Name --- JJ.M4
Name = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Type --- JJ.M4
Type = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("\"");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
("\"");
// ***** begin condlist 1414 (in cond 1413) *****
CONDLIST1414: // @@@ begin of alternative group
while(javadummy) {
CONDITION1415: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = T;
if (current0.Name
!= "NilOf-FIELD")
if (javadummy) break CONDITION1415;
};
JavaLib.rtsEmitCode
("\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1414;
// $$$$$$$$ 
} // CONDITION1415 // @@@ end of alternative
CONDITION1416: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
(",\n");
YyProcs.
FieldNames
(
T
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1414;
// $$$$$$$$ 
} // CONDITION1416 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1414 N=1413
if (javadummy) break CONDITION1413;
} // CONDLIST1414 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1412;
// $$$$$$$$ 
} // CONDITION1413 // @@@ end of alternative
CONDITION1417: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-FIELD")
if (javadummy) break CONDITION1417;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1412;
// $$$$$$$$ 
} // CONDITION1417 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1412 N=1411
if (javadummy) break CONDITION1411;
} // CONDLIST1412 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1411
// failed:
JavaLib.rtsAllAlternativesFailed("FieldNames");
}



public
static
void
FieldTypes(

JavaNode yy_inparam_0
)
{
CONDITION1418:
while(javadummy) {
// ***** begin condlist 1419 (in cond 1418) *****
CONDLIST1419: // @@@ begin of alternative group
while(javadummy) {
CONDITION1420: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Type
JavaNode Type= null;
// DECLARE for alternative Name
JavaNode Name= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-FIELD")
if (javadummy) break CONDITION1420;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "field") )
   if (javadummy) break  CONDITION1420;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Name --- JJ.M4
Name = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Type --- JJ.M4
Type = current1 ;
} //)) children level 1
};
// ***** begin condlist 1421 (in cond 1420) *****
CONDLIST1421: // @@@ begin of alternative group
while(javadummy) {
CONDITION1422: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Type;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION1422;
};
JavaLib.rtsEmitCode
("new IntegerValueImpl()");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1421;
// $$$$$$$$ 
} // CONDITION1422 // @@@ end of alternative
CONDITION1423: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Type;
if (! current0 .Name
.equals( "tp_boolean") )
   if (javadummy) break  CONDITION1423;
};
JavaLib.rtsEmitCode
("new BooleanValueImpl()");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1421;
// $$$$$$$$ 
} // CONDITION1423 // @@@ end of alternative
CONDITION1424: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Type;
if (! current0 .Name
.equals( "tp_charstring") )
   if (javadummy) break  CONDITION1424;
};
JavaLib.rtsEmitCode
("new CharstringValueImpl()");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1421;
// $$$$$$$$ 
} // CONDITION1424 // @@@ end of alternative
CONDITION1425: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Name2
JavaNode Name2= null;
// DECLARE for alternative D
JavaNode D= null;
{
JavaNode current0 = Type;
if (! current0 .Name
.equals( "tp_referenced") )
   if (javadummy) break  CONDITION1425;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to D --- JJ.M4
D = current1 ;
} //)) children level 1
};
{
JavaNode current0 = D;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION1425;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Name2 --- JJ.M4
Name2 = current1 ;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
} //)) children level 1
};
JavaLib.rtsEmitCode
("new ");
JavaLib.rtsEmitString
(
Name2
);
JavaLib.rtsEmitCode
("(\"");
JavaLib.rtsEmitString
(
Name2
);
JavaLib.rtsEmitCode
("\")");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1421;
// $$$$$$$$ 
} // CONDITION1425 // @@@ end of alternative
CONDITION1426: // @@@ begin of alternative
while(javadummy) {
YyProcs.
NotCovered
(
new JavaStringValue( "target code record field of this type" )
,
Type
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1421;
// $$$$$$$$ 
} // CONDITION1426 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1421 N=1420
if (javadummy) break CONDITION1420;
} // CONDLIST1421 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1427 (in cond 1420) *****
CONDLIST1427: // @@@ begin of alternative group
while(javadummy) {
CONDITION1428: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = T;
if (current0.Name
!= "NilOf-FIELD")
if (javadummy) break CONDITION1428;
};
JavaLib.rtsEmitCode
("\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1427;
// $$$$$$$$ 
} // CONDITION1428 // @@@ end of alternative
CONDITION1429: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
(",\n");
YyProcs.
FieldTypes
(
T
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1427;
// $$$$$$$$ 
} // CONDITION1429 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1427 N=1420
if (javadummy) break CONDITION1420;
} // CONDLIST1427 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1419;
// $$$$$$$$ 
} // CONDITION1420 // @@@ end of alternative
CONDITION1430: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-FIELD")
if (javadummy) break CONDITION1430;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1419;
// $$$$$$$$ 
} // CONDITION1430 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1419 N=1418
if (javadummy) break CONDITION1418;
} // CONDLIST1419 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1418
// failed:
JavaLib.rtsAllAlternativesFailed("FieldTypes");
}



public
static
void
HandleStructFieldDef(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Fld
JavaNode Fld = null;
// DECLARE for proc XX1
JavaNode XX1 = null;
// DECLARE for proc Optional
JavaNode Optional = null;
// DECLARE for proc Subtype
JavaNode Subtype = null;
// DECLARE for proc Array
JavaNode Array = null;
// DECLARE for proc Name
JavaNode Name = null;
// DECLARE for proc Type
JavaNode Type = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION1431:
while(javadummy) {
// ***** begin condlist 1432 (in cond 1431) *****
CONDLIST1432: // @@@ begin of alternative group
while(javadummy) {
CONDITION1433: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to XX1 --- JJ.M4
XX1 = current0 ;
};
// ***** begin condlist 1434 (in cond 1433) *****
CONDLIST1434: // @@@ begin of alternative group
while(javadummy) {
CONDITION1435: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX1;
if (! current0 .Name
.equals( "StructFieldDef_A1") )
   if (javadummy) break  CONDITION1435;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Type --- JJ.M4
Type = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Name --- JJ.M4
Name = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Array --- JJ.M4
Array = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to Subtype --- JJ.M4
Subtype = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to Optional --- JJ.M4
Optional = current1 ;
} //)) children level 1
};
// ***** begin condlist 1436 (in cond 1435) *****
CONDLIST1436: // @@@ begin of alternative group
while(javadummy) {
CONDITION1437: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefType
JavaNode RefType= null;
{
JavaNode current0 = Type;
if (! current0 .Name
.equals( "StructFieldDef_A1_M1_A1") )
   if (javadummy) break  CONDITION1437;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RefType --- JJ.M4
RefType = current1 ;
} //)) children level 1
};
// ***** begin condlist 1438 (in cond 1437) *****
CONDLIST1438: // @@@ begin of alternative group
while(javadummy) {
CONDITION1439: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Predef
JavaNode Predef= null;
{
JavaNode current0 = RefType;
if (! current0 .Name
.equals( "Type_A1") )
   if (javadummy) break  CONDITION1439;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Predef --- JJ.M4
Predef = current1 ;
} //)) children level 1
};
// ***** begin condlist 1440 (in cond 1439) *****
CONDLIST1440: // @@@ begin of alternative group
while(javadummy) {
CONDITION1441: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Predef;
if (! current0 .Name
.equals( "PredefinedType_A3") )
   if (javadummy) break  CONDITION1441;
};
Tp = 
NodeFactory.NewNode(
"tp_charstring"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1440;
// $$$$$$$$ 
} // CONDITION1441 // @@@ end of alternative
CONDITION1442: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Predef;
if (! current0 .Name
.equals( "PredefinedType_A5") )
   if (javadummy) break  CONDITION1442;
};
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1440;
// $$$$$$$$ 
} // CONDITION1442 // @@@ end of alternative
CONDITION1443: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Predef;
if (! current0 .Name
.equals( "PredefinedType_A2") )
   if (javadummy) break  CONDITION1443;
};
Tp = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1440;
// $$$$$$$$ 
} // CONDITION1443 // @@@ end of alternative
CONDITION1444: // @@@ begin of alternative
while(javadummy) {
YyProcs.
NotCovered
(
new JavaStringValue( "this predefined field type" )
,
Predef
);
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1440;
// $$$$$$$$ 
} // CONDITION1444 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1440 N=1439
if (javadummy) break CONDITION1439;
} // CONDLIST1440 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1438;
// $$$$$$$$ 
} // CONDITION1439 // @@@ end of alternative
CONDITION1445: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative R
JavaNode R= null;
// DECLARE for alternative D
JavaNode D= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative X5
JavaNode X5= null;
// DECLARE for alternative X4
JavaNode X4= null;
// DECLARE for alternative X3
JavaNode X3= null;
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = RefType;
if (! current0 .Name
.equals( "Type_A2") )
   if (javadummy) break  CONDITION1445;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to R --- JJ.M4
R = current1 ;
} //)) children level 1
};
// ***** begin condlist 1446 (in cond 1445) *****
CONDLIST1446: // @@@ begin of alternative group
while(javadummy) {
CONDITION1447: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = R;
if (! current0 .Name
.equals( "ReferencedType_A1") )
   if (javadummy) break  CONDITION1447;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to X4 --- JJ.M4
X4 = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to X5 --- JJ.M4
X5 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(X2);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
GloballyDefined
(
X2
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to D --- JJ.M4
D = current0 ;
}
Tp = 
NodeFactory.NewNode(
"tp_referenced"
, new JavaNode [] {
D
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1446;
// $$$$$$$$ 
} // CONDITION1447 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1446 N=1445
if (javadummy) break CONDITION1445;
} // CONDLIST1446 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1438;
// $$$$$$$$ 
} // CONDITION1445 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1438 N=1437
if (javadummy) break CONDITION1437;
} // CONDLIST1438 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1436;
// $$$$$$$$ 
} // CONDITION1437 // @@@ end of alternative
CONDITION1448: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative NestedType
JavaNode NestedType= null;
{
JavaNode current0 = Type;
if (! current0 .Name
.equals( "StructFieldDef_A1_M1_A2") )
   if (javadummy) break  CONDITION1448;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to NestedType --- JJ.M4
NestedType = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "nested types" )
,
NestedType
);
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1436;
// $$$$$$$$ 
} // CONDITION1448 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1436 N=1435
if (javadummy) break CONDITION1435;
} // CONDLIST1436 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1449 (in cond 1435) *****
CONDLIST1449: // @@@ begin of alternative group
while(javadummy) {
CONDITION1450: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative A
JavaNode A= null;
{
JavaNode current0 = Array;
if (current0.Name
!= "OneOf-StructFieldDef_A1_M3")
if (javadummy) break CONDITION1450;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to A --- JJ.M4
A = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "fields as arrays" )
,
A
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1449;
// $$$$$$$$ 
} // CONDITION1450 // @@@ end of alternative
CONDITION1451: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Array;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-StructFieldDef_A1_M3")
if (javadummy) break CONDITION1451;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1449;
// $$$$$$$$ 
} // CONDITION1451 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1449 N=1435
if (javadummy) break CONDITION1435;
} // CONDLIST1449 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1452 (in cond 1435) *****
CONDLIST1452: // @@@ begin of alternative group
while(javadummy) {
CONDITION1453: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S
JavaNode S= null;
{
JavaNode current0 = Subtype;
if (current0.Name
!= "OneOf-StructFieldDef_A1_M4")
if (javadummy) break CONDITION1453;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to S --- JJ.M4
S = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "subtypes for fields" )
,
S
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1452;
// $$$$$$$$ 
} // CONDITION1453 // @@@ end of alternative
CONDITION1454: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Subtype;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-StructFieldDef_A1_M4")
if (javadummy) break CONDITION1454;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1452;
// $$$$$$$$ 
} // CONDITION1454 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1452 N=1435
if (javadummy) break CONDITION1435;
} // CONDLIST1452 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1455 (in cond 1435) *****
CONDLIST1455: // @@@ begin of alternative group
while(javadummy) {
CONDITION1456: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative O
JavaNode O= null;
{
JavaNode current0 = Optional;
if (current0.Name
!= "OneOf-StructFieldDef_A1_M5")
if (javadummy) break CONDITION1456;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to O --- JJ.M4
O = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "optional fields" )
,
O
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1455;
// $$$$$$$$ 
} // CONDITION1456 // @@@ end of alternative
CONDITION1457: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Optional;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-StructFieldDef_A1_M5")
if (javadummy) break CONDITION1457;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1455;
// $$$$$$$$ 
} // CONDITION1457 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1455 N=1435
if (javadummy) break CONDITION1435;
} // CONDLIST1455 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1434;
// $$$$$$$$ 
} // CONDITION1435 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1434 N=1433
if (javadummy) break CONDITION1433;
} // CONDLIST1434 @@@ end of alternative group
// *** CONTINUE ***
Fld = 
NodeFactory.NewNode(
"field"
, new JavaNode [] {
Name
,
Tp
}
)
;
yy_outparam_0 = 
Fld
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1432;
// $$$$$$$$ 
} // CONDITION1433 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1432 N=1431
if (javadummy) break CONDITION1431;
} // CONDLIST1432 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1431
// failed:
JavaLib.rtsAllAlternativesFailed("HandleStructFieldDef");
}



public
static
void
HandleStructFieldDefs(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc XX2
JavaNode XX2 = null;
// DECLARE for proc Flds
JavaNode Flds = null;
CONDITION1458:
while(javadummy) {
// ***** begin condlist 1459 (in cond 1458) *****
CONDLIST1459: // @@@ begin of alternative group
while(javadummy) {
CONDITION1460: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to XX2 --- JJ.M4
XX2 = current0 ;
};
// ***** begin condlist 1461 (in cond 1460) *****
CONDLIST1461: // @@@ begin of alternative group
while(javadummy) {
CONDITION1462: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tl
JavaNode Tl= null;
// DECLARE for alternative Tail
JavaNode Tail= null;
// DECLARE for alternative Head
JavaNode Head= null;
// DECLARE for alternative Hd
JavaNode Hd= null;
// DECLARE for alternative YY
JavaNode YY= null;
{
JavaNode current0 = XX2;
if (current0.Name
!= "SeqOf-StructDefBody_A1_M5_A1_M2")
if (javadummy) break CONDITION1462;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to Head --- JJ.M4
Head = current1 ;
current1 = current0.Child1[1];
//assign current1 to Tail --- JJ.M4
Tail = current1 ;
} //)) children level 1
};
// ***** begin condlist 1463 (in cond 1462) *****
CONDLIST1463: // @@@ begin of alternative group
while(javadummy) {
CONDITION1464: // @@@ begin of alternative
while(javadummy) {
// ***** begin condlist 1465 (in cond 1464) *****
CONDLIST1465: // @@@ begin of alternative group
while(javadummy) {
CONDITION1466: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Head;
if (! current0 .Name
.equals( "StructDefBody_A1_M5_A1_M2_A1") )
   if (javadummy) break  CONDITION1466;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to YY --- JJ.M4
YY = current1 ;
} //)) children level 1
};
YyProcs.
HandleStructFieldDef
(
YY
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Hd --- JJ.M4
Hd = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1465;
// $$$$$$$$ 
} // CONDITION1466 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1465 N=1464
if (javadummy) break CONDITION1464;
} // CONDLIST1465 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1463;
// $$$$$$$$ 
} // CONDITION1464 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1463 N=1462
if (javadummy) break CONDITION1462;
} // CONDLIST1463 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
HandleStructFieldDefs
(
Tail
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tl --- JJ.M4
Tl = current0 ;
}
Flds = 
NodeFactory.NewNode (
"SeqOf-FIELD"
, new JavaNode [] {
Hd
,
Tl
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1461;
// $$$$$$$$ 
} // CONDITION1462 // @@@ end of alternative
CONDITION1467: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX2;
if (current0.Name
!= "NilOf-StructDefBody_A1_M5_A1_M2")
if (javadummy) break CONDITION1467;
};
Flds = 
NodeFactory.NewNode (
"NilOf-FIELD"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1461;
// $$$$$$$$ 
} // CONDITION1467 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1461 N=1460
if (javadummy) break CONDITION1460;
} // CONDLIST1461 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Flds
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1459;
// $$$$$$$$ 
} // CONDITION1460 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1459 N=1458
if (javadummy) break CONDITION1458;
} // CONDLIST1459 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1458
// failed:
JavaLib.rtsAllAlternativesFailed("HandleStructFieldDefs");
}



public
static
void
ActivateComponentType(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc PKG
JavaNode PKG = null;
// DECLARE for proc NormalizedComponentType
JavaNode NormalizedComponentType = null;
// DECLARE for proc QQ1
JavaNode QQ1 = null;
// DECLARE for proc RefNormalizedComponentType
JavaNode RefNormalizedComponentType = null;
// DECLARE for proc ComponentDef
JavaNode ComponentDef = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION1468:
while(javadummy) {
// ***** begin condlist 1469 (in cond 1468) *****
CONDLIST1469: // @@@ begin of alternative group
while(javadummy) {
CONDITION1470: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to ComponentDef --- JJ.M4
ComponentDef = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to RefNormalizedComponentType --- JJ.M4
RefNormalizedComponentType = current0 ;
};
YyProcs.
HandleComponent
(
ComponentDef
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to QQ1 --- JJ.M4
QQ1 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to NormalizedComponentType --- JJ.M4
NormalizedComponentType = current0 ;
}
JavaLib.rtsBindToKey(RefNormalizedComponentType,
NormalizedComponentType
);
JavaLib.rtsCheckDefined(NameOfModule,"/line,offset,length,file=/ 655 20431 12 Globals.g");
PKG = NameOfModule;
YyProcs.
OpenFile
(
PKG
,
NAME
);
JavaLib.rtsEmitCode
("// EMITFILE 3 component type\n");
JavaLib.rtsEmitCode
("package ");
JavaLib.rtsEmitString
(
PKG
);
JavaLib.rtsEmitCode
(";\n");
YyProcs.
Emit_Imports
(
);
JavaLib.rtsEmitCode
("public class ");
JavaLib.rtsEmitString
(
NAME
);
JavaLib.rtsEmitCode
(" extends Component\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("public ");
JavaLib.rtsEmitString
(
NAME
);
JavaLib.rtsEmitCode
("(String Id)\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("targetcode.Trace.print(\"Component constructed:\");\n");
JavaLib.rtsEmitCode
("MyName = Id;\n");
JavaLib.rtsEmitCode
("MyType = \"");
JavaLib.rtsEmitString
(
NAME
);
JavaLib.rtsEmitCode
("\";\n");
YyProcs.
HHHandleComponentMembers
(
NormalizedComponentType
);
JavaLib.rtsEmitCode
("TestOutput();\n");
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
("}\n");
// openfile
JavaLib.rtsCloseAlphaFile
(
);
// openfile end
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1469;
// $$$$$$$$ 
} // CONDITION1470 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1469 N=1468
if (javadummy) break CONDITION1468;
} // CONDLIST1469 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1468
// failed:
JavaLib.rtsAllAlternativesFailed("ActivateComponentType");
}



public
static
void
HandleComponent(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc ComponentDef
JavaNode ComponentDef = null;
// DECLARE for proc QQ
JavaNode QQ = null;
// DECLARE for proc CC
JavaNode CC = null;
// DECLARE for proc BB
JavaNode BB = null;
// DECLARE for proc AA
JavaNode AA = null;
// DECLARE for proc Id
JavaNode Id = null;
// DECLARE for proc NormalizedComponentType
JavaNode NormalizedComponentType = null;
// DECLARE for proc LL2
JavaNode LL2 = null;
CONDITION1471:
while(javadummy) {
// ***** begin condlist 1472 (in cond 1471) *****
CONDLIST1472: // @@@ begin of alternative group
while(javadummy) {
CONDITION1473: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to ComponentDef --- JJ.M4
ComponentDef = current0 ;
};
// ***** begin condlist 1474 (in cond 1473) *****
CONDLIST1474: // @@@ begin of alternative group
while(javadummy) {
CONDITION1475: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ComponentDef;
if (! current0 .Name
.equals( "ComponentDef_A1") )
   if (javadummy) break  CONDITION1475;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to AA --- JJ.M4
AA = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to BB --- JJ.M4
BB = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to CC --- JJ.M4
CC = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to QQ --- JJ.M4
QQ = current1 ;
} //)) children level 1
};
// ***** begin condlist 1476 (in cond 1475) *****
CONDLIST1476: // @@@ begin of alternative group
while(javadummy) {
CONDITION1477: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = AA;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentDef_A1_M3")
if (javadummy) break CONDITION1477;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1476;
// $$$$$$$$ 
} // CONDITION1477 // @@@ end of alternative
CONDITION1478: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = AA;
if (current0.Name
!= "OneOf-ComponentDef_A1_M3")
if (javadummy) break CONDITION1478;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "formal type parameters" )
,
AA
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1476;
// $$$$$$$$ 
} // CONDITION1478 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1476 N=1475
if (javadummy) break CONDITION1475;
} // CONDLIST1476 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1479 (in cond 1475) *****
CONDLIST1479: // @@@ begin of alternative group
while(javadummy) {
CONDITION1480: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = BB;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentDef_A1_M4")
if (javadummy) break CONDITION1480;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1479;
// $$$$$$$$ 
} // CONDITION1480 // @@@ end of alternative
CONDITION1481: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = BB;
if (current0.Name
!= "OneOf-ComponentDef_A1_M4")
if (javadummy) break CONDITION1481;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "struct def formal type parameters" )
,
BB
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1479;
// $$$$$$$$ 
} // CONDITION1481 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1479 N=1475
if (javadummy) break CONDITION1475;
} // CONDLIST1479 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1482 (in cond 1475) *****
CONDLIST1482: // @@@ begin of alternative group
while(javadummy) {
CONDITION1483: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CC;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentDef_A1_M5")
if (javadummy) break CONDITION1483;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1482;
// $$$$$$$$ 
} // CONDITION1483 // @@@ end of alternative
CONDITION1484: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CC;
if (current0.Name
!= "OneOf-ComponentDef_A1_M5")
if (javadummy) break CONDITION1484;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "extends" )
,
CC
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1482;
// $$$$$$$$ 
} // CONDITION1484 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1482 N=1475
if (javadummy) break CONDITION1475;
} // CONDLIST1482 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1485 (in cond 1475) *****
CONDLIST1485: // @@@ begin of alternative group
while(javadummy) {
CONDITION1486: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = QQ;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentDef_A1_M7")
if (javadummy) break CONDITION1486;
{ //(( children level 1
} //)) children level 1
};
LL2 = 
NodeFactory.NewNode (
"NilOf-CompItem"
,  new JavaNode [] {})
;
NormalizedComponentType = 
NodeFactory.NewNode(
"normalizedcomptype"
, new JavaNode [] {
LL2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1485;
// $$$$$$$$ 
} // CONDITION1486 // @@@ end of alternative
CONDITION1487: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative KK
JavaNode KK= null;
// DECLARE for alternative List
JavaNode List= null;
// DECLARE for alternative LL
JavaNode LL= null;
{
JavaNode current0 = QQ;
if (current0.Name
!= "OneOf-ComponentDef_A1_M7")
if (javadummy) break CONDITION1487;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to KK --- JJ.M4
KK = current1 ;
} //)) children level 1
};
// ***** begin condlist 1488 (in cond 1487) *****
CONDLIST1488: // @@@ begin of alternative group
while(javadummy) {
CONDITION1489: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = KK;
if (! current0 .Name
.equals( "ComponentDef_A1_M7_A1") )
   if (javadummy) break  CONDITION1489;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to List --- JJ.M4
List = current1 ;
} //)) children level 1
};
// ***** begin condlist 1490 (in cond 1489) *****
CONDLIST1490: // @@@ begin of alternative group
while(javadummy) {
CONDITION1491: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = List;
if (! current0 .Name
.equals( "ComponentDefList_A1") )
   if (javadummy) break  CONDITION1491;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to LL --- JJ.M4
LL = current1 ;
} //)) children level 1
};
YyProcs.
HandleComponentDefListMembers
(
LL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to LL2 --- JJ.M4
LL2 = current0 ;
}
NormalizedComponentType = 
NodeFactory.NewNode(
"normalizedcomptype"
, new JavaNode [] {
LL2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1490;
// $$$$$$$$ 
} // CONDITION1491 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1490 N=1489
if (javadummy) break CONDITION1489;
} // CONDLIST1490 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1488;
// $$$$$$$$ 
} // CONDITION1489 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1488 N=1487
if (javadummy) break CONDITION1487;
} // CONDLIST1488 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1485;
// $$$$$$$$ 
} // CONDITION1487 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1485 N=1475
if (javadummy) break CONDITION1475;
} // CONDLIST1485 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1474;
// $$$$$$$$ 
} // CONDITION1475 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1474 N=1473
if (javadummy) break CONDITION1473;
} // CONDLIST1474 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
QQ
;
yy_outparam_1 = 
NormalizedComponentType
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1472;
// $$$$$$$$ 
} // CONDITION1473 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1472 N=1471
if (javadummy) break CONDITION1471;
} // CONDLIST1472 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1471
// failed:
JavaLib.rtsAllAlternativesFailed("HandleComponent");
}



public
static
void
HandleComponentDefListMembers(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
CONDITION1492:
while(javadummy) {
// ***** begin condlist 1493 (in cond 1492) *****
CONDLIST1493: // @@@ begin of alternative group
while(javadummy) {
CONDITION1494: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T2
JavaNode T2= null;
// DECLARE for alternative H2
JavaNode H2= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-ComponentDefList_A1_M1")
if (javadummy) break CONDITION1494;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
HandleComponentDefListMember
(
H
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to H2 --- JJ.M4
H2 = current0 ;
}
YyProcs.
HandleComponentDefListMembers
(
T
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to T2 --- JJ.M4
T2 = current0 ;
}
yy_outparam_0 = 
NodeFactory.NewNode (
"SeqOf-CompItem"
, new JavaNode [] {
H2
,
T2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1493;
// $$$$$$$$ 
} // CONDITION1494 // @@@ end of alternative
CONDITION1495: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-ComponentDefList_A1_M1")
if (javadummy) break CONDITION1495;
};
yy_outparam_0 = 
NodeFactory.NewNode (
"NilOf-CompItem"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1493;
// $$$$$$$$ 
} // CONDITION1495 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1493 N=1492
if (javadummy) break CONDITION1492;
} // CONDLIST1493 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1492
// failed:
JavaLib.rtsAllAlternativesFailed("HandleComponentDefListMembers");
}



public
static
void
HandleComponentDefListMember(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Member
JavaNode Member = null;
// DECLARE for proc ComponentElementDef
JavaNode ComponentElementDef = null;
// DECLARE for proc CompItem
JavaNode CompItem = null;
CONDITION1496:
while(javadummy) {
// ***** begin condlist 1497 (in cond 1496) *****
CONDLIST1497: // @@@ begin of alternative group
while(javadummy) {
CONDITION1498: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Member --- JJ.M4
Member = current0 ;
};
// ***** begin condlist 1499 (in cond 1498) *****
CONDLIST1499: // @@@ begin of alternative group
while(javadummy) {
CONDITION1500: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Member;
if (! current0 .Name
.equals( "ComponentDefList_A1_M1_A1") )
   if (javadummy) break  CONDITION1500;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ComponentElementDef --- JJ.M4
ComponentElementDef = current1 ;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
} //)) children level 1
};
// ***** begin condlist 1501 (in cond 1500) *****
CONDLIST1501: // @@@ begin of alternative group
while(javadummy) {
CONDITION1502: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative X1
JavaNode X1= null;
// DECLARE for alternative PortName
JavaNode PortName= null;
// DECLARE for alternative PortType
JavaNode PortType= null;
{
JavaNode current0 = ComponentElementDef;
if (! current0 .Name
.equals( "ComponentElementDef_A1") )
   if (javadummy) break  CONDITION1502;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1503 (in cond 1502) *****
CONDLIST1503: // @@@ begin of alternative group
while(javadummy) {
CONDITION1504: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "PortInstance_A1") )
   if (javadummy) break  CONDITION1504;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
if (current1.Name
// fiwi-noneof 6
!= "NoneOf-PortInstance_A1_M2")
if (javadummy) break CONDITION1504;
{ //(( children level 2
} //)) children level 2
current1 = kurrent0.Child1[1];
//assign current1 to PortType --- JJ.M4
PortType = current1 ;
current1 = kurrent0.Child1[2];
if (current1.Name
// fiwi-noneof 6
!= "NoneOf-PortInstance_A1_M4")
if (javadummy) break CONDITION1504;
{ //(( children level 2
} //)) children level 2
current1 = kurrent0.Child1[3];
if (current1.Name
// fiwi-noneof 6
!= "NoneOf-PortInstance_A1_M5")
if (javadummy) break CONDITION1504;
{ //(( children level 2
} //)) children level 2
current1 = kurrent0.Child1[4];
if (! current1 .Name
.equals( "PortElement_A1") )
   if (javadummy) break  CONDITION1504;
{ //(( children level 2
JavaNode current2 =
   current1 . Child1[0];
JavaNode kurrent1 = current1;
//assign current2 to PortName --- JJ.M4
PortName = current2 ;
current2 = kurrent1.Child1[1];
if (current2.Name
// fiwi-noneof 6
!= "NoneOf-PortElement_A1_M2")
if (javadummy) break CONDITION1504;
{ //(( children level 3
} //)) children level 3
current2 = kurrent1.Child1[2];
if (current2.Name
// fiwi-noneof 6
!= "NoneOf-PortElement_A1_M3")
if (javadummy) break CONDITION1504;
{ //(( children level 3
} //)) children level 3
} //)) children level 2
current1 = kurrent0.Child1[5];
if (current1.Name
!= "NilOf-PortInstance_A1_M7")
if (javadummy) break CONDITION1504;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1503;
// $$$$$$$$ 
} // CONDITION1504 // @@@ end of alternative
CONDITION1505: // @@@ begin of alternative
while(javadummy) {
YyProcs.
NotCovered
(
new JavaStringValue( "this kind of port instance" )
,
X1
);
PortType = 
new JavaStringValue( "-" )
;
PortName = 
new JavaStringValue( "-" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1503;
// $$$$$$$$ 
} // CONDITION1505 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1503 N=1502
if (javadummy) break CONDITION1502;
} // CONDLIST1503 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(PortType);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
GloballyDefined
(
PortType
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 1506 (in cond 1502) *****
CONDLIST1506: // @@@ begin of alternative group
while(javadummy) {
CONDITION1507: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RefNormalizedPortType
JavaNode RefNormalizedPortType= null;
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "porttype") )
   if (javadummy) break  CONDITION1507;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
//assign current1 to RefNormalizedPortType --- JJ.M4
RefNormalizedPortType = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1506;
// $$$$$$$$ 
} // CONDITION1507 // @@@ end of alternative
CONDITION1508: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
PortType
,
new JavaStringValue( "' not defined as port type" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1506;
// $$$$$$$$ 
} // CONDITION1508 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1506 N=1502
if (javadummy) break CONDITION1502;
} // CONDLIST1506 @@@ end of alternative group
// *** CONTINUE ***
CompItem = 
NodeFactory.NewNode(
"compitem_port"
, new JavaNode [] {
PortName
,
Def
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1501;
// $$$$$$$$ 
} // CONDITION1502 // @@@ end of alternative
CONDITION1509: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
// DECLARE for alternative VarName
JavaNode VarName= null;
{
JavaNode current0 = ComponentElementDef;
if (! current0 .Name
.equals( "ComponentElementDef_A2") )
   if (javadummy) break  CONDITION1509;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1510 (in cond 1509) *****
CONDLIST1510: // @@@ begin of alternative group
while(javadummy) {
CONDITION1511: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative VARTYPE
JavaNode VARTYPE= null;
{
JavaNode current0 = X2;
if (! current0 .Name
.equals( "VarInstance_A1") )
   if (javadummy) break  CONDITION1511;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
if (! current1 .Name
.equals( "VarInstance_A1_M2_A1") )
   if (javadummy) break  CONDITION1511;
{ //(( children level 2
JavaNode current2 =
   current1 . Child1[0];
JavaNode kurrent1 = current1;
if (! current2 .Name
.equals( "VarInstance_A1_M2_A1_M1_A1") )
   if (javadummy) break  CONDITION1511;
{ //(( children level 3
JavaNode current3 =
   current2 . Child1[0];
JavaNode kurrent2 = current2;
//assign current3 to VARTYPE --- JJ.M4
VARTYPE = current3 ;
current3 = kurrent2.Child1[1];
if (! current3 .Name
.equals( "VarList_A1") )
   if (javadummy) break  CONDITION1511;
{ //(( children level 4
JavaNode current4 =
   current3 . Child1[0];
JavaNode kurrent3 = current3;
if (! current4 .Name
.equals( "SingleVarInstance_A1") )
   if (javadummy) break  CONDITION1511;
{ //(( children level 5
JavaNode current5 =
   current4 . Child1[0];
JavaNode kurrent4 = current4;
//assign current5 to VarName --- JJ.M4
VarName = current5 ;
current5 = kurrent4.Child1[1];
if (current5.Name
// fiwi-noneof 6
!= "NoneOf-SingleVarInstance_A1_M2")
if (javadummy) break CONDITION1511;
{ //(( children level 6
} //)) children level 6
current5 = kurrent4.Child1[2];
if (current5.Name
// fiwi-noneof 6
!= "NoneOf-SingleVarInstance_A1_M3")
if (javadummy) break CONDITION1511;
{ //(( children level 6
} //)) children level 6
} //)) children level 5
current4 = kurrent3.Child1[1];
if (current4.Name
!= "NilOf-VarList_A1_M2")
if (javadummy) break CONDITION1511;
} //)) children level 4
} //)) children level 3
} //)) children level 2
} //)) children level 1
};
YyProcs.
HandleType
(
VARTYPE
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1510;
// $$$$$$$$ 
} // CONDITION1511 // @@@ end of alternative
CONDITION1512: // @@@ begin of alternative
while(javadummy) {
YyProcs.
NotCovered
(
new JavaStringValue( "this kind of var instance" )
,
X2
);
Tp = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
VarName = 
new JavaStringValue( "-" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1510;
// $$$$$$$$ 
} // CONDITION1512 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1510 N=1509
if (javadummy) break CONDITION1509;
} // CONDLIST1510 @@@ end of alternative group
// *** CONTINUE ***
CompItem = 
NodeFactory.NewNode(
"compitem_var"
, new JavaNode [] {
VarName
,
Tp
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1501;
// $$$$$$$$ 
} // CONDITION1509 // @@@ end of alternative
CONDITION1513: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X3
JavaNode X3= null;
{
JavaNode current0 = ComponentElementDef;
if (! current0 .Name
.equals( "ComponentElementDef_A3") )
   if (javadummy) break  CONDITION1513;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "TimerInstance in component defs" )
,
X3
);
CompItem = 
NodeFactory.NewNode(
"compitem_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1501;
// $$$$$$$$ 
} // CONDITION1513 // @@@ end of alternative
CONDITION1514: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X4
JavaNode X4= null;
{
JavaNode current0 = ComponentElementDef;
if (! current0 .Name
.equals( "ComponentElementDef_A4") )
   if (javadummy) break  CONDITION1514;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X4 --- JJ.M4
X4 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "ConstInstance in component defs" )
,
X4
);
CompItem = 
NodeFactory.NewNode(
"compitem_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1501;
// $$$$$$$$ 
} // CONDITION1514 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1501 N=1500
if (javadummy) break CONDITION1500;
} // CONDLIST1501 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1499;
// $$$$$$$$ 
} // CONDITION1500 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1499 N=1498
if (javadummy) break CONDITION1498;
} // CONDLIST1499 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
CompItem
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1497;
// $$$$$$$$ 
} // CONDITION1498 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1497 N=1496
if (javadummy) break CONDITION1496;
} // CONDLIST1497 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1496
// failed:
JavaLib.rtsAllAlternativesFailed("HandleComponentDefListMember");
}



public
static
void
HHHandleComponentMembers(

JavaNode yy_inparam_0
)
{
// DECLARE for proc CompItemList
JavaNode CompItemList = null;
// DECLARE for proc NormalizedComponentType
JavaNode NormalizedComponentType = null;
CONDITION1515:
while(javadummy) {
// ***** begin condlist 1516 (in cond 1515) *****
CONDLIST1516: // @@@ begin of alternative group
while(javadummy) {
CONDITION1517: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NormalizedComponentType --- JJ.M4
NormalizedComponentType = current0 ;
};
{
JavaNode current0 = NormalizedComponentType;
if (! current0 .Name
.equals( "normalizedcomptype") )
   if (javadummy) break  CONDITION1517;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to CompItemList --- JJ.M4
CompItemList = current1 ;
} //)) children level 1
};
YyProcs.
HHHandleComponentMembersList
(
CompItemList
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1516;
// $$$$$$$$ 
} // CONDITION1517 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1516 N=1515
if (javadummy) break CONDITION1515;
} // CONDLIST1516 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1515
// failed:
JavaLib.rtsAllAlternativesFailed("HHHandleComponentMembers");
}



public
static
void
HHHandleComponentMembersList(

JavaNode yy_inparam_0
)
{
CONDITION1518:
while(javadummy) {
// ***** begin condlist 1519 (in cond 1518) *****
CONDLIST1519: // @@@ begin of alternative group
while(javadummy) {
CONDITION1520: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-CompItem")
if (javadummy) break CONDITION1520;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
HHHandleComponentMember
(
H
);
YyProcs.
HHHandleComponentMembersList
(
T
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1519;
// $$$$$$$$ 
} // CONDITION1520 // @@@ end of alternative
CONDITION1521: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-CompItem")
if (javadummy) break CONDITION1521;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1519;
// $$$$$$$$ 
} // CONDITION1521 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1519 N=1518
if (javadummy) break CONDITION1518;
} // CONDLIST1519 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1518
// failed:
JavaLib.rtsAllAlternativesFailed("HHHandleComponentMembersList");
}



public
static
void
HHHandleComponentMember(

JavaNode yy_inparam_0
)
{
// DECLARE for proc CompItem
JavaNode CompItem = null;
CONDITION1522:
while(javadummy) {
// ***** begin condlist 1523 (in cond 1522) *****
CONDLIST1523: // @@@ begin of alternative group
while(javadummy) {
CONDITION1524: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to CompItem --- JJ.M4
CompItem = current0 ;
};
// ***** begin condlist 1525 (in cond 1524) *****
CONDLIST1525: // @@@ begin of alternative group
while(javadummy) {
CONDITION1526: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
// DECLARE for alternative VarName
JavaNode VarName= null;
{
JavaNode current0 = CompItem;
if (! current0 .Name
.equals( "compitem_var") )
   if (javadummy) break  CONDITION1526;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to VarName --- JJ.M4
VarName = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Tp --- JJ.M4
Tp = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("EnterVar(\n");
JavaLib.rtsEmitCode
("\"");
JavaLib.rtsEmitString
(
VarName
);
JavaLib.rtsEmitCode
("\"\n");
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("Instructions.IntegerConstant(7777)\n");
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1525;
// $$$$$$$$ 
} // CONDITION1526 // @@@ end of alternative
CONDITION1527: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative PortName
JavaNode PortName= null;
// DECLARE for alternative PortType
JavaNode PortType= null;
{
JavaNode current0 = CompItem;
if (! current0 .Name
.equals( "compitem_port") )
   if (javadummy) break  CONDITION1527;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to PortName --- JJ.M4
PortName = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Def --- JJ.M4
Def = current1 ;
} //)) children level 1
};
// ***** begin condlist 1528 (in cond 1527) *****
CONDLIST1528: // @@@ begin of alternative group
while(javadummy) {
CONDITION1529: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "porttype") )
   if (javadummy) break  CONDITION1529;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to PortType --- JJ.M4
PortType = current1 ;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1528;
// $$$$$$$$ 
} // CONDITION1529 // @@@ end of alternative
CONDITION1530: // @@@ begin of alternative
while(javadummy) {
JavaLib.Log
(
Def
);
TokenStream.ReportError
(
new JavaStringValue( "def falsch" )
,new JavaStringValue( "nopos" )
);
PortType = 
new JavaStringValue( "-" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1528;
// $$$$$$$$ 
} // CONDITION1530 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1528 N=1527
if (javadummy) break CONDITION1527;
} // CONDLIST1528 @@@ end of alternative group
// *** CONTINUE ***
JavaLib.rtsEmitCode
("// ");
JavaLib.rtsEmitString
(
PortType
);
JavaLib.rtsEmitCode
(" ");
JavaLib.rtsEmitString
(
PortName
);
JavaLib.rtsEmitCode
("\n");
JavaLib.rtsEmitCode
("EnterPort(\n");
JavaLib.rtsEmitCode
("\"");
JavaLib.rtsEmitString
(
PortName
);
JavaLib.rtsEmitCode
("\"\n");
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("new ");
JavaLib.rtsEmitString
(
PortType
);
JavaLib.rtsEmitCode
(" (\"");
JavaLib.rtsEmitString
(
PortName
);
JavaLib.rtsEmitCode
("\")\n");
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1525;
// $$$$$$$$ 
} // CONDITION1527 // @@@ end of alternative
CONDITION1531: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CompItem;
if (! current0 .Name
.equals( "compitem_null") )
   if (javadummy) break  CONDITION1531;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1525;
// $$$$$$$$ 
} // CONDITION1531 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1525 N=1524
if (javadummy) break CONDITION1524;
} // CONDLIST1525 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1523;
// $$$$$$$$ 
} // CONDITION1524 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1523 N=1522
if (javadummy) break CONDITION1522;
} // CONDLIST1523 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1522
// failed:
JavaLib.rtsAllAlternativesFailed("HHHandleComponentMember");
}



public
static
void
ActivatePortType(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
// DECLARE for proc PKG
JavaNode PKG = null;
// DECLARE for proc P
JavaNode P = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc Dir
JavaNode Dir = null;
// DECLARE for proc RefNormalizedPortType
JavaNode RefNormalizedPortType = null;
// DECLARE for proc PortDefAttribs
JavaNode PortDefAttribs = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION1532:
while(javadummy) {
// ***** begin condlist 1533 (in cond 1532) *****
CONDLIST1533: // @@@ begin of alternative group
while(javadummy) {
CONDITION1534: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to PortDefAttribs --- JJ.M4
PortDefAttribs = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to RefNormalizedPortType --- JJ.M4
RefNormalizedPortType = current0 ;
};
YyProcs.
HandlePortDefAttribs
(
PortDefAttribs
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Dir --- JJ.M4
Dir = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
P = 
NodeFactory.NewNode(
"normalizedport"
, new JavaNode [] {
Dir
,
Tp
}
)
;
JavaLib.rtsBindToKey(RefNormalizedPortType,
P
);
JavaLib.rtsCheckDefined(NameOfModule,"/line,offset,length,file=/ 871 27750 12 Globals.g");
PKG = NameOfModule;
YyProcs.
OpenFile
(
PKG
,
NAME
);
JavaLib.rtsEmitCode
("// EMITFILE 4 port type\n");
JavaLib.rtsEmitCode
("package ");
JavaLib.rtsEmitString
(
PKG
);
JavaLib.rtsEmitCode
(";\n");
YyProcs.
Emit_Imports
(
);
JavaLib.rtsEmitCode
("public class ");
JavaLib.rtsEmitString
(
NAME
);
JavaLib.rtsEmitCode
(" extends Port\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("public ");
JavaLib.rtsEmitString
(
NAME
);
JavaLib.rtsEmitCode
(" (String Id)\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("MyName = Id;\n");
JavaLib.rtsEmitCode
("MyType = \"");
JavaLib.rtsEmitString
(
NAME
);
JavaLib.rtsEmitCode
("\";\n");
JavaLib.rtsEmitCode
("targetcode.Trace.print(\"Port constructed:\");\n");
JavaLib.rtsEmitCode
("TestOutput();");
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
("}\n");
// openfile
JavaLib.rtsCloseAlphaFile
(
);
// openfile end
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1533;
// $$$$$$$$ 
} // CONDITION1534 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1533 N=1532
if (javadummy) break CONDITION1532;
} // CONDLIST1533 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1532
// failed:
JavaLib.rtsAllAlternativesFailed("ActivatePortType");
}



public
static
void
HandlePortDefAttribs(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc PortDefAttribs
JavaNode PortDefAttribs = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc Dir
JavaNode Dir = null;
CONDITION1535:
while(javadummy) {
// ***** begin condlist 1536 (in cond 1535) *****
CONDLIST1536: // @@@ begin of alternative group
while(javadummy) {
CONDITION1537: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to PortDefAttribs --- JJ.M4
PortDefAttribs = current0 ;
};
// ***** begin condlist 1538 (in cond 1537) *****
CONDLIST1538: // @@@ begin of alternative group
while(javadummy) {
CONDITION1539: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Attr
JavaNode Attr= null;
// DECLARE for alternative M4
JavaNode M4= null;
// DECLARE for alternative M2
JavaNode M2= null;
{
JavaNode current0 = PortDefAttribs;
if (! current0 .Name
.equals( "PortDefAttribs_A1") )
   if (javadummy) break  CONDITION1539;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Attr --- JJ.M4
Attr = current1 ;
} //)) children level 1
};
// ***** begin condlist 1540 (in cond 1539) *****
CONDLIST1540: // @@@ begin of alternative group
while(javadummy) {
CONDITION1541: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Attr;
if (! current0 .Name
.equals( "MessageAttribs_A1") )
   if (javadummy) break  CONDITION1541;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to M2 --- JJ.M4
M2 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to M4 --- JJ.M4
M4 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1542 (in cond 1541) *****
CONDLIST1542: // @@@ begin of alternative group
while(javadummy) {
CONDITION1543: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-MessageAttribs_A1_M2")
if (javadummy) break CONDITION1543;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1542;
// $$$$$$$$ 
} // CONDITION1543 // @@@ end of alternative
CONDITION1544: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = M2;
if (current0.Name
!= "OneOf-MessageAttribs_A1_M2")
if (javadummy) break CONDITION1544;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "realtime" )
,
M2
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1542;
// $$$$$$$$ 
} // CONDITION1544 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1542 N=1541
if (javadummy) break CONDITION1541;
} // CONDLIST1542 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1545 (in cond 1541) *****
CONDLIST1545: // @@@ begin of alternative group
while(javadummy) {
CONDITION1546: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative P
JavaNode P= null;
{
JavaNode current0 = M4;
if (current0.Name
!= "NilOf-MessageAttribs_A1_M4")
if (javadummy) break CONDITION1546;
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(M4);
//assign current0 to P --- JJ.M4
P = current0 ;
};
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "empty attributes not expected" )
,
P
);
Dir = 
NodeFactory.NewNode(
"dir_in"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1545;
// $$$$$$$$ 
} // CONDITION1546 // @@@ end of alternative
CONDITION1547: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
// DECLARE for alternative Semi
JavaNode Semi= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = M4;
if (current0.Name
!= "SeqOf-MessageAttribs_A1_M4")
if (javadummy) break CONDITION1547;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
// ***** begin condlist 1548 (in cond 1547) *****
CONDLIST1548: // @@@ begin of alternative group
while(javadummy) {
CONDITION1549: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "MessageAttribs_A1_M4_A1") )
   if (javadummy) break  CONDITION1549;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Semi --- JJ.M4
Semi = current1 ;
} //)) children level 1
};
// ***** begin condlist 1550 (in cond 1549) *****
CONDLIST1550: // @@@ begin of alternative group
while(javadummy) {
CONDITION1551: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative XX1
JavaNode XX1= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "MessageAttribs_A1_M4_A1_M1_A1") )
   if (javadummy) break  CONDITION1551;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX1 --- JJ.M4
XX1 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "address decl" )
,
X1
);
Dir = 
NodeFactory.NewNode(
"dir_in"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1550;
// $$$$$$$$ 
} // CONDITION1551 // @@@ end of alternative
CONDITION1552: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative XX2
JavaNode XX2= null;
// DECLARE for alternative AllOrTypeList
JavaNode AllOrTypeList= null;
// DECLARE for alternative Direction
JavaNode Direction= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "MessageAttribs_A1_M4_A1_M1_A2") )
   if (javadummy) break  CONDITION1552;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX2 --- JJ.M4
XX2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1553 (in cond 1552) *****
CONDLIST1553: // @@@ begin of alternative group
while(javadummy) {
CONDITION1554: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX2;
if (! current0 .Name
.equals( "MessageList_A1") )
   if (javadummy) break  CONDITION1554;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Direction --- JJ.M4
Direction = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to AllOrTypeList --- JJ.M4
AllOrTypeList = current1 ;
} //)) children level 1
};
// ***** begin condlist 1555 (in cond 1554) *****
CONDLIST1555: // @@@ begin of alternative group
while(javadummy) {
CONDITION1556: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Direction;
if (! current0 .Name
.equals( "Direction_A1") )
   if (javadummy) break  CONDITION1556;
};
Dir = 
NodeFactory.NewNode(
"dir_in"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1555;
// $$$$$$$$ 
} // CONDITION1556 // @@@ end of alternative
CONDITION1557: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Direction;
if (! current0 .Name
.equals( "Direction_A2") )
   if (javadummy) break  CONDITION1557;
};
Dir = 
NodeFactory.NewNode(
"dir_out"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1555;
// $$$$$$$$ 
} // CONDITION1557 // @@@ end of alternative
CONDITION1558: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Direction;
if (! current0 .Name
.equals( "Direction_A3") )
   if (javadummy) break  CONDITION1558;
};
Dir = 
NodeFactory.NewNode(
"dir_inout"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1555;
// $$$$$$$$ 
} // CONDITION1558 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1555 N=1554
if (javadummy) break CONDITION1554;
} // CONDLIST1555 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1553;
// $$$$$$$$ 
} // CONDITION1554 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1553 N=1552
if (javadummy) break CONDITION1552;
} // CONDLIST1553 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1559 (in cond 1552) *****
CONDLIST1559: // @@@ begin of alternative group
while(javadummy) {
CONDITION1560: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = AllOrTypeList;
if (! current0 .Name
.equals( "AllOrTypeList_A1") )
   if (javadummy) break  CONDITION1560;
};
YyProcs.
NotCovered
(
new JavaStringValue( "all" )
,
X1
);
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1559;
// $$$$$$$$ 
} // CONDITION1560 // @@@ end of alternative
CONDITION1561: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative TypeList
JavaNode TypeList= null;
// DECLARE for alternative Tail
JavaNode Tail= null;
// DECLARE for alternative Head
JavaNode Head= null;
{
JavaNode current0 = AllOrTypeList;
if (! current0 .Name
.equals( "AllOrTypeList_A2") )
   if (javadummy) break  CONDITION1561;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to TypeList --- JJ.M4
TypeList = current1 ;
} //)) children level 1
};
// ***** begin condlist 1562 (in cond 1561) *****
CONDLIST1562: // @@@ begin of alternative group
while(javadummy) {
CONDITION1563: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = TypeList;
if (! current0 .Name
.equals( "TypeList_A1") )
   if (javadummy) break  CONDITION1563;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Head --- JJ.M4
Head = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Tail --- JJ.M4
Tail = current1 ;
} //)) children level 1
};
YyProcs.
HandleType
(
Head
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
// ***** begin condlist 1564 (in cond 1563) *****
CONDLIST1564: // @@@ begin of alternative group
while(javadummy) {
CONDITION1565: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Tail;
if (current0.Name
!= "NilOf-TypeList_A1_M2")
if (javadummy) break CONDITION1565;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1564;
// $$$$$$$$ 
} // CONDITION1565 // @@@ end of alternative
CONDITION1566: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Tail;
if (current0.Name
!= "SeqOf-TypeList_A1_M2")
if (javadummy) break CONDITION1566;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "type list" )
,
X1
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1564;
// $$$$$$$$ 
} // CONDITION1566 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1564 N=1563
if (javadummy) break CONDITION1563;
} // CONDLIST1564 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1562;
// $$$$$$$$ 
} // CONDITION1563 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1562 N=1561
if (javadummy) break CONDITION1561;
} // CONDLIST1562 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1559;
// $$$$$$$$ 
} // CONDITION1561 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1559 N=1552
if (javadummy) break CONDITION1552;
} // CONDLIST1559 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1550;
// $$$$$$$$ 
} // CONDITION1552 // @@@ end of alternative
CONDITION1567: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative XX3
JavaNode XX3= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "MessageAttribs_A1_M4_A1_M1_A3") )
   if (javadummy) break  CONDITION1567;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX3 --- JJ.M4
XX3 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "config param" )
,
X1
);
Dir = 
NodeFactory.NewNode(
"dir_in"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1550;
// $$$$$$$$ 
} // CONDITION1567 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1550 N=1549
if (javadummy) break CONDITION1549;
} // CONDLIST1550 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1548;
// $$$$$$$$ 
} // CONDITION1549 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1548 N=1547
if (javadummy) break CONDITION1547;
} // CONDLIST1548 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1545;
// $$$$$$$$ 
} // CONDITION1547 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1545 N=1541
if (javadummy) break CONDITION1541;
} // CONDLIST1545 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1540;
// $$$$$$$$ 
} // CONDITION1541 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1540 N=1539
if (javadummy) break CONDITION1539;
} // CONDLIST1540 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1538;
// $$$$$$$$ 
} // CONDITION1539 // @@@ end of alternative
CONDITION1568: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PortDefAttribs;
if (! current0 .Name
.equals( "PortDefAttribs_A2") )
   if (javadummy) break  CONDITION1568;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "procedure ports" )
,
PortDefAttribs
);
Dir = 
NodeFactory.NewNode(
"dir_in"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1538;
// $$$$$$$$ 
} // CONDITION1568 // @@@ end of alternative
CONDITION1569: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PortDefAttribs;
if (! current0 .Name
.equals( "PortDefAttribs_A3") )
   if (javadummy) break  CONDITION1569;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "mixed ports" )
,
PortDefAttribs
);
Dir = 
NodeFactory.NewNode(
"dir_in"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1538;
// $$$$$$$$ 
} // CONDITION1569 // @@@ end of alternative
CONDITION1570: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = PortDefAttribs;
if (! current0 .Name
.equals( "PortDefAttribs_A4") )
   if (javadummy) break  CONDITION1570;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "stream ports" )
,
PortDefAttribs
);
Dir = 
NodeFactory.NewNode(
"dir_in"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1538;
// $$$$$$$$ 
} // CONDITION1570 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1538 N=1537
if (javadummy) break CONDITION1537;
} // CONDLIST1538 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Dir
;
yy_outparam_1 = 
Tp
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1536;
// $$$$$$$$ 
} // CONDITION1537 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1536 N=1535
if (javadummy) break CONDITION1535;
} // CONDLIST1536 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1535
// failed:
JavaLib.rtsAllAlternativesFailed("HandlePortDefAttribs");
}



public
static
void
HandleType(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Type
JavaNode Type = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION1571:
while(javadummy) {
// ***** begin condlist 1572 (in cond 1571) *****
CONDLIST1572: // @@@ begin of alternative group
while(javadummy) {
CONDITION1573: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Type --- JJ.M4
Type = current0 ;
};
// ***** begin condlist 1574 (in cond 1573) *****
CONDLIST1574: // @@@ begin of alternative group
while(javadummy) {
CONDITION1575: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Predef
JavaNode Predef= null;
{
JavaNode current0 = Type;
if (! current0 .Name
.equals( "Type_A1") )
   if (javadummy) break  CONDITION1575;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Predef --- JJ.M4
Predef = current1 ;
} //)) children level 1
};
// ***** begin condlist 1576 (in cond 1575) *****
CONDLIST1576: // @@@ begin of alternative group
while(javadummy) {
CONDITION1577: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Predef;
if (! current0 .Name
.equals( "PredefinedType_A3") )
   if (javadummy) break  CONDITION1577;
};
Tp = 
NodeFactory.NewNode(
"tp_charstring"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1576;
// $$$$$$$$ 
} // CONDITION1577 // @@@ end of alternative
CONDITION1578: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Predef;
if (! current0 .Name
.equals( "PredefinedType_A5") )
   if (javadummy) break  CONDITION1578;
};
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1576;
// $$$$$$$$ 
} // CONDITION1578 // @@@ end of alternative
CONDITION1579: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Predef;
if (! current0 .Name
.equals( "PredefinedType_A2") )
   if (javadummy) break  CONDITION1579;
};
Tp = 
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1576;
// $$$$$$$$ 
} // CONDITION1579 // @@@ end of alternative
CONDITION1580: // @@@ begin of alternative
while(javadummy) {
YyProcs.
NotCovered
(
new JavaStringValue( "this predefined field type" )
,
Predef
);
Tp = 
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1576;
// $$$$$$$$ 
} // CONDITION1580 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1576 N=1575
if (javadummy) break CONDITION1575;
} // CONDLIST1576 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1574;
// $$$$$$$$ 
} // CONDITION1575 // @@@ end of alternative
CONDITION1581: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative R
JavaNode R= null;
// DECLARE for alternative D
JavaNode D= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative X5
JavaNode X5= null;
// DECLARE for alternative X4
JavaNode X4= null;
// DECLARE for alternative X3
JavaNode X3= null;
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = Type;
if (! current0 .Name
.equals( "Type_A2") )
   if (javadummy) break  CONDITION1581;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to R --- JJ.M4
R = current1 ;
} //)) children level 1
};
// ***** begin condlist 1582 (in cond 1581) *****
CONDLIST1582: // @@@ begin of alternative group
while(javadummy) {
CONDITION1583: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = R;
if (! current0 .Name
.equals( "ReferencedType_A1") )
   if (javadummy) break  CONDITION1583;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X3 --- JJ.M4
X3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to X4 --- JJ.M4
X4 = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to X5 --- JJ.M4
X5 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(X2);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
GloballyDefined
(
X2
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to D --- JJ.M4
D = current0 ;
}
Tp = 
NodeFactory.NewNode(
"tp_referenced"
, new JavaNode [] {
D
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1582;
// $$$$$$$$ 
} // CONDITION1583 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1582 N=1581
if (javadummy) break CONDITION1581;
} // CONDLIST1582 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1574;
// $$$$$$$$ 
} // CONDITION1581 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1574 N=1573
if (javadummy) break CONDITION1573;
} // CONDLIST1574 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1572;
// $$$$$$$$ 
} // CONDITION1573 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1572 N=1571
if (javadummy) break CONDITION1571;
} // CONDLIST1572 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1571
// failed:
JavaLib.rtsAllAlternativesFailed("HandleType");
}


// global variable ActiveRunsOnComponent
static JavaNode ActiveRunsOnComponent = null;

public
static
void
ActivateTestcase2(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc ResBlock
JavaNode ResBlock = null;
// DECLARE for proc BLOCK
JavaNode BLOCK = null;
// DECLARE for proc SystemC
JavaNode SystemC = null;
// DECLARE for proc RunsOnC
JavaNode RunsOnC = null;
// DECLARE for proc NormalizedTestcase
JavaNode NormalizedTestcase = null;
// DECLARE for proc RefNormalizedTestcase
JavaNode RefNormalizedTestcase = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION1584:
while(javadummy) {
// ***** begin condlist 1585 (in cond 1584) *****
CONDLIST1585: // @@@ begin of alternative group
while(javadummy) {
CONDITION1586: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to RefNormalizedTestcase --- JJ.M4
RefNormalizedTestcase = current0 ;
};
NormalizedTestcase = JavaLib.rtsBoundToKey(RefNormalizedTestcase);
{
JavaNode current0 = NormalizedTestcase;
if (! current0 .Name
.equals( "normalizedtestcase") )
   if (javadummy) break  CONDITION1586;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RunsOnC --- JJ.M4
RunsOnC = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to SystemC --- JJ.M4
SystemC = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to BLOCK --- JJ.M4
BLOCK = current1 ;
} //)) children level 1
};
YyProcs.
BeginLocalScope
(
);
ActiveRunsOnComponent=
RunsOnC
;
YyProcs.
MakeComponentMembersVisible
(
RunsOnC
);
YyProcs.
Trafo_StatementBlock
(
BLOCK
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ResBlock --- JJ.M4
ResBlock = current0 ;
}
YyProcs.
EndLocalScope
(
);
YyProcs.
Emit_Testcase
(
NodeFactory.NewNode(
"testcase"
, new JavaNode [] {
NAME
,
RunsOnC
,
SystemC
,
ResBlock
}
)
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1585;
// $$$$$$$$ 
} // CONDITION1586 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1585 N=1584
if (javadummy) break CONDITION1584;
} // CONDLIST1585 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1584
// failed:
JavaLib.rtsAllAlternativesFailed("ActivateTestcase2");
}



public
static
void
ActivateFunction2(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc ResBlock
JavaNode ResBlock = null;
// DECLARE for proc BLOCK
JavaNode BLOCK = null;
// DECLARE for proc RunsOnC
JavaNode RunsOnC = null;
// DECLARE for proc NormalizedFunction
JavaNode NormalizedFunction = null;
// DECLARE for proc RefNormalizedFunction
JavaNode RefNormalizedFunction = null;
// DECLARE for proc NAME
JavaNode NAME = null;
CONDITION1587:
while(javadummy) {
// ***** begin condlist 1588 (in cond 1587) *****
CONDLIST1588: // @@@ begin of alternative group
while(javadummy) {
CONDITION1589: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NAME --- JJ.M4
NAME = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to RefNormalizedFunction --- JJ.M4
RefNormalizedFunction = current0 ;
};
NormalizedFunction = JavaLib.rtsBoundToKey(RefNormalizedFunction);
{
JavaNode current0 = NormalizedFunction;
if (! current0 .Name
.equals( "normalizedfunction") )
   if (javadummy) break  CONDITION1589;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RunsOnC --- JJ.M4
RunsOnC = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to BLOCK --- JJ.M4
BLOCK = current1 ;
} //)) children level 1
};
YyProcs.
BeginLocalScope
(
);
ActiveRunsOnComponent=
RunsOnC
;
YyProcs.
MakeComponentMembersVisible
(
RunsOnC
);
YyProcs.
Trafo_StatementBlock
(
BLOCK
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ResBlock --- JJ.M4
ResBlock = current0 ;
}
YyProcs.
EndLocalScope
(
);
YyProcs.
Emit_Function
(
NodeFactory.NewNode(
"function"
, new JavaNode [] {
NAME
,
ResBlock
}
)
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1588;
// $$$$$$$$ 
} // CONDITION1589 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1588 N=1587
if (javadummy) break CONDITION1587;
} // CONDLIST1588 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1587
// failed:
JavaLib.rtsAllAlternativesFailed("ActivateFunction2");
}



public
static
void
HandleRunsOn(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc RUNSON
JavaNode RUNSON = null;
// DECLARE for proc RUNSON13
JavaNode RUNSON13 = null;
// DECLARE for proc RunsOnC
JavaNode RunsOnC = null;
CONDITION1590:
while(javadummy) {
// ***** begin condlist 1591 (in cond 1590) *****
CONDLIST1591: // @@@ begin of alternative group
while(javadummy) {
CONDITION1592: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to RUNSON --- JJ.M4
RUNSON = current0 ;
};
// ***** begin condlist 1593 (in cond 1592) *****
CONDLIST1593: // @@@ begin of alternative group
while(javadummy) {
CONDITION1594: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = RUNSON;
if (! current0 .Name
.equals( "RunsOnSpec_A1") )
   if (javadummy) break  CONDITION1594;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RUNSON13 --- JJ.M4
RUNSON13 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1595 (in cond 1594) *****
CONDLIST1595: // @@@ begin of alternative group
while(javadummy) {
CONDITION1596: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative COMPTYPE
JavaNode COMPTYPE= null;
// DECLARE for alternative COMPTYPE14
JavaNode COMPTYPE14= null;
// DECLARE for alternative COMPTYPE13
JavaNode COMPTYPE13= null;
// DECLARE for alternative COMPTYPE11
JavaNode COMPTYPE11= null;
{
JavaNode current0 = RUNSON13;
if (! current0 .Name
.equals( "RunsOnSpec_A1_M3_A1") )
   if (javadummy) break  CONDITION1596;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to COMPTYPE --- JJ.M4
COMPTYPE = current1 ;
} //)) children level 1
};
// ***** begin condlist 1597 (in cond 1596) *****
CONDLIST1597: // @@@ begin of alternative group
while(javadummy) {
CONDITION1598: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = COMPTYPE;
if (! current0 .Name
.equals( "ComponentType_A1") )
   if (javadummy) break  CONDITION1598;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to COMPTYPE11 --- JJ.M4
COMPTYPE11 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RunsOnC --- JJ.M4
RunsOnC = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to COMPTYPE13 --- JJ.M4
COMPTYPE13 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to COMPTYPE14 --- JJ.M4
COMPTYPE14 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1599 (in cond 1598) *****
CONDLIST1599: // @@@ begin of alternative group
while(javadummy) {
CONDITION1600: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = COMPTYPE11;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentType_A1_M1")
if (javadummy) break CONDITION1600;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1599;
// $$$$$$$$ 
} // CONDITION1600 // @@@ end of alternative
CONDITION1601: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative C11
JavaNode C11= null;
{
JavaNode current0 = COMPTYPE11;
if (current0.Name
!= "OneOf-ComponentType_A1_M1")
if (javadummy) break CONDITION1601;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to C11 --- JJ.M4
C11 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "qualified component in 'runs on'" )
,
C11
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1599;
// $$$$$$$$ 
} // CONDITION1601 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1599 N=1598
if (javadummy) break CONDITION1598;
} // CONDLIST1599 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1602 (in cond 1598) *****
CONDLIST1602: // @@@ begin of alternative group
while(javadummy) {
CONDITION1603: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = COMPTYPE13;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentType_A1_M3")
if (javadummy) break CONDITION1603;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1602;
// $$$$$$$$ 
} // CONDITION1603 // @@@ end of alternative
CONDITION1604: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative C13
JavaNode C13= null;
{
JavaNode current0 = COMPTYPE13;
if (current0.Name
!= "OneOf-ComponentType_A1_M3")
if (javadummy) break CONDITION1604;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to C13 --- JJ.M4
C13 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "generic component in 'runs on'" )
,
C13
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1602;
// $$$$$$$$ 
} // CONDITION1604 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1602 N=1598
if (javadummy) break CONDITION1598;
} // CONDLIST1602 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1605 (in cond 1598) *****
CONDLIST1605: // @@@ begin of alternative group
while(javadummy) {
CONDITION1606: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = COMPTYPE14;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ComponentType_A1_M4")
if (javadummy) break CONDITION1606;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1605;
// $$$$$$$$ 
} // CONDITION1606 // @@@ end of alternative
CONDITION1607: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative C14
JavaNode C14= null;
{
JavaNode current0 = COMPTYPE14;
if (current0.Name
!= "OneOf-ComponentType_A1_M4")
if (javadummy) break CONDITION1607;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to C14 --- JJ.M4
C14 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "paramerized component in 'runs on'" )
,
C14
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1605;
// $$$$$$$$ 
} // CONDITION1607 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1605 N=1598
if (javadummy) break CONDITION1598;
} // CONDLIST1605 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1597;
// $$$$$$$$ 
} // CONDITION1598 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1597 N=1596
if (javadummy) break CONDITION1596;
} // CONDLIST1597 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1595;
// $$$$$$$$ 
} // CONDITION1596 // @@@ end of alternative
CONDITION1608: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = RUNSON13;
if (! current0 .Name
.equals( "RunsOnSpec_A1_M3_A2") )
   if (javadummy) break  CONDITION1608;
};
TokenStream.ReportError
(
new JavaStringValue( "cover" )
,new JavaStringValue( "nopos" )
);
YyProcs.
NotCovered
(
new JavaStringValue( "this runs on spec" )
,
RUNSON13
);
RunsOnC = 
new JavaStringValue( "" )
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1595;
// $$$$$$$$ 
} // CONDITION1608 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1595 N=1594
if (javadummy) break CONDITION1594;
} // CONDLIST1595 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1593;
// $$$$$$$$ 
} // CONDITION1594 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1593 N=1592
if (javadummy) break CONDITION1592;
} // CONDLIST1593 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
RunsOnC
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1591;
// $$$$$$$$ 
} // CONDITION1592 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1591 N=1590
if (javadummy) break CONDITION1590;
} // CONDLIST1591 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1590
// failed:
JavaLib.rtsAllAlternativesFailed("HandleRunsOn");
}



public
static
void
MakeComponentMembersVisible(

JavaNode yy_inparam_0
)
{
CONDITION1609:
while(javadummy) {
// ***** begin condlist 1610 (in cond 1609) *****
CONDLIST1610: // @@@ begin of alternative group
while(javadummy) {
CONDITION1611: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"(none)"))
   if (javadummy) break  CONDITION1611;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1610;
// $$$$$$$$ 
} // CONDITION1611 // @@@ end of alternative
CONDITION1612: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative M
JavaNode M= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Comp
JavaNode Comp= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Comp --- JJ.M4
Comp = current0 ;
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Comp);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
GloballyDefined
(
Comp
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to M --- JJ.M4
M = current0 ;
}
// ***** begin condlist 1613 (in cond 1612) *****
CONDLIST1613: // @@@ begin of alternative group
while(javadummy) {
CONDITION1614: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative CompItems
JavaNode CompItems= null;
// DECLARE for alternative NormalizedComponentType
JavaNode NormalizedComponentType= null;
// DECLARE for alternative DEFS
JavaNode DEFS= null;
// DECLARE for alternative RefNormalizedComponentType
JavaNode RefNormalizedComponentType= null;
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = M;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION1614;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RefNormalizedComponentType --- JJ.M4
RefNormalizedComponentType = current1 ;
} //)) children level 1
};
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ComponentDef_A1") )
   if (javadummy) break  CONDITION1614;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
current1 = kurrent0.Child1[3];
current1 = kurrent0.Child1[4];
//assign current1 to DEFS --- JJ.M4
DEFS = current1 ;
} //)) children level 1
};
NormalizedComponentType = JavaLib.rtsBoundToKey(RefNormalizedComponentType);
{
JavaNode current0 = NormalizedComponentType;
if (! current0 .Name
.equals( "normalizedcomptype") )
   if (javadummy) break  CONDITION1614;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to CompItems --- JJ.M4
CompItems = current1 ;
} //)) children level 1
};
YyProcs.
CollectComponentMembers
(
CompItems
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1613;
// $$$$$$$$ 
} // CONDITION1614 // @@@ end of alternative
CONDITION1615: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
Comp
,
new JavaStringValue( "' not defined as component" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1613;
// $$$$$$$$ 
} // CONDITION1615 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1613 N=1612
if (javadummy) break CONDITION1612;
} // CONDLIST1613 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1610;
// $$$$$$$$ 
} // CONDITION1612 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1610 N=1609
if (javadummy) break CONDITION1609;
} // CONDLIST1610 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1609
// failed:
JavaLib.rtsAllAlternativesFailed("MakeComponentMembersVisible");
}



public
static
void
CollectComponentMembers(

JavaNode yy_inparam_0
)
{
CONDITION1616:
while(javadummy) {
// ***** begin condlist 1617 (in cond 1616) *****
CONDLIST1617: // @@@ begin of alternative group
while(javadummy) {
CONDITION1618: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-CompItem")
if (javadummy) break CONDITION1618;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
CollectComponentMember
(
H
);
YyProcs.
CollectComponentMembers
(
T
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1617;
// $$$$$$$$ 
} // CONDITION1618 // @@@ end of alternative
CONDITION1619: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-CompItem")
if (javadummy) break CONDITION1619;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1617;
// $$$$$$$$ 
} // CONDITION1619 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1617 N=1616
if (javadummy) break CONDITION1616;
} // CONDLIST1617 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1616
// failed:
JavaLib.rtsAllAlternativesFailed("CollectComponentMembers");
}



public
static
void
CollectComponentMember(

JavaNode yy_inparam_0
)
{
// DECLARE for proc CompItem
JavaNode CompItem = null;
CONDITION1620:
while(javadummy) {
// ***** begin condlist 1621 (in cond 1620) *****
CONDLIST1621: // @@@ begin of alternative group
while(javadummy) {
CONDITION1622: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to CompItem --- JJ.M4
CompItem = current0 ;
};
// ***** begin condlist 1623 (in cond 1622) *****
CONDLIST1623: // @@@ begin of alternative group
while(javadummy) {
CONDITION1624: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = CompItem;
if (! current0 .Name
.equals( "compitem_var") )
   if (javadummy) break  CONDITION1624;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Tp --- JJ.M4
Tp = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineComponentMember_Var
(
Id
,
Tp
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1623;
// $$$$$$$$ 
} // CONDITION1624 // @@@ end of alternative
CONDITION1625: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative DEFINITION
JavaNode DEFINITION= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = CompItem;
if (! current0 .Name
.equals( "compitem_port") )
   if (javadummy) break  CONDITION1625;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to DEFINITION --- JJ.M4
DEFINITION = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineComponentMember_Port
(
Id
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1623;
// $$$$$$$$ 
} // CONDITION1625 // @@@ end of alternative
CONDITION1626: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CompItem;
if (! current0 .Name
.equals( "compitem_null") )
   if (javadummy) break  CONDITION1626;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1623;
// $$$$$$$$ 
} // CONDITION1626 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1623 N=1622
if (javadummy) break CONDITION1622;
} // CONDLIST1623 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1621;
// $$$$$$$$ 
} // CONDITION1622 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1621 N=1620
if (javadummy) break CONDITION1620;
} // CONDLIST1621 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1620
// failed:
JavaLib.rtsAllAlternativesFailed("CollectComponentMember");
}



public
static
void
Trafo_Expression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc RES
JavaNode RES = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION1627:
while(javadummy) {
// ***** begin condlist 1628 (in cond 1627) *****
CONDLIST1628: // @@@ begin of alternative group
while(javadummy) {
CONDITION1629: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 1630 (in cond 1629) *****
CONDLIST1630: // @@@ begin of alternative group
while(javadummy) {
CONDITION1631: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "Expression_A1") )
   if (javadummy) break  CONDITION1631;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_SingleExpression
(
X1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1630;
// $$$$$$$$ 
} // CONDITION1631 // @@@ end of alternative
CONDITION1632: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tps
JavaNode Tps= null;
// DECLARE for alternative X2
JavaNode X2= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "Expression_A2") )
   if (javadummy) break  CONDITION1632;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_CompoundExpression
(
X2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tps --- JJ.M4
Tps = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
Tp = 
NodeFactory.NewNode(
"tp_compound"
, new JavaNode [] {
Tps
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1630;
// $$$$$$$$ 
} // CONDITION1632 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1630 N=1629
if (javadummy) break CONDITION1629;
} // CONDLIST1630 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1628;
// $$$$$$$$ 
} // CONDITION1629 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1628 N=1627
if (javadummy) break CONDITION1627;
} // CONDLIST1628 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1627
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_Expression");
}



public
static
void
HandleExtendedFieldReference(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Code1
JavaNode Code1 = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Code2
JavaNode Code2 = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
CONDITION1633:
while(javadummy) {
// ***** begin condlist 1634 (in cond 1633) *****
CONDLIST1634: // @@@ begin of alternative group
while(javadummy) {
CONDITION1635: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Code1 --- JJ.M4
Code1 = current0 ;
};
// ***** begin condlist 1636 (in cond 1635) *****
CONDLIST1636: // @@@ begin of alternative group
while(javadummy) {
CONDITION1637: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ExtendedFieldReference_A1") )
   if (javadummy) break  CONDITION1637;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
YyProcs.
HandleExtendedFieldReferences
(
X1
,
Tp1
,
Code1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Code2 --- JJ.M4
Code2 = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1636;
// $$$$$$$$ 
} // CONDITION1637 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1636 N=1635
if (javadummy) break CONDITION1635;
} // CONDLIST1636 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp2
;
yy_outparam_1 = 
Code2
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1634;
// $$$$$$$$ 
} // CONDITION1635 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1634 N=1633
if (javadummy) break CONDITION1633;
} // CONDLIST1634 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1633
// failed:
JavaLib.rtsAllAlternativesFailed("HandleExtendedFieldReference");
}



public
static
void
HandleExtendedFieldReferences(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
CONDITION1638:
while(javadummy) {
// ***** begin condlist 1639 (in cond 1638) *****
CONDLIST1639: // @@@ begin of alternative group
while(javadummy) {
CONDITION1640: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Code3
JavaNode Code3= null;
// DECLARE for alternative Tp3
JavaNode Tp3= null;
// DECLARE for alternative Code1
JavaNode Code1= null;
// DECLARE for alternative Tp1
JavaNode Tp1= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative Code2
JavaNode Code2= null;
// DECLARE for alternative Tp2
JavaNode Tp2= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-ExtendedFieldReference_A1_M1")
if (javadummy) break CONDITION1640;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Code1 --- JJ.M4
Code1 = current0 ;
};
// ***** begin condlist 1641 (in cond 1640) *****
CONDLIST1641: // @@@ begin of alternative group
while(javadummy) {
CONDITION1642: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "ExtendedFieldReference_A1_M1_A1") )
   if (javadummy) break  CONDITION1642;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 1643 (in cond 1642) *****
CONDLIST1643: // @@@ begin of alternative group
while(javadummy) {
CONDITION1644: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
// DECLARE for alternative X1X1
JavaNode X1X1= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ExtendedFieldReference_A1_M1_A1_M1_A1") )
   if (javadummy) break  CONDITION1644;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1645 (in cond 1644) *****
CONDLIST1645: // @@@ begin of alternative group
while(javadummy) {
CONDITION1646: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1") )
   if (javadummy) break  CONDITION1646;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1X1 --- JJ.M4
X1X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1647 (in cond 1646) *****
CONDLIST1647: // @@@ begin of alternative group
while(javadummy) {
CONDITION1648: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative N
JavaNode N= null;
{
JavaNode current0 = X1X1;
if (! current0 .Name
.equals( "ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1_M2_A1") )
   if (javadummy) break  CONDITION1648;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N --- JJ.M4
N = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(X1X1);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
LookupField
(
N
,
Tp1
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
Code2 = 
NodeFactory.NewNode(
"fieldselection"
, new JavaNode [] {
Code1
,
N
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1647;
// $$$$$$$$ 
} // CONDITION1648 // @@@ end of alternative
CONDITION1649: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Q
JavaNode Q= null;
{
JavaNode current0 = X1X1;
if (! current0 .Name
.equals( "ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1_M2_A2") )
   if (javadummy) break  CONDITION1649;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Q --- JJ.M4
Q = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "primitive type in selection" )
,
Q
);
Tp2 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
Code2 = 
Code1
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1647;
// $$$$$$$$ 
} // CONDITION1649 // @@@ end of alternative
CONDITION1650: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative P
JavaNode P= null;
{
JavaNode current0 = X1X1;
if (! current0 .Name
.equals( "ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1_M2_A3") )
   if (javadummy) break  CONDITION1650;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to P --- JJ.M4
P = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "type parameters in selection" )
,
P
);
Tp2 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
Code2 = 
Code1
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1647;
// $$$$$$$$ 
} // CONDITION1650 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1647 N=1646
if (javadummy) break CONDITION1646;
} // CONDLIST1647 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1645;
// $$$$$$$$ 
} // CONDITION1646 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1645 N=1644
if (javadummy) break CONDITION1644;
} // CONDLIST1645 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1643;
// $$$$$$$$ 
} // CONDITION1644 // @@@ end of alternative
CONDITION1651: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ArrayOrBitRef
JavaNode ArrayOrBitRef= null;
// DECLARE for alternative X2X1
JavaNode X2X1= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ExtendedFieldReference_A1_M1_A1_M1_A2") )
   if (javadummy) break  CONDITION1651;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to ArrayOrBitRef --- JJ.M4
ArrayOrBitRef = current1 ;
} //)) children level 1
};
// ***** begin condlist 1652 (in cond 1651) *****
CONDLIST1652: // @@@ begin of alternative group
while(javadummy) {
CONDITION1653: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = ArrayOrBitRef;
if (! current0 .Name
.equals( "ArrayOrBitRef_A1") )
   if (javadummy) break  CONDITION1653;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X2X1 --- JJ.M4
X2X1 = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "array or bit reference" )
,
X2X1
);
Tp2 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
Code2 = 
Code1
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1652;
// $$$$$$$$ 
} // CONDITION1653 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1652 N=1651
if (javadummy) break CONDITION1651;
} // CONDLIST1652 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1643;
// $$$$$$$$ 
} // CONDITION1651 // @@@ end of alternative
CONDITION1654: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Z
JavaNode Z= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ExtendedFieldReference_A1_M1_A1_M1_A3") )
   if (javadummy) break  CONDITION1654;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Z --- JJ.M4
Z = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "'[ - ]'" )
,
Z
);
Tp2 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
Code2 = 
Code1
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1643;
// $$$$$$$$ 
} // CONDITION1654 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1643 N=1642
if (javadummy) break CONDITION1642;
} // CONDLIST1643 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1641;
// $$$$$$$$ 
} // CONDITION1642 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1641 N=1640
if (javadummy) break CONDITION1640;
} // CONDLIST1641 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
HandleExtendedFieldReferences
(
T
,
Tp2
,
Code2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp3 --- JJ.M4
Tp3 = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Code3 --- JJ.M4
Code3 = current0 ;
}
yy_outparam_0 = 
Tp3
;
yy_outparam_1 = 
Code3
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1639;
// $$$$$$$$ 
} // CONDITION1640 // @@@ end of alternative
CONDITION1655: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Code
JavaNode Code= null;
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-ExtendedFieldReference_A1_M1")
if (javadummy) break CONDITION1655;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Code --- JJ.M4
Code = current0 ;
};
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1639;
// $$$$$$$$ 
} // CONDITION1655 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1639 N=1638
if (javadummy) break CONDITION1638;
} // CONDLIST1639 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1638
// failed:
JavaLib.rtsAllAlternativesFailed("HandleExtendedFieldReferences");
}



public
static
void
LookupField(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc Tp1
JavaNode Tp1 = null;
// DECLARE for proc N
JavaNode N = null;
// DECLARE for proc Tp2
JavaNode Tp2 = null;
CONDITION1656:
while(javadummy) {
// ***** begin condlist 1657 (in cond 1656) *****
CONDLIST1657: // @@@ begin of alternative group
while(javadummy) {
CONDITION1658: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to N --- JJ.M4
N = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to Tp1 --- JJ.M4
Tp1 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
// ***** begin condlist 1659 (in cond 1658) *****
CONDLIST1659: // @@@ begin of alternative group
while(javadummy) {
CONDITION1660: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Flds
JavaNode Flds= null;
// DECLARE for alternative QQ
JavaNode QQ= null;
// DECLARE for alternative RefNormalizedFields
JavaNode RefNormalizedFields= null;
// DECLARE for alternative X4
JavaNode X4= null;
// DECLARE for alternative N2
JavaNode N2= null;
// DECLARE for alternative RecordType
JavaNode RecordType= null;
{
JavaNode current0 = Tp1;
if (! current0 .Name
.equals( "tp_referenced") )
   if (javadummy) break  CONDITION1660;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to RecordType --- JJ.M4
RecordType = current1 ;
} //)) children level 1
};
{
JavaNode current0 = RecordType;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION1660;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N2 --- JJ.M4
N2 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X4 --- JJ.M4
X4 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to RefNormalizedFields --- JJ.M4
RefNormalizedFields = current1 ;
} //)) children level 1
};
QQ = JavaLib.rtsBoundToKey(RefNormalizedFields);
{
JavaNode current0 = QQ;
if (! current0 .Name
.equals( "normalizedfields") )
   if (javadummy) break  CONDITION1660;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Flds --- JJ.M4
Flds = current1 ;
} //)) children level 1
};
// ***** begin condlist 1661 (in cond 1660) *****
CONDLIST1661: // @@@ begin of alternative group
while(javadummy) {
CONDITION1662: // @@@ begin of alternative
while(javadummy) {
if (! 
YyProcs.
LookupFields_R
(
N
,
Flds
)
)
if (javadummy) break CONDITION1662;
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp2 --- JJ.M4
Tp2 = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1661;
// $$$$$$$$ 
} // CONDITION1662 // @@@ end of alternative
CONDITION1663: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "no field '" )
,
N
,
new JavaStringValue( "'" )
,
Pos
);
Tp2 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1661;
// $$$$$$$$ 
} // CONDITION1663 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1661 N=1660
if (javadummy) break CONDITION1660;
} // CONDLIST1661 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1659;
// $$$$$$$$ 
} // CONDITION1660 // @@@ end of alternative
CONDITION1664: // @@@ begin of alternative
while(javadummy) {
YyExternalPackage.ExternalFunctions.
Error
(
new JavaStringValue( "field selection for non-record type" )
,
Pos
);
Tp2 = 
NodeFactory.NewNode(
"tp_none"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1659;
// $$$$$$$$ 
} // CONDITION1664 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1659 N=1658
if (javadummy) break CONDITION1658;
} // CONDLIST1659 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp2
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1657;
// $$$$$$$$ 
} // CONDITION1658 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1657 N=1656
if (javadummy) break CONDITION1656;
} // CONDLIST1657 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1656
// failed:
JavaLib.rtsAllAlternativesFailed("LookupField");
}



public
static
boolean
LookupFields_R(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc T
JavaNode T = null;
// DECLARE for proc H
JavaNode H = null;
// DECLARE for proc N
JavaNode N = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION1665:
while(javadummy) {
// ***** begin condlist 1666 (in cond 1665) *****
CONDLIST1666: // @@@ begin of alternative group
while(javadummy) {
CONDITION1667: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to N --- JJ.M4
N = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
if (current0.Name
!= "SeqOf-FIELD")
if (javadummy) break CONDITION1667;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
// ***** begin condlist 1668 (in cond 1667) *****
CONDLIST1668: // @@@ begin of alternative group
while(javadummy) {
CONDITION1669: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative N2
JavaNode N2= null;
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "field") )
   if (javadummy) break  CONDITION1669;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to N2 --- JJ.M4
N2 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Tp --- JJ.M4
Tp = current1 ;
} //)) children level 1
};
{
if (! JavaLib.rtsEqualString(
N
,
N2
)
)
   if (javadummy) break  CONDITION1669;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1668;
// $$$$$$$$ 
} // CONDITION1669 // @@@ end of alternative
CONDITION1670: // @@@ begin of alternative
while(javadummy) {
if (! 
YyProcs.
LookupFields_R
(
N
,
T
)
)
if (javadummy) break CONDITION1670;
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1668;
// $$$$$$$$ 
} // CONDITION1670 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1668 N=1667
if (javadummy) break CONDITION1667;
} // CONDLIST1668 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1666;
// $$$$$$$$ 
} // CONDITION1667 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1666 N=1665
if (javadummy) break CONDITION1665;
} // CONDLIST1666 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
return true;
} // CONDITION1665
// failed:
return false;
}



public
static
void
NotCovered(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc Str
JavaNode Str = null;
// DECLARE for proc P
JavaNode P = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Msg
JavaNode Msg = null;
CONDITION1671:
while(javadummy) {
// ***** begin condlist 1672 (in cond 1671) *****
CONDLIST1672: // @@@ begin of alternative group
while(javadummy) {
CONDITION1673: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Msg --- JJ.M4
Msg = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(X);
//assign current0 to P --- JJ.M4
P = current0 ;
};
Gently.JavaLib.
Concat
(
new JavaStringValue( "Not yet covered in this version: " )
,
Msg
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Str --- JJ.M4
Str = current0 ;
}
YyExternalPackage.ExternalFunctions.
Error
(
Str
,
P
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1672;
// $$$$$$$$ 
} // CONDITION1673 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1672 N=1671
if (javadummy) break CONDITION1671;
} // CONDLIST1672 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1671
// failed:
JavaLib.rtsAllAlternativesFailed("NotCovered");
}



public
static
void
ErrorI(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
,

JavaNode yy_inparam_2
,

JavaNode yy_inparam_3
)
{
// DECLARE for proc t2
JavaNode t2 = null;
// DECLARE for proc t1
JavaNode t1 = null;
// DECLARE for proc Pos
JavaNode Pos = null;
// DECLARE for proc string3
JavaNode string3 = null;
// DECLARE for proc string2
JavaNode string2 = null;
// DECLARE for proc string1
JavaNode string1 = null;
CONDITION1674:
while(javadummy) {
// ***** begin condlist 1675 (in cond 1674) *****
CONDLIST1675: // @@@ begin of alternative group
while(javadummy) {
CONDITION1676: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to string1 --- JJ.M4
string1 = current0 ;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to string2 --- JJ.M4
string2 = current0 ;
};
{
JavaNode current0 = yy_inparam_2;
//assign current0 to string3 --- JJ.M4
string3 = current0 ;
};
{
JavaNode current0 = yy_inparam_3;
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
Gently.JavaLib.
Concat
(
string1
,
string2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to t1 --- JJ.M4
t1 = current0 ;
}
Gently.JavaLib.
Concat
(
t1
,
string3
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to t2 --- JJ.M4
t2 = current0 ;
}
YyExternalPackage.ExternalFunctions.
Error
(
t2
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1675;
// $$$$$$$$ 
} // CONDITION1676 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1675 N=1674
if (javadummy) break CONDITION1674;
} // CONDLIST1675 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1674
// failed:
JavaLib.rtsAllAlternativesFailed("ErrorI");
}



public
static
void
CompilerError(

JavaNode yy_inparam_0
)
{
// DECLARE for proc str
JavaNode str = null;
CONDITION1677:
while(javadummy) {
// ***** begin condlist 1678 (in cond 1677) *****
CONDLIST1678: // @@@ begin of alternative group
while(javadummy) {
CONDITION1679: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to str --- JJ.M4
str = current0 ;
};
TokenStream.ReportError
(
str
,new JavaStringValue( "nopos" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1678;
// $$$$$$$$ 
} // CONDITION1679 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1678 N=1677
if (javadummy) break CONDITION1677;
} // CONDLIST1678 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1677
// failed:
JavaLib.rtsAllAlternativesFailed("CompilerError");
}


// global variable HasControlPart
static JavaNode HasControlPart = null;

public
static
void
Emit_ControlPart(

JavaNode yy_inparam_0
)
{
// DECLARE for proc STMT
JavaNode STMT = null;
CONDITION1680:
while(javadummy) {
// ***** begin condlist 1681 (in cond 1680) *****
CONDLIST1681: // @@@ begin of alternative group
while(javadummy) {
CONDITION1682: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to STMT --- JJ.M4
STMT = current0 ;
};
HasControlPart=
new JavaIntValue(1)
;
JavaLib.rtsEmitCode
("@Override\n");
JavaLib.rtsEmitCode
("public void RunControlPart()\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("   DoControlPart();\n");
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
("public static void DoControlPart()\n");
JavaLib.rtsEmitCode
("{\n");
YyProcs.
Emit_Stmt
(
STMT
);
JavaLib.rtsEmitCode
("}\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1681;
// $$$$$$$$ 
} // CONDITION1682 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1681 N=1680
if (javadummy) break CONDITION1680;
} // CONDLIST1681 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1680
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_ControlPart");
}



public
static
void
Emit_Testcase(

JavaNode yy_inparam_0
)
{
// DECLARE for proc Block
JavaNode Block = null;
// DECLARE for proc SystemC
JavaNode SystemC = null;
// DECLARE for proc RunsOnC
JavaNode RunsOnC = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1683:
while(javadummy) {
// ***** begin condlist 1684 (in cond 1683) *****
CONDLIST1684: // @@@ begin of alternative group
while(javadummy) {
CONDITION1685: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "testcase") )
   if (javadummy) break  CONDITION1685;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to RunsOnC --- JJ.M4
RunsOnC = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to SystemC --- JJ.M4
SystemC = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to Block --- JJ.M4
Block = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("public static void ");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(" ()\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("Instructions.TestcasePrelude(\"");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
("\");\n");
JavaLib.rtsEmitCode
("Instructions.SetSystemComponent(new ");
JavaLib.rtsEmitString
(
SystemC
);
JavaLib.rtsEmitCode
("(\"#SC#\"));\n");
JavaLib.rtsEmitCode
("Value MyRunsOnC = new ");
JavaLib.rtsEmitString
(
RunsOnC
);
JavaLib.rtsEmitCode
("(\"#RC#\")\n;");
JavaLib.rtsEmitCode
("Instructions.SetRunsOnComponent(MyRunsOnC);\n");
JavaLib.rtsEmitCode
("try {\n");
YyProcs.
Emit_Stmt
(
Block
);
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
("catch (targetcode.TestCaseKilled X) {\n");
JavaLib.rtsEmitCode
("Instructions.Trace(\"CAUGHT TestCaseKilled\");\n");
JavaLib.rtsEmitCode
("System.out.println(\"TESTCASE KILLED\");\n");
JavaLib.rtsEmitCode
("System.out.println(\"EXCEPTION IN TESTCASE\");\n");
JavaLib.rtsEmitCode
("throw new targetcode.TtcnFatal();\n");
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
("catch (Exception X) {\n");
JavaLib.rtsEmitCode
("System.out.println(\"EXCEPTION IN TESTCASE\");\n");
JavaLib.rtsEmitCode
("throw new targetcode.TtcnFatal();\n");
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
("Instructions.TestcasePostlude(\"");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
("\");\n");
JavaLib.rtsEmitCode
("}\n");
YyProcs.
CollectTestcase
(
Id
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1684;
// $$$$$$$$ 
} // CONDITION1685 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1684 N=1683
if (javadummy) break CONDITION1683;
} // CONDLIST1684 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1683
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_Testcase");
}



public
static
void
Emit_Function(

JavaNode yy_inparam_0
)
{
// DECLARE for proc Block
JavaNode Block = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION1686:
while(javadummy) {
// ***** begin condlist 1687 (in cond 1686) *****
CONDLIST1687: // @@@ begin of alternative group
while(javadummy) {
CONDITION1688: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "function") )
   if (javadummy) break  CONDITION1688;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Block --- JJ.M4
Block = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("public static void ");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(" (Value MyRunsOnC)\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("Instructions.FunctionPrelude(\"");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
("\", MyRunsOnC);\n");
JavaLib.rtsEmitCode
("final Value FinalMyRunsOnC = MyRunsOnC;\n");
YyProcs.
Emit_Stmt
(
Block
);
JavaLib.rtsEmitCode
("}\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1687;
// $$$$$$$$ 
} // CONDITION1688 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1687 N=1686
if (javadummy) break CONDITION1686;
} // CONDLIST1687 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1686
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_Function");
}



public
static
void
Emit_Imports(
)
{
CONDITION1689:
while(javadummy) {
// ***** begin condlist 1690 (in cond 1689) *****
CONDLIST1690: // @@@ begin of alternative group
while(javadummy) {
CONDITION1691: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
("import org.etsi.ttcn.tci.Value;\n");
JavaLib.rtsEmitCode
("import org.etsi.ttcn.tci.BooleanValue;\n");
JavaLib.rtsEmitCode
("\n");
JavaLib.rtsEmitCode
("import targetcode.Instructions;\n");
JavaLib.rtsEmitCode
("import targetcode.Lambda;\n");
JavaLib.rtsEmitCode
("import targetcode.Component;\n");
JavaLib.rtsEmitCode
("import targetcode.Port;\n");
JavaLib.rtsEmitCode
("\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1690;
// $$$$$$$$ 
} // CONDITION1691 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1690 N=1689
if (javadummy) break CONDITION1689;
} // CONDLIST1690 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1689
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_Imports");
}



public
static
void
Emit_Prelude(
)
{
// DECLARE for proc PKG
JavaNode PKG = null;
CONDITION1692:
while(javadummy) {
// ***** begin condlist 1693 (in cond 1692) *****
CONDLIST1693: // @@@ begin of alternative group
while(javadummy) {
CONDITION1694: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsCheckDefined(NameOfModule,"/line,offset,length,file=/ 175 4645 12 Emit.g");
PKG = NameOfModule;
YyExternalPackage.ExternalFunctions.
OpenJavaTargetFile
(
PKG
,
new JavaStringValue( "MODULE" )
);
JavaLib.rtsEmitCode
("// EMITFILE 0 module\n");
JavaLib.rtsEmitCode
("package ");
JavaLib.rtsEmitString
(
PKG
);
JavaLib.rtsEmitCode
(";\n");
JavaLib.rtsEmitCode
("import org.etsi.ttcn.tci.Value;\n");
JavaLib.rtsEmitCode
("import org.etsi.ttcn.tci.BooleanValue;\n");
JavaLib.rtsEmitCode
("import targetcode.Instructions;\n");
JavaLib.rtsEmitCode
("import targetcode.Lambda;\n");
JavaLib.rtsEmitCode
("import targetcode.Component;\n");
JavaLib.rtsEmitCode
("import targetcode.Port;\n");
JavaLib.rtsEmitCode
("\n");
JavaLib.rtsEmitCode
("public class MODULE\n");
JavaLib.rtsEmitCode
("implements targetcode.MetaModule\n");
JavaLib.rtsEmitCode
("{\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1693;
// $$$$$$$$ 
} // CONDITION1694 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1693 N=1692
if (javadummy) break CONDITION1692;
} // CONDLIST1693 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1692
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_Prelude");
}



public
static
void
Emit_Postlude(
)
{
CONDITION1695:
while(javadummy) {
// ***** begin condlist 1696 (in cond 1695) *****
CONDLIST1696: // @@@ begin of alternative group
while(javadummy) {
CONDITION1697: // @@@ begin of alternative
while(javadummy) {
// ***** begin condlist 1698 (in cond 1697) *****
CONDLIST1698: // @@@ begin of alternative group
while(javadummy) {
CONDITION1699: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Q
JavaNode Q= null;
JavaLib.rtsCheckDefined(HasControlPart,"/line,offset,length,file=/ 196 5255 14 Emit.g");
Q = HasControlPart;
{
JavaNode current0 = Q;
//JJ.M6
if (! JavaIntValue.MatchesInt(current0,1))
   if (javadummy) break  CONDITION1699;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1698;
// $$$$$$$$ 
} // CONDITION1699 // @@@ end of alternative
CONDITION1700: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
("@Override\n");
JavaLib.rtsEmitCode
("public void RunControlPart()\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("   System.out.println(\"[Module has no control part]\");\n");
JavaLib.rtsEmitCode
("}\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1698;
// $$$$$$$$ 
} // CONDITION1700 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1698 N=1697
if (javadummy) break CONDITION1697;
} // CONDLIST1698 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
EmitTestcaseTable
(
);
JavaLib.rtsEmitCode
("}\n");
// openfile
JavaLib.rtsCloseAlphaFile
(
);
// openfile end
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1696;
// $$$$$$$$ 
} // CONDITION1697 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1696 N=1695
if (javadummy) break CONDITION1695;
} // CONDLIST1696 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1695
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_Postlude");
}



public
static
void
Emit_Expression(

JavaNode yy_inparam_0
)
{
CONDITION1701:
while(javadummy) {
// ***** begin condlist 1702 (in cond 1701) *****
CONDLIST1702: // @@@ begin of alternative group
while(javadummy) {
CONDITION1703: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Type
JavaNode Type= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "createcomponent") )
   if (javadummy) break  CONDITION1703;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Type --- JJ.M4
Type = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("new ");
JavaLib.rtsEmitString
(
Type
);
JavaLib.rtsEmitCode
(" (\"Rumpelstilzchen\")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1703 // @@@ end of alternative
CONDITION1704: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_verdict") )
   if (javadummy) break  CONDITION1704;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"pass"))
   if (javadummy) break  CONDITION1704;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.VerdictPass()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1704 // @@@ end of alternative
CONDITION1705: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_verdict") )
   if (javadummy) break  CONDITION1705;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"fail"))
   if (javadummy) break  CONDITION1705;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.VerdictFail()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1705 // @@@ end of alternative
CONDITION1706: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_verdict") )
   if (javadummy) break  CONDITION1706;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"inconc"))
   if (javadummy) break  CONDITION1706;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.VerdictInconc()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1706 // @@@ end of alternative
CONDITION1707: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_verdict") )
   if (javadummy) break  CONDITION1707;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"none"))
   if (javadummy) break  CONDITION1707;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.VerdictNone()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1707 // @@@ end of alternative
CONDITION1708: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_verdict") )
   if (javadummy) break  CONDITION1708;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"error"))
   if (javadummy) break  CONDITION1708;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.VerdictError()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1708 // @@@ end of alternative
CONDITION1709: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_compportref") )
   if (javadummy) break  CONDITION1709;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.ComponentPort(\n");
YyProcs.
Emit_Expression
(
X
);
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("\"");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
("\"\n");
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1709 // @@@ end of alternative
CONDITION1710: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_runsonc_port") )
   if (javadummy) break  CONDITION1710;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.ComponentPort(\n");
JavaLib.rtsEmitCode
("MyRunsOnC\n");
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("\"");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
("\"\n");
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1710 // @@@ end of alternative
CONDITION1711: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_systemc_port") )
   if (javadummy) break  CONDITION1711;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.SystemCPort(\"");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
("\")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1711 // @@@ end of alternative
CONDITION1712: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "monexpr") )
   if (javadummy) break  CONDITION1712;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"bitnot"))
   if (javadummy) break  CONDITION1712;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("XInstructions.Not4b(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1712 // @@@ end of alternative
CONDITION1713: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "monexpr") )
   if (javadummy) break  CONDITION1713;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"not"))
   if (javadummy) break  CONDITION1713;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Not(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1713 // @@@ end of alternative
CONDITION1714: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "monexpr") )
   if (javadummy) break  CONDITION1714;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"minus"))
   if (javadummy) break  CONDITION1714;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerUnaryMinus(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1714 // @@@ end of alternative
CONDITION1715: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "fragezeichen") )
   if (javadummy) break  CONDITION1715;
};
JavaLib.rtsEmitCode
("new targetcode.Joker()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1715 // @@@ end of alternative
CONDITION1716: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Name
JavaNode Name= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "fragezeichen_record") )
   if (javadummy) break  CONDITION1716;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Name --- JJ.M4
Name = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("new targetcode.RecordJoker((new Meta");
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
("()).newInstance())\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1716 // @@@ end of alternative
CONDITION1717: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Tp
JavaNode Tp= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "fragezeichen_tp") )
   if (javadummy) break  CONDITION1717;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Tp --- JJ.M4
Tp = current1 ;
} //)) children level 1
};
// ***** begin condlist 1718 (in cond 1717) *****
CONDLIST1718: // @@@ begin of alternative group
while(javadummy) {
CONDITION1719: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_boolean") )
   if (javadummy) break  CONDITION1719;
};
JavaLib.rtsEmitCode
("new targetcode.BooleanJoker()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1718;
// $$$$$$$$ 
} // CONDITION1719 // @@@ end of alternative
CONDITION1720: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_charstring") )
   if (javadummy) break  CONDITION1720;
};
JavaLib.rtsEmitCode
("new targetcode.CharstringJoker()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1718;
// $$$$$$$$ 
} // CONDITION1720 // @@@ end of alternative
CONDITION1721: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Tp;
if (! current0 .Name
.equals( "tp_integer") )
   if (javadummy) break  CONDITION1721;
};
JavaLib.rtsEmitCode
("new targetcode.IntegerJoker()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1718;
// $$$$$$$$ 
} // CONDITION1721 // @@@ end of alternative
CONDITION1722: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
("new targetcode.Joker()\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1718;
// $$$$$$$$ 
} // CONDITION1722 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1718 N=1717
if (javadummy) break CONDITION1717;
} // CONDLIST1718 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1717 // @@@ end of alternative
CONDITION1723: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_match") )
   if (javadummy) break  CONDITION1723;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Match(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1723 // @@@ end of alternative
CONDITION1724: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1724;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"less"))
   if (javadummy) break  CONDITION1724;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerLess(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1724 // @@@ end of alternative
CONDITION1725: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1725;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"greater"))
   if (javadummy) break  CONDITION1725;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerGreater(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1725 // @@@ end of alternative
CONDITION1726: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1726;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"greaterequal"))
   if (javadummy) break  CONDITION1726;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerGreaterEqual(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1726 // @@@ end of alternative
CONDITION1727: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1727;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"lessequal"))
   if (javadummy) break  CONDITION1727;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerLessEqual(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1727 // @@@ end of alternative
CONDITION1728: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1728;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"shiftleft"))
   if (javadummy) break  CONDITION1728;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("XInstructions.ShiftLeft(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1728 // @@@ end of alternative
CONDITION1729: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1729;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"shiftright"))
   if (javadummy) break  CONDITION1729;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("XInstructions.ShiftRight(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1729 // @@@ end of alternative
CONDITION1730: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1730;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"rotateleft"))
   if (javadummy) break  CONDITION1730;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("XInstructions.RotateLeft(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1730 // @@@ end of alternative
CONDITION1731: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1731;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"rotateright"))
   if (javadummy) break  CONDITION1731;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("XInstructions.RotateRight(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1731 // @@@ end of alternative
CONDITION1732: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1732;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"notequal"))
   if (javadummy) break  CONDITION1732;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerUnequal(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1732 // @@@ end of alternative
CONDITION1733: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1733;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"equal"))
   if (javadummy) break  CONDITION1733;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerEqual(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1733 // @@@ end of alternative
CONDITION1734: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1734;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"or"))
   if (javadummy) break  CONDITION1734;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Or(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1734 // @@@ end of alternative
CONDITION1735: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1735;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"and"))
   if (javadummy) break  CONDITION1735;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.And(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1735 // @@@ end of alternative
CONDITION1736: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1736;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"xor"))
   if (javadummy) break  CONDITION1736;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Xor(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1736 // @@@ end of alternative
CONDITION1737: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1737;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"bitand"))
   if (javadummy) break  CONDITION1737;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("XInstructions.And4b(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1737 // @@@ end of alternative
CONDITION1738: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1738;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"bitxor"))
   if (javadummy) break  CONDITION1738;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("XInstructions.Xor4b(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1738 // @@@ end of alternative
CONDITION1739: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1739;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"bitor"))
   if (javadummy) break  CONDITION1739;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("XInstructions.Or4b(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1739 // @@@ end of alternative
CONDITION1740: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1740;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"div"))
   if (javadummy) break  CONDITION1740;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerDiv(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1740 // @@@ end of alternative
CONDITION1741: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1741;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"mul"))
   if (javadummy) break  CONDITION1741;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerMult(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1741 // @@@ end of alternative
CONDITION1742: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1742;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"mod"))
   if (javadummy) break  CONDITION1742;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerMod(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1742 // @@@ end of alternative
CONDITION1743: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1743;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"rem"))
   if (javadummy) break  CONDITION1743;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerRem(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1743 // @@@ end of alternative
CONDITION1744: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1744;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"concat"))
   if (javadummy) break  CONDITION1744;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.CharstringConcat(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1744 // @@@ end of alternative
CONDITION1745: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1745;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"add"))
   if (javadummy) break  CONDITION1745;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerPlus(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1745 // @@@ end of alternative
CONDITION1746: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "binexpr") )
   if (javadummy) break  CONDITION1746;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//JJ.M5
if (! JavaStringValue.MatchesString(current1,"sub"))
   if (javadummy) break  CONDITION1746;
current1 = kurrent0.Child1[1];
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerMinus(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1746 // @@@ end of alternative
CONDITION1747: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "compidexpr") )
   if (javadummy) break  CONDITION1747;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.ComponentVar(\n");
JavaLib.rtsEmitCode
("MyRunsOnC\n");
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("\"");
JavaLib.rtsEmitString
(
str
);
JavaLib.rtsEmitCode
("\"\n");
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1747 // @@@ end of alternative
CONDITION1748: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "fieldselection") )
   if (javadummy) break  CONDITION1748;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.FieldSelection(\n");
YyProcs.
Emit_Expression
(
X
);
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("\"");
JavaLib.rtsEmitString
(
str
);
JavaLib.rtsEmitCode
("\"\n");
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1748 // @@@ end of alternative
CONDITION1749: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "idexpr") )
   if (javadummy) break  CONDITION1749;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitString
(
str
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1749 // @@@ end of alternative
CONDITION1750: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_omit") )
   if (javadummy) break  CONDITION1750;
};
JavaLib.rtsEmitCode
("Instructions.IntegerConstant(444)\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1750 // @@@ end of alternative
CONDITION1751: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative n
JavaNode n= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_float") )
   if (javadummy) break  CONDITION1751;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to n --- JJ.M4
n = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.FloatConstant(");
JavaLib.rtsEmitString
(
n
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1751 // @@@ end of alternative
CONDITION1752: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative n
JavaNode n= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "intexpr") )
   if (javadummy) break  CONDITION1752;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to n --- JJ.M4
n = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerConstant(");
JavaLib.rtsEmitString
(
n
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1752 // @@@ end of alternative
CONDITION1753: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_true") )
   if (javadummy) break  CONDITION1753;
};
JavaLib.rtsEmitCode
("Instructions.BooleanConstant(true)\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1753 // @@@ end of alternative
CONDITION1754: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_false") )
   if (javadummy) break  CONDITION1754;
};
JavaLib.rtsEmitCode
("Instructions.BooleanConstant(false)\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1754 // @@@ end of alternative
CONDITION1755: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative n4
JavaNode n4= null;
// DECLARE for alternative n3
JavaNode n3= null;
// DECLARE for alternative n2
JavaNode n2= null;
// DECLARE for alternative n1
JavaNode n1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_quadrupel") )
   if (javadummy) break  CONDITION1755;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to n1 --- JJ.M4
n1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to n2 --- JJ.M4
n2 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to n3 --- JJ.M4
n3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to n4 --- JJ.M4
n4 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerConstant(555)\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1755 // @@@ end of alternative
CONDITION1756: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_cstring") )
   if (javadummy) break  CONDITION1756;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.CharstringConstant(");
JavaLib.rtsEmitString
(
str
);
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1756 // @@@ end of alternative
CONDITION1757: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_bstring") )
   if (javadummy) break  CONDITION1757;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerConstant(666)\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1757 // @@@ end of alternative
CONDITION1758: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_hstring") )
   if (javadummy) break  CONDITION1758;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerConstant(666)\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1758 // @@@ end of alternative
CONDITION1759: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative str
JavaNode str= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_ostring") )
   if (javadummy) break  CONDITION1759;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to str --- JJ.M4
str = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.IntegerConstant(666)\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1759 // @@@ end of alternative
CONDITION1760: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Spec
JavaNode Spec= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_templsimple") )
   if (javadummy) break  CONDITION1760;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Spec --- JJ.M4
Spec = current1 ;
} //)) children level 1
};
YyProcs.
Emit_ObjectElement
(
Spec
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1760 // @@@ end of alternative
CONDITION1761: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Specs
JavaNode Specs= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_templ") )
   if (javadummy) break  CONDITION1761;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Specs --- JJ.M4
Specs = current1 ;
} //)) children level 1
};
TokenStream.ReportError
(
new JavaStringValue( "template expr" )
,new JavaStringValue( "nopos" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1761 // @@@ end of alternative
CONDITION1762: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Specs
JavaNode Specs= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_compound") )
   if (javadummy) break  CONDITION1762;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Specs --- JJ.M4
Specs = current1 ;
} //)) children level 1
};
TokenStream.ReportError
(
new JavaStringValue( "compound expr" )
,new JavaStringValue( "nopos" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1762 // @@@ end of alternative
CONDITION1763: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Xs
JavaNode Xs= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_array") )
   if (javadummy) break  CONDITION1763;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Xs --- JJ.M4
Xs = current1 ;
} //)) children level 1
};
TokenStream.ReportError
(
new JavaStringValue( "array expr" )
,new JavaStringValue( "nopos" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1763 // @@@ end of alternative
CONDITION1764: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_skip") )
   if (javadummy) break  CONDITION1764;
};
TokenStream.ReportError
(
new JavaStringValue( "skip expr" )
,new JavaStringValue( "nopos" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1764 // @@@ end of alternative
CONDITION1765: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Es
JavaNode Es= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "expr_nimmdas") )
   if (javadummy) break  CONDITION1765;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Es --- JJ.M4
Es = current1 ;
} //)) children level 1
};
YyProcs.
Emit_CompoundExpression1
(
Es
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1765 // @@@ end of alternative
CONDITION1766: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
JavaLib.PrintNode
(
X
);
TokenStream.ReportError
(
new JavaStringValue( "Emit_Expression incomplete" )
,new JavaStringValue( "nopos" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1702;
// $$$$$$$$ 
} // CONDITION1766 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1702 N=1701
if (javadummy) break CONDITION1701;
} // CONDLIST1702 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1701
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_Expression");
}



public
static
void
Emit_CompoundExpression1(

JavaNode yy_inparam_0
)
{
// DECLARE for proc L
JavaNode L = null;
// DECLARE for proc Exprs
JavaNode Exprs = null;
CONDITION1767:
while(javadummy) {
// ***** begin condlist 1768 (in cond 1767) *****
CONDLIST1768: // @@@ begin of alternative group
while(javadummy) {
CONDITION1769: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Exprs --- JJ.M4
Exprs = current0 ;
};
JavaLib.rtsEmitCode
("new targetcode.CompoundValue (\n");
JavaLib.rtsEmitCode
("new Value[] {\n");
L = 
Exprs
;
// ***** begin condlist 1770 (in cond 1769) *****
CONDLIST1770: // @@@ begin of alternative group
while(javadummy) {
CONDITION1771: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = L;
if (current0.Name
!= "SeqOf-EXPR")
if (javadummy) break CONDITION1771;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
Emit_Expression
(
H
);
// ***** begin condlist 1772 (in cond 1771) *****
CONDLIST1772: // @@@ begin of alternative group
while(javadummy) {
CONDITION1773: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = T;
if (current0.Name
!= "SeqOf-EXPR")
if (javadummy) break CONDITION1773;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
JavaLib.rtsEmitCode
(",\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1772;
// $$$$$$$$ 
} // CONDITION1773 // @@@ end of alternative
CONDITION1774: // @@@ begin of alternative
while(javadummy) {
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1772;
// $$$$$$$$ 
} // CONDITION1774 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1772 N=1771
if (javadummy) break CONDITION1771;
} // CONDLIST1772 @@@ end of alternative group
// *** CONTINUE ***
L = 
T
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) continue CONDLIST1770;
// $$$$$$$$ 
} // CONDITION1771 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1770 N=1769
if (javadummy) break CONDLIST1770;
} // CONDLIST1770 @@@ end of alternative group
// *** CONTINUE ***
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
(")\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1768;
// $$$$$$$$ 
} // CONDITION1769 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1768 N=1767
if (javadummy) break CONDITION1767;
} // CONDLIST1768 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1767
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_CompoundExpression1");
}



public
static
void
Emit_CompoundExpression2(

JavaNode yy_inparam_0
)
{
// DECLARE for proc L
JavaNode L = null;
// DECLARE for proc Fields
JavaNode Fields = null;
CONDITION1775:
while(javadummy) {
// ***** begin condlist 1776 (in cond 1775) *****
CONDLIST1776: // @@@ begin of alternative group
while(javadummy) {
CONDITION1777: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Fields --- JJ.M4
Fields = current0 ;
};
JavaLib.rtsEmitCode
("new Value[] {\n");
L = 
Fields
;
// ***** begin condlist 1778 (in cond 1777) *****
CONDLIST1778: // @@@ begin of alternative group
while(javadummy) {
CONDITION1779: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
// DECLARE for alternative Expr
JavaNode Expr= null;
{
JavaNode current0 = L;
if (current0.Name
!= "SeqOf-FIELDSPEC")
if (javadummy) break CONDITION1779;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
// ***** begin condlist 1780 (in cond 1779) *****
CONDLIST1780: // @@@ begin of alternative group
while(javadummy) {
CONDITION1781: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Name
JavaNode Name= null;
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "spec_namedfield") )
   if (javadummy) break  CONDITION1781;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Name --- JJ.M4
Name = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Expr --- JJ.M4
Expr = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1780;
// $$$$$$$$ 
} // CONDITION1781 // @@@ end of alternative
CONDITION1782: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "spec_unnamedfield") )
   if (javadummy) break  CONDITION1782;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Expr --- JJ.M4
Expr = current1 ;
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1780;
// $$$$$$$$ 
} // CONDITION1782 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1780 N=1779
if (javadummy) break CONDITION1779;
} // CONDLIST1780 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Emit_Expression
(
Expr
);
// ***** begin condlist 1783 (in cond 1779) *****
CONDLIST1783: // @@@ begin of alternative group
while(javadummy) {
CONDITION1784: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = T;
if (current0.Name
!= "SeqOf-FIELDSPEC")
if (javadummy) break CONDITION1784;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
current1 = current0.Child1[1];
} //)) children level 1
};
JavaLib.rtsEmitCode
(",\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1783;
// $$$$$$$$ 
} // CONDITION1784 // @@@ end of alternative
CONDITION1785: // @@@ begin of alternative
while(javadummy) {
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1783;
// $$$$$$$$ 
} // CONDITION1785 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1783 N=1779
if (javadummy) break CONDITION1779;
} // CONDLIST1783 @@@ end of alternative group
// *** CONTINUE ***
L = 
T
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) continue CONDLIST1778;
// $$$$$$$$ 
} // CONDITION1779 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1778 N=1777
if (javadummy) break CONDLIST1778;
} // CONDLIST1778 @@@ end of alternative group
// *** CONTINUE ***
JavaLib.rtsEmitCode
("}\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1776;
// $$$$$$$$ 
} // CONDITION1777 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1776 N=1775
if (javadummy) break CONDITION1775;
} // CONDLIST1776 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1775
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_CompoundExpression2");
}



public
static
void
Emit_Stmt(

JavaNode yy_inparam_0
)
{
CONDITION1786:
while(javadummy) {
// ***** begin condlist 1787 (in cond 1786) *****
CONDLIST1787: // @@@ begin of alternative group
while(javadummy) {
CONDITION1788: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative B
JavaNode B= null;
// DECLARE for alternative A
JavaNode A= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_seq") )
   if (javadummy) break  CONDITION1788;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to A --- JJ.M4
A = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to B --- JJ.M4
B = current1 ;
} //)) children level 1
};
YyProcs.
Emit_Stmt
(
A
);
YyProcs.
Emit_Stmt
(
B
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1788 // @@@ end of alternative
CONDITION1789: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative A
JavaNode A= null;
// DECLARE for alternative Defs
JavaNode Defs= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_block") )
   if (javadummy) break  CONDITION1789;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Defs --- JJ.M4
Defs = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to A --- JJ.M4
A = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("{\n");
YyProcs.
Emit_Stmt
(
Defs
);
YyProcs.
Emit_Stmt
(
A
);
JavaLib.rtsEmitCode
("}\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1789 // @@@ end of alternative
CONDITION1790: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative STMT
JavaNode STMT= null;
// DECLARE for alternative EXPR
JavaNode EXPR= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_while") )
   if (javadummy) break  CONDITION1790;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to EXPR --- JJ.M4
EXPR = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to STMT --- JJ.M4
STMT = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("while (\n");
JavaLib.rtsEmitCode
("Instructions.ToBoolean(\n");
YyProcs.
Emit_Expression
(
EXPR
);
JavaLib.rtsEmitCode
(")\n");
JavaLib.rtsEmitCode
(") {\n");
JavaLib.rtsEmitCode
("Instructions.CheckKillFlag();\n");
YyProcs.
Emit_Stmt
(
STMT
);
JavaLib.rtsEmitCode
("}\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1790 // @@@ end of alternative
CONDITION1791: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative L
JavaNode L= null;
// DECLARE for alternative Else
JavaNode Else= null;
// DECLARE for alternative Elsifs
JavaNode Elsifs= null;
// DECLARE for alternative Then
JavaNode Then= null;
// DECLARE for alternative Expr
JavaNode Expr= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_if") )
   if (javadummy) break  CONDITION1791;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Expr --- JJ.M4
Expr = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Then --- JJ.M4
Then = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Elsifs --- JJ.M4
Elsifs = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to Else --- JJ.M4
Else = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("// IF\n");
JavaLib.rtsEmitCode
("if (\n");
JavaLib.rtsEmitCode
("Instructions.ToBoolean(\n");
YyProcs.
Emit_Expression
(
Expr
);
JavaLib.rtsEmitCode
(")\n");
JavaLib.rtsEmitCode
(")\n");
JavaLib.rtsEmitCode
("{\n");
YyProcs.
Emit_Stmt
(
Then
);
JavaLib.rtsEmitCode
("}\n");
L = 
Elsifs
;
// ***** begin condlist 1792 (in cond 1791) *****
CONDLIST1792: // @@@ begin of alternative group
while(javadummy) {
CONDITION1793: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S
JavaNode S= null;
// DECLARE for alternative C
JavaNode C= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = L;
if (current0.Name
!= "SeqOf-ELSEIF")
if (javadummy) break CONDITION1793;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "elseif") )
   if (javadummy) break  CONDITION1793;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to C --- JJ.M4
C = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to S --- JJ.M4
S = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("else if (\n");
JavaLib.rtsEmitCode
("Instructions.ToBoolean(\n");
YyProcs.
Emit_Expression
(
C
);
JavaLib.rtsEmitCode
(")\n");
JavaLib.rtsEmitCode
(")\n");
JavaLib.rtsEmitCode
("{\n");
YyProcs.
Emit_Stmt
(
S
);
JavaLib.rtsEmitCode
("}\n");
L = 
T
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) continue CONDLIST1792;
// $$$$$$$$ 
} // CONDITION1793 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1792 N=1791
if (javadummy) break CONDLIST1792;
} // CONDLIST1792 @@@ end of alternative group
// *** CONTINUE ***
JavaLib.rtsEmitCode
("else\n");
JavaLib.rtsEmitCode
("{\n");
YyProcs.
Emit_Stmt
(
Else
);
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
("// ENDIF\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1791 // @@@ end of alternative
CONDITION1794: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative E
JavaNode E= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_log") )
   if (javadummy) break  CONDITION1794;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to E --- JJ.M4
E = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Log(\n");
YyProcs.
Emit_Expression
(
E
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1794 // @@@ end of alternative
CONDITION1795: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Str
JavaNode Str= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_action") )
   if (javadummy) break  CONDITION1795;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Str --- JJ.M4
Str = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"ACTION\");\n");
JavaLib.rtsEmitCode
("Instructions.Action(\n");
JavaLib.rtsEmitString
(
Str
);
JavaLib.rtsEmitCode
("\n");
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1795 // @@@ end of alternative
CONDITION1796: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative B
JavaNode B= null;
// DECLARE for alternative A
JavaNode A= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_send") )
   if (javadummy) break  CONDITION1796;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to A --- JJ.M4
A = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to B --- JJ.M4
B = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"SEND\");\n");
JavaLib.rtsEmitCode
("Instructions.Send(\n");
YyProcs.
Emit_Expression
(
A
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
B
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1796 // @@@ end of alternative
CONDITION1797: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Bs
JavaNode Bs= null;
// DECLARE for alternative A
JavaNode A= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_assigncompound1") )
   if (javadummy) break  CONDITION1797;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to A --- JJ.M4
A = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Bs --- JJ.M4
Bs = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"ASSIGN\");\n");
JavaLib.rtsEmitCode
("Instructions.AssignCompoundValue(\n");
YyProcs.
Emit_Expression
(
A
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_CompoundExpression1
(
Bs
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1797 // @@@ end of alternative
CONDITION1798: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Bs
JavaNode Bs= null;
// DECLARE for alternative A
JavaNode A= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_assigncompound2") )
   if (javadummy) break  CONDITION1798;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to A --- JJ.M4
A = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Bs --- JJ.M4
Bs = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"ASSIGN\");\n");
JavaLib.rtsEmitCode
("Instructions.AssignCompoundValue(\n");
YyProcs.
Emit_Expression
(
A
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_CompoundExpression2
(
Bs
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1798 // @@@ end of alternative
CONDITION1799: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative B
JavaNode B= null;
// DECLARE for alternative A
JavaNode A= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_assign") )
   if (javadummy) break  CONDITION1799;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to A --- JJ.M4
A = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to B --- JJ.M4
B = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"ASSIGN\");\n");
JavaLib.rtsEmitCode
("Instructions.AssignValue(\n");
YyProcs.
Emit_Expression
(
A
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
B
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1799 // @@@ end of alternative
CONDITION1800: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_null") )
   if (javadummy) break  CONDITION1800;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1800 // @@@ end of alternative
CONDITION1801: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_nolist") )
   if (javadummy) break  CONDITION1801;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1801 // @@@ end of alternative
CONDITION1802: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_declarecharstring") )
   if (javadummy) break  CONDITION1802;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"DECLARE\");\n");
JavaLib.rtsEmitCode
("final Value ");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(" = Instructions.CharstringConstant(\"abc\");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1802 // @@@ end of alternative
CONDITION1803: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_declareboolean") )
   if (javadummy) break  CONDITION1803;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"DECLARE\");\n");
JavaLib.rtsEmitCode
("final Value ");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(" = Instructions.BooleanConstant(false);\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1803 // @@@ end of alternative
CONDITION1804: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_declareinteger") )
   if (javadummy) break  CONDITION1804;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"DECLARE\");\n");
JavaLib.rtsEmitCode
("final Value ");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(" = Instructions.IntegerConstant(999);\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1804 // @@@ end of alternative
CONDITION1805: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative TypeId
JavaNode TypeId= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_declarereferenced") )
   if (javadummy) break  CONDITION1805;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TypeId --- JJ.M4
TypeId = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"DECLARE\");\n");
JavaLib.rtsEmitCode
("final Value ");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(" = new ");
JavaLib.rtsEmitString
(
TypeId
);
JavaLib.rtsEmitCode
(" (\"Gantenbein\");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1805 // @@@ end of alternative
CONDITION1806: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_declaretimer") )
   if (javadummy) break  CONDITION1806;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"DECLARETIMER\");\n");
JavaLib.rtsEmitCode
("final Value ");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(" = new targetcode.Timer();\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1806 // @@@ end of alternative
CONDITION1807: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Fun
JavaNode Fun= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_call") )
   if (javadummy) break  CONDITION1807;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Fun --- JJ.M4
Fun = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"CALL\");\n");
JavaLib.rtsEmitString
(
Fun
);
JavaLib.rtsEmitCode
("(Instructions.RunsOnComponent);\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1807 // @@@ end of alternative
CONDITION1808: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative K
JavaNode K= null;
// DECLARE for alternative G
JavaNode G= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_standalone") )
   if (javadummy) break  CONDITION1808;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to G --- JJ.M4
G = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"ALT\");\n");
YyProcs.
NewState
(
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to K --- JJ.M4
K = current0 ;
}
JavaLib.rtsEmitCode
("final targetcode.AltState State");
JavaLib.rtsEmitString
(
K
);
JavaLib.rtsEmitCode
(" = new targetcode.AltState();\n");
JavaLib.rtsEmitCode
("Instructions.AltConstruct(\n");
JavaLib.rtsEmitCode
("State");
JavaLib.rtsEmitString
(
K
);
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("new Lambda[] {\n");
YyProcs.
Emit_AltGuard
(
G
,
K
);
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1808 // @@@ end of alternative
CONDITION1809: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative K
JavaNode K= null;
// DECLARE for alternative Gs
JavaNode Gs= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_altn") )
   if (javadummy) break  CONDITION1809;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Gs --- JJ.M4
Gs = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"ALT\");\n");
YyProcs.
NewState
(
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to K --- JJ.M4
K = current0 ;
}
JavaLib.rtsEmitCode
("final targetcode.AltState State");
JavaLib.rtsEmitString
(
K
);
JavaLib.rtsEmitCode
(" = new targetcode.AltState();\n");
JavaLib.rtsEmitCode
("Instructions.AltConstruct(\n");
JavaLib.rtsEmitCode
("State");
JavaLib.rtsEmitString
(
K
);
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("new Lambda[] {\n");
YyProcs.
Emit_AltGuardList
(
Gs
,
K
);
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1809 // @@@ end of alternative
CONDITION1810: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_testcaseinst") )
   if (javadummy) break  CONDITION1810;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"TESTCASEINST\");\n");
JavaLib.rtsEmitCode
("Instructions.StartTestcase(\n");
YyProcs.
BeginLambda
(
);
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
("();\n");
YyProcs.
EndLambda
(
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1810 // @@@ end of alternative
CONDITION1811: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_verdict") )
   if (javadummy) break  CONDITION1811;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"SETVERDICT\");\n");
JavaLib.rtsEmitCode
("Instructions.SetVerdict(\n");
YyProcs.
Emit_Expression
(
X
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1811 // @@@ end of alternative
CONDITION1812: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_repeat") )
   if (javadummy) break  CONDITION1812;
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"REPEAT\");\n");
JavaLib.rtsEmitCode
("Instructions.Repeat();\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1812 // @@@ end of alternative
CONDITION1813: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_done") )
   if (javadummy) break  CONDITION1813;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"DONE\");\n");
JavaLib.rtsEmitCode
("Instructions.Done(");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1813 // @@@ end of alternative
CONDITION1814: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_map") )
   if (javadummy) break  CONDITION1814;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"MAP\");\n");
JavaLib.rtsEmitCode
("Instructions.Map(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1814 // @@@ end of alternative
CONDITION1815: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_connect") )
   if (javadummy) break  CONDITION1815;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"CONNECT\");\n");
JavaLib.rtsEmitCode
("Instructions.Connect(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1815 // @@@ end of alternative
CONDITION1816: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X2
JavaNode X2= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_unmap") )
   if (javadummy) break  CONDITION1816;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"UNMAP\");\n");
JavaLib.rtsEmitCode
("Instructions.Unmap(\n");
YyProcs.
Emit_Expression
(
X1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
X2
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1816 // @@@ end of alternative
CONDITION1817: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id2
JavaNode Id2= null;
// DECLARE for alternative Id1
JavaNode Id1= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_startcomponent") )
   if (javadummy) break  CONDITION1817;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id1 --- JJ.M4
Id1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Id2 --- JJ.M4
Id2 = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"STARTCOMPONENT\");\n");
JavaLib.rtsEmitCode
("Instructions.StartComponent(\n");
JavaLib.rtsEmitString
(
Id1
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
BeginLambda
(
);
JavaLib.rtsEmitCode
("Instructions.ComponentActivityStarts(");
JavaLib.rtsEmitString
(
Id1
);
JavaLib.rtsEmitCode
(");\n");
JavaLib.rtsEmitString
(
Id2
);
JavaLib.rtsEmitCode
("(");
JavaLib.rtsEmitString
(
Id1
);
JavaLib.rtsEmitCode
(");\n");
JavaLib.rtsEmitCode
("Instructions.ComponentActivityEnds(");
JavaLib.rtsEmitString
(
Id1
);
JavaLib.rtsEmitCode
(");\n");
YyProcs.
EndLambda
(
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1817 // @@@ end of alternative
CONDITION1818: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_stopcomponent") )
   if (javadummy) break  CONDITION1818;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"STOPCOMPONENT\");\n");
JavaLib.rtsEmitCode
("Instructions.StopComponent(\n");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
("\n");
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1818 // @@@ end of alternative
CONDITION1819: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_starttimer") )
   if (javadummy) break  CONDITION1819;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"STARTTIMER\");\n");
JavaLib.rtsEmitCode
("Instructions.StartTimer(");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1819 // @@@ end of alternative
CONDITION1820: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Expr
JavaNode Expr= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "stmt_starttimerexpr") )
   if (javadummy) break  CONDITION1820;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Expr --- JJ.M4
Expr = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("Instructions.Trace(\"STARTTIMER\");\n");
JavaLib.rtsEmitCode
("Instructions.StartTimerExpr(");
JavaLib.rtsEmitString
(
Id
);
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("\n");
YyProcs.
Emit_Expression
(
Expr
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1820 // @@@ end of alternative
CONDITION1821: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Stmt
JavaNode Stmt= null;
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Stmt --- JJ.M4
Stmt = current0 ;
};
JavaLib.Log
(
Stmt
);
TokenStream.ReportError
(
new JavaStringValue( "emit stmt" )
,new JavaStringValue( "nopos" )
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1787;
// $$$$$$$$ 
} // CONDITION1821 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1787 N=1786
if (javadummy) break CONDITION1786;
} // CONDLIST1787 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1786
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_Stmt");
}



public
static
void
Emit_AltGuardList(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc K
JavaNode K = null;
CONDITION1822:
while(javadummy) {
// ***** begin condlist 1823 (in cond 1822) *****
CONDLIST1823: // @@@ begin of alternative group
while(javadummy) {
CONDITION1824: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-ALTGUARD")
if (javadummy) break CONDITION1824;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to K --- JJ.M4
K = current0 ;
};
YyProcs.
Emit_AltGuard
(
H
,
K
);
// ***** begin condlist 1825 (in cond 1824) *****
CONDLIST1825: // @@@ begin of alternative group
while(javadummy) {
CONDITION1826: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = T;
if (current0.Name
!= "NilOf-ALTGUARD")
if (javadummy) break CONDITION1826;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1825;
// $$$$$$$$ 
} // CONDITION1826 // @@@ end of alternative
CONDITION1827: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
(",\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1825;
// $$$$$$$$ 
} // CONDITION1827 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1825 N=1824
if (javadummy) break CONDITION1824;
} // CONDLIST1825 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
Emit_AltGuardList
(
T
,
K
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1823;
// $$$$$$$$ 
} // CONDITION1824 // @@@ end of alternative
CONDITION1828: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-ALTGUARD")
if (javadummy) break CONDITION1828;
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to K --- JJ.M4
K = current0 ;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1823;
// $$$$$$$$ 
} // CONDITION1828 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1823 N=1822
if (javadummy) break CONDITION1822;
} // CONDLIST1823 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1822
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_AltGuardList");
}



public
static
void
BeginLambda(
)
{
CONDITION1829:
while(javadummy) {
// ***** begin condlist 1830 (in cond 1829) *****
CONDLIST1830: // @@@ begin of alternative group
while(javadummy) {
CONDITION1831: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
("new Lambda() {\n");
JavaLib.rtsEmitCode
("public void Fun() { \n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1830;
// $$$$$$$$ 
} // CONDITION1831 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1830 N=1829
if (javadummy) break CONDITION1829;
} // CONDLIST1830 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1829
// failed:
JavaLib.rtsAllAlternativesFailed("BeginLambda");
}



public
static
void
EndLambda(
)
{
CONDITION1832:
while(javadummy) {
// ***** begin condlist 1833 (in cond 1832) *****
CONDLIST1833: // @@@ begin of alternative group
while(javadummy) {
CONDITION1834: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
("}\n");
JavaLib.rtsEmitCode
("}\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1833;
// $$$$$$$$ 
} // CONDITION1834 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1833 N=1832
if (javadummy) break CONDITION1832;
} // CONDLIST1833 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1832
// failed:
JavaLib.rtsAllAlternativesFailed("EndLambda");
}



public
static
void
Emit_AltGuard(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc N
JavaNode N = null;
// DECLARE for proc Stmt
JavaNode Stmt = null;
// DECLARE for proc Rcv
JavaNode Rcv = null;
CONDITION1835:
while(javadummy) {
// ***** begin condlist 1836 (in cond 1835) *****
CONDLIST1836: // @@@ begin of alternative group
while(javadummy) {
CONDITION1837: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "altguard") )
   if (javadummy) break  CONDITION1837;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Rcv --- JJ.M4
Rcv = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Stmt --- JJ.M4
Stmt = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to N --- JJ.M4
N = current0 ;
};
JavaLib.rtsEmitCode
("// GUARD\n");
YyProcs.
BeginLambda
(
);
YyProcs.
Emit_Receive
(
Rcv
,
N
);
YyProcs.
EndLambda
(
);
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("// => \n");
YyProcs.
BeginLambda
(
);
YyProcs.
Emit_Stmt
(
Stmt
);
YyProcs.
EndLambda
(
);
JavaLib.rtsEmitCode
("// ENDGUARD\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1836;
// $$$$$$$$ 
} // CONDITION1837 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1836 N=1835
if (javadummy) break CONDITION1835;
} // CONDLIST1836 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1835
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_AltGuard");
}



public
static
void
Emit_Receive(

JavaNode yy_inparam_0
,

JavaNode yy_inparam_1
)
{
// DECLARE for proc K
JavaNode K = null;
CONDITION1838:
while(javadummy) {
// ***** begin condlist 1839 (in cond 1838) *****
CONDLIST1839: // @@@ begin of alternative group
while(javadummy) {
CONDITION1840: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "receive_timeout") )
   if (javadummy) break  CONDITION1840;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to K --- JJ.M4
K = current0 ;
};
JavaLib.rtsEmitCode
("// RECEIVETIMEOUT\n");
JavaLib.rtsEmitCode
("Instructions.Timeout(\n");
JavaLib.rtsEmitString
(
T
);
JavaLib.rtsEmitCode
("\n");
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("State");
JavaLib.rtsEmitString
(
K
);
JavaLib.rtsEmitCode
("\n");
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1839;
// $$$$$$$$ 
} // CONDITION1840 // @@@ end of alternative
CONDITION1841: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Redir
JavaNode Redir= null;
// DECLARE for alternative Port
JavaNode Port= null;
// DECLARE for alternative Pattern
JavaNode Pattern= null;
{
JavaNode current0 = yy_inparam_0;
if (! current0 .Name
.equals( "receive_value") )
   if (javadummy) break  CONDITION1841;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Pattern --- JJ.M4
Pattern = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Port --- JJ.M4
Port = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Redir --- JJ.M4
Redir = current1 ;
} //)) children level 1
};
{
JavaNode current0 = yy_inparam_1;
//assign current0 to K --- JJ.M4
K = current0 ;
};
// ***** begin condlist 1842 (in cond 1841) *****
CONDLIST1842: // @@@ begin of alternative group
while(javadummy) {
CONDITION1843: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Redir;
//JJ.M5
if (! JavaStringValue.MatchesString(current0,"/noredirect/"))
   if (javadummy) break  CONDITION1843;
};
JavaLib.rtsEmitCode
("// RECEIVE\n");
JavaLib.rtsEmitCode
("Instructions.ReceiveValue(\n");
JavaLib.rtsEmitCode
("Instructions.ComponentPort(FinalMyRunsOnC, \"");
JavaLib.rtsEmitString
(
Port
);
JavaLib.rtsEmitCode
("\")\n");
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("State");
JavaLib.rtsEmitString
(
K
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
Pattern
);
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1842;
// $$$$$$$$ 
} // CONDITION1843 // @@@ end of alternative
CONDITION1844: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
("// RECEIVE\n");
JavaLib.rtsEmitCode
("Instructions.ReceiveValueRedirect(\n");
JavaLib.rtsEmitCode
("Instructions.ComponentPort(FinalMyRunsOnC, \"");
JavaLib.rtsEmitString
(
Port
);
JavaLib.rtsEmitCode
("\")\n");
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitCode
("State");
JavaLib.rtsEmitString
(
K
);
JavaLib.rtsEmitCode
(",\n");
YyProcs.
Emit_Expression
(
Pattern
);
JavaLib.rtsEmitCode
(",\n");
JavaLib.rtsEmitString
(
Redir
);
JavaLib.rtsEmitCode
("\n");
JavaLib.rtsEmitCode
(");\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1842;
// $$$$$$$$ 
} // CONDITION1844 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1842 N=1841
if (javadummy) break CONDITION1841;
} // CONDLIST1842 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1839;
// $$$$$$$$ 
} // CONDITION1841 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1839 N=1838
if (javadummy) break CONDITION1838;
} // CONDLIST1839 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1838
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_Receive");
}


// global variable StateIndex
static JavaNode StateIndex = null;

public
static
void
NewState(
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc K
JavaNode K = null;
CONDITION1845:
while(javadummy) {
// ***** begin condlist 1846 (in cond 1845) *****
CONDLIST1846: // @@@ begin of alternative group
while(javadummy) {
CONDITION1847: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsCheckDefined(StateIndex,"/line,offset,length,file=/ 928 24201 10 Emit.g");
K = StateIndex;
StateIndex=
JavaLib.Plus(
K
,
new JavaIntValue(1)
)
;
yy_outparam_0 = 
K
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1846;
// $$$$$$$$ 
} // CONDITION1847 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1846 N=1845
if (javadummy) break CONDITION1845;
} // CONDLIST1846 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1845
// failed:
JavaLib.rtsAllAlternativesFailed("NewState");
}



public
static
void
InitEmit(
)
{
CONDITION1848:
while(javadummy) {
// ***** begin condlist 1849 (in cond 1848) *****
CONDLIST1849: // @@@ begin of alternative group
while(javadummy) {
CONDITION1850: // @@@ begin of alternative
while(javadummy) {
StateIndex=
new JavaIntValue(0)
;
TestcaseTable=
NodeFactory.NewNode (
"NilOf-string"
,  new JavaNode [] {})
;
HasControlPart=
new JavaIntValue(0)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1849;
// $$$$$$$$ 
} // CONDITION1850 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1849 N=1848
if (javadummy) break CONDITION1848;
} // CONDLIST1849 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1848
// failed:
JavaLib.rtsAllAlternativesFailed("InitEmit");
}


// global variable TestcaseTable
static JavaNode TestcaseTable = null;

public
static
void
CollectTestcase(

JavaNode tc
)
{
// DECLARE for proc T
JavaNode T = null;
CONDITION1851:
while(javadummy) {
// ***** begin condlist 1852 (in cond 1851) *****
CONDLIST1852: // @@@ begin of alternative group
while(javadummy) {
CONDITION1853: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsCheckDefined(TestcaseTable,"/line,offset,length,file=/ 941 24503 13 Emit.g");
T = TestcaseTable;
TestcaseTable=
NodeFactory.NewNode (
"SeqOf-string"
, new JavaNode [] {
tc
,
T
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1852;
// $$$$$$$$ 
} // CONDITION1853 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1852 N=1851
if (javadummy) break CONDITION1851;
} // CONDLIST1852 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1851
// failed:
JavaLib.rtsAllAlternativesFailed("CollectTestcase");
}



public
static
void
EmitTestcaseTable(
)
{
// DECLARE for proc L
JavaNode L = null;
CONDITION1854:
while(javadummy) {
// ***** begin condlist 1855 (in cond 1854) *****
CONDLIST1855: // @@@ begin of alternative group
while(javadummy) {
CONDITION1856: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
("@Override\n");
JavaLib.rtsEmitCode
("public String[] GetTestCases()\n");
JavaLib.rtsEmitCode
("{\n");
JavaLib.rtsEmitCode
("   return new String[] {\n");
JavaLib.rtsCheckDefined(TestcaseTable,"/line,offset,length,file=/ 949 24719 13 Emit.g");
L = TestcaseTable;
YyProcs.
EmitTestcaseNames
(
L
);
JavaLib.rtsEmitCode
("   };\n");
JavaLib.rtsEmitCode
("}\n");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1855;
// $$$$$$$$ 
} // CONDITION1856 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1855 N=1854
if (javadummy) break CONDITION1854;
} // CONDLIST1855 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1854
// failed:
JavaLib.rtsAllAlternativesFailed("EmitTestcaseTable");
}



public
static
void
EmitTestcaseNames(

JavaNode yy_inparam_0
)
{
CONDITION1857:
while(javadummy) {
// ***** begin condlist 1858 (in cond 1857) *****
CONDLIST1858: // @@@ begin of alternative group
while(javadummy) {
CONDITION1859: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-string")
if (javadummy) break CONDITION1859;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitCode
("      \"");
JavaLib.rtsEmitString
(
H
);
JavaLib.rtsEmitCode
("\"");
// ***** begin condlist 1860 (in cond 1859) *****
CONDLIST1860: // @@@ begin of alternative group
while(javadummy) {
CONDITION1861: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = T;
if (current0.Name
!= "NilOf-string")
if (javadummy) break CONDITION1861;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1860;
// $$$$$$$$ 
} // CONDITION1861 // @@@ end of alternative
CONDITION1862: // @@@ begin of alternative
while(javadummy) {
JavaLib.rtsEmitCode
(",");
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1860;
// $$$$$$$$ 
} // CONDITION1862 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1860 N=1859
if (javadummy) break CONDITION1859;
} // CONDLIST1860 @@@ end of alternative group
// *** CONTINUE ***
JavaLib.rtsEmitCode
("\n");
YyProcs.
EmitTestcaseNames
(
T
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1858;
// $$$$$$$$ 
} // CONDITION1859 // @@@ end of alternative
CONDITION1863: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-string")
if (javadummy) break CONDITION1863;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1858;
// $$$$$$$$ 
} // CONDITION1863 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1858 N=1857
if (javadummy) break CONDITION1857;
} // CONDLIST1858 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1857
// failed:
JavaLib.rtsAllAlternativesFailed("EmitTestcaseNames");
}



public
static
void
Emit_ObjectElement(

JavaNode yy_inparam_0
)
{
// DECLARE for proc Hd
JavaNode Hd = null;
// DECLARE for proc Val
JavaNode Val = null;
CONDITION1864:
while(javadummy) {
// ***** begin condlist 1865 (in cond 1864) *****
CONDLIST1865: // @@@ begin of alternative group
while(javadummy) {
CONDITION1866: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Hd --- JJ.M4
Hd = current0 ;
};
// ***** begin condlist 1867 (in cond 1866) *****
CONDLIST1867: // @@@ begin of alternative group
while(javadummy) {
CONDITION1868: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Hd;
if (! current0 .Name
.equals( "spec_unnamedfield") )
   if (javadummy) break  CONDITION1868;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Val --- JJ.M4
Val = current1 ;
} //)) children level 1
};
YyProcs.
Emit_Expression
(
Val
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1867;
// $$$$$$$$ 
} // CONDITION1868 // @@@ end of alternative
CONDITION1869: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Name
JavaNode Name= null;
{
JavaNode current0 = Hd;
if (! current0 .Name
.equals( "spec_namedfield") )
   if (javadummy) break  CONDITION1869;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Name --- JJ.M4
Name = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Val --- JJ.M4
Val = current1 ;
} //)) children level 1
};
JavaLib.rtsEmitString
(
Name
);
JavaLib.rtsEmitCode
(":\n");
YyProcs.
Emit_Expression
(
Val
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1867;
// $$$$$$$$ 
} // CONDITION1869 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1867 N=1866
if (javadummy) break CONDITION1866;
} // CONDLIST1867 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1865;
// $$$$$$$$ 
} // CONDITION1866 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1865 N=1864
if (javadummy) break CONDITION1864;
} // CONDLIST1865 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1864
// failed:
JavaLib.rtsAllAlternativesFailed("Emit_ObjectElement");
}



public
static
void
ProcessControlPart(

JavaNode yy_inparam_0
)
{
// DECLARE for proc X
JavaNode X = null;
CONDITION1870:
while(javadummy) {
// ***** begin condlist 1871 (in cond 1870) *****
CONDLIST1871: // @@@ begin of alternative group
while(javadummy) {
CONDITION1872: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 1873 (in cond 1872) *****
CONDLIST1873: // @@@ begin of alternative group
while(javadummy) {
CONDITION1874: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative CP
JavaNode CP= null;
// DECLARE for alternative MCP
JavaNode MCP= null;
// DECLARE for alternative Code
JavaNode Code= null;
// DECLARE for alternative Semicolon
JavaNode Semicolon= null;
// DECLARE for alternative With
JavaNode With= null;
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = X;
if (current0.Name
!= "OneOf-yyControlPart")
if (javadummy) break CONDITION1874;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to CP --- JJ.M4
CP = current1 ;
} //)) children level 1
};
// ***** begin condlist 1875 (in cond 1874) *****
CONDLIST1875: // @@@ begin of alternative group
while(javadummy) {
CONDITION1876: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = CP;
if (! current0 .Name
.equals( "yyControlPart_A1") )
   if (javadummy) break  CONDITION1876;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to MCP --- JJ.M4
MCP = current1 ;
} //)) children level 1
};
// ***** begin condlist 1877 (in cond 1876) *****
CONDLIST1877: // @@@ begin of alternative group
while(javadummy) {
CONDITION1878: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = MCP;
if (! current0 .Name
.equals( "ModuleControlPart_A1") )
   if (javadummy) break  CONDITION1878;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to With --- JJ.M4
With = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Semicolon --- JJ.M4
Semicolon = current1 ;
} //)) children level 1
};
YyProcs.
BeginLocalScope
(
);
YyProcs.
ZzPriCtl_Trafo_ModuleControlBody
(
X1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
YyProcs.
EndLocalScope
(
);
YyProcs.
Emit_ControlPart
(
Code
);
// ***** begin condlist 1879 (in cond 1878) *****
CONDLIST1879: // @@@ begin of alternative group
while(javadummy) {
CONDITION1880: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = With;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ModuleControlPart_A1_M5")
if (javadummy) break CONDITION1880;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1879;
// $$$$$$$$ 
} // CONDITION1880 // @@@ end of alternative
CONDITION1881: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative W
JavaNode W= null;
{
JavaNode current0 = With;
if (current0.Name
!= "OneOf-ModuleControlPart_A1_M5")
if (javadummy) break CONDITION1881;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to W --- JJ.M4
W = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "'with' for control part" )
,
W
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1879;
// $$$$$$$$ 
} // CONDITION1881 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1879 N=1878
if (javadummy) break CONDITION1878;
} // CONDLIST1879 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1877;
// $$$$$$$$ 
} // CONDITION1878 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1877 N=1876
if (javadummy) break CONDITION1876;
} // CONDLIST1877 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1875;
// $$$$$$$$ 
} // CONDITION1876 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1875 N=1874
if (javadummy) break CONDITION1874;
} // CONDLIST1875 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1873;
// $$$$$$$$ 
} // CONDITION1874 // @@@ end of alternative
CONDITION1882: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-yyControlPart")
if (javadummy) break CONDITION1882;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1873;
// $$$$$$$$ 
} // CONDITION1882 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1873 N=1872
if (javadummy) break CONDITION1872;
} // CONDLIST1873 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1871;
// $$$$$$$$ 
} // CONDITION1872 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1871 N=1870
if (javadummy) break CONDITION1870;
} // CONDLIST1871 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
if (javadummy) return;
} // CONDITION1870
// failed:
JavaLib.rtsAllAlternativesFailed("ProcessControlPart");
}



public
static
void
ZzPriCtl_Trafo_ModuleControlBody(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1883:
while(javadummy) {
// ***** begin condlist 1884 (in cond 1883) *****
CONDLIST1884: // @@@ begin of alternative group
while(javadummy) {
CONDITION1885: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ModuleControlBody_A1") )
   if (javadummy) break  CONDITION1885;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1886 (in cond 1885) *****
CONDLIST1886: // @@@ begin of alternative group
while(javadummy) {
CONDITION1887: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative B
JavaNode B= null;
// DECLARE for alternative B2
JavaNode B2= null;
// DECLARE for alternative LIST
JavaNode LIST= null;
{
JavaNode current0 = X1;
if (current0.Name
!= "OneOf-ModuleControlBody_A1_M1")
if (javadummy) break CONDITION1887;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to B --- JJ.M4
B = current1 ;
} //)) children level 1
};
// ***** begin condlist 1888 (in cond 1887) *****
CONDLIST1888: // @@@ begin of alternative group
while(javadummy) {
CONDITION1889: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = B;
if (! current0 .Name
.equals( "ModuleControlBody_A1_M1_A1") )
   if (javadummy) break  CONDITION1889;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to B2 --- JJ.M4
B2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1890 (in cond 1889) *****
CONDLIST1890: // @@@ begin of alternative group
while(javadummy) {
CONDITION1891: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = B2;
if (! current0 .Name
.equals( "ControlStatementOrDefList_A1") )
   if (javadummy) break  CONDITION1891;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to LIST --- JJ.M4
LIST = current1 ;
} //)) children level 1
};
YyProcs.
ZzPriCtl_Trafo_LIST
(
LIST
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1890;
// $$$$$$$$ 
} // CONDITION1891 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1890 N=1889
if (javadummy) break CONDITION1889;
} // CONDLIST1890 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1888;
// $$$$$$$$ 
} // CONDITION1889 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1888 N=1887
if (javadummy) break CONDITION1887;
} // CONDLIST1888 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1886;
// $$$$$$$$ 
} // CONDITION1887 // @@@ end of alternative
CONDITION1892: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ModuleControlBody_A1_M1")
if (javadummy) break CONDITION1892;
{ //(( children level 1
} //)) children level 1
};
Code = 
NodeFactory.NewNode(
"stmt_nolist"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1886;
// $$$$$$$$ 
} // CONDITION1892 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1886 N=1885
if (javadummy) break CONDITION1885;
} // CONDLIST1886 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1884;
// $$$$$$$$ 
} // CONDITION1885 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1884 N=1883
if (javadummy) break CONDITION1883;
} // CONDLIST1884 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1883
// failed:
JavaLib.rtsAllAlternativesFailed("ZzPriCtl_Trafo_ModuleControlBody");
}



public
static
void
ZzPriCtl_Trafo_LIST(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc LIST
JavaNode LIST = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1893:
while(javadummy) {
// ***** begin condlist 1894 (in cond 1893) *****
CONDLIST1894: // @@@ begin of alternative group
while(javadummy) {
CONDITION1895: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to LIST --- JJ.M4
LIST = current0 ;
};
// ***** begin condlist 1896 (in cond 1895) *****
CONDLIST1896: // @@@ begin of alternative group
while(javadummy) {
CONDITION1897: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative CodeTail
JavaNode CodeTail= null;
// DECLARE for alternative CodeHead
JavaNode CodeHead= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
{
JavaNode current0 = LIST;
if (current0.Name
!= "SeqOf-ControlStatementOrDefList_A1_M1")
if (javadummy) break CONDITION1897;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
ZzProcess_Head
(
HEAD
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeHead --- JJ.M4
CodeHead = current0 ;
}
YyProcs.
ZzPriCtl_Trafo_LIST
(
TAIL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeTail --- JJ.M4
CodeTail = current0 ;
}
Code = 
NodeFactory.NewNode(
"stmt_seq"
, new JavaNode [] {
CodeHead
,
CodeTail
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1896;
// $$$$$$$$ 
} // CONDITION1897 // @@@ end of alternative
CONDITION1898: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = LIST;
if (current0.Name
!= "NilOf-ControlStatementOrDefList_A1_M1")
if (javadummy) break CONDITION1898;
};
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1896;
// $$$$$$$$ 
} // CONDITION1898 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1896 N=1895
if (javadummy) break CONDITION1895;
} // CONDLIST1896 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1894;
// $$$$$$$$ 
} // CONDITION1895 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1894 N=1893
if (javadummy) break CONDITION1893;
} // CONDLIST1894 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1893
// failed:
JavaLib.rtsAllAlternativesFailed("ZzPriCtl_Trafo_LIST");
}



public
static
void
ZzProcess_Head(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc HEAD
JavaNode HEAD = null;
// DECLARE for proc Semicolon
JavaNode Semicolon = null;
// DECLARE for proc K
JavaNode K = null;
// DECLARE for proc CodeHead
JavaNode CodeHead = null;
CONDITION1899:
while(javadummy) {
// ***** begin condlist 1900 (in cond 1899) *****
CONDLIST1900: // @@@ begin of alternative group
while(javadummy) {
CONDITION1901: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to HEAD --- JJ.M4
HEAD = current0 ;
};
// ***** begin condlist 1902 (in cond 1901) *****
CONDLIST1902: // @@@ begin of alternative group
while(javadummy) {
CONDITION1903: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "ControlStatementOrDefList_A1_M1_A1") )
   if (javadummy) break  CONDITION1903;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to K --- JJ.M4
K = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Semicolon --- JJ.M4
Semicolon = current1 ;
} //)) children level 1
};
// ***** begin condlist 1904 (in cond 1903) *****
CONDLIST1904: // @@@ begin of alternative group
while(javadummy) {
CONDITION1905: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative With
JavaNode With= null;
// DECLARE for alternative S2
JavaNode S2= null;
{
JavaNode current0 = K;
if (! current0 .Name
.equals( "ControlStatementOrDef_A1") )
   if (javadummy) break  CONDITION1905;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S2 --- JJ.M4
S2 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to With --- JJ.M4
With = current1 ;
} //)) children level 1
};
// ***** begin condlist 1906 (in cond 1905) *****
CONDLIST1906: // @@@ begin of alternative group
while(javadummy) {
CONDITION1907: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S3
JavaNode S3= null;
{
JavaNode current0 = S2;
if (! current0 .Name
.equals( "ControlStatementOrDef_A1_M1_A2") )
   if (javadummy) break  CONDITION1907;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S3 --- JJ.M4
S3 = current1 ;
} //)) children level 1
};
YyProcs.
LOCALDECL
(
S3
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeHead --- JJ.M4
CodeHead = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1906;
// $$$$$$$$ 
} // CONDITION1907 // @@@ end of alternative
CONDITION1908: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = S2;
if (! current0 .Name
.equals( "ControlStatementOrDef_A1_M1_A1") )
   if (javadummy) break  CONDITION1908;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
TokenStream.ReportError
(
new JavaStringValue( "cover" )
,new JavaStringValue( "nopos" )
);
CodeHead = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1906;
// $$$$$$$$ 
} // CONDITION1908 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1906 N=1905
if (javadummy) break CONDITION1905;
} // CONDLIST1906 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 1909 (in cond 1905) *****
CONDLIST1909: // @@@ begin of alternative group
while(javadummy) {
CONDITION1910: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = With;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ControlStatementOrDef_A1_M2")
if (javadummy) break CONDITION1910;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1909;
// $$$$$$$$ 
} // CONDITION1910 // @@@ end of alternative
CONDITION1911: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative W
JavaNode W= null;
{
JavaNode current0 = With;
if (current0.Name
!= "OneOf-ControlStatementOrDef_A1_M2")
if (javadummy) break CONDITION1911;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to W --- JJ.M4
W = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "'with' for declaration inside control part" )
,
W
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1909;
// $$$$$$$$ 
} // CONDITION1911 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1909 N=1905
if (javadummy) break CONDITION1905;
} // CONDLIST1909 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1904;
// $$$$$$$$ 
} // CONDITION1905 // @@@ end of alternative
CONDITION1912: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative S
JavaNode S= null;
{
JavaNode current0 = K;
if (! current0 .Name
.equals( "ControlStatementOrDef_A2") )
   if (javadummy) break  CONDITION1912;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to S --- JJ.M4
S = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_ControlStatement
(
S
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to CodeHead --- JJ.M4
CodeHead = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1904;
// $$$$$$$$ 
} // CONDITION1912 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1904 N=1903
if (javadummy) break CONDITION1903;
} // CONDLIST1904 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1902;
// $$$$$$$$ 
} // CONDITION1903 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1902 N=1901
if (javadummy) break CONDITION1901;
} // CONDLIST1902 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
CodeHead
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1900;
// $$$$$$$$ 
} // CONDITION1901 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1900 N=1899
if (javadummy) break CONDITION1899;
} // CONDLIST1900 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1899
// failed:
JavaLib.rtsAllAlternativesFailed("ZzProcess_Head");
}



public
static
void
Trafo_CompoundExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc Tps
JavaNode Tps = null;
// DECLARE for proc RES
JavaNode RES = null;
CONDITION1913:
while(javadummy) {
// ***** begin condlist 1914 (in cond 1913) *****
CONDLIST1914: // @@@ begin of alternative group
while(javadummy) {
CONDITION1915: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 1916 (in cond 1915) *****
CONDLIST1916: // @@@ begin of alternative group
while(javadummy) {
CONDITION1917: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
// DECLARE for alternative Tl
JavaNode Tl= null;
// DECLARE for alternative TpTl
JavaNode TpTl= null;
// DECLARE for alternative Hd
JavaNode Hd= null;
// DECLARE for alternative TpHd
JavaNode TpHd= null;
// DECLARE for alternative Others
JavaNode Others= null;
// DECLARE for alternative First
JavaNode First= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "CompoundExpression_A1") )
   if (javadummy) break  CONDITION1917;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1918 (in cond 1917) *****
CONDLIST1918: // @@@ begin of alternative group
while(javadummy) {
CONDITION1919: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "FieldExpressionList_A1") )
   if (javadummy) break  CONDITION1919;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to First --- JJ.M4
First = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Others --- JJ.M4
Others = current1 ;
} //)) children level 1
};
YyProcs.
coxTrafo_FieldExpressionSpec
(
First
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpHd --- JJ.M4
TpHd = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Hd --- JJ.M4
Hd = current0 ;
}
YyProcs.
coxTrafo_FieldExpressionSpec_LIST
(
Others
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpTl --- JJ.M4
TpTl = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Tl --- JJ.M4
Tl = current0 ;
}
RES = 
NodeFactory.NewNode(
"expr_compound"
, new JavaNode [] {
NodeFactory.NewNode (
"SeqOf-FIELDSPEC"
, new JavaNode [] {
Hd
,
Tl
}
)
}
)
;
Tps = 
NodeFactory.NewNode (
"SeqOf-Tp"
, new JavaNode [] {
TpHd
,
TpTl
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1918;
// $$$$$$$$ 
} // CONDITION1919 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1918 N=1917
if (javadummy) break CONDITION1917;
} // CONDLIST1918 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1916;
// $$$$$$$$ 
} // CONDITION1917 // @@@ end of alternative
CONDITION1920: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Arr
JavaNode Arr= null;
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "CompoundExpression_A2") )
   if (javadummy) break  CONDITION1920;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Arr --- JJ.M4
Arr = current1 ;
} //)) children level 1
};
YyProcs.
coxTrafo_ArrayExpression
(
Arr
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tps --- JJ.M4
Tps = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RES --- JJ.M4
RES = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1916;
// $$$$$$$$ 
} // CONDITION1920 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1916 N=1915
if (javadummy) break CONDITION1915;
} // CONDLIST1916 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tps
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1914;
// $$$$$$$$ 
} // CONDITION1915 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1914 N=1913
if (javadummy) break CONDITION1913;
} // CONDLIST1914 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1913
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_CompoundExpression");
}



public
static
void
coxTrafo_ArrayExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc Arr
JavaNode Arr = null;
// DECLARE for proc A
JavaNode A = null;
// DECLARE for proc Tps
JavaNode Tps = null;
// DECLARE for proc RES
JavaNode RES = null;
CONDITION1921:
while(javadummy) {
// ***** begin condlist 1922 (in cond 1921) *****
CONDLIST1922: // @@@ begin of alternative group
while(javadummy) {
CONDITION1923: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to Arr --- JJ.M4
Arr = current0 ;
};
// ***** begin condlist 1924 (in cond 1923) *****
CONDLIST1924: // @@@ begin of alternative group
while(javadummy) {
CONDITION1925: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Arr;
if (! current0 .Name
.equals( "ArrayExpression_A1") )
   if (javadummy) break  CONDITION1925;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to A --- JJ.M4
A = current1 ;
} //)) children level 1
};
// ***** begin condlist 1926 (in cond 1925) *****
CONDLIST1926: // @@@ begin of alternative group
while(javadummy) {
CONDITION1927: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative A2
JavaNode A2= null;
// DECLARE for alternative A3
JavaNode A3= null;
// DECLARE for alternative RestRes
JavaNode RestRes= null;
// DECLARE for alternative RestTp
JavaNode RestTp= null;
// DECLARE for alternative FirstRes
JavaNode FirstRes= null;
// DECLARE for alternative FirstTp
JavaNode FirstTp= null;
// DECLARE for alternative Rest
JavaNode Rest= null;
// DECLARE for alternative First
JavaNode First= null;
{
JavaNode current0 = A;
if (current0.Name
!= "OneOf-ArrayExpression_A1_M2")
if (javadummy) break CONDITION1927;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to A2 --- JJ.M4
A2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1928 (in cond 1927) *****
CONDLIST1928: // @@@ begin of alternative group
while(javadummy) {
CONDITION1929: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = A2;
if (! current0 .Name
.equals( "ArrayExpression_A1_M2_A1") )
   if (javadummy) break  CONDITION1929;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to A3 --- JJ.M4
A3 = current1 ;
} //)) children level 1
};
// ***** begin condlist 1930 (in cond 1929) *****
CONDLIST1930: // @@@ begin of alternative group
while(javadummy) {
CONDITION1931: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = A3;
if (! current0 .Name
.equals( "ArrayElementExpressionList_A1") )
   if (javadummy) break  CONDITION1931;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to First --- JJ.M4
First = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Rest --- JJ.M4
Rest = current1 ;
} //)) children level 1
};
YyProcs.
coxTrafo_NotUsedOrExpression
(
First
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to FirstTp --- JJ.M4
FirstTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to FirstRes --- JJ.M4
FirstRes = current0 ;
}
YyProcs.
coxTrafo_ArrayElementExpressionList_A1_M2_SEQ
(
Rest
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to RestTp --- JJ.M4
RestTp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RestRes --- JJ.M4
RestRes = current0 ;
}
RES = 
NodeFactory.NewNode(
"expr_array"
, new JavaNode [] {
NodeFactory.NewNode (
"SeqOf-EXPR"
, new JavaNode [] {
FirstRes
,
RestRes
}
)
}
)
;
Tps = 
NodeFactory.NewNode (
"SeqOf-Tp"
, new JavaNode [] {
FirstTp
,
RestTp
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1930;
// $$$$$$$$ 
} // CONDITION1931 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1930 N=1929
if (javadummy) break CONDITION1929;
} // CONDLIST1930 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1928;
// $$$$$$$$ 
} // CONDITION1929 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1928 N=1927
if (javadummy) break CONDITION1927;
} // CONDLIST1928 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1926;
// $$$$$$$$ 
} // CONDITION1927 // @@@ end of alternative
CONDITION1932: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = A;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ArrayExpression_A1_M2")
if (javadummy) break CONDITION1932;
{ //(( children level 1
} //)) children level 1
};
RES = 
NodeFactory.NewNode(
"expr_array"
, new JavaNode [] {
NodeFactory.NewNode (
"NilOf-EXPR"
,  new JavaNode [] {})
}
)
;
Tps = 
NodeFactory.NewNode (
"NilOf-Tp"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1926;
// $$$$$$$$ 
} // CONDITION1932 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1926 N=1925
if (javadummy) break CONDITION1925;
} // CONDLIST1926 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1924;
// $$$$$$$$ 
} // CONDITION1925 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1924 N=1923
if (javadummy) break CONDITION1923;
} // CONDLIST1924 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tps
;
yy_outparam_1 = 
RES
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1922;
// $$$$$$$$ 
} // CONDITION1923 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1922 N=1921
if (javadummy) break CONDITION1921;
} // CONDLIST1922 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1921
// failed:
JavaLib.rtsAllAlternativesFailed("coxTrafo_ArrayExpression");
}



public
static
void
coxTrafo_ArrayElementExpressionList_A1_M2_SEQ(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
CONDITION1933:
while(javadummy) {
// ***** begin condlist 1934 (in cond 1933) *****
CONDLIST1934: // @@@ begin of alternative group
while(javadummy) {
CONDITION1935: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ResT
JavaNode ResT= null;
// DECLARE for alternative TpT
JavaNode TpT= null;
// DECLARE for alternative ResH
JavaNode ResH= null;
// DECLARE for alternative TpH
JavaNode TpH= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-ArrayElementExpressionList_A1_M2")
if (javadummy) break CONDITION1935;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
coxTrafo_ArrayElementExpressionList_A1_M2
(
H
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpH --- JJ.M4
TpH = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResH --- JJ.M4
ResH = current0 ;
}
YyProcs.
coxTrafo_ArrayElementExpressionList_A1_M2_SEQ
(
T
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpT --- JJ.M4
TpT = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResT --- JJ.M4
ResT = current0 ;
}
yy_outparam_0 = 
NodeFactory.NewNode (
"SeqOf-Tp"
, new JavaNode [] {
TpH
,
TpT
}
)
;
yy_outparam_1 = 
NodeFactory.NewNode (
"SeqOf-EXPR"
, new JavaNode [] {
ResH
,
ResT
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1934;
// $$$$$$$$ 
} // CONDITION1935 // @@@ end of alternative
CONDITION1936: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-ArrayElementExpressionList_A1_M2")
if (javadummy) break CONDITION1936;
};
yy_outparam_0 = 
NodeFactory.NewNode (
"NilOf-Tp"
,  new JavaNode [] {})
;
yy_outparam_1 = 
NodeFactory.NewNode (
"NilOf-EXPR"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1934;
// $$$$$$$$ 
} // CONDITION1936 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1934 N=1933
if (javadummy) break CONDITION1933;
} // CONDLIST1934 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1933
// failed:
JavaLib.rtsAllAlternativesFailed("coxTrafo_ArrayElementExpressionList_A1_M2_SEQ");
}



public
static
void
coxTrafo_ArrayElementExpressionList_A1_M2(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc H
JavaNode H = null;
// DECLARE for proc ResH
JavaNode ResH = null;
// DECLARE for proc TpH
JavaNode TpH = null;
// DECLARE for proc X
JavaNode X = null;
CONDITION1937:
while(javadummy) {
// ***** begin condlist 1938 (in cond 1937) *****
CONDLIST1938: // @@@ begin of alternative group
while(javadummy) {
CONDITION1939: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to H --- JJ.M4
H = current0 ;
};
// ***** begin condlist 1940 (in cond 1939) *****
CONDLIST1940: // @@@ begin of alternative group
while(javadummy) {
CONDITION1941: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = H;
if (! current0 .Name
.equals( "ArrayElementExpressionList_A1_M2_A1") )
   if (javadummy) break  CONDITION1941;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
YyProcs.
coxTrafo_NotUsedOrExpression
(
X
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpH --- JJ.M4
TpH = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to ResH --- JJ.M4
ResH = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1940;
// $$$$$$$$ 
} // CONDITION1941 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1940 N=1939
if (javadummy) break CONDITION1939;
} // CONDLIST1940 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
TpH
;
yy_outparam_1 = 
ResH
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1938;
// $$$$$$$$ 
} // CONDITION1939 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1938 N=1937
if (javadummy) break CONDITION1937;
} // CONDLIST1938 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1937
// failed:
JavaLib.rtsAllAlternativesFailed("coxTrafo_ArrayElementExpressionList_A1_M2");
}



public
static
void
coxTrafo_NotUsedOrExpression(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc NotUsedOrExpression
JavaNode NotUsedOrExpression = null;
// DECLARE for proc Res
JavaNode Res = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION1942:
while(javadummy) {
// ***** begin condlist 1943 (in cond 1942) *****
CONDLIST1943: // @@@ begin of alternative group
while(javadummy) {
CONDITION1944: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to NotUsedOrExpression --- JJ.M4
NotUsedOrExpression = current0 ;
};
// ***** begin condlist 1945 (in cond 1944) *****
CONDLIST1945: // @@@ begin of alternative group
while(javadummy) {
CONDITION1946: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Expr
JavaNode Expr= null;
{
JavaNode current0 = NotUsedOrExpression;
if (! current0 .Name
.equals( "NotUsedOrExpression_A1") )
   if (javadummy) break  CONDITION1946;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Expr --- JJ.M4
Expr = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_Expression
(
Expr
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1945;
// $$$$$$$$ 
} // CONDITION1946 // @@@ end of alternative
CONDITION1947: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = NotUsedOrExpression;
if (! current0 .Name
.equals( "NotUsedOrExpression_A2") )
   if (javadummy) break  CONDITION1947;
};
YyProcs.
NotCovered
(
new JavaStringValue( "NotUsed value" )
,
NotUsedOrExpression
);
Tp = 
NodeFactory.NewNode(
"tp_skip"
, new JavaNode [] {
}
)
;
Res = 
NodeFactory.NewNode(
"expr_skip"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1945;
// $$$$$$$$ 
} // CONDITION1947 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1945 N=1944
if (javadummy) break CONDITION1944;
} // CONDLIST1945 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
Res
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1943;
// $$$$$$$$ 
} // CONDITION1944 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1943 N=1942
if (javadummy) break CONDITION1942;
} // CONDLIST1943 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1942
// failed:
JavaLib.rtsAllAlternativesFailed("coxTrafo_NotUsedOrExpression");
}



public
static
void
coxTrafo_FieldExpressionSpec_ELEM(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc FIELDSPEC
JavaNode FIELDSPEC = null;
// DECLARE for proc Tp
JavaNode Tp = null;
// DECLARE for proc X1
JavaNode X1 = null;
CONDITION1948:
while(javadummy) {
// ***** begin condlist 1949 (in cond 1948) *****
CONDLIST1949: // @@@ begin of alternative group
while(javadummy) {
CONDITION1950: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 1951 (in cond 1950) *****
CONDLIST1951: // @@@ begin of alternative group
while(javadummy) {
CONDITION1952: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "FieldExpressionList_A1_M3_A1") )
   if (javadummy) break  CONDITION1952;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
YyProcs.
coxTrafo_FieldExpressionSpec
(
X1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to FIELDSPEC --- JJ.M4
FIELDSPEC = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1951;
// $$$$$$$$ 
} // CONDITION1952 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1951 N=1950
if (javadummy) break CONDITION1950;
} // CONDLIST1951 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
FIELDSPEC
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1949;
// $$$$$$$$ 
} // CONDITION1950 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1949 N=1948
if (javadummy) break CONDITION1948;
} // CONDLIST1949 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1948
// failed:
JavaLib.rtsAllAlternativesFailed("coxTrafo_FieldExpressionSpec_ELEM");
}



public
static
void
coxTrafo_FieldExpressionSpec_LIST(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
CONDITION1953:
while(javadummy) {
// ***** begin condlist 1954 (in cond 1953) *****
CONDLIST1954: // @@@ begin of alternative group
while(javadummy) {
CONDITION1955: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative RT
JavaNode RT= null;
// DECLARE for alternative TpT
JavaNode TpT= null;
// DECLARE for alternative RH
JavaNode RH= null;
// DECLARE for alternative TpH
JavaNode TpH= null;
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "SeqOf-FieldExpressionList_A1_M3")
if (javadummy) break CONDITION1955;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
coxTrafo_FieldExpressionSpec_ELEM
(
H
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpH --- JJ.M4
TpH = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RH --- JJ.M4
RH = current0 ;
}
YyProcs.
coxTrafo_FieldExpressionSpec_LIST
(
T
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to TpT --- JJ.M4
TpT = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to RT --- JJ.M4
RT = current0 ;
}
yy_outparam_0 = 
NodeFactory.NewNode (
"SeqOf-Tp"
, new JavaNode [] {
TpH
,
TpT
}
)
;
yy_outparam_1 = 
NodeFactory.NewNode (
"SeqOf-FIELDSPEC"
, new JavaNode [] {
RH
,
RT
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1954;
// $$$$$$$$ 
} // CONDITION1955 // @@@ end of alternative
CONDITION1956: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
if (current0.Name
!= "NilOf-FieldExpressionList_A1_M3")
if (javadummy) break CONDITION1956;
};
yy_outparam_0 = 
NodeFactory.NewNode (
"NilOf-Tp"
,  new JavaNode [] {})
;
yy_outparam_1 = 
NodeFactory.NewNode (
"NilOf-FIELDSPEC"
,  new JavaNode [] {})
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1954;
// $$$$$$$$ 
} // CONDITION1956 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1954 N=1953
if (javadummy) break CONDITION1953;
} // CONDLIST1954 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1953
// failed:
JavaLib.rtsAllAlternativesFailed("coxTrafo_FieldExpressionSpec_LIST");
}



public
static
void
coxTrafo_FieldExpressionSpec(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
JavaNode yy_outparam_1 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc NotUsedOrExpr
JavaNode NotUsedOrExpr = null;
// DECLARE for proc Ref
JavaNode Ref = null;
// DECLARE for proc Res
JavaNode Res = null;
// DECLARE for proc Tp
JavaNode Tp = null;
CONDITION1957:
while(javadummy) {
// ***** begin condlist 1958 (in cond 1957) *****
CONDLIST1958: // @@@ begin of alternative group
while(javadummy) {
CONDITION1959: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 1960 (in cond 1959) *****
CONDLIST1960: // @@@ begin of alternative group
while(javadummy) {
CONDITION1961: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "FieldExpressionSpec_A1") )
   if (javadummy) break  CONDITION1961;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Ref --- JJ.M4
Ref = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to NotUsedOrExpr --- JJ.M4
NotUsedOrExpr = current1 ;
} //)) children level 1
};
// ***** begin condlist 1962 (in cond 1961) *****
CONDLIST1962: // @@@ begin of alternative group
while(javadummy) {
CONDITION1963: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Name
JavaNode Name= null;
// DECLARE for alternative StructField
JavaNode StructField= null;
// DECLARE for alternative Val
JavaNode Val= null;
{
JavaNode current0 = Ref;
if (! current0 .Name
.equals( "FieldReference_A1") )
   if (javadummy) break  CONDITION1963;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to StructField --- JJ.M4
StructField = current1 ;
} //)) children level 1
};
{
JavaNode current0 = StructField;
if (! current0 .Name
.equals( "StructFieldRef_A1") )
   if (javadummy) break  CONDITION1963;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Name --- JJ.M4
Name = current1 ;
} //)) children level 1
};
// ***** begin condlist 1964 (in cond 1963) *****
CONDLIST1964: // @@@ begin of alternative group
while(javadummy) {
CONDITION1965: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Expr
JavaNode Expr= null;
{
JavaNode current0 = NotUsedOrExpr;
if (! current0 .Name
.equals( "NotUsedOrExpression_A1") )
   if (javadummy) break  CONDITION1965;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Expr --- JJ.M4
Expr = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_Expression
(
Expr
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Tp --- JJ.M4
Tp = current0 ;
}
{
JavaNode current0 = 
 JavaLib.yyoutvalue2;
//assign current0 to Val --- JJ.M4
Val = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1964;
// $$$$$$$$ 
} // CONDITION1965 // @@@ end of alternative
CONDITION1966: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = NotUsedOrExpr;
if (! current0 .Name
.equals( "NotUsedOrExpression_A2") )
   if (javadummy) break  CONDITION1966;
};
YyProcs.
NotCovered
(
new JavaStringValue( "NotUsed value" )
,
NotUsedOrExpr
);
Val = 
NodeFactory.NewNode(
"expr_skip"
, new JavaNode [] {
}
)
;
Tp = 
NodeFactory.NewNode(
"tp_skip"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1964;
// $$$$$$$$ 
} // CONDITION1966 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1964 N=1963
if (javadummy) break CONDITION1963;
} // CONDLIST1964 @@@ end of alternative group
// *** CONTINUE ***
Res = 
NodeFactory.NewNode(
"spec_namedfield"
, new JavaNode [] {
Name
,
Val
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1962;
// $$$$$$$$ 
} // CONDITION1963 // @@@ end of alternative
CONDITION1967: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Ref;
if (! current0 .Name
.equals( "FieldReference_A2") )
   if (javadummy) break  CONDITION1967;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "field reference 2" )
,
Ref
);
Tp = 
NodeFactory.NewNode(
"tp_skip"
, new JavaNode [] {
}
)
;
Res = 
NodeFactory.NewNode(
"spec_namedfield"
, new JavaNode [] {
new JavaStringValue( "-" )
,
NodeFactory.NewNode(
"expr_skip"
, new JavaNode [] {
}
)
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1962;
// $$$$$$$$ 
} // CONDITION1967 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1962 N=1961
if (javadummy) break CONDITION1961;
} // CONDLIST1962 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1960;
// $$$$$$$$ 
} // CONDITION1961 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1960 N=1959
if (javadummy) break CONDITION1959;
} // CONDLIST1960 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Tp
;
yy_outparam_1 = 
Res
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1958;
// $$$$$$$$ 
} // CONDITION1959 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1958 N=1957
if (javadummy) break CONDITION1957;
} // CONDLIST1958 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
JavaLib.yyoutvalue2 = yy_outparam_1;
if (javadummy) return;
} // CONDITION1957
// failed:
JavaLib.rtsAllAlternativesFailed("coxTrafo_FieldExpressionSpec");
}



public
static
void
Trafo_StatementBlock(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc STBLOCK
JavaNode STBLOCK = null;
// DECLARE for proc Code
JavaNode Code = null;
// DECLARE for proc Body
JavaNode Body = null;
// DECLARE for proc Defs
JavaNode Defs = null;
// DECLARE for proc BODY
JavaNode BODY = null;
// DECLARE for proc DEFS
JavaNode DEFS = null;
CONDITION1968:
while(javadummy) {
// ***** begin condlist 1969 (in cond 1968) *****
CONDLIST1969: // @@@ begin of alternative group
while(javadummy) {
CONDITION1970: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to STBLOCK --- JJ.M4
STBLOCK = current0 ;
};
// ***** begin condlist 1971 (in cond 1970) *****
CONDLIST1971: // @@@ begin of alternative group
while(javadummy) {
CONDITION1972: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = STBLOCK;
if (! current0 .Name
.equals( "StatementBlock_A1") )
   if (javadummy) break  CONDITION1972;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to DEFS --- JJ.M4
DEFS = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to BODY --- JJ.M4
BODY = current1 ;
} //)) children level 1
};
YyProcs.
BeginLocalScope
(
);
YyProcs.
ZzTrafo_DEFS
(
DEFS
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Defs --- JJ.M4
Defs = current0 ;
}
YyProcs.
ZzTrafo_BODY
(
BODY
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Body --- JJ.M4
Body = current0 ;
}
YyProcs.
EndLocalScope
(
);
Code = 
NodeFactory.NewNode(
"stmt_block"
, new JavaNode [] {
Defs
,
Body
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1971;
// $$$$$$$$ 
} // CONDITION1972 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1971 N=1970
if (javadummy) break CONDITION1970;
} // CONDLIST1971 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1969;
// $$$$$$$$ 
} // CONDITION1970 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1969 N=1968
if (javadummy) break CONDITION1968;
} // CONDLIST1969 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1968
// failed:
JavaLib.rtsAllAlternativesFailed("Trafo_StatementBlock");
}



public
static
void
ZzTrafo_DEFS(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc DEFS
JavaNode DEFS = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1973:
while(javadummy) {
// ***** begin condlist 1974 (in cond 1973) *****
CONDLIST1974: // @@@ begin of alternative group
while(javadummy) {
CONDITION1975: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to DEFS --- JJ.M4
DEFS = current0 ;
};
// ***** begin condlist 1976 (in cond 1975) *****
CONDLIST1976: // @@@ begin of alternative group
while(javadummy) {
CONDITION1977: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = DEFS;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-StatementBlock_A1_M2")
if (javadummy) break CONDITION1977;
{ //(( children level 1
} //)) children level 1
};
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1976;
// $$$$$$$$ 
} // CONDITION1977 // @@@ end of alternative
CONDITION1978: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Block
JavaNode Block= null;
// DECLARE for alternative L
JavaNode L= null;
// DECLARE for alternative SEQ
JavaNode SEQ= null;
{
JavaNode current0 = DEFS;
if (current0.Name
!= "OneOf-StatementBlock_A1_M2")
if (javadummy) break CONDITION1978;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to Block --- JJ.M4
Block = current1 ;
} //)) children level 1
};
// ***** begin condlist 1979 (in cond 1978) *****
CONDLIST1979: // @@@ begin of alternative group
while(javadummy) {
CONDITION1980: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Block;
if (! current0 .Name
.equals( "StatementBlock_A1_M2_A1") )
   if (javadummy) break  CONDITION1980;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to L --- JJ.M4
L = current1 ;
} //)) children level 1
};
// ***** begin condlist 1981 (in cond 1980) *****
CONDLIST1981: // @@@ begin of alternative group
while(javadummy) {
CONDITION1982: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = L;
if (! current0 .Name
.equals( "FunctionDefList_A1") )
   if (javadummy) break  CONDITION1982;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to SEQ --- JJ.M4
SEQ = current1 ;
} //)) children level 1
};
YyProcs.
ZzTrafo_DEFSEQ
(
SEQ
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1981;
// $$$$$$$$ 
} // CONDITION1982 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1981 N=1980
if (javadummy) break CONDITION1980;
} // CONDLIST1981 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1979;
// $$$$$$$$ 
} // CONDITION1980 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1979 N=1978
if (javadummy) break CONDITION1978;
} // CONDLIST1979 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1976;
// $$$$$$$$ 
} // CONDITION1978 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1976 N=1975
if (javadummy) break CONDITION1975;
} // CONDLIST1976 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1974;
// $$$$$$$$ 
} // CONDITION1975 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1974 N=1973
if (javadummy) break CONDITION1973;
} // CONDLIST1974 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1973
// failed:
JavaLib.rtsAllAlternativesFailed("ZzTrafo_DEFS");
}



public
static
void
ZzTrafo_DEFSEQ(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc SEQ
JavaNode SEQ = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1983:
while(javadummy) {
// ***** begin condlist 1984 (in cond 1983) *****
CONDLIST1984: // @@@ begin of alternative group
while(javadummy) {
CONDITION1985: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to SEQ --- JJ.M4
SEQ = current0 ;
};
// ***** begin condlist 1986 (in cond 1985) *****
CONDLIST1986: // @@@ begin of alternative group
while(javadummy) {
CONDITION1987: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Code2
JavaNode Code2= null;
// DECLARE for alternative Code1
JavaNode Code1= null;
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
{
JavaNode current0 = SEQ;
if (current0.Name
!= "SeqOf-FunctionDefList_A1_M1")
if (javadummy) break CONDITION1987;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
YyProcs.
ZzTrafo_DEFHEAD
(
HEAD
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code1 --- JJ.M4
Code1 = current0 ;
}
YyProcs.
ZzTrafo_DEFSEQ
(
TAIL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code2 --- JJ.M4
Code2 = current0 ;
}
Code = 
NodeFactory.NewNode(
"stmt_seq"
, new JavaNode [] {
Code1
,
Code2
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1986;
// $$$$$$$$ 
} // CONDITION1987 // @@@ end of alternative
CONDITION1988: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = SEQ;
if (current0.Name
!= "NilOf-FunctionDefList_A1_M1")
if (javadummy) break CONDITION1988;
};
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1986;
// $$$$$$$$ 
} // CONDITION1988 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1986 N=1985
if (javadummy) break CONDITION1985;
} // CONDLIST1986 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1984;
// $$$$$$$$ 
} // CONDITION1985 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1984 N=1983
if (javadummy) break CONDITION1983;
} // CONDLIST1984 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1983
// failed:
JavaLib.rtsAllAlternativesFailed("ZzTrafo_DEFSEQ");
}



public
static
void
ZzTrafo_DEFHEAD(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc HEAD
JavaNode HEAD = null;
// DECLARE for proc Semi
JavaNode Semi = null;
// DECLARE for proc XX
JavaNode XX = null;
// DECLARE for proc L
JavaNode L = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION1989:
while(javadummy) {
// ***** begin condlist 1990 (in cond 1989) *****
CONDLIST1990: // @@@ begin of alternative group
while(javadummy) {
CONDITION1991: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to HEAD --- JJ.M4
HEAD = current0 ;
};
// ***** begin condlist 1992 (in cond 1991) *****
CONDLIST1992: // @@@ begin of alternative group
while(javadummy) {
CONDITION1993: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "FunctionDefList_A1_M1_A1") )
   if (javadummy) break  CONDITION1993;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to L --- JJ.M4
L = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to XX --- JJ.M4
XX = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Semi --- JJ.M4
Semi = current1 ;
} //)) children level 1
};
// ***** begin condlist 1994 (in cond 1993) *****
CONDLIST1994: // @@@ begin of alternative group
while(javadummy) {
CONDITION1995: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = L;
if (! current0 .Name
.equals( "FunctionDefList_A1_M1_A1_M1_A1") )
   if (javadummy) break  CONDITION1995;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
TokenStream.ReportError
(
new JavaStringValue( "cover" )
,new JavaStringValue( "nopos" )
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1994;
// $$$$$$$$ 
} // CONDITION1995 // @@@ end of alternative
CONDITION1996: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X1
JavaNode X1= null;
{
JavaNode current0 = L;
if (! current0 .Name
.equals( "FunctionDefList_A1_M1_A1_M1_A2") )
   if (javadummy) break  CONDITION1996;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
} //)) children level 1
};
YyProcs.
LOCALDECL
(
X1
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// ***** begin condlist 1997 (in cond 1996) *****
CONDLIST1997: // @@@ begin of alternative group
while(javadummy) {
CONDITION1998: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-FunctionDefList_A1_M1_A1_M2")
if (javadummy) break CONDITION1998;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1997;
// $$$$$$$$ 
} // CONDITION1998 // @@@ end of alternative
CONDITION1999: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX;
if (current0.Name
!= "OneOf-FunctionDefList_A1_M1_A1_M2")
if (javadummy) break CONDITION1999;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "'with' for local declarations" )
,
XX
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1997;
// $$$$$$$$ 
} // CONDITION1999 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1997 N=1996
if (javadummy) break CONDITION1996;
} // CONDLIST1997 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1994;
// $$$$$$$$ 
} // CONDITION1996 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1994 N=1993
if (javadummy) break CONDITION1993;
} // CONDLIST1994 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1992;
// $$$$$$$$ 
} // CONDITION1993 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1992 N=1991
if (javadummy) break CONDITION1991;
} // CONDLIST1992 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST1990;
// $$$$$$$$ 
} // CONDITION1991 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=1990 N=1989
if (javadummy) break CONDITION1989;
} // CONDLIST1990 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION1989
// failed:
JavaLib.rtsAllAlternativesFailed("ZzTrafo_DEFHEAD");
}



public
static
void
LOCALDECL(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION2000:
while(javadummy) {
// ***** begin condlist 2001 (in cond 2000) *****
CONDLIST2001: // @@@ begin of alternative group
while(javadummy) {
CONDITION2002: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X1 --- JJ.M4
X1 = current0 ;
};
// ***** begin condlist 2003 (in cond 2002) *****
CONDLIST2003: // @@@ begin of alternative group
while(javadummy) {
CONDITION2004: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative XX1
JavaNode XX1= null;
// DECLARE for alternative XXX
JavaNode XXX= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "FunctionLocalInst_A1") )
   if (javadummy) break  CONDITION2004;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX1 --- JJ.M4
XX1 = current1 ;
} //)) children level 1
};
// ***** begin condlist 2005 (in cond 2004) *****
CONDLIST2005: // @@@ begin of alternative group
while(javadummy) {
CONDITION2006: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX1;
if (! current0 .Name
.equals( "VarInstance_A1") )
   if (javadummy) break  CONDITION2006;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XXX --- JJ.M4
XXX = current1 ;
} //)) children level 1
};
// ***** begin condlist 2007 (in cond 2006) *****
CONDLIST2007: // @@@ begin of alternative group
while(javadummy) {
CONDITION2008: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative QQ5
JavaNode QQ5= null;
{
JavaNode current0 = XXX;
if (! current0 .Name
.equals( "VarInstance_A1_M2_A1") )
   if (javadummy) break  CONDITION2008;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to QQ5 --- JJ.M4
QQ5 = current1 ;
} //)) children level 1
};
YyProcs.
DeclareLocalVar
(
QQ5
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2007;
// $$$$$$$$ 
} // CONDITION2008 // @@@ end of alternative
CONDITION2009: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXX;
if (! current0 .Name
.equals( "VarInstance_A1_M2_A2") )
   if (javadummy) break  CONDITION2009;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
TokenStream.ReportError
(
new JavaStringValue( "cover" )
,new JavaStringValue( "nopos" )
);
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2007;
// $$$$$$$$ 
} // CONDITION2009 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2007 N=2006
if (javadummy) break CONDITION2006;
} // CONDLIST2007 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2005;
// $$$$$$$$ 
} // CONDITION2006 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2005 N=2004
if (javadummy) break CONDITION2004;
} // CONDLIST2005 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2003;
// $$$$$$$$ 
} // CONDITION2004 // @@@ end of alternative
CONDITION2010: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative XXXX
JavaNode XXXX= null;
// DECLARE for alternative XXXXX
JavaNode XXXXX= null;
// DECLARE for alternative XXB
JavaNode XXB= null;
// DECLARE for alternative XXA
JavaNode XXA= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative XXA2
JavaNode XXA2= null;
// DECLARE for alternative XXA1
JavaNode XXA1= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "FunctionLocalInst_A2") )
   if (javadummy) break  CONDITION2010;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XXXX --- JJ.M4
XXXX = current1 ;
} //)) children level 1
};
// ***** begin condlist 2011 (in cond 2010) *****
CONDLIST2011: // @@@ begin of alternative group
while(javadummy) {
CONDITION2012: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXXX;
if (! current0 .Name
.equals( "TimerInstance_A1") )
   if (javadummy) break  CONDITION2012;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XXXXX --- JJ.M4
XXXXX = current1 ;
} //)) children level 1
};
// ***** begin condlist 2013 (in cond 2012) *****
CONDLIST2013: // @@@ begin of alternative group
while(javadummy) {
CONDITION2014: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXXXX;
if (! current0 .Name
.equals( "VarList_A1") )
   if (javadummy) break  CONDITION2014;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XXA --- JJ.M4
XXA = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to XXB --- JJ.M4
XXB = current1 ;
} //)) children level 1
};
// ***** begin condlist 2015 (in cond 2014) *****
CONDLIST2015: // @@@ begin of alternative group
while(javadummy) {
CONDITION2016: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXA;
if (! current0 .Name
.equals( "SingleVarInstance_A1") )
   if (javadummy) break  CONDITION2016;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to XXA1 --- JJ.M4
XXA1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to XXA2 --- JJ.M4
XXA2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 2017 (in cond 2016) *****
CONDLIST2017: // @@@ begin of alternative group
while(javadummy) {
CONDITION2018: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXA1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-SingleVarInstance_A1_M2")
if (javadummy) break CONDITION2018;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2017;
// $$$$$$$$ 
} // CONDITION2018 // @@@ end of alternative
CONDITION2019: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ArrayDef
JavaNode ArrayDef= null;
{
JavaNode current0 = XXA1;
if (current0.Name
!= "OneOf-SingleVarInstance_A1_M2")
if (javadummy) break CONDITION2019;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to ArrayDef --- JJ.M4
ArrayDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "declaration of timer arrays" )
,
ArrayDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2017;
// $$$$$$$$ 
} // CONDITION2019 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2017 N=2016
if (javadummy) break CONDITION2016;
} // CONDLIST2017 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 2020 (in cond 2016) *****
CONDLIST2020: // @@@ begin of alternative group
while(javadummy) {
CONDITION2021: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXA2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-SingleVarInstance_A1_M3")
if (javadummy) break CONDITION2021;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2020;
// $$$$$$$$ 
} // CONDITION2021 // @@@ end of alternative
CONDITION2022: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Init
JavaNode Init= null;
{
JavaNode current0 = XXA2;
if (current0.Name
!= "OneOf-SingleVarInstance_A1_M3")
if (javadummy) break CONDITION2022;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to Init --- JJ.M4
Init = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "initialization of timers" )
,
Init
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2020;
// $$$$$$$$ 
} // CONDITION2022 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2020 N=2016
if (javadummy) break CONDITION2016;
} // CONDLIST2020 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 2023 (in cond 2016) *****
CONDLIST2023: // @@@ begin of alternative group
while(javadummy) {
CONDITION2024: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XXB;
if (current0.Name
!= "NilOf-VarList_A1_M2")
if (javadummy) break CONDITION2024;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2023;
// $$$$$$$$ 
} // CONDITION2024 // @@@ end of alternative
CONDITION2025: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = XXB;
if (current0.Name
!= "SeqOf-VarList_A1_M2")
if (javadummy) break CONDITION2025;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "multiple declaration of timers" )
,
H
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2023;
// $$$$$$$$ 
} // CONDITION2025 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2023 N=2016
if (javadummy) break CONDITION2016;
} // CONDLIST2023 @@@ end of alternative group
// *** CONTINUE ***
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineLocalTimer
(
Id
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_declaretimer"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2015;
// $$$$$$$$ 
} // CONDITION2016 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2015 N=2014
if (javadummy) break CONDITION2014;
} // CONDLIST2015 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2013;
// $$$$$$$$ 
} // CONDITION2014 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2013 N=2012
if (javadummy) break CONDITION2012;
} // CONDLIST2013 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2011;
// $$$$$$$$ 
} // CONDITION2012 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2011 N=2010
if (javadummy) break CONDITION2010;
} // CONDLIST2011 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2003;
// $$$$$$$$ 
} // CONDITION2010 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2003 N=2002
if (javadummy) break CONDITION2002;
} // CONDLIST2003 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2001;
// $$$$$$$$ 
} // CONDITION2002 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2001 N=2000
if (javadummy) break CONDITION2000;
} // CONDLIST2001 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION2000
// failed:
JavaLib.rtsAllAlternativesFailed("LOCALDECL");
}



public
static
void
DeclareLocalVar(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc QQ5
JavaNode QQ5 = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION2026:
while(javadummy) {
// ***** begin condlist 2027 (in cond 2026) *****
CONDLIST2027: // @@@ begin of alternative group
while(javadummy) {
CONDITION2028: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to QQ5 --- JJ.M4
QQ5 = current0 ;
};
// ***** begin condlist 2029 (in cond 2028) *****
CONDLIST2029: // @@@ begin of alternative group
while(javadummy) {
CONDITION2030: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = QQ5;
if (! current0 .Name
.equals( "VarInstance_A1_M2_A1_M1_A1") )
   if (javadummy) break  CONDITION2030;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 2031 (in cond 2030) *****
CONDLIST2031: // @@@ begin of alternative group
while(javadummy) {
CONDITION2032: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Y
JavaNode Y= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "Type_A1") )
   if (javadummy) break  CONDITION2032;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Y --- JJ.M4
Y = current1 ;
} //)) children level 1
};
// ***** begin condlist 2033 (in cond 2032) *****
CONDLIST2033: // @@@ begin of alternative group
while(javadummy) {
CONDITION2034: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A1") )
   if (javadummy) break  CONDITION2034;
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2033;
// $$$$$$$$ 
} // CONDITION2034 // @@@ end of alternative
CONDITION2035: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A2") )
   if (javadummy) break  CONDITION2035;
};
YyProcs.
ExtractId
(
X2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Id --- JJ.M4
Id = current0 ;
}
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineLocalVar
(
Id
,
NodeFactory.NewNode(
"tp_boolean"
, new JavaNode [] {
}
)
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_declareboolean"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2033;
// $$$$$$$$ 
} // CONDITION2035 // @@@ end of alternative
CONDITION2036: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A3") )
   if (javadummy) break  CONDITION2036;
};
YyProcs.
ExtractId
(
X2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Id --- JJ.M4
Id = current0 ;
}
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineLocalVar
(
Id
,
NodeFactory.NewNode(
"tp_charstring"
, new JavaNode [] {
}
)
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_declarecharstring"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2033;
// $$$$$$$$ 
} // CONDITION2036 // @@@ end of alternative
CONDITION2037: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A4") )
   if (javadummy) break  CONDITION2037;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2033;
// $$$$$$$$ 
} // CONDITION2037 // @@@ end of alternative
CONDITION2038: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Id
JavaNode Id= null;
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A5") )
   if (javadummy) break  CONDITION2038;
};
YyProcs.
ExtractId
(
X2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Id --- JJ.M4
Id = current0 ;
}
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
YyProcs.
DefineLocalVar
(
Id
,
NodeFactory.NewNode(
"tp_integer"
, new JavaNode [] {
}
)
,
Pos
);
Code = 
NodeFactory.NewNode(
"stmt_declareinteger"
, new JavaNode [] {
Id
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2033;
// $$$$$$$$ 
} // CONDITION2038 // @@@ end of alternative
CONDITION2039: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A6") )
   if (javadummy) break  CONDITION2039;
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2033;
// $$$$$$$$ 
} // CONDITION2039 // @@@ end of alternative
CONDITION2040: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A7") )
   if (javadummy) break  CONDITION2040;
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2033;
// $$$$$$$$ 
} // CONDITION2040 // @@@ end of alternative
CONDITION2041: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A8") )
   if (javadummy) break  CONDITION2041;
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2033;
// $$$$$$$$ 
} // CONDITION2041 // @@@ end of alternative
CONDITION2042: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A9") )
   if (javadummy) break  CONDITION2042;
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2033;
// $$$$$$$$ 
} // CONDITION2042 // @@@ end of alternative
CONDITION2043: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A10") )
   if (javadummy) break  CONDITION2043;
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2033;
// $$$$$$$$ 
} // CONDITION2043 // @@@ end of alternative
CONDITION2044: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A11") )
   if (javadummy) break  CONDITION2044;
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2033;
// $$$$$$$$ 
} // CONDITION2044 // @@@ end of alternative
CONDITION2045: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A12") )
   if (javadummy) break  CONDITION2045;
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2033;
// $$$$$$$$ 
} // CONDITION2045 // @@@ end of alternative
CONDITION2046: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Y;
if (! current0 .Name
.equals( "PredefinedType_A13") )
   if (javadummy) break  CONDITION2046;
};
YyProcs.
NotCovered
(
new JavaStringValue( "var of this type" )
,
Y
);
Code = 
NodeFactory.NewNode(
"nyi"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2033;
// $$$$$$$$ 
} // CONDITION2046 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2033 N=2032
if (javadummy) break CONDITION2032;
} // CONDLIST2033 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2031;
// $$$$$$$$ 
} // CONDITION2032 // @@@ end of alternative
CONDITION2047: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative Pos2
JavaNode Pos2= null;
// DECLARE for alternative Id
JavaNode Id= null;
// DECLARE for alternative Def
JavaNode Def= null;
// DECLARE for alternative Pos
JavaNode Pos= null;
// DECLARE for alternative Z5
JavaNode Z5= null;
// DECLARE for alternative Z4
JavaNode Z4= null;
// DECLARE for alternative Z3
JavaNode Z3= null;
// DECLARE for alternative TypeId
JavaNode TypeId= null;
// DECLARE for alternative Z1
JavaNode Z1= null;
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "Type_A2") )
   if (javadummy) break  CONDITION2047;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 2048 (in cond 2047) *****
CONDLIST2048: // @@@ begin of alternative group
while(javadummy) {
CONDITION2049: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "ReferencedType_A1") )
   if (javadummy) break  CONDITION2049;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Z1 --- JJ.M4
Z1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to TypeId --- JJ.M4
TypeId = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to Z3 --- JJ.M4
Z3 = current1 ;
current1 = kurrent0.Child1[3];
//assign current1 to Z4 --- JJ.M4
Z4 = current1 ;
current1 = kurrent0.Child1[4];
//assign current1 to Z5 --- JJ.M4
Z5 = current1 ;
} //)) children level 1
};
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(TypeId);
//assign current0 to Pos --- JJ.M4
Pos = current0 ;
};
// ***** begin condlist 2050 (in cond 2049) *****
CONDLIST2050: // @@@ begin of alternative group
while(javadummy) {
CONDITION2051: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ReferencedType_A1_M1")
if (javadummy) break CONDITION2051;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2050;
// $$$$$$$$ 
} // CONDITION2051 // @@@ end of alternative
CONDITION2052: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z1;
if (current0.Name
!= "OneOf-ReferencedType_A1_M1")
if (javadummy) break CONDITION2052;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "qualified id" )
,
Z1
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2050;
// $$$$$$$$ 
} // CONDITION2052 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2050 N=2049
if (javadummy) break CONDITION2049;
} // CONDLIST2050 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 2053 (in cond 2049) *****
CONDLIST2053: // @@@ begin of alternative group
while(javadummy) {
CONDITION2054: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z3;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ReferencedType_A1_M3")
if (javadummy) break CONDITION2054;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2053;
// $$$$$$$$ 
} // CONDITION2054 // @@@ end of alternative
CONDITION2055: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z3;
if (current0.Name
!= "OneOf-ReferencedType_A1_M3")
if (javadummy) break CONDITION2055;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "param list" )
,
Z3
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2053;
// $$$$$$$$ 
} // CONDITION2055 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2053 N=2049
if (javadummy) break CONDITION2049;
} // CONDLIST2053 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 2056 (in cond 2049) *****
CONDLIST2056: // @@@ begin of alternative group
while(javadummy) {
CONDITION2057: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z4;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ReferencedType_A1_M4")
if (javadummy) break CONDITION2057;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2056;
// $$$$$$$$ 
} // CONDITION2057 // @@@ end of alternative
CONDITION2058: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z4;
if (current0.Name
!= "OneOf-ReferencedType_A1_M4")
if (javadummy) break CONDITION2058;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "type param list" )
,
Z4
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2056;
// $$$$$$$$ 
} // CONDITION2058 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2056 N=2049
if (javadummy) break CONDITION2049;
} // CONDLIST2056 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 2059 (in cond 2049) *****
CONDLIST2059: // @@@ begin of alternative group
while(javadummy) {
CONDITION2060: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z5;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-ReferencedType_A1_M5")
if (javadummy) break CONDITION2060;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2059;
// $$$$$$$$ 
} // CONDITION2060 // @@@ end of alternative
CONDITION2061: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Z5;
if (current0.Name
!= "OneOf-ReferencedType_A1_M5")
if (javadummy) break CONDITION2061;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "extended field ref" )
,
Z5
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2059;
// $$$$$$$$ 
} // CONDITION2061 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2059 N=2049
if (javadummy) break CONDITION2049;
} // CONDLIST2059 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
GloballyDefined
(
TypeId
,
Pos
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Def --- JJ.M4
Def = current0 ;
}
// ***** begin condlist 2062 (in cond 2049) *****
CONDLIST2062: // @@@ begin of alternative group
while(javadummy) {
CONDITION2063: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "recordtype") )
   if (javadummy) break  CONDITION2063;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
current1 = kurrent0.Child1[2];
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2062;
// $$$$$$$$ 
} // CONDITION2063 // @@@ end of alternative
CONDITION2064: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = Def;
if (! current0 .Name
.equals( "componenttype") )
   if (javadummy) break  CONDITION2064;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
current1 = kurrent0.Child1[1];
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2062;
// $$$$$$$$ 
} // CONDITION2064 // @@@ end of alternative
CONDITION2065: // @@@ begin of alternative
while(javadummy) {
YyProcs.
ErrorI
(
new JavaStringValue( "'" )
,
TypeId
,
new JavaStringValue( "' is not allowed as type" )
,
Pos
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2062;
// $$$$$$$$ 
} // CONDITION2065 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2062 N=2049
if (javadummy) break CONDITION2049;
} // CONDLIST2062 @@@ end of alternative group
// *** CONTINUE ***
YyProcs.
ExtractId
(
X2
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Id --- JJ.M4
Id = current0 ;
}
{
JavaNode current0 = 
 JavaLib.rtsGetSourcePos(Id);
//assign current0 to Pos2 --- JJ.M4
Pos2 = current0 ;
};
YyProcs.
DefineLocalVar
(
Id
,
NodeFactory.NewNode(
"tp_referenced"
, new JavaNode [] {
Def
}
)
,
Pos2
);
Code = 
NodeFactory.NewNode(
"stmt_declarereferenced"
, new JavaNode [] {
Id
,
TypeId
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2048;
// $$$$$$$$ 
} // CONDITION2049 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2048 N=2047
if (javadummy) break CONDITION2047;
} // CONDLIST2048 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2031;
// $$$$$$$$ 
} // CONDITION2047 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2031 N=2030
if (javadummy) break CONDITION2030;
} // CONDLIST2031 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2029;
// $$$$$$$$ 
} // CONDITION2030 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2029 N=2028
if (javadummy) break CONDITION2028;
} // CONDLIST2029 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2027;
// $$$$$$$$ 
} // CONDITION2028 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2027 N=2026
if (javadummy) break CONDITION2026;
} // CONDLIST2027 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION2026
// failed:
JavaLib.rtsAllAlternativesFailed("DeclareLocalVar");
}



public
static
void
ExtractId(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc X
JavaNode X = null;
// DECLARE for proc X2
JavaNode X2 = null;
// DECLARE for proc X1
JavaNode X1 = null;
// DECLARE for proc XX2
JavaNode XX2 = null;
// DECLARE for proc XX1
JavaNode XX1 = null;
// DECLARE for proc Id
JavaNode Id = null;
CONDITION2066:
while(javadummy) {
// ***** begin condlist 2067 (in cond 2066) *****
CONDLIST2067: // @@@ begin of alternative group
while(javadummy) {
CONDITION2068: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to X --- JJ.M4
X = current0 ;
};
// ***** begin condlist 2069 (in cond 2068) *****
CONDLIST2069: // @@@ begin of alternative group
while(javadummy) {
CONDITION2070: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "VarList_A1") )
   if (javadummy) break  CONDITION2070;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to X1 --- JJ.M4
X1 = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to X2 --- JJ.M4
X2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 2071 (in cond 2070) *****
CONDLIST2071: // @@@ begin of alternative group
while(javadummy) {
CONDITION2072: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X1;
if (! current0 .Name
.equals( "SingleVarInstance_A1") )
   if (javadummy) break  CONDITION2072;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to Id --- JJ.M4
Id = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to XX1 --- JJ.M4
XX1 = current1 ;
current1 = kurrent0.Child1[2];
//assign current1 to XX2 --- JJ.M4
XX2 = current1 ;
} //)) children level 1
};
// ***** begin condlist 2073 (in cond 2072) *****
CONDLIST2073: // @@@ begin of alternative group
while(javadummy) {
CONDITION2074: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX1;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-SingleVarInstance_A1_M2")
if (javadummy) break CONDITION2074;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2073;
// $$$$$$$$ 
} // CONDITION2074 // @@@ end of alternative
CONDITION2075: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative ArrayDef
JavaNode ArrayDef= null;
{
JavaNode current0 = XX1;
if (current0.Name
!= "OneOf-SingleVarInstance_A1_M2")
if (javadummy) break CONDITION2075;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to ArrayDef --- JJ.M4
ArrayDef = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "declaration of array variables" )
,
ArrayDef
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2073;
// $$$$$$$$ 
} // CONDITION2075 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2073 N=2072
if (javadummy) break CONDITION2072;
} // CONDLIST2073 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 2076 (in cond 2072) *****
CONDLIST2076: // @@@ begin of alternative group
while(javadummy) {
CONDITION2077: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX2;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-SingleVarInstance_A1_M3")
if (javadummy) break CONDITION2077;
{ //(( children level 1
} //)) children level 1
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2076;
// $$$$$$$$ 
} // CONDITION2077 // @@@ end of alternative
CONDITION2078: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative Init
JavaNode Init= null;
{
JavaNode current0 = XX2;
if (current0.Name
!= "OneOf-SingleVarInstance_A1_M3")
if (javadummy) break CONDITION2078;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to Init --- JJ.M4
Init = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "var declaration with initialization" )
,
Init
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2076;
// $$$$$$$$ 
} // CONDITION2078 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2076 N=2072
if (javadummy) break CONDITION2072;
} // CONDLIST2076 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2071;
// $$$$$$$$ 
} // CONDITION2072 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2071 N=2070
if (javadummy) break CONDITION2070;
} // CONDLIST2071 @@@ end of alternative group
// *** CONTINUE ***
// ***** begin condlist 2079 (in cond 2070) *****
CONDLIST2079: // @@@ begin of alternative group
while(javadummy) {
CONDITION2080: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X2;
if (current0.Name
!= "NilOf-VarList_A1_M2")
if (javadummy) break CONDITION2080;
};
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2079;
// $$$$$$$$ 
} // CONDITION2080 // @@@ end of alternative
CONDITION2081: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative T
JavaNode T= null;
// DECLARE for alternative H
JavaNode H= null;
{
JavaNode current0 = X2;
if (current0.Name
!= "SeqOf-VarList_A1_M2")
if (javadummy) break CONDITION2081;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to H --- JJ.M4
H = current1 ;
current1 = current0.Child1[1];
//assign current1 to T --- JJ.M4
T = current1 ;
} //)) children level 1
};
YyProcs.
NotCovered
(
new JavaStringValue( "multiple var declaration" )
,
H
);
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2079;
// $$$$$$$$ 
} // CONDITION2081 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2079 N=2070
if (javadummy) break CONDITION2070;
} // CONDLIST2079 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2069;
// $$$$$$$$ 
} // CONDITION2070 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2069 N=2068
if (javadummy) break CONDITION2068;
} // CONDLIST2069 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Id
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2067;
// $$$$$$$$ 
} // CONDITION2068 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2067 N=2066
if (javadummy) break CONDITION2066;
} // CONDLIST2067 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION2066
// failed:
JavaLib.rtsAllAlternativesFailed("ExtractId");
}



public
static
void
ZzTrafo_BODY(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc BODY
JavaNode BODY = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION2082:
while(javadummy) {
// ***** begin condlist 2083 (in cond 2082) *****
CONDLIST2083: // @@@ begin of alternative group
while(javadummy) {
CONDITION2084: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to BODY --- JJ.M4
BODY = current0 ;
};
// ***** begin condlist 2085 (in cond 2084) *****
CONDLIST2085: // @@@ begin of alternative group
while(javadummy) {
CONDITION2086: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative X
JavaNode X= null;
// DECLARE for alternative XX
JavaNode XX= null;
// DECLARE for alternative LIST
JavaNode LIST= null;
{
JavaNode current0 = BODY;
if (current0.Name
!= "OneOf-StatementBlock_A1_M3")
if (javadummy) break CONDITION2086;
{ //(( children level 1
JavaNode current1 =
   current0.Child1[0];
//assign current1 to X --- JJ.M4
X = current1 ;
} //)) children level 1
};
// ***** begin condlist 2087 (in cond 2086) *****
CONDLIST2087: // @@@ begin of alternative group
while(javadummy) {
CONDITION2088: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = X;
if (! current0 .Name
.equals( "StatementBlock_A1_M3_A1") )
   if (javadummy) break  CONDITION2088;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to XX --- JJ.M4
XX = current1 ;
} //)) children level 1
};
// ***** begin condlist 2089 (in cond 2088) *****
CONDLIST2089: // @@@ begin of alternative group
while(javadummy) {
CONDITION2090: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = XX;
if (! current0 .Name
.equals( "FunctionStatementList_A1") )
   if (javadummy) break  CONDITION2090;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to LIST --- JJ.M4
LIST = current1 ;
} //)) children level 1
};
YyProcs.
ZzTrafo_FunctionStatements
(
LIST
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Code --- JJ.M4
Code = current0 ;
}
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2089;
// $$$$$$$$ 
} // CONDITION2090 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2089 N=2088
if (javadummy) break CONDITION2088;
} // CONDLIST2089 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2087;
// $$$$$$$$ 
} // CONDITION2088 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2087 N=2086
if (javadummy) break CONDITION2086;
} // CONDLIST2087 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2085;
// $$$$$$$$ 
} // CONDITION2086 // @@@ end of alternative
CONDITION2091: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = BODY;
if (current0.Name
// fiwi-noneof 6
!= "NoneOf-StatementBlock_A1_M3")
if (javadummy) break CONDITION2091;
{ //(( children level 1
} //)) children level 1
};
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2085;
// $$$$$$$$ 
} // CONDITION2091 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2085 N=2084
if (javadummy) break CONDITION2084;
} // CONDLIST2085 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2083;
// $$$$$$$$ 
} // CONDITION2084 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2083 N=2082
if (javadummy) break CONDITION2082;
} // CONDLIST2083 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION2082
// failed:
JavaLib.rtsAllAlternativesFailed("ZzTrafo_BODY");
}



public
static
void
ZzTrafo_FunctionStatements(

JavaNode yy_inparam_0
)
{
JavaNode yy_outparam_0 = null;
// DECLARE for proc LIST
JavaNode LIST = null;
// DECLARE for proc Code
JavaNode Code = null;
CONDITION2092:
while(javadummy) {
// ***** begin condlist 2093 (in cond 2092) *****
CONDLIST2093: // @@@ begin of alternative group
while(javadummy) {
CONDITION2094: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = yy_inparam_0;
//assign current0 to LIST --- JJ.M4
LIST = current0 ;
};
// ***** begin condlist 2095 (in cond 2094) *****
CONDLIST2095: // @@@ begin of alternative group
while(javadummy) {
CONDITION2096: // @@@ begin of alternative
while(javadummy) {
// DECLARE for alternative TAIL
JavaNode TAIL= null;
// DECLARE for alternative HEAD
JavaNode HEAD= null;
// DECLARE for alternative ResTail
JavaNode ResTail= null;
// DECLARE for alternative Res
JavaNode Res= null;
// DECLARE for alternative Semi
JavaNode Semi= null;
// DECLARE for alternative FunctionSt
JavaNode FunctionSt= null;
{
JavaNode current0 = LIST;
if (current0.Name
!= "SeqOf-FunctionStatementList_A1_M1")
if (javadummy) break CONDITION2096;
{ //(( children level 1
JavaNode current1 =
   current0 .Child1[0];
//assign current1 to HEAD --- JJ.M4
HEAD = current1 ;
current1 = current0.Child1[1];
//assign current1 to TAIL --- JJ.M4
TAIL = current1 ;
} //)) children level 1
};
// ***** begin condlist 2097 (in cond 2096) *****
CONDLIST2097: // @@@ begin of alternative group
while(javadummy) {
CONDITION2098: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = HEAD;
if (! current0 .Name
.equals( "FunctionStatementList_A1_M1_A1") )
   if (javadummy) break  CONDITION2098;
{ //(( children level 1
JavaNode current1 =
   current0 . Child1[0];
JavaNode kurrent0 = current0;
//assign current1 to FunctionSt --- JJ.M4
FunctionSt = current1 ;
current1 = kurrent0.Child1[1];
//assign current1 to Semi --- JJ.M4
Semi = current1 ;
} //)) children level 1
};
YyProcs.
Trafo_FunctionStatement
(
FunctionSt
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to Res --- JJ.M4
Res = current0 ;
}
YyProcs.
ZzTrafo_FunctionStatements
(
TAIL
);
{
JavaNode current0 = 
 JavaLib.yyoutvalue1;
//assign current0 to ResTail --- JJ.M4
ResTail = current0 ;
}
Code = 
NodeFactory.NewNode(
"stmt_seq"
, new JavaNode [] {
Res
,
ResTail
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2097;
// $$$$$$$$ 
} // CONDITION2098 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2097 N=2096
if (javadummy) break CONDITION2096;
} // CONDLIST2097 @@@ end of alternative group
// *** CONTINUE ***
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2095;
// $$$$$$$$ 
} // CONDITION2096 // @@@ end of alternative
CONDITION2099: // @@@ begin of alternative
while(javadummy) {
{
JavaNode current0 = LIST;
if (current0.Name
!= "NilOf-FunctionStatementList_A1_M1")
if (javadummy) break CONDITION2099;
};
Code = 
NodeFactory.NewNode(
"stmt_null"
, new JavaNode [] {
}
)
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2095;
// $$$$$$$$ 
} // CONDITION2099 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2095 N=2094
if (javadummy) break CONDITION2094;
} // CONDLIST2095 @@@ end of alternative group
// *** CONTINUE ***
yy_outparam_0 = 
Code
;
// $$$$$$$$ java success: this alternative matched 
if (javadummy) break CONDLIST2093;
// $$$$$$$$ 
} // CONDITION2094 // @@@ end of alternative
// $$$$$$$$ java failure: no alternative matched $$$$
// *** ESCAPE *** CondListIndex=2093 N=2092
if (javadummy) break CONDITION2092;
} // CONDLIST2093 @@@ end of alternative group
// *** CONTINUE ***
// succeeded:
JavaLib.yyoutvalue1 = yy_outparam_0;
if (javadummy) return;
} // CONDITION2092
// failed:
JavaLib.rtsAllAlternativesFailed("ZzTrafo_FunctionStatements");
}


}
