//
// GENERATED !
//
package Generated;
// GramGen 5-EGrammar

import Gently.*;
import Generated.*;

public class EGrammar
{

static Nonterm TTCN3Module = new Nonterm("TTCN3Module");
static Nonterm ModuleId = new Nonterm("ModuleId");
static Nonterm LanguageSpec = new Nonterm("LanguageSpec");
static Nonterm ModuleDefinitionsList = new Nonterm("ModuleDefinitionsList");
static Nonterm ModuleDefinition = new Nonterm("ModuleDefinition");
static Nonterm Visibility = new Nonterm("Visibility");
static Nonterm TypeDef = new Nonterm("TypeDef");
static Nonterm TypeDefBody = new Nonterm("TypeDefBody");
static Nonterm StructuredTypeDef = new Nonterm("StructuredTypeDef");
static Nonterm RecordDef = new Nonterm("RecordDef");
static Nonterm StructDefBody = new Nonterm("StructDefBody");
static Nonterm StructFieldDef = new Nonterm("StructFieldDef");
static Nonterm NestedTypeDef = new Nonterm("NestedTypeDef");
static Nonterm NestedRecordDef = new Nonterm("NestedRecordDef");
static Nonterm NestedUnionDef = new Nonterm("NestedUnionDef");
static Nonterm NestedSetDef = new Nonterm("NestedSetDef");
static Nonterm NestedRecordOfDef = new Nonterm("NestedRecordOfDef");
static Nonterm NestedSetOfDef = new Nonterm("NestedSetOfDef");
static Nonterm NestedEnumDef = new Nonterm("NestedEnumDef");
static Nonterm UnionDef = new Nonterm("UnionDef");
static Nonterm UnionDefBody = new Nonterm("UnionDefBody");
static Nonterm UnionFieldDef = new Nonterm("UnionFieldDef");
static Nonterm SetDef = new Nonterm("SetDef");
static Nonterm RecordOfDef = new Nonterm("RecordOfDef");
static Nonterm StructOfDefBody = new Nonterm("StructOfDefBody");
static Nonterm SetOfDef = new Nonterm("SetOfDef");
static Nonterm EnumDef = new Nonterm("EnumDef");
static Nonterm EnumerationList = new Nonterm("EnumerationList");
static Nonterm Enumeration = new Nonterm("Enumeration");
static Nonterm SubTypeDef = new Nonterm("SubTypeDef");
static Nonterm SubTypeSpec = new Nonterm("SubTypeSpec");
static Nonterm AllowedValuesSpec = new Nonterm("AllowedValuesSpec");
static Nonterm TemplateOrRange = new Nonterm("TemplateOrRange");
static Nonterm RangeDef = new Nonterm("RangeDef");
static Nonterm StringLength = new Nonterm("StringLength");
static Nonterm PortDef = new Nonterm("PortDef");
static Nonterm PortDefBody = new Nonterm("PortDefBody");
static Nonterm PortDefAttribs = new Nonterm("PortDefAttribs");
static Nonterm MessageAttribs = new Nonterm("MessageAttribs");
static Nonterm ConfigParamDef = new Nonterm("ConfigParamDef");
static Nonterm MapParamDef = new Nonterm("MapParamDef");
static Nonterm UnmapParamDef = new Nonterm("UnmapParamDef");
static Nonterm AddressDecl = new Nonterm("AddressDecl");
static Nonterm MessageList = new Nonterm("MessageList");
static Nonterm Direction = new Nonterm("Direction");
static Nonterm AllOrTypeList = new Nonterm("AllOrTypeList");
static Nonterm TypeList = new Nonterm("TypeList");
static Nonterm ProcedureAttribs = new Nonterm("ProcedureAttribs");
static Nonterm ProcedureList = new Nonterm("ProcedureList");
static Nonterm AllOrSignatureList = new Nonterm("AllOrSignatureList");
static Nonterm SignatureList = new Nonterm("SignatureList");
static Nonterm MixedAttribs = new Nonterm("MixedAttribs");
static Nonterm MixedList = new Nonterm("MixedList");
static Nonterm ProcOrTypeList = new Nonterm("ProcOrTypeList");
static Nonterm ProcOrType = new Nonterm("ProcOrType");
static Nonterm ComponentDef = new Nonterm("ComponentDef");
static Nonterm ComponentType = new Nonterm("ComponentType");
static Nonterm ComponentDefList = new Nonterm("ComponentDefList");
static Nonterm ComponentElementDef = new Nonterm("ComponentElementDef");
static Nonterm PortInstance = new Nonterm("PortInstance");
static Nonterm PortElement = new Nonterm("PortElement");
static Nonterm ConstDef = new Nonterm("ConstDef");
static Nonterm ConstList = new Nonterm("ConstList");
static Nonterm SingleConstDef = new Nonterm("SingleConstDef");
static Nonterm TemplateDef = new Nonterm("TemplateDef");
static Nonterm BaseTemplate = new Nonterm("BaseTemplate");
static Nonterm DerivedDef = new Nonterm("DerivedDef");
static Nonterm TemplateOrValueFormalParList = new Nonterm("TemplateOrValueFormalParList");
static Nonterm TemplateOrValueFormalPar = new Nonterm("TemplateOrValueFormalPar");
static Nonterm TemplateBody = new Nonterm("TemplateBody");
static Nonterm SimpleSpec = new Nonterm("SimpleSpec");
static Nonterm SimpleTemplateSpec = new Nonterm("SimpleTemplateSpec");
static Nonterm SingleTemplateExpression = new Nonterm("SingleTemplateExpression");
static Nonterm FieldSpecList = new Nonterm("FieldSpecList");
static Nonterm FieldSpec = new Nonterm("FieldSpec");
static Nonterm FieldReference = new Nonterm("FieldReference");
static Nonterm StructFieldRef = new Nonterm("StructFieldRef");
static Nonterm ArrayOrBitRef = new Nonterm("ArrayOrBitRef");
static Nonterm FieldOrBitNumber = new Nonterm("FieldOrBitNumber");
static Nonterm ArrayValueOrAttrib = new Nonterm("ArrayValueOrAttrib");
static Nonterm ArrayElementSpecList = new Nonterm("ArrayElementSpecList");
static Nonterm ArrayElementSpec = new Nonterm("ArrayElementSpec");
static Nonterm MatchingSymbol = new Nonterm("MatchingSymbol");
static Nonterm ExtraMatchingAttributes = new Nonterm("ExtraMatchingAttributes");
static Nonterm BitStringMatch = new Nonterm("BitStringMatch");
static Nonterm HexStringMatch = new Nonterm("HexStringMatch");
static Nonterm OctetStringMatch = new Nonterm("OctetStringMatch");
static Nonterm CharStringMatch = new Nonterm("CharStringMatch");
static Nonterm PatternParticle = new Nonterm("PatternParticle");
static Nonterm Pattern = new Nonterm("Pattern");
static Nonterm Complement = new Nonterm("Complement");
static Nonterm SubsetMatch = new Nonterm("SubsetMatch");
static Nonterm SupersetMatch = new Nonterm("SupersetMatch");
static Nonterm PermutationMatch = new Nonterm("PermutationMatch");
static Nonterm PermutationList = new Nonterm("PermutationList");
static Nonterm TemplateList = new Nonterm("TemplateList");
static Nonterm WildcardLengthMatch = new Nonterm("WildcardLengthMatch");
static Nonterm Range = new Nonterm("Range");
static Nonterm Bound = new Nonterm("Bound");
static Nonterm TemplateInstanceAssignment = new Nonterm("TemplateInstanceAssignment");
static Nonterm TemplateRefWithParList = new Nonterm("TemplateRefWithParList");
static Nonterm InLineTemplate = new Nonterm("InLineTemplate");
static Nonterm DerivedRefWithParList = new Nonterm("DerivedRefWithParList");
static Nonterm TemplateActualParList = new Nonterm("TemplateActualParList");
static Nonterm TemplateInstanceActualPar = new Nonterm("TemplateInstanceActualPar");
static Nonterm TemplateOps = new Nonterm("TemplateOps");
static Nonterm MatchOp = new Nonterm("MatchOp");
static Nonterm ValueofOp = new Nonterm("ValueofOp");
static Nonterm FunctionDef = new Nonterm("FunctionDef");
static Nonterm FunctionFormalParList = new Nonterm("FunctionFormalParList");
static Nonterm FunctionFormalPar = new Nonterm("FunctionFormalPar");
static Nonterm ReturnType = new Nonterm("ReturnType");
static Nonterm RunsOnSpec = new Nonterm("RunsOnSpec");
static Nonterm StatementBlock = new Nonterm("StatementBlock");
static Nonterm FunctionDefList = new Nonterm("FunctionDefList");
static Nonterm FunctionStatementList = new Nonterm("FunctionStatementList");
static Nonterm FunctionLocalInst = new Nonterm("FunctionLocalInst");
static Nonterm FunctionLocalDef = new Nonterm("FunctionLocalDef");
static Nonterm FunctionStatement = new Nonterm("FunctionStatement");
static Nonterm FunctionInstance = new Nonterm("FunctionInstance");
static Nonterm FunctionRef = new Nonterm("FunctionRef");
static Nonterm FunctionActualParList = new Nonterm("FunctionActualParList");
static Nonterm FunctionActualPar = new Nonterm("FunctionActualPar");
static Nonterm FunctionActualParAssignment = new Nonterm("FunctionActualParAssignment");
static Nonterm ArrayIdentifierRefAssignment = new Nonterm("ArrayIdentifierRefAssignment");
static Nonterm SignatureDef = new Nonterm("SignatureDef");
static Nonterm SignatureFormalParList = new Nonterm("SignatureFormalParList");
static Nonterm ExceptionSpec = new Nonterm("ExceptionSpec");
static Nonterm Signature = new Nonterm("Signature");
static Nonterm TestcaseDef = new Nonterm("TestcaseDef");
static Nonterm ConfigSpec = new Nonterm("ConfigSpec");
static Nonterm SystemSpec = new Nonterm("SystemSpec");
static Nonterm TestcaseInstance = new Nonterm("TestcaseInstance");
static Nonterm TestcaseActualParList = new Nonterm("TestcaseActualParList");
static Nonterm AltstepDef = new Nonterm("AltstepDef");
static Nonterm AltstepLocalDefList = new Nonterm("AltstepLocalDefList");
static Nonterm AltstepLocalDef = new Nonterm("AltstepLocalDef");
static Nonterm AltstepInstance = new Nonterm("AltstepInstance");
static Nonterm ImportDef = new Nonterm("ImportDef");
static Nonterm AllWithExcepts = new Nonterm("AllWithExcepts");
static Nonterm ExceptsDef = new Nonterm("ExceptsDef");
static Nonterm ExceptSpec = new Nonterm("ExceptSpec");
static Nonterm ExceptElement = new Nonterm("ExceptElement");
static Nonterm ExceptGroupSpec = new Nonterm("ExceptGroupSpec");
static Nonterm IdentifierListOrAll = new Nonterm("IdentifierListOrAll");
static Nonterm ExceptTypeDefSpec = new Nonterm("ExceptTypeDefSpec");
static Nonterm ExceptTemplateSpec = new Nonterm("ExceptTemplateSpec");
static Nonterm ExceptConstSpec = new Nonterm("ExceptConstSpec");
static Nonterm ExceptTestcaseSpec = new Nonterm("ExceptTestcaseSpec");
static Nonterm ExceptAltstepSpec = new Nonterm("ExceptAltstepSpec");
static Nonterm ExceptFunctionSpec = new Nonterm("ExceptFunctionSpec");
static Nonterm ExceptSignatureSpec = new Nonterm("ExceptSignatureSpec");
static Nonterm ExceptModuleParSpec = new Nonterm("ExceptModuleParSpec");
static Nonterm ImportSpec = new Nonterm("ImportSpec");
static Nonterm ImportElement = new Nonterm("ImportElement");
static Nonterm ImportFromSpec = new Nonterm("ImportFromSpec");
static Nonterm ImportGroupSpec = new Nonterm("ImportGroupSpec");
static Nonterm GroupRefListWithExcept = new Nonterm("GroupRefListWithExcept");
static Nonterm AllGroupsWithExcept = new Nonterm("AllGroupsWithExcept");
static Nonterm QualifiedIdentifierWithExcept = new Nonterm("QualifiedIdentifierWithExcept");
static Nonterm IdentifierListOrAllWithExcept = new Nonterm("IdentifierListOrAllWithExcept");
static Nonterm ImportTypeDefSpec = new Nonterm("ImportTypeDefSpec");
static Nonterm AllWithExcept = new Nonterm("AllWithExcept");
static Nonterm ImportTemplateSpec = new Nonterm("ImportTemplateSpec");
static Nonterm ImportConstSpec = new Nonterm("ImportConstSpec");
static Nonterm ImportAltstepSpec = new Nonterm("ImportAltstepSpec");
static Nonterm ImportTestcaseSpec = new Nonterm("ImportTestcaseSpec");
static Nonterm ImportFunctionSpec = new Nonterm("ImportFunctionSpec");
static Nonterm ImportSignatureSpec = new Nonterm("ImportSignatureSpec");
static Nonterm ImportModuleParSpec = new Nonterm("ImportModuleParSpec");
static Nonterm ImportImportSpec = new Nonterm("ImportImportSpec");
static Nonterm GroupDef = new Nonterm("GroupDef");
static Nonterm ExtFunctionDef = new Nonterm("ExtFunctionDef");
static Nonterm ExtConstDef = new Nonterm("ExtConstDef");
static Nonterm ModuleParDef = new Nonterm("ModuleParDef");
static Nonterm MultitypedModuleParList = new Nonterm("MultitypedModuleParList");
static Nonterm ModulePar = new Nonterm("ModulePar");
static Nonterm ModuleParList = new Nonterm("ModuleParList");
static Nonterm FriendModuleDef = new Nonterm("FriendModuleDef");
static Nonterm ModuleControlPart = new Nonterm("ModuleControlPart");
static Nonterm ModuleControlBody = new Nonterm("ModuleControlBody");
static Nonterm ControlStatementOrDefList = new Nonterm("ControlStatementOrDefList");
static Nonterm ControlStatementOrDef = new Nonterm("ControlStatementOrDef");
static Nonterm ControlStatement = new Nonterm("ControlStatement");
static Nonterm VarInstance = new Nonterm("VarInstance");
static Nonterm VarList = new Nonterm("VarList");
static Nonterm SingleVarInstance = new Nonterm("SingleVarInstance");
static Nonterm TempVarList = new Nonterm("TempVarList");
static Nonterm SingleTempVarInstance = new Nonterm("SingleTempVarInstance");
static Nonterm VariableRef = new Nonterm("VariableRef");
static Nonterm TimerInstance = new Nonterm("TimerInstance");
static Nonterm ArrayIdentifierRef = new Nonterm("ArrayIdentifierRef");
static Nonterm ConfigurationStatements = new Nonterm("ConfigurationStatements");
static Nonterm ConfigurationOps = new Nonterm("ConfigurationOps");
static Nonterm CreateOp = new Nonterm("CreateOp");
static Nonterm DoneStatement = new Nonterm("DoneStatement");
static Nonterm KilledStatement = new Nonterm("KilledStatement");
static Nonterm ComponentId = new Nonterm("ComponentId");
static Nonterm RunningOp = new Nonterm("RunningOp");
static Nonterm AliveOp = new Nonterm("AliveOp");
static Nonterm ConnectStatement = new Nonterm("ConnectStatement");
static Nonterm SingleConnectionSpec = new Nonterm("SingleConnectionSpec");
static Nonterm PortRef = new Nonterm("PortRef");
static Nonterm ComponentRef = new Nonterm("ComponentRef");
static Nonterm ComponentRefAssignment = new Nonterm("ComponentRefAssignment");
static Nonterm DisconnectStatement = new Nonterm("DisconnectStatement");
static Nonterm AllConnectionsSpec = new Nonterm("AllConnectionsSpec");
static Nonterm AllPortsSpec = new Nonterm("AllPortsSpec");
static Nonterm AllCompsAllPortsSpec = new Nonterm("AllCompsAllPortsSpec");
static Nonterm MapStatement = new Nonterm("MapStatement");
static Nonterm ParamClause = new Nonterm("ParamClause");
static Nonterm UnmapStatement = new Nonterm("UnmapStatement");
static Nonterm StartTCStatement = new Nonterm("StartTCStatement");
static Nonterm StopTCStatement = new Nonterm("StopTCStatement");
static Nonterm ComponentReferenceOrLiteral = new Nonterm("ComponentReferenceOrLiteral");
static Nonterm KillTCStatement = new Nonterm("KillTCStatement");
static Nonterm ComponentOrDefaultReference = new Nonterm("ComponentOrDefaultReference");
static Nonterm CommunicationStatements = new Nonterm("CommunicationStatements");
static Nonterm SendStatement = new Nonterm("SendStatement");
static Nonterm PortSendOp = new Nonterm("PortSendOp");
static Nonterm ToClause = new Nonterm("ToClause");
static Nonterm AddressRefList = new Nonterm("AddressRefList");
static Nonterm CallStatement = new Nonterm("CallStatement");
static Nonterm PortCallOp = new Nonterm("PortCallOp");
static Nonterm CallParameters = new Nonterm("CallParameters");
static Nonterm CallTimerValue = new Nonterm("CallTimerValue");
static Nonterm PortCallBody = new Nonterm("PortCallBody");
static Nonterm CallBodyStatementList = new Nonterm("CallBodyStatementList");
static Nonterm CallBodyStatement = new Nonterm("CallBodyStatement");
static Nonterm CallBodyGuard = new Nonterm("CallBodyGuard");
static Nonterm CallBodyOps = new Nonterm("CallBodyOps");
static Nonterm ReplyStatement = new Nonterm("ReplyStatement");
static Nonterm PortReplyOp = new Nonterm("PortReplyOp");
static Nonterm ReplyValue = new Nonterm("ReplyValue");
static Nonterm RaiseStatement = new Nonterm("RaiseStatement");
static Nonterm PortRaiseOp = new Nonterm("PortRaiseOp");
static Nonterm ReceiveStatement = new Nonterm("ReceiveStatement");
static Nonterm PortOrAny = new Nonterm("PortOrAny");
static Nonterm PortReceiveOp = new Nonterm("PortReceiveOp");
static Nonterm FromClause = new Nonterm("FromClause");
static Nonterm PortRedirect = new Nonterm("PortRedirect");
static Nonterm ValueSpec = new Nonterm("ValueSpec");
static Nonterm SingleValueSpec = new Nonterm("SingleValueSpec");
static Nonterm SenderSpec = new Nonterm("SenderSpec");
static Nonterm TriggerStatement = new Nonterm("TriggerStatement");
static Nonterm PortTriggerOp = new Nonterm("PortTriggerOp");
static Nonterm GetCallStatement = new Nonterm("GetCallStatement");
static Nonterm PortGetCallOp = new Nonterm("PortGetCallOp");
static Nonterm PortRedirectWithParam = new Nonterm("PortRedirectWithParam");
static Nonterm RedirectWithParamSpec = new Nonterm("RedirectWithParamSpec");
static Nonterm ParamSpec = new Nonterm("ParamSpec");
static Nonterm ParamAssignmentList = new Nonterm("ParamAssignmentList");
static Nonterm AssignmentList = new Nonterm("AssignmentList");
static Nonterm VariableAssignment = new Nonterm("VariableAssignment");
static Nonterm VariableList = new Nonterm("VariableList");
static Nonterm VariableEntry = new Nonterm("VariableEntry");
static Nonterm GetReplyStatement = new Nonterm("GetReplyStatement");
static Nonterm PortGetReplyOp = new Nonterm("PortGetReplyOp");
static Nonterm PortRedirectWithValueAndParam = new Nonterm("PortRedirectWithValueAndParam");
static Nonterm RedirectWithValueAndParamSpec = new Nonterm("RedirectWithValueAndParamSpec");
static Nonterm ValueMatchSpec = new Nonterm("ValueMatchSpec");
static Nonterm CheckStatement = new Nonterm("CheckStatement");
static Nonterm PortCheckOp = new Nonterm("PortCheckOp");
static Nonterm CheckParameter = new Nonterm("CheckParameter");
static Nonterm FromClausePresent = new Nonterm("FromClausePresent");
static Nonterm RedirectPresent = new Nonterm("RedirectPresent");
static Nonterm CheckPortOpsPresent = new Nonterm("CheckPortOpsPresent");
static Nonterm CatchStatement = new Nonterm("CatchStatement");
static Nonterm PortCatchOp = new Nonterm("PortCatchOp");
static Nonterm CatchOpParameter = new Nonterm("CatchOpParameter");
static Nonterm ClearStatement = new Nonterm("ClearStatement");
static Nonterm PortOrAll = new Nonterm("PortOrAll");
static Nonterm StartStatement = new Nonterm("StartStatement");
static Nonterm StopStatement = new Nonterm("StopStatement");
static Nonterm HaltStatement = new Nonterm("HaltStatement");
static Nonterm CheckStateStatement = new Nonterm("CheckStateStatement");
static Nonterm PortOrAllAny = new Nonterm("PortOrAllAny");
static Nonterm TimerStatements = new Nonterm("TimerStatements");
static Nonterm TimerOps = new Nonterm("TimerOps");
static Nonterm StartTimerStatement = new Nonterm("StartTimerStatement");
static Nonterm StopTimerStatement = new Nonterm("StopTimerStatement");
static Nonterm TimerRefOrAll = new Nonterm("TimerRefOrAll");
static Nonterm ReadTimerOp = new Nonterm("ReadTimerOp");
static Nonterm RunningTimerOp = new Nonterm("RunningTimerOp");
static Nonterm TimeoutStatement = new Nonterm("TimeoutStatement");
static Nonterm TimerRefOrAny = new Nonterm("TimerRefOrAny");
static Nonterm TestcaseOperation = new Nonterm("TestcaseOperation");
static Nonterm Type = new Nonterm("Type");
static Nonterm PredefinedType = new Nonterm("PredefinedType");
static Nonterm UniversalCharString = new Nonterm("UniversalCharString");
static Nonterm ReferencedType = new Nonterm("ReferencedType");
static Nonterm ArrayDef = new Nonterm("ArrayDef");
static Nonterm Value = new Nonterm("Value");
static Nonterm PredefinedValue = new Nonterm("PredefinedValue");
static Nonterm BooleanValue = new Nonterm("BooleanValue");
static Nonterm VerdictTypeValue = new Nonterm("VerdictTypeValue");
static Nonterm CharStringValue = new Nonterm("CharStringValue");
static Nonterm Quadruple = new Nonterm("Quadruple");
static Nonterm FloatValue = new Nonterm("FloatValue");
static Nonterm ReferencedValue = new Nonterm("ReferencedValue");
static Nonterm Number = new Nonterm("Number");
static Nonterm Bstring = new Nonterm("Bstring");
static Nonterm Hstring = new Nonterm("Hstring");
static Nonterm Ostring = new Nonterm("Ostring");
static Nonterm Cstring = new Nonterm("Cstring");
static Token Identifier = new Token("Identifier", YyTokens.Identifier);
static Nonterm FreeText = new Nonterm("FreeText");
static Nonterm FormalValuePar = new Nonterm("FormalValuePar");
static Nonterm FormalPortPar = new Nonterm("FormalPortPar");
static Nonterm FormalTimerPar = new Nonterm("FormalTimerPar");
static Nonterm FormalTemplatePar = new Nonterm("FormalTemplatePar");
static Nonterm RestrictedTemplate = new Nonterm("RestrictedTemplate");
static Nonterm TemplateRestriction = new Nonterm("TemplateRestriction");
static Nonterm WithStatement = new Nonterm("WithStatement");
static Nonterm WithAttribList = new Nonterm("WithAttribList");
static Nonterm MultiWithAttrib = new Nonterm("MultiWithAttrib");
static Nonterm SingleWithAttrib = new Nonterm("SingleWithAttrib");
static Nonterm AttribKeyword = new Nonterm("AttribKeyword");
static Nonterm AttribQualifier = new Nonterm("AttribQualifier");
static Nonterm DefOrFieldRefList = new Nonterm("DefOrFieldRefList");
static Nonterm DefOrFieldRef = new Nonterm("DefOrFieldRef");
static Nonterm QualifiedIdentifier = new Nonterm("QualifiedIdentifier");
static Nonterm AllRef = new Nonterm("AllRef");
static Nonterm BehaviourStatements = new Nonterm("BehaviourStatements");
static Nonterm SetLocalVerdict = new Nonterm("SetLocalVerdict");
static Nonterm SUTStatements = new Nonterm("SUTStatements");
static Nonterm ActionText = new Nonterm("ActionText");
static Nonterm ReturnStatement = new Nonterm("ReturnStatement");
static Nonterm AltConstruct = new Nonterm("AltConstruct");
static Nonterm AltGuardList = new Nonterm("AltGuardList");
static Nonterm GuardStatement = new Nonterm("GuardStatement");
static Nonterm ElseStatement = new Nonterm("ElseStatement");
static Nonterm AltGuardChar = new Nonterm("AltGuardChar");
static Nonterm GuardOp = new Nonterm("GuardOp");
static Nonterm InterleavedConstruct = new Nonterm("InterleavedConstruct");
static Nonterm InterleavedGuardList = new Nonterm("InterleavedGuardList");
static Nonterm InterleavedGuardElement = new Nonterm("InterleavedGuardElement");
static Nonterm InterleavedGuard = new Nonterm("InterleavedGuard");
static Nonterm LabelStatement = new Nonterm("LabelStatement");
static Nonterm GotoStatement = new Nonterm("GotoStatement");
static Nonterm ActivateOp = new Nonterm("ActivateOp");
static Nonterm DeactivateStatement = new Nonterm("DeactivateStatement");
static Nonterm BasicStatements = new Nonterm("BasicStatements");
static Nonterm Expression = new Nonterm("Expression");
static Nonterm CompoundExpression = new Nonterm("CompoundExpression");
static Nonterm FieldExpressionList = new Nonterm("FieldExpressionList");
static Nonterm FieldExpressionSpec = new Nonterm("FieldExpressionSpec");
static Nonterm ArrayExpression = new Nonterm("ArrayExpression");
static Nonterm ArrayElementExpressionList = new Nonterm("ArrayElementExpressionList");
static Nonterm NotUsedOrExpression = new Nonterm("NotUsedOrExpression");
static Nonterm ConstantExpression = new Nonterm("ConstantExpression");
static Nonterm BooleanExpression = new Nonterm("BooleanExpression");
static Nonterm CompoundConstExpression = new Nonterm("CompoundConstExpression");
static Nonterm FieldConstExpressionList = new Nonterm("FieldConstExpressionList");
static Nonterm FieldConstExpressionSpec = new Nonterm("FieldConstExpressionSpec");
static Nonterm ArrayConstExpression = new Nonterm("ArrayConstExpression");
static Nonterm ArrayElementConstExpressionList = new Nonterm("ArrayElementConstExpressionList");
static Nonterm Assignment = new Nonterm("Assignment");
static Nonterm SingleExpression = new Nonterm("SingleExpression");
static Nonterm XorExpression = new Nonterm("XorExpression");
static Nonterm AndExpression = new Nonterm("AndExpression");
static Nonterm NotExpression = new Nonterm("NotExpression");
static Nonterm EqualExpression = new Nonterm("EqualExpression");
static Nonterm RelExpression = new Nonterm("RelExpression");
static Nonterm ShiftExpression = new Nonterm("ShiftExpression");
static Nonterm BitOrExpression = new Nonterm("BitOrExpression");
static Nonterm BitXorExpression = new Nonterm("BitXorExpression");
static Nonterm BitAndExpression = new Nonterm("BitAndExpression");
static Nonterm BitNotExpression = new Nonterm("BitNotExpression");
static Nonterm AddExpression = new Nonterm("AddExpression");
static Nonterm MulExpression = new Nonterm("MulExpression");
static Nonterm UnaryExpression = new Nonterm("UnaryExpression");
static Nonterm Primary = new Nonterm("Primary");
static Nonterm ExtendedFieldReference = new Nonterm("ExtendedFieldReference");
static Nonterm OpCall = new Nonterm("OpCall");
static Nonterm AddOp = new Nonterm("AddOp");
static Nonterm MultiplyOp = new Nonterm("MultiplyOp");
static Nonterm UnaryOp = new Nonterm("UnaryOp");
static Nonterm RelOp = new Nonterm("RelOp");
static Nonterm EqualOp = new Nonterm("EqualOp");
static Nonterm StringOp = new Nonterm("StringOp");
static Nonterm ShiftOp = new Nonterm("ShiftOp");
static Nonterm LogStatement = new Nonterm("LogStatement");
static Nonterm LogItem = new Nonterm("LogItem");
static Nonterm LoopConstruct = new Nonterm("LoopConstruct");
static Nonterm ForStatement = new Nonterm("ForStatement");
static Nonterm Initial = new Nonterm("Initial");
static Nonterm WhileStatement = new Nonterm("WhileStatement");
static Nonterm DoWhileStatement = new Nonterm("DoWhileStatement");
static Nonterm ConditionalConstruct = new Nonterm("ConditionalConstruct");
static Nonterm ElseIfClause = new Nonterm("ElseIfClause");
static Nonterm ElseClause = new Nonterm("ElseClause");
static Nonterm SelectCaseConstruct = new Nonterm("SelectCaseConstruct");
static Nonterm SelectCaseBody = new Nonterm("SelectCaseBody");
static Nonterm SelectCase = new Nonterm("SelectCase");
static Nonterm ExtendedIdentifier = new Nonterm("ExtendedIdentifier");
static Nonterm IdentifierList = new Nonterm("IdentifierList");
static Nonterm QualifiedIdentifierList = new Nonterm("QualifiedIdentifierList");
static Nonterm TypeActualParList = new Nonterm("TypeActualParList");
static Nonterm TypeActualPar = new Nonterm("TypeActualPar");
static Nonterm FormalTypeParList = new Nonterm("FormalTypeParList");
static Nonterm FormalTypePar = new Nonterm("FormalTypePar");
static Nonterm TypeParIdentifier = new Nonterm("TypeParIdentifier");
static Nonterm TypeActualParIdentifier = new Nonterm("TypeActualParIdentifier");
static Nonterm TypeParAssignment = new Nonterm("TypeParAssignment");
static Nonterm ActualTypeParList = new Nonterm("ActualTypeParList");
static Nonterm ActualTypePar = new Nonterm("ActualTypePar");
static Nonterm ActualTypeParAssignment = new Nonterm("ActualTypeParAssignment");
static Nonterm StructDefFormalParList = new Nonterm("StructDefFormalParList");
static Nonterm StructDefFormalPar = new Nonterm("StructDefFormalPar");
static Nonterm BehaviourDef = new Nonterm("BehaviourDef");
static Nonterm NestedBehaviourDef = new Nonterm("NestedBehaviourDef");
static Nonterm BehaviourValue = new Nonterm("BehaviourValue");
static Nonterm ExecuteOnSpec = new Nonterm("ExecuteOnSpec");
static Nonterm ConfigurationDef = new Nonterm("ConfigurationDef");
static Nonterm ConfigurationIdentifier = new Nonterm("ConfigurationIdentifier");
static Nonterm ConfigurationInstance = new Nonterm("ConfigurationInstance");
static Nonterm ConfigurationRef = new Nonterm("ConfigurationRef");
static Nonterm KillConfigStatement = new Nonterm("KillConfigStatement");
static Nonterm ConfigurationReference = new Nonterm("ConfigurationReference");
static Nonterm TimestampSpec = new Nonterm("TimestampSpec");
static Nonterm RealtimeStatement = new Nonterm("RealtimeStatement");
static Nonterm WaitStatement = new Nonterm("WaitStatement");
static Nonterm StreamAttribs = new Nonterm("StreamAttribs");
static Nonterm StreamDirection = new Nonterm("StreamDirection");
static Nonterm PortInitialValue = new Nonterm("PortInitialValue");
static Nonterm StreamDataOps = new Nonterm("StreamDataOps");
static Nonterm PortDataOp = new Nonterm("PortDataOp");
static Nonterm PortHistoryOp = new Nonterm("PortHistoryOp");
static Nonterm StartValue = new Nonterm("StartValue");
static Nonterm EndValue = new Nonterm("EndValue");
static Nonterm PortValuesOp = new Nonterm("PortValuesOp");
static Nonterm StreamNavigationOps = new Nonterm("StreamNavigationOps");
static Nonterm PortPrevOp = new Nonterm("PortPrevOp");
static Nonterm IndexValue = new Nonterm("IndexValue");
static Nonterm PortAtOp = new Nonterm("PortAtOp");
static Nonterm TimeIndexValue = new Nonterm("TimeIndexValue");
static Nonterm ModeLocalOps = new Nonterm("ModeLocalOps");
static Nonterm StreamEvalStatements = new Nonterm("StreamEvalStatements");
static Nonterm PortApplyOp = new Nonterm("PortApplyOp");
static Nonterm ApplyParameter = new Nonterm("ApplyParameter");
static Nonterm PortFindOp = new Nonterm("PortFindOp");
static Nonterm FindParameter = new Nonterm("FindParameter");
static Nonterm PortViolatesOp = new Nonterm("PortViolatesOp");
static Nonterm ViolatesParameter = new Nonterm("ViolatesParameter");
static Nonterm AssertStatement = new Nonterm("AssertStatement");
static Nonterm AssertionList = new Nonterm("AssertionList");
static Nonterm ModeSpecification = new Nonterm("ModeSpecification");
static Nonterm BasicMode = new Nonterm("BasicMode");
static Nonterm OnEntryBlock = new Nonterm("OnEntryBlock");
static Nonterm InvariantBlock = new Nonterm("InvariantBlock");
static Nonterm InvariantList = new Nonterm("InvariantList");
static Nonterm BasicModeOp = new Nonterm("BasicModeOp");
static Nonterm OnExitBlock = new Nonterm("OnExitBlock");
static Nonterm ComplexMode = new Nonterm("ComplexMode");
static Nonterm ModeList = new Nonterm("ModeList");
static Nonterm UntilBlock = new Nonterm("UntilBlock");
static Nonterm UntilGuardList = new Nonterm("UntilGuardList");
static Nonterm UntilGuardStatement = new Nonterm("UntilGuardStatement");
static Nonterm TemplateInstance = new Nonterm("TemplateInstance");
static Nonterm BITSTRINGMATCH = new Nonterm("BITSTRINGMATCH");
static Nonterm HEXSTRINGMATCH = new Nonterm("HEXSTRINGMATCH");
static Nonterm OCTETSTRINGMATCH = new Nonterm("OCTETSTRINGMATCH");
static Nonterm PATTERN = new Nonterm("PATTERN");
static Token FLOATVALUE = new Token("FLOATVALUE", YyTokens.FLOATVALUE);
static Token NUMBER = new Token("NUMBER", YyTokens.NUMBER);
static Token BSTRING = new Token("BSTRING", YyTokens.BSTRING);
static Token HSTRING = new Token("HSTRING", YyTokens.HSTRING);
static Token OSTRING = new Token("OSTRING", YyTokens.OSTRING);
static Token CSTRING = new Token("CSTRING", YyTokens.CSTRING);
static Nonterm FREETEXT = new Nonterm("FREETEXT");
static Nonterm OPTION34 = new Nonterm("OPTION34");
static Nonterm OPTIONBODY34 = new Nonterm("OPTIONBODY34");
static Nonterm OPTION35 = new Nonterm("OPTION35");
static Nonterm OPTIONBODY35 = new Nonterm("OPTIONBODY35");
static Nonterm OPTION36 = new Nonterm("OPTION36");
static Nonterm OPTIONBODY36 = new Nonterm("OPTIONBODY36");
static Nonterm OPTION37 = new Nonterm("OPTION37");
static Nonterm OPTIONBODY37 = new Nonterm("OPTIONBODY37");
static Nonterm OPTION38 = new Nonterm("OPTION38");
static Nonterm OPTIONBODY38 = new Nonterm("OPTIONBODY38");
static Nonterm LOOP39 = new Nonterm("LOOP39");
static Nonterm LOOPBODY39 = new Nonterm("LOOPBODY39");
static Nonterm LOOP40 = new Nonterm("LOOP40");
static Nonterm LOOPBODY40 = new Nonterm("LOOPBODY40");
static Nonterm LOOPPLUS40 = new Nonterm("LOOPPLUS40");
static Nonterm OPTION41 = new Nonterm("OPTION41");
static Nonterm OPTIONBODY41 = new Nonterm("OPTIONBODY41");
static Nonterm SUB42 = new Nonterm("SUB42");
static Nonterm SUB43 = new Nonterm("SUB43");
static Nonterm OPTION44 = new Nonterm("OPTION44");
static Nonterm OPTIONBODY44 = new Nonterm("OPTIONBODY44");
static Nonterm SUB45 = new Nonterm("SUB45");
static Nonterm SUB46 = new Nonterm("SUB46");
static Nonterm OPTION47 = new Nonterm("OPTION47");
static Nonterm OPTIONBODY47 = new Nonterm("OPTIONBODY47");
static Nonterm SUB48 = new Nonterm("SUB48");
static Nonterm OPTION49 = new Nonterm("OPTION49");
static Nonterm OPTIONBODY49 = new Nonterm("OPTIONBODY49");
static Nonterm OPTION50 = new Nonterm("OPTION50");
static Nonterm OPTIONBODY50 = new Nonterm("OPTIONBODY50");
static Nonterm SUB51 = new Nonterm("SUB51");
static Nonterm OPTION52 = new Nonterm("OPTION52");
static Nonterm OPTIONBODY52 = new Nonterm("OPTIONBODY52");
static Nonterm OPTION53 = new Nonterm("OPTION53");
static Nonterm OPTIONBODY53 = new Nonterm("OPTIONBODY53");
static Nonterm OPTION54 = new Nonterm("OPTION54");
static Nonterm OPTIONBODY54 = new Nonterm("OPTIONBODY54");
static Nonterm LOOP55 = new Nonterm("LOOP55");
static Nonterm LOOPBODY55 = new Nonterm("LOOPBODY55");
static Nonterm SUB56 = new Nonterm("SUB56");
static Nonterm OPTION57 = new Nonterm("OPTION57");
static Nonterm OPTIONBODY57 = new Nonterm("OPTIONBODY57");
static Nonterm OPTION58 = new Nonterm("OPTION58");
static Nonterm OPTIONBODY58 = new Nonterm("OPTIONBODY58");
static Nonterm OPTION59 = new Nonterm("OPTION59");
static Nonterm OPTIONBODY59 = new Nonterm("OPTIONBODY59");
static Nonterm OPTION60 = new Nonterm("OPTION60");
static Nonterm OPTIONBODY60 = new Nonterm("OPTIONBODY60");
static Nonterm LOOP61 = new Nonterm("LOOP61");
static Nonterm LOOPBODY61 = new Nonterm("LOOPBODY61");
static Nonterm LOOP62 = new Nonterm("LOOP62");
static Nonterm LOOPBODY62 = new Nonterm("LOOPBODY62");
static Nonterm OPTION63 = new Nonterm("OPTION63");
static Nonterm OPTIONBODY63 = new Nonterm("OPTIONBODY63");
static Nonterm LOOP64 = new Nonterm("LOOP64");
static Nonterm LOOPBODY64 = new Nonterm("LOOPBODY64");
static Nonterm OPTION65 = new Nonterm("OPTION65");
static Nonterm OPTIONBODY65 = new Nonterm("OPTIONBODY65");
static Nonterm SUB66 = new Nonterm("SUB66");
static Nonterm OPTION67 = new Nonterm("OPTION67");
static Nonterm OPTIONBODY67 = new Nonterm("OPTIONBODY67");
static Nonterm SUB68 = new Nonterm("SUB68");
static Nonterm SUB69 = new Nonterm("SUB69");
static Nonterm OPTION70 = new Nonterm("OPTION70");
static Nonterm OPTIONBODY70 = new Nonterm("OPTIONBODY70");
static Nonterm OPTION71 = new Nonterm("OPTION71");
static Nonterm OPTIONBODY71 = new Nonterm("OPTIONBODY71");
static Nonterm LOOP72 = new Nonterm("LOOP72");
static Nonterm LOOPBODY72 = new Nonterm("LOOPBODY72");
static Nonterm SUB73 = new Nonterm("SUB73");
static Nonterm OPTION74 = new Nonterm("OPTION74");
static Nonterm OPTIONBODY74 = new Nonterm("OPTIONBODY74");
static Nonterm OPTION75 = new Nonterm("OPTION75");
static Nonterm OPTIONBODY75 = new Nonterm("OPTIONBODY75");
static Nonterm OPTION76 = new Nonterm("OPTION76");
static Nonterm OPTIONBODY76 = new Nonterm("OPTIONBODY76");
static Nonterm SUB77 = new Nonterm("SUB77");
static Nonterm SUB78 = new Nonterm("SUB78");
static Nonterm OPTION79 = new Nonterm("OPTION79");
static Nonterm OPTIONBODY79 = new Nonterm("OPTIONBODY79");
static Nonterm OPTION80 = new Nonterm("OPTION80");
static Nonterm OPTIONBODY80 = new Nonterm("OPTIONBODY80");
static Nonterm OPTION81 = new Nonterm("OPTION81");
static Nonterm OPTIONBODY81 = new Nonterm("OPTIONBODY81");
static Nonterm OPTION82 = new Nonterm("OPTION82");
static Nonterm OPTIONBODY82 = new Nonterm("OPTIONBODY82");
static Nonterm SUB83 = new Nonterm("SUB83");
static Nonterm OPTION84 = new Nonterm("OPTION84");
static Nonterm OPTIONBODY84 = new Nonterm("OPTIONBODY84");
static Nonterm LOOP85 = new Nonterm("LOOP85");
static Nonterm LOOPBODY85 = new Nonterm("LOOPBODY85");
static Nonterm OPTION86 = new Nonterm("OPTION86");
static Nonterm OPTIONBODY86 = new Nonterm("OPTIONBODY86");
static Nonterm OPTION87 = new Nonterm("OPTION87");
static Nonterm OPTIONBODY87 = new Nonterm("OPTIONBODY87");
static Nonterm SUB88 = new Nonterm("SUB88");
static Nonterm OPTION89 = new Nonterm("OPTION89");
static Nonterm OPTIONBODY89 = new Nonterm("OPTIONBODY89");
static Nonterm OPTION90 = new Nonterm("OPTION90");
static Nonterm OPTIONBODY90 = new Nonterm("OPTIONBODY90");
static Nonterm OPTION91 = new Nonterm("OPTION91");
static Nonterm OPTIONBODY91 = new Nonterm("OPTIONBODY91");
static Nonterm OPTION92 = new Nonterm("OPTION92");
static Nonterm OPTIONBODY92 = new Nonterm("OPTIONBODY92");
static Nonterm OPTION93 = new Nonterm("OPTION93");
static Nonterm OPTIONBODY93 = new Nonterm("OPTIONBODY93");
static Nonterm SUB94 = new Nonterm("SUB94");
static Nonterm SUB95 = new Nonterm("SUB95");
static Nonterm LOOP96 = new Nonterm("LOOP96");
static Nonterm LOOPBODY96 = new Nonterm("LOOPBODY96");
static Nonterm OPTION97 = new Nonterm("OPTION97");
static Nonterm OPTIONBODY97 = new Nonterm("OPTIONBODY97");
static Nonterm OPTION98 = new Nonterm("OPTION98");
static Nonterm OPTIONBODY98 = new Nonterm("OPTIONBODY98");
static Nonterm OPTION99 = new Nonterm("OPTION99");
static Nonterm OPTIONBODY99 = new Nonterm("OPTIONBODY99");
static Nonterm OPTION100 = new Nonterm("OPTION100");
static Nonterm OPTIONBODY100 = new Nonterm("OPTIONBODY100");
static Nonterm LOOP101 = new Nonterm("LOOP101");
static Nonterm LOOPBODY101 = new Nonterm("LOOPBODY101");
static Nonterm LOOPPLUS101 = new Nonterm("LOOPPLUS101");
static Nonterm SUB102 = new Nonterm("SUB102");
static Nonterm OPTION103 = new Nonterm("OPTION103");
static Nonterm OPTIONBODY103 = new Nonterm("OPTIONBODY103");
static Nonterm LOOP104 = new Nonterm("LOOP104");
static Nonterm LOOPBODY104 = new Nonterm("LOOPBODY104");
static Nonterm LOOP105 = new Nonterm("LOOP105");
static Nonterm LOOPBODY105 = new Nonterm("LOOPBODY105");
static Nonterm LOOP106 = new Nonterm("LOOP106");
static Nonterm LOOPBODY106 = new Nonterm("LOOPBODY106");
static Nonterm OPTION107 = new Nonterm("OPTION107");
static Nonterm OPTIONBODY107 = new Nonterm("OPTIONBODY107");
static Nonterm LOOP108 = new Nonterm("LOOP108");
static Nonterm LOOPBODY108 = new Nonterm("LOOPBODY108");
static Nonterm LOOPPLUS108 = new Nonterm("LOOPPLUS108");
static Nonterm SUB109 = new Nonterm("SUB109");
static Nonterm OPTION110 = new Nonterm("OPTION110");
static Nonterm OPTIONBODY110 = new Nonterm("OPTIONBODY110");
static Nonterm LOOP111 = new Nonterm("LOOP111");
static Nonterm LOOPBODY111 = new Nonterm("LOOPBODY111");
static Nonterm OPTION112 = new Nonterm("OPTION112");
static Nonterm OPTIONBODY112 = new Nonterm("OPTIONBODY112");
static Nonterm LOOP113 = new Nonterm("LOOP113");
static Nonterm LOOPBODY113 = new Nonterm("LOOPBODY113");
static Nonterm LOOPPLUS113 = new Nonterm("LOOPPLUS113");
static Nonterm SUB114 = new Nonterm("SUB114");
static Nonterm OPTION115 = new Nonterm("OPTION115");
static Nonterm OPTIONBODY115 = new Nonterm("OPTIONBODY115");
static Nonterm SUB116 = new Nonterm("SUB116");
static Nonterm LOOP117 = new Nonterm("LOOP117");
static Nonterm LOOPBODY117 = new Nonterm("LOOPBODY117");
static Nonterm OPTION118 = new Nonterm("OPTION118");
static Nonterm OPTIONBODY118 = new Nonterm("OPTIONBODY118");
static Nonterm OPTION119 = new Nonterm("OPTION119");
static Nonterm OPTIONBODY119 = new Nonterm("OPTIONBODY119");
static Nonterm OPTION120 = new Nonterm("OPTION120");
static Nonterm OPTIONBODY120 = new Nonterm("OPTIONBODY120");
static Nonterm LOOP121 = new Nonterm("LOOP121");
static Nonterm LOOPBODY121 = new Nonterm("LOOPBODY121");
static Nonterm OPTION122 = new Nonterm("OPTION122");
static Nonterm OPTIONBODY122 = new Nonterm("OPTIONBODY122");
static Nonterm OPTION123 = new Nonterm("OPTION123");
static Nonterm OPTIONBODY123 = new Nonterm("OPTIONBODY123");
static Nonterm OPTION124 = new Nonterm("OPTION124");
static Nonterm OPTIONBODY124 = new Nonterm("OPTIONBODY124");
static Nonterm OPTION125 = new Nonterm("OPTION125");
static Nonterm OPTIONBODY125 = new Nonterm("OPTIONBODY125");
static Nonterm LOOP126 = new Nonterm("LOOP126");
static Nonterm LOOPBODY126 = new Nonterm("LOOPBODY126");
static Nonterm OPTION127 = new Nonterm("OPTION127");
static Nonterm OPTIONBODY127 = new Nonterm("OPTIONBODY127");
static Nonterm OPTION128 = new Nonterm("OPTION128");
static Nonterm OPTIONBODY128 = new Nonterm("OPTIONBODY128");
static Nonterm OPTION129 = new Nonterm("OPTION129");
static Nonterm OPTIONBODY129 = new Nonterm("OPTIONBODY129");
static Nonterm OPTION130 = new Nonterm("OPTION130");
static Nonterm OPTIONBODY130 = new Nonterm("OPTIONBODY130");
static Nonterm OPTION131 = new Nonterm("OPTION131");
static Nonterm OPTIONBODY131 = new Nonterm("OPTIONBODY131");
static Nonterm LOOP132 = new Nonterm("LOOP132");
static Nonterm LOOPBODY132 = new Nonterm("LOOPBODY132");
static Nonterm OPTION133 = new Nonterm("OPTION133");
static Nonterm OPTIONBODY133 = new Nonterm("OPTIONBODY133");
static Nonterm OPTION134 = new Nonterm("OPTION134");
static Nonterm OPTIONBODY134 = new Nonterm("OPTIONBODY134");
static Nonterm LOOP135 = new Nonterm("LOOP135");
static Nonterm LOOPBODY135 = new Nonterm("LOOPBODY135");
static Nonterm OPTION136 = new Nonterm("OPTION136");
static Nonterm OPTIONBODY136 = new Nonterm("OPTIONBODY136");
static Nonterm OPTION137 = new Nonterm("OPTION137");
static Nonterm OPTIONBODY137 = new Nonterm("OPTIONBODY137");
static Nonterm OPTION138 = new Nonterm("OPTION138");
static Nonterm OPTIONBODY138 = new Nonterm("OPTIONBODY138");
static Nonterm SUB139 = new Nonterm("SUB139");
static Nonterm OPTION140 = new Nonterm("OPTION140");
static Nonterm OPTIONBODY140 = new Nonterm("OPTIONBODY140");
static Nonterm OPTION141 = new Nonterm("OPTION141");
static Nonterm OPTIONBODY141 = new Nonterm("OPTIONBODY141");
static Nonterm LOOP142 = new Nonterm("LOOP142");
static Nonterm LOOPBODY142 = new Nonterm("LOOPBODY142");
static Nonterm SUB143 = new Nonterm("SUB143");
static Nonterm OPTION144 = new Nonterm("OPTION144");
static Nonterm OPTIONBODY144 = new Nonterm("OPTIONBODY144");
static Nonterm SUB145 = new Nonterm("SUB145");
static Nonterm OPTION146 = new Nonterm("OPTION146");
static Nonterm OPTIONBODY146 = new Nonterm("OPTIONBODY146");
static Nonterm SUB147 = new Nonterm("SUB147");
static Nonterm OPTION148 = new Nonterm("OPTION148");
static Nonterm OPTIONBODY148 = new Nonterm("OPTIONBODY148");
static Nonterm SUB149 = new Nonterm("SUB149");
static Nonterm OPTION150 = new Nonterm("OPTION150");
static Nonterm OPTIONBODY150 = new Nonterm("OPTIONBODY150");
static Nonterm OPTION151 = new Nonterm("OPTION151");
static Nonterm OPTIONBODY151 = new Nonterm("OPTIONBODY151");
static Nonterm LOOP152 = new Nonterm("LOOP152");
static Nonterm LOOPBODY152 = new Nonterm("LOOPBODY152");
static Nonterm LOOP153 = new Nonterm("LOOP153");
static Nonterm LOOPBODY153 = new Nonterm("LOOPBODY153");
static Nonterm SUB154 = new Nonterm("SUB154");
static Nonterm OPTION155 = new Nonterm("OPTION155");
static Nonterm OPTIONBODY155 = new Nonterm("OPTIONBODY155");
static Nonterm SUB156 = new Nonterm("SUB156");
static Nonterm OPTION157 = new Nonterm("OPTION157");
static Nonterm OPTIONBODY157 = new Nonterm("OPTIONBODY157");
static Nonterm SUB158 = new Nonterm("SUB158");
static Nonterm LOOP159 = new Nonterm("LOOP159");
static Nonterm LOOPBODY159 = new Nonterm("LOOPBODY159");
static Nonterm LOOP160 = new Nonterm("LOOP160");
static Nonterm LOOPBODY160 = new Nonterm("LOOPBODY160");
static Nonterm LOOP161 = new Nonterm("LOOP161");
static Nonterm LOOPBODY161 = new Nonterm("LOOPBODY161");
static Nonterm LOOP162 = new Nonterm("LOOP162");
static Nonterm LOOPBODY162 = new Nonterm("LOOPBODY162");
static Nonterm LOOPPLUS162 = new Nonterm("LOOPPLUS162");
static Nonterm SUB163 = new Nonterm("SUB163");
static Nonterm OPTION164 = new Nonterm("OPTION164");
static Nonterm OPTIONBODY164 = new Nonterm("OPTIONBODY164");
static Nonterm SUB165 = new Nonterm("SUB165");
static Nonterm OPTION166 = new Nonterm("OPTION166");
static Nonterm OPTIONBODY166 = new Nonterm("OPTIONBODY166");
static Nonterm OPTION167 = new Nonterm("OPTION167");
static Nonterm OPTIONBODY167 = new Nonterm("OPTIONBODY167");
static Nonterm OPTION168 = new Nonterm("OPTION168");
static Nonterm OPTIONBODY168 = new Nonterm("OPTIONBODY168");
static Nonterm SUB169 = new Nonterm("SUB169");
static Nonterm OPTION170 = new Nonterm("OPTION170");
static Nonterm OPTIONBODY170 = new Nonterm("OPTIONBODY170");
static Nonterm OPTION171 = new Nonterm("OPTION171");
static Nonterm OPTIONBODY171 = new Nonterm("OPTIONBODY171");
static Nonterm SUB172 = new Nonterm("SUB172");
static Nonterm LOOP173 = new Nonterm("LOOP173");
static Nonterm LOOPBODY173 = new Nonterm("LOOPBODY173");
static Nonterm SUB174 = new Nonterm("SUB174");
static Nonterm LOOP175 = new Nonterm("LOOP175");
static Nonterm LOOPBODY175 = new Nonterm("LOOPBODY175");
static Nonterm OPTION176 = new Nonterm("OPTION176");
static Nonterm OPTIONBODY176 = new Nonterm("OPTIONBODY176");
static Nonterm OPTION177 = new Nonterm("OPTION177");
static Nonterm OPTIONBODY177 = new Nonterm("OPTIONBODY177");
static Nonterm OPTION178 = new Nonterm("OPTION178");
static Nonterm OPTIONBODY178 = new Nonterm("OPTIONBODY178");
static Nonterm OPTION179 = new Nonterm("OPTION179");
static Nonterm OPTIONBODY179 = new Nonterm("OPTIONBODY179");
static Nonterm LOOP180 = new Nonterm("LOOP180");
static Nonterm LOOPBODY180 = new Nonterm("LOOPBODY180");
static Nonterm OPTION181 = new Nonterm("OPTION181");
static Nonterm OPTIONBODY181 = new Nonterm("OPTIONBODY181");
static Nonterm SUB182 = new Nonterm("SUB182");
static Nonterm OPTION183 = new Nonterm("OPTION183");
static Nonterm OPTIONBODY183 = new Nonterm("OPTIONBODY183");
static Nonterm OPTION184 = new Nonterm("OPTION184");
static Nonterm OPTIONBODY184 = new Nonterm("OPTIONBODY184");
static Nonterm LOOP185 = new Nonterm("LOOP185");
static Nonterm LOOPBODY185 = new Nonterm("LOOPBODY185");
static Nonterm LOOPPLUS185 = new Nonterm("LOOPPLUS185");
static Nonterm SUB186 = new Nonterm("SUB186");
static Nonterm OPTION187 = new Nonterm("OPTION187");
static Nonterm OPTIONBODY187 = new Nonterm("OPTIONBODY187");
static Nonterm OPTION188 = new Nonterm("OPTION188");
static Nonterm OPTIONBODY188 = new Nonterm("OPTIONBODY188");
static Nonterm LOOP189 = new Nonterm("LOOP189");
static Nonterm LOOPBODY189 = new Nonterm("LOOPBODY189");
static Nonterm LOOPPLUS189 = new Nonterm("LOOPPLUS189");
static Nonterm OPTION190 = new Nonterm("OPTION190");
static Nonterm OPTIONBODY190 = new Nonterm("OPTIONBODY190");
static Nonterm OPTION191 = new Nonterm("OPTION191");
static Nonterm OPTIONBODY191 = new Nonterm("OPTIONBODY191");
static Nonterm OPTION192 = new Nonterm("OPTION192");
static Nonterm OPTIONBODY192 = new Nonterm("OPTIONBODY192");
static Nonterm OPTION193 = new Nonterm("OPTION193");
static Nonterm OPTIONBODY193 = new Nonterm("OPTIONBODY193");
static Nonterm OPTION194 = new Nonterm("OPTION194");
static Nonterm OPTIONBODY194 = new Nonterm("OPTIONBODY194");
static Nonterm SUB195 = new Nonterm("SUB195");
static Nonterm LOOP196 = new Nonterm("LOOP196");
static Nonterm LOOPBODY196 = new Nonterm("LOOPBODY196");
static Nonterm SUB197 = new Nonterm("SUB197");
static Nonterm LOOP198 = new Nonterm("LOOP198");
static Nonterm LOOPBODY198 = new Nonterm("LOOPBODY198");
static Nonterm OPTION199 = new Nonterm("OPTION199");
static Nonterm OPTIONBODY199 = new Nonterm("OPTIONBODY199");
static Nonterm OPTION200 = new Nonterm("OPTION200");
static Nonterm OPTIONBODY200 = new Nonterm("OPTIONBODY200");
static Nonterm OPTION201 = new Nonterm("OPTION201");
static Nonterm OPTIONBODY201 = new Nonterm("OPTIONBODY201");
static Nonterm OPTION202 = new Nonterm("OPTION202");
static Nonterm OPTIONBODY202 = new Nonterm("OPTIONBODY202");
static Nonterm LOOP203 = new Nonterm("LOOP203");
static Nonterm LOOPBODY203 = new Nonterm("LOOPBODY203");
static Nonterm OPTION204 = new Nonterm("OPTION204");
static Nonterm OPTIONBODY204 = new Nonterm("OPTIONBODY204");
static Nonterm OPTION205 = new Nonterm("OPTION205");
static Nonterm OPTIONBODY205 = new Nonterm("OPTIONBODY205");
static Nonterm OPTION206 = new Nonterm("OPTION206");
static Nonterm OPTIONBODY206 = new Nonterm("OPTIONBODY206");
static Nonterm OPTION207 = new Nonterm("OPTION207");
static Nonterm OPTIONBODY207 = new Nonterm("OPTIONBODY207");
static Nonterm SUB208 = new Nonterm("SUB208");
static Nonterm OPTION209 = new Nonterm("OPTION209");
static Nonterm OPTIONBODY209 = new Nonterm("OPTIONBODY209");
static Nonterm SUB210 = new Nonterm("SUB210");
static Nonterm OPTION211 = new Nonterm("OPTION211");
static Nonterm OPTIONBODY211 = new Nonterm("OPTIONBODY211");
static Nonterm OPTION212 = new Nonterm("OPTION212");
static Nonterm OPTIONBODY212 = new Nonterm("OPTIONBODY212");
static Nonterm OPTION213 = new Nonterm("OPTION213");
static Nonterm OPTIONBODY213 = new Nonterm("OPTIONBODY213");
static Nonterm OPTION214 = new Nonterm("OPTION214");
static Nonterm OPTIONBODY214 = new Nonterm("OPTIONBODY214");
static Nonterm SUB215 = new Nonterm("SUB215");
static Nonterm OPTION216 = new Nonterm("OPTION216");
static Nonterm OPTIONBODY216 = new Nonterm("OPTIONBODY216");
static Nonterm SUB217 = new Nonterm("SUB217");
static Nonterm LOOP218 = new Nonterm("LOOP218");
static Nonterm LOOPBODY218 = new Nonterm("LOOPBODY218");
static Nonterm SUB219 = new Nonterm("SUB219");
static Nonterm LOOP220 = new Nonterm("LOOP220");
static Nonterm LOOPBODY220 = new Nonterm("LOOPBODY220");
static Nonterm OPTION221 = new Nonterm("OPTION221");
static Nonterm OPTIONBODY221 = new Nonterm("OPTIONBODY221");
static Nonterm OPTION222 = new Nonterm("OPTION222");
static Nonterm OPTIONBODY222 = new Nonterm("OPTIONBODY222");
static Nonterm OPTION223 = new Nonterm("OPTION223");
static Nonterm OPTIONBODY223 = new Nonterm("OPTIONBODY223");
static Nonterm LOOP224 = new Nonterm("LOOP224");
static Nonterm LOOPBODY224 = new Nonterm("LOOPBODY224");
static Nonterm OPTION225 = new Nonterm("OPTION225");
static Nonterm OPTIONBODY225 = new Nonterm("OPTIONBODY225");
static Nonterm OPTION226 = new Nonterm("OPTION226");
static Nonterm OPTIONBODY226 = new Nonterm("OPTIONBODY226");
static Nonterm OPTION227 = new Nonterm("OPTION227");
static Nonterm OPTIONBODY227 = new Nonterm("OPTIONBODY227");
static Nonterm OPTION228 = new Nonterm("OPTION228");
static Nonterm OPTIONBODY228 = new Nonterm("OPTIONBODY228");
static Nonterm SUB229 = new Nonterm("SUB229");
static Nonterm SUB230 = new Nonterm("SUB230");
static Nonterm OPTION231 = new Nonterm("OPTION231");
static Nonterm OPTIONBODY231 = new Nonterm("OPTIONBODY231");
static Nonterm LOOP232 = new Nonterm("LOOP232");
static Nonterm LOOPBODY232 = new Nonterm("LOOPBODY232");
static Nonterm OPTION233 = new Nonterm("OPTION233");
static Nonterm OPTIONBODY233 = new Nonterm("OPTIONBODY233");
static Nonterm SUB234 = new Nonterm("SUB234");
static Nonterm LOOP235 = new Nonterm("LOOP235");
static Nonterm LOOPBODY235 = new Nonterm("LOOPBODY235");
static Nonterm OPTION236 = new Nonterm("OPTION236");
static Nonterm OPTIONBODY236 = new Nonterm("OPTIONBODY236");
static Nonterm OPTION237 = new Nonterm("OPTION237");
static Nonterm OPTIONBODY237 = new Nonterm("OPTIONBODY237");
static Nonterm SUB238 = new Nonterm("SUB238");
static Nonterm LOOP239 = new Nonterm("LOOP239");
static Nonterm LOOPBODY239 = new Nonterm("LOOPBODY239");
static Nonterm OPTION240 = new Nonterm("OPTION240");
static Nonterm OPTIONBODY240 = new Nonterm("OPTIONBODY240");
static Nonterm OPTION241 = new Nonterm("OPTION241");
static Nonterm OPTIONBODY241 = new Nonterm("OPTIONBODY241");
static Nonterm OPTION242 = new Nonterm("OPTION242");
static Nonterm OPTIONBODY242 = new Nonterm("OPTIONBODY242");
static Nonterm OPTION243 = new Nonterm("OPTION243");
static Nonterm OPTIONBODY243 = new Nonterm("OPTIONBODY243");
static Nonterm OPTION244 = new Nonterm("OPTION244");
static Nonterm OPTIONBODY244 = new Nonterm("OPTIONBODY244");
static Nonterm OPTION245 = new Nonterm("OPTION245");
static Nonterm OPTIONBODY245 = new Nonterm("OPTIONBODY245");
static Nonterm SUB246 = new Nonterm("SUB246");
static Nonterm SUB247 = new Nonterm("SUB247");
static Nonterm LOOP248 = new Nonterm("LOOP248");
static Nonterm LOOPBODY248 = new Nonterm("LOOPBODY248");
static Nonterm OPTION249 = new Nonterm("OPTION249");
static Nonterm OPTIONBODY249 = new Nonterm("OPTIONBODY249");
static Nonterm OPTION250 = new Nonterm("OPTION250");
static Nonterm OPTIONBODY250 = new Nonterm("OPTIONBODY250");
static Nonterm LOOP251 = new Nonterm("LOOP251");
static Nonterm LOOPBODY251 = new Nonterm("LOOPBODY251");
static Nonterm OPTION252 = new Nonterm("OPTION252");
static Nonterm OPTIONBODY252 = new Nonterm("OPTIONBODY252");
static Nonterm OPTION253 = new Nonterm("OPTION253");
static Nonterm OPTIONBODY253 = new Nonterm("OPTIONBODY253");
static Nonterm OPTION254 = new Nonterm("OPTION254");
static Nonterm OPTIONBODY254 = new Nonterm("OPTIONBODY254");
static Nonterm OPTION255 = new Nonterm("OPTION255");
static Nonterm OPTIONBODY255 = new Nonterm("OPTIONBODY255");
static Nonterm OPTION256 = new Nonterm("OPTION256");
static Nonterm OPTIONBODY256 = new Nonterm("OPTIONBODY256");
static Nonterm LOOP257 = new Nonterm("LOOP257");
static Nonterm LOOPBODY257 = new Nonterm("LOOPBODY257");
static Nonterm LOOPPLUS257 = new Nonterm("LOOPPLUS257");
static Nonterm OPTION258 = new Nonterm("OPTION258");
static Nonterm OPTIONBODY258 = new Nonterm("OPTIONBODY258");
static Nonterm SUB259 = new Nonterm("SUB259");
static Nonterm OPTION260 = new Nonterm("OPTION260");
static Nonterm OPTIONBODY260 = new Nonterm("OPTIONBODY260");
static Nonterm SUB261 = new Nonterm("SUB261");
static Nonterm SUB262 = new Nonterm("SUB262");
static Nonterm SUB263 = new Nonterm("SUB263");
static Nonterm SUB264 = new Nonterm("SUB264");
static Nonterm LOOP265 = new Nonterm("LOOP265");
static Nonterm LOOPBODY265 = new Nonterm("LOOPBODY265");
static Nonterm OPTION266 = new Nonterm("OPTION266");
static Nonterm OPTIONBODY266 = new Nonterm("OPTIONBODY266");
static Nonterm OPTION267 = new Nonterm("OPTION267");
static Nonterm OPTIONBODY267 = new Nonterm("OPTIONBODY267");
static Nonterm LOOP268 = new Nonterm("LOOP268");
static Nonterm LOOPBODY268 = new Nonterm("LOOPBODY268");
static Nonterm OPTION269 = new Nonterm("OPTION269");
static Nonterm OPTIONBODY269 = new Nonterm("OPTIONBODY269");
static Nonterm OPTION270 = new Nonterm("OPTION270");
static Nonterm OPTIONBODY270 = new Nonterm("OPTIONBODY270");
static Nonterm OPTION271 = new Nonterm("OPTION271");
static Nonterm OPTIONBODY271 = new Nonterm("OPTIONBODY271");
static Nonterm LOOP272 = new Nonterm("LOOP272");
static Nonterm LOOPBODY272 = new Nonterm("LOOPBODY272");
static Nonterm OPTION273 = new Nonterm("OPTION273");
static Nonterm OPTIONBODY273 = new Nonterm("OPTIONBODY273");
static Nonterm SUB274 = new Nonterm("SUB274");
static Nonterm OPTION275 = new Nonterm("OPTION275");
static Nonterm OPTIONBODY275 = new Nonterm("OPTIONBODY275");
static Nonterm OPTION276 = new Nonterm("OPTION276");
static Nonterm OPTIONBODY276 = new Nonterm("OPTIONBODY276");
static Nonterm SUB277 = new Nonterm("SUB277");
static Nonterm OPTION278 = new Nonterm("OPTION278");
static Nonterm OPTIONBODY278 = new Nonterm("OPTIONBODY278");
static Nonterm OPTION279 = new Nonterm("OPTION279");
static Nonterm OPTIONBODY279 = new Nonterm("OPTIONBODY279");
static Nonterm OPTION280 = new Nonterm("OPTION280");
static Nonterm OPTIONBODY280 = new Nonterm("OPTIONBODY280");
static Nonterm OPTION281 = new Nonterm("OPTION281");
static Nonterm OPTIONBODY281 = new Nonterm("OPTIONBODY281");
static Nonterm OPTION282 = new Nonterm("OPTION282");
static Nonterm OPTIONBODY282 = new Nonterm("OPTIONBODY282");
static Nonterm OPTION283 = new Nonterm("OPTION283");
static Nonterm OPTIONBODY283 = new Nonterm("OPTIONBODY283");
static Nonterm OPTION284 = new Nonterm("OPTION284");
static Nonterm OPTIONBODY284 = new Nonterm("OPTIONBODY284");
static Nonterm SUB285 = new Nonterm("SUB285");
static Nonterm SUB286 = new Nonterm("SUB286");
static Nonterm SUB287 = new Nonterm("SUB287");
static Nonterm OPTION288 = new Nonterm("OPTION288");
static Nonterm OPTIONBODY288 = new Nonterm("OPTIONBODY288");
static Nonterm SUB289 = new Nonterm("SUB289");
static Nonterm LOOP290 = new Nonterm("LOOP290");
static Nonterm LOOPBODY290 = new Nonterm("LOOPBODY290");
static Nonterm OPTION291 = new Nonterm("OPTION291");
static Nonterm OPTIONBODY291 = new Nonterm("OPTIONBODY291");
static Nonterm OPTION292 = new Nonterm("OPTION292");
static Nonterm OPTIONBODY292 = new Nonterm("OPTIONBODY292");
static Nonterm OPTION293 = new Nonterm("OPTION293");
static Nonterm OPTIONBODY293 = new Nonterm("OPTIONBODY293");
static Nonterm LOOP294 = new Nonterm("LOOP294");
static Nonterm LOOPBODY294 = new Nonterm("LOOPBODY294");
static Nonterm LOOPPLUS294 = new Nonterm("LOOPPLUS294");
static Nonterm OPTION295 = new Nonterm("OPTION295");
static Nonterm OPTIONBODY295 = new Nonterm("OPTIONBODY295");
static Nonterm OPTION296 = new Nonterm("OPTION296");
static Nonterm OPTIONBODY296 = new Nonterm("OPTIONBODY296");
static Nonterm OPTION297 = new Nonterm("OPTION297");
static Nonterm OPTIONBODY297 = new Nonterm("OPTIONBODY297");
static Nonterm OPTION298 = new Nonterm("OPTION298");
static Nonterm OPTIONBODY298 = new Nonterm("OPTIONBODY298");
static Nonterm OPTION299 = new Nonterm("OPTION299");
static Nonterm OPTIONBODY299 = new Nonterm("OPTIONBODY299");
static Nonterm OPTION300 = new Nonterm("OPTION300");
static Nonterm OPTIONBODY300 = new Nonterm("OPTIONBODY300");
static Nonterm OPTION301 = new Nonterm("OPTION301");
static Nonterm OPTIONBODY301 = new Nonterm("OPTIONBODY301");
static Nonterm SUB302 = new Nonterm("SUB302");
static Nonterm SUB303 = new Nonterm("SUB303");
static Nonterm OPTION304 = new Nonterm("OPTION304");
static Nonterm OPTIONBODY304 = new Nonterm("OPTIONBODY304");
static Nonterm OPTION305 = new Nonterm("OPTION305");
static Nonterm OPTIONBODY305 = new Nonterm("OPTIONBODY305");
static Nonterm OPTION306 = new Nonterm("OPTION306");
static Nonterm OPTIONBODY306 = new Nonterm("OPTIONBODY306");
static Nonterm SUB307 = new Nonterm("SUB307");
static Nonterm SUB308 = new Nonterm("SUB308");
static Nonterm LOOP309 = new Nonterm("LOOP309");
static Nonterm LOOPBODY309 = new Nonterm("LOOPBODY309");
static Nonterm OPTION310 = new Nonterm("OPTION310");
static Nonterm OPTIONBODY310 = new Nonterm("OPTIONBODY310");
static Nonterm OPTION311 = new Nonterm("OPTION311");
static Nonterm OPTIONBODY311 = new Nonterm("OPTIONBODY311");
static Nonterm OPTION312 = new Nonterm("OPTION312");
static Nonterm OPTIONBODY312 = new Nonterm("OPTIONBODY312");
static Nonterm OPTION313 = new Nonterm("OPTION313");
static Nonterm OPTIONBODY313 = new Nonterm("OPTIONBODY313");
static Nonterm OPTION314 = new Nonterm("OPTION314");
static Nonterm OPTIONBODY314 = new Nonterm("OPTIONBODY314");
static Nonterm OPTION315 = new Nonterm("OPTION315");
static Nonterm OPTIONBODY315 = new Nonterm("OPTIONBODY315");
static Nonterm OPTION316 = new Nonterm("OPTION316");
static Nonterm OPTIONBODY316 = new Nonterm("OPTIONBODY316");
static Nonterm OPTION317 = new Nonterm("OPTION317");
static Nonterm OPTIONBODY317 = new Nonterm("OPTIONBODY317");
static Nonterm SUB318 = new Nonterm("SUB318");
static Nonterm LOOP319 = new Nonterm("LOOP319");
static Nonterm LOOPBODY319 = new Nonterm("LOOPBODY319");
static Nonterm LOOP320 = new Nonterm("LOOP320");
static Nonterm LOOPBODY320 = new Nonterm("LOOPBODY320");
static Nonterm OPTION321 = new Nonterm("OPTION321");
static Nonterm OPTIONBODY321 = new Nonterm("OPTIONBODY321");
static Nonterm OPTION322 = new Nonterm("OPTION322");
static Nonterm OPTIONBODY322 = new Nonterm("OPTIONBODY322");
static Nonterm OPTION323 = new Nonterm("OPTION323");
static Nonterm OPTIONBODY323 = new Nonterm("OPTIONBODY323");
static Nonterm OPTION324 = new Nonterm("OPTION324");
static Nonterm OPTIONBODY324 = new Nonterm("OPTIONBODY324");
static Nonterm OPTION325 = new Nonterm("OPTION325");
static Nonterm OPTIONBODY325 = new Nonterm("OPTIONBODY325");
static Nonterm OPTION326 = new Nonterm("OPTION326");
static Nonterm OPTIONBODY326 = new Nonterm("OPTIONBODY326");
static Nonterm OPTION327 = new Nonterm("OPTION327");
static Nonterm OPTIONBODY327 = new Nonterm("OPTIONBODY327");
static Nonterm OPTION328 = new Nonterm("OPTION328");
static Nonterm OPTIONBODY328 = new Nonterm("OPTIONBODY328");
static Nonterm OPTION329 = new Nonterm("OPTION329");
static Nonterm OPTIONBODY329 = new Nonterm("OPTIONBODY329");
static Nonterm OPTION330 = new Nonterm("OPTION330");
static Nonterm OPTIONBODY330 = new Nonterm("OPTIONBODY330");
static Nonterm OPTION331 = new Nonterm("OPTION331");
static Nonterm OPTIONBODY331 = new Nonterm("OPTIONBODY331");
static Nonterm OPTION332 = new Nonterm("OPTION332");
static Nonterm OPTIONBODY332 = new Nonterm("OPTIONBODY332");
static Nonterm SUB333 = new Nonterm("SUB333");
static Nonterm OPTION334 = new Nonterm("OPTION334");
static Nonterm OPTIONBODY334 = new Nonterm("OPTIONBODY334");
static Nonterm LOOP335 = new Nonterm("LOOP335");
static Nonterm LOOPBODY335 = new Nonterm("LOOPBODY335");
static Nonterm SUB336 = new Nonterm("SUB336");
static Nonterm OPTION337 = new Nonterm("OPTION337");
static Nonterm OPTIONBODY337 = new Nonterm("OPTIONBODY337");
static Nonterm OPTION338 = new Nonterm("OPTION338");
static Nonterm OPTIONBODY338 = new Nonterm("OPTIONBODY338");
static Nonterm OPTION339 = new Nonterm("OPTION339");
static Nonterm OPTIONBODY339 = new Nonterm("OPTIONBODY339");
static Nonterm OPTION340 = new Nonterm("OPTION340");
static Nonterm OPTIONBODY340 = new Nonterm("OPTIONBODY340");
static Nonterm OPTION341 = new Nonterm("OPTION341");
static Nonterm OPTIONBODY341 = new Nonterm("OPTIONBODY341");
static Nonterm LOOP342 = new Nonterm("LOOP342");
static Nonterm LOOPBODY342 = new Nonterm("LOOPBODY342");
static Nonterm LOOPPLUS342 = new Nonterm("LOOPPLUS342");
static Nonterm OPTION343 = new Nonterm("OPTION343");
static Nonterm OPTIONBODY343 = new Nonterm("OPTIONBODY343");
static Nonterm OPTION344 = new Nonterm("OPTION344");
static Nonterm OPTIONBODY344 = new Nonterm("OPTIONBODY344");
static Nonterm OPTION345 = new Nonterm("OPTION345");
static Nonterm OPTIONBODY345 = new Nonterm("OPTIONBODY345");
static Nonterm SUB346 = new Nonterm("SUB346");
static Nonterm OPTION347 = new Nonterm("OPTION347");
static Nonterm OPTIONBODY347 = new Nonterm("OPTIONBODY347");
static Nonterm SUB348 = new Nonterm("SUB348");
static Nonterm OPTION349 = new Nonterm("OPTION349");
static Nonterm OPTIONBODY349 = new Nonterm("OPTIONBODY349");
static Nonterm OPTION350 = new Nonterm("OPTION350");
static Nonterm OPTIONBODY350 = new Nonterm("OPTIONBODY350");
static Nonterm OPTION351 = new Nonterm("OPTION351");
static Nonterm OPTIONBODY351 = new Nonterm("OPTIONBODY351");
static Nonterm SUB352 = new Nonterm("SUB352");
static Nonterm SUB353 = new Nonterm("SUB353");
static Nonterm OPTION354 = new Nonterm("OPTION354");
static Nonterm OPTIONBODY354 = new Nonterm("OPTIONBODY354");
static Nonterm SUB355 = new Nonterm("SUB355");
static Nonterm SUB356 = new Nonterm("SUB356");
static Nonterm SUB357 = new Nonterm("SUB357");
static Nonterm LOOP358 = new Nonterm("LOOP358");
static Nonterm LOOPBODY358 = new Nonterm("LOOPBODY358");
static Nonterm OPTION359 = new Nonterm("OPTION359");
static Nonterm OPTIONBODY359 = new Nonterm("OPTIONBODY359");
static Nonterm OPTION360 = new Nonterm("OPTION360");
static Nonterm OPTIONBODY360 = new Nonterm("OPTIONBODY360");
static Nonterm OPTION361 = new Nonterm("OPTION361");
static Nonterm OPTIONBODY361 = new Nonterm("OPTIONBODY361");
static Nonterm LOOP362 = new Nonterm("LOOP362");
static Nonterm LOOPBODY362 = new Nonterm("LOOPBODY362");
static Nonterm SUB363 = new Nonterm("SUB363");
static Nonterm SUB364 = new Nonterm("SUB364");
static Nonterm OPTION365 = new Nonterm("OPTION365");
static Nonterm OPTIONBODY365 = new Nonterm("OPTIONBODY365");
static Nonterm LOOP366 = new Nonterm("LOOP366");
static Nonterm LOOPBODY366 = new Nonterm("LOOPBODY366");
static Nonterm SUB367 = new Nonterm("SUB367");
static Nonterm OPTION368 = new Nonterm("OPTION368");
static Nonterm OPTIONBODY368 = new Nonterm("OPTIONBODY368");
static Nonterm SUB369 = new Nonterm("SUB369");
static Nonterm SUB370 = new Nonterm("SUB370");
static Nonterm OPTION371 = new Nonterm("OPTION371");
static Nonterm OPTIONBODY371 = new Nonterm("OPTIONBODY371");
static Nonterm LOOP372 = new Nonterm("LOOP372");
static Nonterm LOOPBODY372 = new Nonterm("LOOPBODY372");
static Nonterm LOOP373 = new Nonterm("LOOP373");
static Nonterm LOOPBODY373 = new Nonterm("LOOPBODY373");
static Nonterm OPTION374 = new Nonterm("OPTION374");
static Nonterm OPTIONBODY374 = new Nonterm("OPTIONBODY374");
static Nonterm LOOP375 = new Nonterm("LOOP375");
static Nonterm LOOPBODY375 = new Nonterm("LOOPBODY375");
static Nonterm OPTION376 = new Nonterm("OPTION376");
static Nonterm OPTIONBODY376 = new Nonterm("OPTIONBODY376");
static Nonterm SUB377 = new Nonterm("SUB377");
static Nonterm OPTION378 = new Nonterm("OPTION378");
static Nonterm OPTIONBODY378 = new Nonterm("OPTIONBODY378");
static Nonterm OPTION379 = new Nonterm("OPTION379");
static Nonterm OPTIONBODY379 = new Nonterm("OPTIONBODY379");
static Nonterm LOOP380 = new Nonterm("LOOP380");
static Nonterm LOOPBODY380 = new Nonterm("LOOPBODY380");
static Nonterm LOOPPLUS380 = new Nonterm("LOOPPLUS380");
static Nonterm OPTION381 = new Nonterm("OPTION381");
static Nonterm OPTIONBODY381 = new Nonterm("OPTIONBODY381");
static Nonterm OPTION382 = new Nonterm("OPTION382");
static Nonterm OPTIONBODY382 = new Nonterm("OPTIONBODY382");
static Nonterm LOOP383 = new Nonterm("LOOP383");
static Nonterm LOOPBODY383 = new Nonterm("LOOPBODY383");
static Nonterm OPTION384 = new Nonterm("OPTION384");
static Nonterm OPTIONBODY384 = new Nonterm("OPTIONBODY384");
static Nonterm LOOP385 = new Nonterm("LOOP385");
static Nonterm LOOPBODY385 = new Nonterm("LOOPBODY385");
static Nonterm LOOP386 = new Nonterm("LOOP386");
static Nonterm LOOPBODY386 = new Nonterm("LOOPBODY386");
static Nonterm OPTION387 = new Nonterm("OPTION387");
static Nonterm OPTIONBODY387 = new Nonterm("OPTIONBODY387");
static Nonterm LOOP388 = new Nonterm("LOOP388");
static Nonterm LOOPBODY388 = new Nonterm("LOOPBODY388");
static Nonterm SUB389 = new Nonterm("SUB389");
static Nonterm LOOP390 = new Nonterm("LOOP390");
static Nonterm LOOPBODY390 = new Nonterm("LOOPBODY390");
static Nonterm LOOP391 = new Nonterm("LOOP391");
static Nonterm LOOPBODY391 = new Nonterm("LOOPBODY391");
static Nonterm LOOP392 = new Nonterm("LOOP392");
static Nonterm LOOPBODY392 = new Nonterm("LOOPBODY392");
static Nonterm OPTION393 = new Nonterm("OPTION393");
static Nonterm OPTIONBODY393 = new Nonterm("OPTIONBODY393");
static Nonterm LOOP394 = new Nonterm("LOOP394");
static Nonterm LOOPBODY394 = new Nonterm("LOOPBODY394");
static Nonterm OPTION395 = new Nonterm("OPTION395");
static Nonterm OPTIONBODY395 = new Nonterm("OPTIONBODY395");
static Nonterm LOOP396 = new Nonterm("LOOP396");
static Nonterm LOOPBODY396 = new Nonterm("LOOPBODY396");
static Nonterm LOOP397 = new Nonterm("LOOP397");
static Nonterm LOOPBODY397 = new Nonterm("LOOPBODY397");
static Nonterm LOOP398 = new Nonterm("LOOP398");
static Nonterm LOOPBODY398 = new Nonterm("LOOPBODY398");
static Nonterm LOOP399 = new Nonterm("LOOP399");
static Nonterm LOOPBODY399 = new Nonterm("LOOPBODY399");
static Nonterm OPTION400 = new Nonterm("OPTION400");
static Nonterm OPTIONBODY400 = new Nonterm("OPTIONBODY400");
static Nonterm LOOP401 = new Nonterm("LOOP401");
static Nonterm LOOPBODY401 = new Nonterm("LOOPBODY401");
static Nonterm LOOP402 = new Nonterm("LOOP402");
static Nonterm LOOPBODY402 = new Nonterm("LOOPBODY402");
static Nonterm OPTION403 = new Nonterm("OPTION403");
static Nonterm OPTIONBODY403 = new Nonterm("OPTIONBODY403");
static Nonterm LOOP404 = new Nonterm("LOOP404");
static Nonterm LOOPBODY404 = new Nonterm("LOOPBODY404");
static Nonterm LOOPPLUS404 = new Nonterm("LOOPPLUS404");
static Nonterm SUB405 = new Nonterm("SUB405");
static Nonterm SUB406 = new Nonterm("SUB406");
static Nonterm SUB407 = new Nonterm("SUB407");
static Nonterm SUB408 = new Nonterm("SUB408");
static Nonterm OPTION409 = new Nonterm("OPTION409");
static Nonterm OPTIONBODY409 = new Nonterm("OPTIONBODY409");
static Nonterm OPTION410 = new Nonterm("OPTION410");
static Nonterm OPTIONBODY410 = new Nonterm("OPTIONBODY410");
static Nonterm SUB411 = new Nonterm("SUB411");
static Nonterm OPTION412 = new Nonterm("OPTION412");
static Nonterm OPTIONBODY412 = new Nonterm("OPTIONBODY412");
static Nonterm OPTION413 = new Nonterm("OPTION413");
static Nonterm OPTIONBODY413 = new Nonterm("OPTIONBODY413");
static Nonterm LOOP414 = new Nonterm("LOOP414");
static Nonterm LOOPBODY414 = new Nonterm("LOOPBODY414");
static Nonterm LOOP415 = new Nonterm("LOOP415");
static Nonterm LOOPBODY415 = new Nonterm("LOOPBODY415");
static Nonterm OPTION416 = new Nonterm("OPTION416");
static Nonterm OPTIONBODY416 = new Nonterm("OPTIONBODY416");
static Nonterm LOOP417 = new Nonterm("LOOP417");
static Nonterm LOOPBODY417 = new Nonterm("LOOPBODY417");
static Nonterm LOOPPLUS417 = new Nonterm("LOOPPLUS417");
static Nonterm SUB418 = new Nonterm("SUB418");
static Nonterm LOOP419 = new Nonterm("LOOP419");
static Nonterm LOOPBODY419 = new Nonterm("LOOPBODY419");
static Nonterm OPTION420 = new Nonterm("OPTION420");
static Nonterm OPTIONBODY420 = new Nonterm("OPTIONBODY420");
static Nonterm LOOP421 = new Nonterm("LOOP421");
static Nonterm LOOPBODY421 = new Nonterm("LOOPBODY421");
static Nonterm LOOP422 = new Nonterm("LOOP422");
static Nonterm LOOPBODY422 = new Nonterm("LOOPBODY422");
static Nonterm SUB423 = new Nonterm("SUB423");
static Nonterm LOOP424 = new Nonterm("LOOP424");
static Nonterm LOOPBODY424 = new Nonterm("LOOPBODY424");
static Nonterm SUB425 = new Nonterm("SUB425");
static Nonterm LOOP426 = new Nonterm("LOOP426");
static Nonterm LOOPBODY426 = new Nonterm("LOOPBODY426");
static Nonterm LOOP427 = new Nonterm("LOOP427");
static Nonterm LOOPBODY427 = new Nonterm("LOOPBODY427");
static Nonterm LOOP428 = new Nonterm("LOOP428");
static Nonterm LOOPBODY428 = new Nonterm("LOOPBODY428");
static Nonterm OPTION429 = new Nonterm("OPTION429");
static Nonterm OPTIONBODY429 = new Nonterm("OPTIONBODY429");
static Nonterm OPTION430 = new Nonterm("OPTION430");
static Nonterm OPTIONBODY430 = new Nonterm("OPTIONBODY430");
static Nonterm OPTION431 = new Nonterm("OPTION431");
static Nonterm OPTIONBODY431 = new Nonterm("OPTIONBODY431");
static Nonterm SUB432 = new Nonterm("SUB432");
static Nonterm LOOP433 = new Nonterm("LOOP433");
static Nonterm LOOPBODY433 = new Nonterm("LOOPBODY433");
static Nonterm SUB434 = new Nonterm("SUB434");
static Nonterm LOOP435 = new Nonterm("LOOP435");
static Nonterm LOOPBODY435 = new Nonterm("LOOPBODY435");
static Nonterm LOOP436 = new Nonterm("LOOP436");
static Nonterm LOOPBODY436 = new Nonterm("LOOPBODY436");
static Nonterm SUB437 = new Nonterm("SUB437");
static Nonterm OPTION438 = new Nonterm("OPTION438");
static Nonterm OPTIONBODY438 = new Nonterm("OPTIONBODY438");
static Nonterm OPTION439 = new Nonterm("OPTION439");
static Nonterm OPTIONBODY439 = new Nonterm("OPTIONBODY439");
static Nonterm OPTION440 = new Nonterm("OPTION440");
static Nonterm OPTIONBODY440 = new Nonterm("OPTIONBODY440");
static Nonterm SUB441 = new Nonterm("SUB441");
static Nonterm OPTION442 = new Nonterm("OPTION442");
static Nonterm OPTIONBODY442 = new Nonterm("OPTIONBODY442");
static Nonterm OPTION443 = new Nonterm("OPTION443");
static Nonterm OPTIONBODY443 = new Nonterm("OPTIONBODY443");
static Nonterm OPTION444 = new Nonterm("OPTION444");
static Nonterm OPTIONBODY444 = new Nonterm("OPTIONBODY444");
static Nonterm OPTION445 = new Nonterm("OPTION445");
static Nonterm OPTIONBODY445 = new Nonterm("OPTIONBODY445");
static Nonterm SUB446 = new Nonterm("SUB446");
static Nonterm OPTION447 = new Nonterm("OPTION447");
static Nonterm OPTIONBODY447 = new Nonterm("OPTIONBODY447");
static Nonterm OPTION448 = new Nonterm("OPTION448");
static Nonterm OPTIONBODY448 = new Nonterm("OPTIONBODY448");
static Nonterm SUB449 = new Nonterm("SUB449");
static Nonterm OPTION450 = new Nonterm("OPTION450");
static Nonterm OPTIONBODY450 = new Nonterm("OPTIONBODY450");
static Nonterm OPTION451 = new Nonterm("OPTION451");
static Nonterm OPTIONBODY451 = new Nonterm("OPTIONBODY451");
static Nonterm SUB452 = new Nonterm("SUB452");
static Nonterm OPTION453 = new Nonterm("OPTION453");
static Nonterm OPTIONBODY453 = new Nonterm("OPTIONBODY453");
static Nonterm OPTION454 = new Nonterm("OPTION454");
static Nonterm OPTIONBODY454 = new Nonterm("OPTIONBODY454");
static Nonterm OPTION455 = new Nonterm("OPTION455");
static Nonterm OPTIONBODY455 = new Nonterm("OPTIONBODY455");
static Nonterm SUB456 = new Nonterm("SUB456");
static Nonterm OPTION457 = new Nonterm("OPTION457");
static Nonterm OPTIONBODY457 = new Nonterm("OPTIONBODY457");
static Nonterm OPTION458 = new Nonterm("OPTION458");
static Nonterm OPTIONBODY458 = new Nonterm("OPTIONBODY458");
static Nonterm OPTION459 = new Nonterm("OPTION459");
static Nonterm OPTIONBODY459 = new Nonterm("OPTIONBODY459");
static Nonterm OPTION460 = new Nonterm("OPTION460");
static Nonterm OPTIONBODY460 = new Nonterm("OPTIONBODY460");
static Nonterm OPTION461 = new Nonterm("OPTION461");
static Nonterm OPTIONBODY461 = new Nonterm("OPTIONBODY461");
static Nonterm SUB462 = new Nonterm("SUB462");
static Nonterm OPTION463 = new Nonterm("OPTION463");
static Nonterm OPTIONBODY463 = new Nonterm("OPTIONBODY463");
static Nonterm OPTION464 = new Nonterm("OPTION464");
static Nonterm OPTIONBODY464 = new Nonterm("OPTIONBODY464");
static Nonterm OPTION465 = new Nonterm("OPTION465");
static Nonterm OPTIONBODY465 = new Nonterm("OPTIONBODY465");
static Nonterm OPTION466 = new Nonterm("OPTION466");
static Nonterm OPTIONBODY466 = new Nonterm("OPTIONBODY466");
static Nonterm SUB467 = new Nonterm("SUB467");
static Nonterm OPTION468 = new Nonterm("OPTION468");
static Nonterm OPTIONBODY468 = new Nonterm("OPTIONBODY468");
static Nonterm OPTION469 = new Nonterm("OPTION469");
static Nonterm OPTIONBODY469 = new Nonterm("OPTIONBODY469");
static Nonterm OPTION470 = new Nonterm("OPTION470");
static Nonterm OPTIONBODY470 = new Nonterm("OPTIONBODY470");
static Nonterm SUB471 = new Nonterm("SUB471");
static Nonterm OPTION472 = new Nonterm("OPTION472");
static Nonterm OPTIONBODY472 = new Nonterm("OPTIONBODY472");
static Nonterm OPTION473 = new Nonterm("OPTION473");
static Nonterm OPTIONBODY473 = new Nonterm("OPTIONBODY473");
static Nonterm OPTION474 = new Nonterm("OPTION474");
static Nonterm OPTIONBODY474 = new Nonterm("OPTIONBODY474");
static Nonterm OPTION475 = new Nonterm("OPTION475");
static Nonterm OPTIONBODY475 = new Nonterm("OPTIONBODY475");
static Nonterm LOOP476 = new Nonterm("LOOP476");
static Nonterm LOOPBODY476 = new Nonterm("LOOPBODY476");
static Nonterm SUB477 = new Nonterm("SUB477");
static Nonterm OPTION478 = new Nonterm("OPTION478");
static Nonterm OPTIONBODY478 = new Nonterm("OPTIONBODY478");
static Nonterm LOOP479 = new Nonterm("LOOP479");
static Nonterm LOOPBODY479 = new Nonterm("LOOPBODY479");
static Nonterm OPTION480 = new Nonterm("OPTION480");
static Nonterm OPTIONBODY480 = new Nonterm("OPTIONBODY480");
static Nonterm OPTION481 = new Nonterm("OPTION481");
static Nonterm OPTIONBODY481 = new Nonterm("OPTIONBODY481");
static Nonterm LOOP482 = new Nonterm("LOOP482");
static Nonterm LOOPBODY482 = new Nonterm("LOOPBODY482");
static Nonterm OPTION483 = new Nonterm("OPTION483");
static Nonterm OPTIONBODY483 = new Nonterm("OPTIONBODY483");
static Nonterm OPTION484 = new Nonterm("OPTION484");
static Nonterm OPTIONBODY484 = new Nonterm("OPTIONBODY484");
static Nonterm LOOP485 = new Nonterm("LOOP485");
static Nonterm LOOPBODY485 = new Nonterm("LOOPBODY485");
static Nonterm SUB486 = new Nonterm("SUB486");
static Nonterm LOOP487 = new Nonterm("LOOP487");
static Nonterm LOOPBODY487 = new Nonterm("LOOPBODY487");
static Nonterm OPTION488 = new Nonterm("OPTION488");
static Nonterm OPTIONBODY488 = new Nonterm("OPTIONBODY488");
static Nonterm OPTION489 = new Nonterm("OPTION489");
static Nonterm OPTIONBODY489 = new Nonterm("OPTIONBODY489");
static Nonterm OPTION490 = new Nonterm("OPTION490");
static Nonterm OPTIONBODY490 = new Nonterm("OPTIONBODY490");
static Nonterm LOOP491 = new Nonterm("LOOP491");
static Nonterm LOOPBODY491 = new Nonterm("LOOPBODY491");
static Nonterm OPTION492 = new Nonterm("OPTION492");
static Nonterm OPTIONBODY492 = new Nonterm("OPTIONBODY492");
static Nonterm LOOP493 = new Nonterm("LOOP493");
static Nonterm LOOPBODY493 = new Nonterm("LOOPBODY493");
static Nonterm OPTION494 = new Nonterm("OPTION494");
static Nonterm OPTIONBODY494 = new Nonterm("OPTIONBODY494");
static Nonterm OPTION495 = new Nonterm("OPTION495");
static Nonterm OPTIONBODY495 = new Nonterm("OPTIONBODY495");
static Nonterm OPTION496 = new Nonterm("OPTION496");
static Nonterm OPTIONBODY496 = new Nonterm("OPTIONBODY496");
static Nonterm OPTION497 = new Nonterm("OPTION497");
static Nonterm OPTIONBODY497 = new Nonterm("OPTIONBODY497");
static Nonterm OPTION498 = new Nonterm("OPTION498");
static Nonterm OPTIONBODY498 = new Nonterm("OPTIONBODY498");
static Nonterm OPTION499 = new Nonterm("OPTION499");
static Nonterm OPTIONBODY499 = new Nonterm("OPTIONBODY499");

static Token T_until = new Token("T_until", YyTokens.T_until);
static Token T_par = new Token("T_par", YyTokens.T_par);
static Token T_seq = new Token("T_seq", YyTokens.T_seq);
static Token T_onexit = new Token("T_onexit", YyTokens.T_onexit);
static Token T_inv = new Token("T_inv", YyTokens.T_inv);
static Token T_onentry = new Token("T_onentry", YyTokens.T_onentry);
static Token T_cont = new Token("T_cont", YyTokens.T_cont);
static Token T_assert = new Token("T_assert", YyTokens.T_assert);
static Token T_violates = new Token("T_violates", YyTokens.T_violates);
static Token T_find = new Token("T_find", YyTokens.T_find);
static Token T_notinv = new Token("T_notinv", YyTokens.T_notinv);
static Token T_finished = new Token("T_finished", YyTokens.T_finished);
static Token T_duration = new Token("T_duration", YyTokens.T_duration);
static Token T_at = new Token("T_at", YyTokens.T_at);
static Token T_prev = new Token("T_prev", YyTokens.T_prev);
static Token T_values = new Token("T_values", YyTokens.T_values);
static Token T_history = new Token("T_history", YyTokens.T_history);
static Token T_delta = new Token("T_delta", YyTokens.T_delta);
static Token T_stream = new Token("T_stream", YyTokens.T_stream);
static Token T_wait = new Token("T_wait", YyTokens.T_wait);
static Token T_timestamp = new Token("T_timestamp", YyTokens.T_timestamp);
static Token T_null = new Token("T_null", YyTokens.T_null);
static Token T_case = new Token("T_case", YyTokens.T_case);
static Token T_select = new Token("T_select", YyTokens.T_select);
static Token T_if = new Token("T_if", YyTokens.T_if);
static Token T_do = new Token("T_do", YyTokens.T_do);
static Token T_while = new Token("T_while", YyTokens.T_while);
static Token T_for = new Token("T_for", YyTokens.T_for);
static Token T_log = new Token("T_log", YyTokens.T_log);
static Token T__atsign__greater_ = new Token("T__atsign__greater_", YyTokens.T__atsign__greater_);
static Token T__less__atsign_ = new Token("T__less__atsign_", YyTokens.T__less__atsign_);
static Token T__greater__greater_ = new Token("T__greater__greater_", YyTokens.T__greater__greater_);
static Token T__less__less_ = new Token("T__less__less_", YyTokens.T__less__less_);
static Token T__exclamation__equal_ = new Token("T__exclamation__equal_", YyTokens.T__exclamation__equal_);
static Token T__equal__equal_ = new Token("T__equal__equal_", YyTokens.T__equal__equal_);
static Token T__less__equal_ = new Token("T__less__equal_", YyTokens.T__less__equal_);
static Token T__greater__equal_ = new Token("T__greater__equal_", YyTokens.T__greater__equal_);
static Token T__greater_ = new Token("T__greater_", YyTokens.T__greater_);
static Token T__less_ = new Token("T__less_", YyTokens.T__less_);
static Token T_rem = new Token("T_rem", YyTokens.T_rem);
static Token T_mod = new Token("T_mod", YyTokens.T_mod);
static Token T__slash_ = new Token("T__slash_", YyTokens.T__slash_);
static Token T__plus_ = new Token("T__plus_", YyTokens.T__plus_);
static Token T_now = new Token("T_now", YyTokens.T_now);
static Token T_getverdict = new Token("T_getverdict", YyTokens.T_getverdict);
static Token T_not4b = new Token("T_not4b", YyTokens.T_not4b);
static Token T_and4b = new Token("T_and4b", YyTokens.T_and4b);
static Token T_xor4b = new Token("T_xor4b", YyTokens.T_xor4b);
static Token T_or4b = new Token("T_or4b", YyTokens.T_or4b);
static Token T_not = new Token("T_not", YyTokens.T_not);
static Token T_and = new Token("T_and", YyTokens.T_and);
static Token T_xor = new Token("T_xor", YyTokens.T_xor);
static Token T_or = new Token("T_or", YyTokens.T_or);
static Token T_deactivate = new Token("T_deactivate", YyTokens.T_deactivate);
static Token T_activate = new Token("T_activate", YyTokens.T_activate);
static Token T_goto = new Token("T_goto", YyTokens.T_goto);
static Token T_label = new Token("T_label", YyTokens.T_label);
static Token T_interleave = new Token("T_interleave", YyTokens.T_interleave);
static Token T_else = new Token("T_else", YyTokens.T_else);
static Token T_alt = new Token("T_alt", YyTokens.T_alt);
static Token T_action = new Token("T_action", YyTokens.T_action);
static Token T_setverdict = new Token("T_setverdict", YyTokens.T_setverdict);
static Token T_continue = new Token("T_continue", YyTokens.T_continue);
static Token T_break = new Token("T_break", YyTokens.T_break);
static Token T_repeat = new Token("T_repeat", YyTokens.T_repeat);
static Token T_stepsize = new Token("T_stepsize", YyTokens.T_stepsize);
static Token T_extension = new Token("T_extension", YyTokens.T_extension);
static Token T_display = new Token("T_display", YyTokens.T_display);
static Token T_variant = new Token("T_variant", YyTokens.T_variant);
static Token T_encode = new Token("T_encode", YyTokens.T_encode);
static Token T_override = new Token("T_override", YyTokens.T_override);
static Token T_with = new Token("T_with", YyTokens.T_with);
static Token T_present = new Token("T_present", YyTokens.T_present);
static Token T_char = new Token("T_char", YyTokens.T_char);
static Token T_error = new Token("T_error", YyTokens.T_error);
static Token T_none = new Token("T_none", YyTokens.T_none);
static Token T_inconc = new Token("T_inconc", YyTokens.T_inconc);
static Token T_fail = new Token("T_fail", YyTokens.T_fail);
static Token T_pass = new Token("T_pass", YyTokens.T_pass);
static Token T_false = new Token("T_false", YyTokens.T_false);
static Token T_true = new Token("T_true", YyTokens.T_true);
static Token T__underscore_xxx_underscore_ = new Token("T__underscore_xxx_underscore_", YyTokens.T__underscore_xxx_underscore_);
static Token T_omit = new Token("T_omit", YyTokens.T_omit);
static Token T_universal = new Token("T_universal", YyTokens.T_universal);
static Token T_configuration = new Token("T_configuration", YyTokens.T_configuration);
static Token T_anytype = new Token("T_anytype", YyTokens.T_anytype);
static Token T_default = new Token("T_default", YyTokens.T_default);
static Token T_float = new Token("T_float", YyTokens.T_float);
static Token T_verdicttype = new Token("T_verdicttype", YyTokens.T_verdicttype);
static Token T_hexstring = new Token("T_hexstring", YyTokens.T_hexstring);
static Token T_octetstring = new Token("T_octetstring", YyTokens.T_octetstring);
static Token T_integer = new Token("T_integer", YyTokens.T_integer);
static Token T_charstring = new Token("T_charstring", YyTokens.T_charstring);
static Token T_boolean = new Token("T_boolean", YyTokens.T_boolean);
static Token T_bitstring = new Token("T_bitstring", YyTokens.T_bitstring);
static Token T_read = new Token("T_read", YyTokens.T_read);
static Token T_checkstate = new Token("T_checkstate", YyTokens.T_checkstate);
static Token T_halt = new Token("T_halt", YyTokens.T_halt);
static Token T_clear = new Token("T_clear", YyTokens.T_clear);
static Token T_timeout = new Token("T_timeout", YyTokens.T_timeout);
static Token T_catch = new Token("T_catch", YyTokens.T_catch);
static Token T_check = new Token("T_check", YyTokens.T_check);
static Token T_getreply = new Token("T_getreply", YyTokens.T_getreply);
static Token T_getcall = new Token("T_getcall", YyTokens.T_getcall);
static Token T_trigger = new Token("T_trigger", YyTokens.T_trigger);
static Token T_sender = new Token("T_sender", YyTokens.T_sender);
static Token T__minus__greater_ = new Token("T__minus__greater_", YyTokens.T__minus__greater_);
static Token T_receive = new Token("T_receive", YyTokens.T_receive);
static Token T_raise = new Token("T_raise", YyTokens.T_raise);
static Token T_value = new Token("T_value", YyTokens.T_value);
static Token T_reply = new Token("T_reply", YyTokens.T_reply);
static Token T_nowait = new Token("T_nowait", YyTokens.T_nowait);
static Token T_call = new Token("T_call", YyTokens.T_call);
static Token T_to = new Token("T_to", YyTokens.T_to);
static Token T_send = new Token("T_send", YyTokens.T_send);
static Token T_kill = new Token("T_kill", YyTokens.T_kill);
static Token T_start = new Token("T_start", YyTokens.T_start);
static Token T_disconnect = new Token("T_disconnect", YyTokens.T_disconnect);
static Token T_connect = new Token("T_connect", YyTokens.T_connect);
static Token T_running = new Token("T_running", YyTokens.T_running);
static Token T_any = new Token("T_any", YyTokens.T_any);
static Token T_killed = new Token("T_killed", YyTokens.T_killed);
static Token T_done = new Token("T_done", YyTokens.T_done);
static Token T_static = new Token("T_static", YyTokens.T_static);
static Token T_alive = new Token("T_alive", YyTokens.T_alive);
static Token T_create = new Token("T_create", YyTokens.T_create);
static Token T_mtc = new Token("T_mtc", YyTokens.T_mtc);
static Token T_timer = new Token("T_timer", YyTokens.T_timer);
static Token T_var = new Token("T_var", YyTokens.T_var);
static Token T_stop = new Token("T_stop", YyTokens.T_stop);
static Token T_control = new Token("T_control", YyTokens.T_control);
static Token T_external = new Token("T_external", YyTokens.T_external);
static Token T_recursive = new Token("T_recursive", YyTokens.T_recursive);
static Token T_from = new Token("T_from", YyTokens.T_from);
static Token T_modulepar = new Token("T_modulepar", YyTokens.T_modulepar);
static Token T_group = new Token("T_group", YyTokens.T_group);
static Token T_except = new Token("T_except", YyTokens.T_except);
static Token T_import = new Token("T_import", YyTokens.T_import);
static Token T_altstep = new Token("T_altstep", YyTokens.T_altstep);
static Token T_execute = new Token("T_execute", YyTokens.T_execute);
static Token T_system = new Token("T_system", YyTokens.T_system);
static Token T_testcase = new Token("T_testcase", YyTokens.T_testcase);
static Token T_exception = new Token("T_exception", YyTokens.T_exception);
static Token T_noblock = new Token("T_noblock", YyTokens.T_noblock);
static Token T_signature = new Token("T_signature", YyTokens.T_signature);
static Token T_apply = new Token("T_apply", YyTokens.T_apply);
static Token T_self = new Token("T_self", YyTokens.T_self);
static Token T_on = new Token("T_on", YyTokens.T_on);
static Token T_runs = new Token("T_runs", YyTokens.T_runs);
static Token T_return = new Token("T_return", YyTokens.T_return);
static Token T_function = new Token("T_function", YyTokens.T_function);
static Token T_valueof = new Token("T_valueof", YyTokens.T_valueof);
static Token T_match = new Token("T_match", YyTokens.T_match);
static Token T__colon_ = new Token("T__colon_", YyTokens.T__colon_);
static Token T_infinity = new Token("T_infinity", YyTokens.T_infinity);
static Token T__exclamation_ = new Token("T__exclamation_", YyTokens.T__exclamation_);
static Token T_permutation = new Token("T_permutation", YyTokens.T_permutation);
static Token T_superset = new Token("T_superset", YyTokens.T_superset);
static Token T_subset = new Token("T_subset", YyTokens.T_subset);
static Token T_complement = new Token("T_complement", YyTokens.T_complement);
static Token T_pattern = new Token("T_pattern", YyTokens.T_pattern);
static Token T_ifpresent = new Token("T_ifpresent", YyTokens.T_ifpresent);
static Token T__asterisk_ = new Token("T__asterisk_", YyTokens.T__asterisk_);
static Token T__question_ = new Token("T__question_", YyTokens.T__question_);
static Token T__rbracket_ = new Token("T__rbracket_", YyTokens.T__rbracket_);
static Token T__lbracket_ = new Token("T__lbracket_", YyTokens.T__lbracket_);
static Token T__ampersand_ = new Token("T__ampersand_", YyTokens.T__ampersand_);
static Token T_modifies = new Token("T_modifies", YyTokens.T_modifies);
static Token T_template = new Token("T_template", YyTokens.T_template);
static Token T_const = new Token("T_const", YyTokens.T_const);
static Token T__colon__equal_ = new Token("T__colon__equal_", YyTokens.T__colon__equal_);
static Token T__dot_ = new Token("T__dot_", YyTokens.T__dot_);
static Token T_extends = new Token("T_extends", YyTokens.T_extends);
static Token T_component = new Token("T_component", YyTokens.T_component);
static Token T_mixed = new Token("T_mixed", YyTokens.T_mixed);
static Token T_procedure = new Token("T_procedure", YyTokens.T_procedure);
static Token T_all = new Token("T_all", YyTokens.T_all);
static Token T_inout = new Token("T_inout", YyTokens.T_inout);
static Token T_out = new Token("T_out", YyTokens.T_out);
static Token T_in = new Token("T_in", YyTokens.T_in);
static Token T_unmap = new Token("T_unmap", YyTokens.T_unmap);
static Token T_param = new Token("T_param", YyTokens.T_param);
static Token T_map = new Token("T_map", YyTokens.T_map);
static Token T_realtime = new Token("T_realtime", YyTokens.T_realtime);
static Token T_message = new Token("T_message", YyTokens.T_message);
static Token T_port = new Token("T_port", YyTokens.T_port);
static Token T_length = new Token("T_length", YyTokens.T_length);
static Token T__dot__dot_ = new Token("T__dot__dot_", YyTokens.T__dot__dot_);
static Token T__rparen_ = new Token("T__rparen_", YyTokens.T__rparen_);
static Token T__minus_ = new Token("T__minus_", YyTokens.T__minus_);
static Token T__lparen_ = new Token("T__lparen_", YyTokens.T__lparen_);
static Token T_enumerated = new Token("T_enumerated", YyTokens.T_enumerated);
static Token T_of = new Token("T_of", YyTokens.T_of);
static Token T_set = new Token("T_set", YyTokens.T_set);
static Token T_union = new Token("T_union", YyTokens.T_union);
static Token T_optional = new Token("T_optional", YyTokens.T_optional);
static Token T_address = new Token("T_address", YyTokens.T_address);
static Token T_record = new Token("T_record", YyTokens.T_record);
static Token T_type = new Token("T_type", YyTokens.T_type);
static Token T_friend = new Token("T_friend", YyTokens.T_friend);
static Token T_private = new Token("T_private", YyTokens.T_private);
static Token T_public = new Token("T_public", YyTokens.T_public);
static Token T__comma_ = new Token("T__comma_", YyTokens.T__comma_);
static Token T_language = new Token("T_language", YyTokens.T_language);
static Token T__semicolon_ = new Token("T__semicolon_", YyTokens.T__semicolon_);
static Token T__rbrace_ = new Token("T__rbrace_", YyTokens.T__rbrace_);
static Token T__lbrace_ = new Token("T__lbrace_", YyTokens.T__lbrace_);
static Token T_module = new Token("T_module", YyTokens.T_module);
public static void DefineGrammar0()
{
   TTCN3Module.Rules = new Rule[] {
   new Rule (0,TTCN3Module, new Symbol[] {
   T_module
,
   ModuleId
,
   T__lbrace_
,
   OPTION34
,
   OPTION35
,
   T__rbrace_
,
   OPTION36
,
   OPTION37
   })
   };
   // *****  
   OPTION34.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1, OPTION34, new Symbol[] {
         OPTIONBODY34
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (2, OPTION34, new Symbol[] {
      } ) 
   };
   OPTIONBODY34.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (3,OPTIONBODY34, new Symbol[] {
   ModuleDefinitionsList
   })
   // *****  
   };
   // *****  
   OPTION35.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (4, OPTION35, new Symbol[] {
         OPTIONBODY35
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (5, OPTION35, new Symbol[] {
      } ) 
   };
   OPTIONBODY35.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (6,OPTIONBODY35, new Symbol[] {
   ModuleControlPart
   })
   // *****  
   };
   // *****  
   OPTION36.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (7, OPTION36, new Symbol[] {
         OPTIONBODY36
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (8, OPTION36, new Symbol[] {
      } ) 
   };
   OPTIONBODY36.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (9,OPTIONBODY36, new Symbol[] {
   WithStatement
   })
   // *****  
   };
   // *****  
   OPTION37.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (10, OPTION37, new Symbol[] {
         OPTIONBODY37
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (11, OPTION37, new Symbol[] {
      } ) 
   };
   OPTIONBODY37.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (12,OPTIONBODY37, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   ModuleId.Rules = new Rule[] {
   new Rule (13,ModuleId, new Symbol[] {
   Identifier
,
   OPTION38
   })
   };
   // *****  
   OPTION38.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (14, OPTION38, new Symbol[] {
         OPTIONBODY38
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (15, OPTION38, new Symbol[] {
      } ) 
   };
   OPTIONBODY38.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (16,OPTIONBODY38, new Symbol[] {
   LanguageSpec
   })
   // *****  
   };
   LanguageSpec.Rules = new Rule[] {
   new Rule (17,LanguageSpec, new Symbol[] {
   T_language
,
   FreeText
,
   LOOP39
   })
   };
   // ***** 
   LOOP39.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (18, LOOP39, new Symbol[] {
         LOOPBODY39,
         LOOP39
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (19, LOOP39, new Symbol[] {
      } ) 
   };
   LOOPBODY39.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (20,LOOPBODY39, new Symbol[] {
   T__comma_
,
   FreeText
   })
   // ***** 
   };
   ModuleDefinitionsList.Rules = new Rule[] {
   new Rule (21,ModuleDefinitionsList, new Symbol[] {
   LOOPPLUS40
   })
   };
   // ***** 
   LOOPPLUS40.Rules = new Rule[] {
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
      new Rule (22, LOOPPLUS40, new Symbol[] {
         LOOPBODY40,
         LOOP40
      } ) 
   };
   LOOP40.Rules = new Rule[] {
   // ***** (2) LOOP ::= LOOPBODY LOOP 
      new Rule (23, LOOP40, new Symbol[] {
         LOOPBODY40,
         LOOP40
      } ) ,
   // ***** (3) LOOP ::= empty 
      new Rule (24, LOOP40, new Symbol[] {
      } ) 
   };
   LOOPBODY40.Rules = new Rule[] {
   // ***** (4) LOOPBODY ::= ... 
   new Rule (25,LOOPBODY40, new Symbol[] {
   ModuleDefinition
,
   OPTION41
   })
   // *****  
   };
   // *****  
   OPTION41.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (26, OPTION41, new Symbol[] {
         OPTIONBODY41
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (27, OPTION41, new Symbol[] {
      } ) 
   };
   OPTIONBODY41.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (28,OPTIONBODY41, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   ModuleDefinition.Rules = new Rule[] {
   new Rule (29,ModuleDefinition, new Symbol[] {
   SUB42
,
   OPTION50
   })
   };
   SUB42.Rules = new Rule[] {
   new Rule (30,SUB42, new Symbol[] {
   SUB43
   })
,
   new Rule (31,SUB42, new Symbol[] {
   SUB46
   })
,
   new Rule (32,SUB42, new Symbol[] {
   SUB48
   })
   };
   SUB43.Rules = new Rule[] {
   new Rule (33,SUB43, new Symbol[] {
   OPTION44
,
   SUB45
   })
   };
   // *****  
   OPTION44.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (34, OPTION44, new Symbol[] {
         OPTIONBODY44
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (35, OPTION44, new Symbol[] {
      } ) 
   };
   OPTIONBODY44.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (36,OPTIONBODY44, new Symbol[] {
   Visibility
   })
   // *****  
   };
   SUB45.Rules = new Rule[] {
   new Rule (37,SUB45, new Symbol[] {
   TypeDef
   })
,
   new Rule (38,SUB45, new Symbol[] {
   ConstDef
   })
,
   new Rule (39,SUB45, new Symbol[] {
   TemplateDef
   })
,
   new Rule (40,SUB45, new Symbol[] {
   ModuleParDef
   })
,
   new Rule (41,SUB45, new Symbol[] {
   FunctionDef
   })
,
   new Rule (42,SUB45, new Symbol[] {
   SignatureDef
   })
,
   new Rule (43,SUB45, new Symbol[] {
   TestcaseDef
   })
,
   new Rule (44,SUB45, new Symbol[] {
   AltstepDef
   })
,
   new Rule (45,SUB45, new Symbol[] {
   ImportDef
   })
,
   new Rule (46,SUB45, new Symbol[] {
   ExtFunctionDef
   })
,
   new Rule (47,SUB45, new Symbol[] {
   ExtConstDef
   })
,
   new Rule (48,SUB45, new Symbol[] {
   ConfigurationDef
   })
   };
   SUB46.Rules = new Rule[] {
   new Rule (49,SUB46, new Symbol[] {
   OPTION47
,
   GroupDef
   })
   };
   // *****  
   OPTION47.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (50, OPTION47, new Symbol[] {
         OPTIONBODY47
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (51, OPTION47, new Symbol[] {
      } ) 
   };
   OPTIONBODY47.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (52,OPTIONBODY47, new Symbol[] {
   T_public
   })
   // *****  
   };
   SUB48.Rules = new Rule[] {
   new Rule (53,SUB48, new Symbol[] {
   OPTION49
,
   FriendModuleDef
   })
   };
   // *****  
   OPTION49.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (54, OPTION49, new Symbol[] {
         OPTIONBODY49
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (55, OPTION49, new Symbol[] {
      } ) 
   };
   OPTIONBODY49.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (56,OPTIONBODY49, new Symbol[] {
   T_private
   })
   // *****  
   };
   // *****  
   OPTION50.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (57, OPTION50, new Symbol[] {
         OPTIONBODY50
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (58, OPTION50, new Symbol[] {
      } ) 
   };
   OPTIONBODY50.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (59,OPTIONBODY50, new Symbol[] {
   WithStatement
   })
   // *****  
   };
   Visibility.Rules = new Rule[] {
   new Rule (60,Visibility, new Symbol[] {
   T_public
   })
,
   new Rule (61,Visibility, new Symbol[] {
   T_friend
   })
,
   new Rule (62,Visibility, new Symbol[] {
   T_private
   })
   };
   TypeDef.Rules = new Rule[] {
   new Rule (63,TypeDef, new Symbol[] {
   T_type
,
   TypeDefBody
   })
   };
   TypeDefBody.Rules = new Rule[] {
   new Rule (64,TypeDefBody, new Symbol[] {
   StructuredTypeDef
   })
,
   new Rule (65,TypeDefBody, new Symbol[] {
   SubTypeDef
   })
   };
   StructuredTypeDef.Rules = new Rule[] {
   new Rule (66,StructuredTypeDef, new Symbol[] {
   RecordDef
   })
,
   new Rule (67,StructuredTypeDef, new Symbol[] {
   UnionDef
   })
,
   new Rule (68,StructuredTypeDef, new Symbol[] {
   SetDef
   })
,
   new Rule (69,StructuredTypeDef, new Symbol[] {
   RecordOfDef
   })
,
   new Rule (70,StructuredTypeDef, new Symbol[] {
   SetOfDef
   })
,
   new Rule (71,StructuredTypeDef, new Symbol[] {
   EnumDef
   })
,
   new Rule (72,StructuredTypeDef, new Symbol[] {
   PortDef
   })
,
   new Rule (73,StructuredTypeDef, new Symbol[] {
   ComponentDef
   })
,
   new Rule (74,StructuredTypeDef, new Symbol[] {
   BehaviourDef
   })
   };
   RecordDef.Rules = new Rule[] {
   new Rule (75,RecordDef, new Symbol[] {
   T_record
,
   StructDefBody
   })
   };
   StructDefBody.Rules = new Rule[] {
   new Rule (76,StructDefBody, new Symbol[] {
   SUB51
,
   OPTION52
,
   OPTION53
,
   T__lbrace_
,
   OPTION54
,
   T__rbrace_
   })
   };
   SUB51.Rules = new Rule[] {
   new Rule (77,SUB51, new Symbol[] {
   Identifier
   })
,
   new Rule (78,SUB51, new Symbol[] {
   T_address
   })
   };
   // *****  
   OPTION52.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (79, OPTION52, new Symbol[] {
         OPTIONBODY52
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (80, OPTION52, new Symbol[] {
      } ) 
   };
   OPTIONBODY52.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (81,OPTIONBODY52, new Symbol[] {
   FormalTypeParList
   })
   // *****  
   };
   // *****  
   OPTION53.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (82, OPTION53, new Symbol[] {
         OPTIONBODY53
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (83, OPTION53, new Symbol[] {
      } ) 
   };
   OPTIONBODY53.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (84,OPTIONBODY53, new Symbol[] {
   StructDefFormalParList
   })
   // *****  
   };
   // *****  
   OPTION54.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (85, OPTION54, new Symbol[] {
         OPTIONBODY54
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (86, OPTION54, new Symbol[] {
      } ) 
   };
   OPTIONBODY54.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (87,OPTIONBODY54, new Symbol[] {
   StructFieldDef
,
   LOOP55
   })
   // *****  
   };
   // ***** 
   LOOP55.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (88, LOOP55, new Symbol[] {
         LOOPBODY55,
         LOOP55
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (89, LOOP55, new Symbol[] {
      } ) 
   };
   LOOPBODY55.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (90,LOOPBODY55, new Symbol[] {
   T__comma_
,
   StructFieldDef
   })
   // ***** 
   };
   StructFieldDef.Rules = new Rule[] {
   new Rule (91,StructFieldDef, new Symbol[] {
   SUB56
,
   Identifier
,
   OPTION57
,
   OPTION58
,
   OPTION59
   })
   };
   SUB56.Rules = new Rule[] {
   new Rule (92,SUB56, new Symbol[] {
   Type
   })
,
   new Rule (93,SUB56, new Symbol[] {
   NestedTypeDef
   })
   };
   // *****  
   OPTION57.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (94, OPTION57, new Symbol[] {
         OPTIONBODY57
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (95, OPTION57, new Symbol[] {
      } ) 
   };
   OPTIONBODY57.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (96,OPTIONBODY57, new Symbol[] {
   ArrayDef
   })
   // *****  
   };
   // *****  
   OPTION58.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (97, OPTION58, new Symbol[] {
         OPTIONBODY58
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (98, OPTION58, new Symbol[] {
      } ) 
   };
   OPTIONBODY58.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (99,OPTIONBODY58, new Symbol[] {
   SubTypeSpec
   })
   // *****  
   };
   // *****  
   OPTION59.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (100, OPTION59, new Symbol[] {
         OPTIONBODY59
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (101, OPTION59, new Symbol[] {
      } ) 
   };
   OPTIONBODY59.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (102,OPTIONBODY59, new Symbol[] {
   T_optional
   })
   // *****  
   };
   NestedTypeDef.Rules = new Rule[] {
   new Rule (103,NestedTypeDef, new Symbol[] {
   NestedRecordDef
   })
,
   new Rule (104,NestedTypeDef, new Symbol[] {
   NestedUnionDef
   })
,
   new Rule (105,NestedTypeDef, new Symbol[] {
   NestedSetDef
   })
,
   new Rule (106,NestedTypeDef, new Symbol[] {
   NestedRecordOfDef
   })
,
   new Rule (107,NestedTypeDef, new Symbol[] {
   NestedSetOfDef
   })
,
   new Rule (108,NestedTypeDef, new Symbol[] {
   NestedEnumDef
   })
,
   new Rule (109,NestedTypeDef, new Symbol[] {
   NestedBehaviourDef
   })
   };
   NestedRecordDef.Rules = new Rule[] {
   new Rule (110,NestedRecordDef, new Symbol[] {
   T_record
,
   T__lbrace_
,
   OPTION60
,
   T__rbrace_
   })
   };
   // *****  
   OPTION60.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (111, OPTION60, new Symbol[] {
         OPTIONBODY60
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (112, OPTION60, new Symbol[] {
      } ) 
   };
   OPTIONBODY60.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (113,OPTIONBODY60, new Symbol[] {
   StructFieldDef
,
   LOOP61
   })
   // *****  
   };
   // ***** 
   LOOP61.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (114, LOOP61, new Symbol[] {
         LOOPBODY61,
         LOOP61
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (115, LOOP61, new Symbol[] {
      } ) 
   };
   LOOPBODY61.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (116,LOOPBODY61, new Symbol[] {
   T__comma_
,
   StructFieldDef
   })
   // ***** 
   };
   NestedUnionDef.Rules = new Rule[] {
   new Rule (117,NestedUnionDef, new Symbol[] {
   T_union
,
   T__lbrace_
,
   UnionFieldDef
,
   LOOP62
,
   T__rbrace_
   })
   };
   // ***** 
   LOOP62.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (118, LOOP62, new Symbol[] {
         LOOPBODY62,
         LOOP62
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (119, LOOP62, new Symbol[] {
      } ) 
   };
   LOOPBODY62.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (120,LOOPBODY62, new Symbol[] {
   T__comma_
,
   UnionFieldDef
   })
   // ***** 
   };
   NestedSetDef.Rules = new Rule[] {
   new Rule (121,NestedSetDef, new Symbol[] {
   T_set
,
   T__lbrace_
,
   OPTION63
,
   T__rbrace_
   })
   };
   // *****  
   OPTION63.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (122, OPTION63, new Symbol[] {
         OPTIONBODY63
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (123, OPTION63, new Symbol[] {
      } ) 
   };
   OPTIONBODY63.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (124,OPTIONBODY63, new Symbol[] {
   StructFieldDef
,
   LOOP64
   })
   // *****  
   };
   // ***** 
   LOOP64.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (125, LOOP64, new Symbol[] {
         LOOPBODY64,
         LOOP64
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (126, LOOP64, new Symbol[] {
      } ) 
   };
   LOOPBODY64.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (127,LOOPBODY64, new Symbol[] {
   T__comma_
,
   StructFieldDef
   })
   // ***** 
   };
   NestedRecordOfDef.Rules = new Rule[] {
   new Rule (128,NestedRecordOfDef, new Symbol[] {
   T_record
,
   OPTION65
,
   T_of
,
   SUB66
   })
   };
   // *****  
   OPTION65.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (129, OPTION65, new Symbol[] {
         OPTIONBODY65
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (130, OPTION65, new Symbol[] {
      } ) 
   };
   OPTIONBODY65.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (131,OPTIONBODY65, new Symbol[] {
   StringLength
   })
   // *****  
   };
   SUB66.Rules = new Rule[] {
   new Rule (132,SUB66, new Symbol[] {
   Type
   })
,
   new Rule (133,SUB66, new Symbol[] {
   NestedTypeDef
   })
   };
   NestedSetOfDef.Rules = new Rule[] {
   new Rule (134,NestedSetOfDef, new Symbol[] {
   T_set
,
   OPTION67
,
   T_of
,
   SUB68
   })
   };
   // *****  
   OPTION67.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (135, OPTION67, new Symbol[] {
         OPTIONBODY67
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (136, OPTION67, new Symbol[] {
      } ) 
   };
   OPTIONBODY67.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (137,OPTIONBODY67, new Symbol[] {
   StringLength
   })
   // *****  
   };
   SUB68.Rules = new Rule[] {
   new Rule (138,SUB68, new Symbol[] {
   Type
   })
,
   new Rule (139,SUB68, new Symbol[] {
   NestedTypeDef
   })
   };
   NestedEnumDef.Rules = new Rule[] {
   new Rule (140,NestedEnumDef, new Symbol[] {
   T_enumerated
,
   T__lbrace_
,
   EnumerationList
,
   T__rbrace_
   })
   };
   UnionDef.Rules = new Rule[] {
   new Rule (141,UnionDef, new Symbol[] {
   T_union
,
   UnionDefBody
   })
   };
   UnionDefBody.Rules = new Rule[] {
   new Rule (142,UnionDefBody, new Symbol[] {
   SUB69
,
   OPTION70
,
   OPTION71
,
   T__lbrace_
,
   UnionFieldDef
,
   LOOP72
,
   T__rbrace_
   })
   };
   SUB69.Rules = new Rule[] {
   new Rule (143,SUB69, new Symbol[] {
   Identifier
   })
,
   new Rule (144,SUB69, new Symbol[] {
   T_address
   })
   };
   // *****  
   OPTION70.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (145, OPTION70, new Symbol[] {
         OPTIONBODY70
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (146, OPTION70, new Symbol[] {
      } ) 
   };
   OPTIONBODY70.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (147,OPTIONBODY70, new Symbol[] {
   FormalTypeParList
   })
   // *****  
   };
   // *****  
   OPTION71.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (148, OPTION71, new Symbol[] {
         OPTIONBODY71
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (149, OPTION71, new Symbol[] {
      } ) 
   };
   OPTIONBODY71.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (150,OPTIONBODY71, new Symbol[] {
   StructDefFormalParList
   })
   // *****  
   };
   // ***** 
   LOOP72.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (151, LOOP72, new Symbol[] {
         LOOPBODY72,
         LOOP72
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (152, LOOP72, new Symbol[] {
      } ) 
   };
   LOOPBODY72.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (153,LOOPBODY72, new Symbol[] {
   T__comma_
,
   UnionFieldDef
   })
   // ***** 
   };
   UnionFieldDef.Rules = new Rule[] {
   new Rule (154,UnionFieldDef, new Symbol[] {
   SUB73
,
   Identifier
,
   OPTION74
,
   OPTION75
   })
   };
   SUB73.Rules = new Rule[] {
   new Rule (155,SUB73, new Symbol[] {
   Type
   })
,
   new Rule (156,SUB73, new Symbol[] {
   NestedTypeDef
   })
   };
   // *****  
   OPTION74.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (157, OPTION74, new Symbol[] {
         OPTIONBODY74
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (158, OPTION74, new Symbol[] {
      } ) 
   };
   OPTIONBODY74.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (159,OPTIONBODY74, new Symbol[] {
   ArrayDef
   })
   // *****  
   };
   // *****  
   OPTION75.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (160, OPTION75, new Symbol[] {
         OPTIONBODY75
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (161, OPTION75, new Symbol[] {
      } ) 
   };
   OPTIONBODY75.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (162,OPTIONBODY75, new Symbol[] {
   SubTypeSpec
   })
   // *****  
   };
   SetDef.Rules = new Rule[] {
   new Rule (163,SetDef, new Symbol[] {
   T_set
,
   StructDefBody
   })
   };
   RecordOfDef.Rules = new Rule[] {
   new Rule (164,RecordOfDef, new Symbol[] {
   T_record
,
   OPTION76
,
   T_of
,
   StructOfDefBody
   })
   };
   // *****  
   OPTION76.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (165, OPTION76, new Symbol[] {
         OPTIONBODY76
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (166, OPTION76, new Symbol[] {
      } ) 
   };
   OPTIONBODY76.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (167,OPTIONBODY76, new Symbol[] {
   StringLength
   })
   // *****  
   };
   StructOfDefBody.Rules = new Rule[] {
   new Rule (168,StructOfDefBody, new Symbol[] {
   SUB77
,
   SUB78
,
   OPTION79
,
   OPTION80
,
   OPTION81
   })
   };
   SUB77.Rules = new Rule[] {
   new Rule (169,SUB77, new Symbol[] {
   Type
   })
,
   new Rule (170,SUB77, new Symbol[] {
   NestedTypeDef
   })
   };
   SUB78.Rules = new Rule[] {
   new Rule (171,SUB78, new Symbol[] {
   Identifier
   })
,
   new Rule (172,SUB78, new Symbol[] {
   T_address
   })
   };
   // *****  
   OPTION79.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (173, OPTION79, new Symbol[] {
         OPTIONBODY79
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (174, OPTION79, new Symbol[] {
      } ) 
   };
   OPTIONBODY79.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (175,OPTIONBODY79, new Symbol[] {
   FormalTypeParList
   })
   // *****  
   };
   // *****  
   OPTION80.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (176, OPTION80, new Symbol[] {
         OPTIONBODY80
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (177, OPTION80, new Symbol[] {
      } ) 
   };
   OPTIONBODY80.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (178,OPTIONBODY80, new Symbol[] {
   StructDefFormalParList
   })
   // *****  
   };
   // *****  
   OPTION81.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (179, OPTION81, new Symbol[] {
         OPTIONBODY81
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (180, OPTION81, new Symbol[] {
      } ) 
   };
   OPTIONBODY81.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (181,OPTIONBODY81, new Symbol[] {
   SubTypeSpec
   })
   // *****  
   };
   SetOfDef.Rules = new Rule[] {
   new Rule (182,SetOfDef, new Symbol[] {
   T_set
,
   OPTION82
,
   T_of
,
   StructOfDefBody
   })
   };
   // *****  
   OPTION82.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (183, OPTION82, new Symbol[] {
         OPTIONBODY82
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (184, OPTION82, new Symbol[] {
      } ) 
   };
   OPTIONBODY82.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (185,OPTIONBODY82, new Symbol[] {
   StringLength
   })
   // *****  
   };
   EnumDef.Rules = new Rule[] {
   new Rule (186,EnumDef, new Symbol[] {
   T_enumerated
,
   SUB83
,
   OPTION84
,
   T__lbrace_
,
   EnumerationList
,
   T__rbrace_
   })
   };
   SUB83.Rules = new Rule[] {
   new Rule (187,SUB83, new Symbol[] {
   Identifier
   })
,
   new Rule (188,SUB83, new Symbol[] {
   T_address
   })
   };
   // *****  
   OPTION84.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (189, OPTION84, new Symbol[] {
         OPTIONBODY84
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (190, OPTION84, new Symbol[] {
      } ) 
   };
   OPTIONBODY84.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (191,OPTIONBODY84, new Symbol[] {
   StructDefFormalParList
   })
   // *****  
   };
   EnumerationList.Rules = new Rule[] {
   new Rule (192,EnumerationList, new Symbol[] {
   Enumeration
,
   LOOP85
   })
   };
   // ***** 
   LOOP85.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (193, LOOP85, new Symbol[] {
         LOOPBODY85,
         LOOP85
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (194, LOOP85, new Symbol[] {
      } ) 
   };
   LOOPBODY85.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (195,LOOPBODY85, new Symbol[] {
   T__comma_
,
   Enumeration
   })
   // ***** 
   };
   Enumeration.Rules = new Rule[] {
   new Rule (196,Enumeration, new Symbol[] {
   Identifier
,
   OPTION86
   })
   };
   // *****  
   OPTION86.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (197, OPTION86, new Symbol[] {
         OPTIONBODY86
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (198, OPTION86, new Symbol[] {
      } ) 
   };
   OPTIONBODY86.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (199,OPTIONBODY86, new Symbol[] {
   T__lparen_
,
   OPTION87
,
   Number
,
   T__rparen_
   })
   // *****  
   };
   // *****  
   OPTION87.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (200, OPTION87, new Symbol[] {
         OPTIONBODY87
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (201, OPTION87, new Symbol[] {
      } ) 
   };
   OPTIONBODY87.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (202,OPTIONBODY87, new Symbol[] {
   T__minus_
   })
   // *****  
   };
   SubTypeDef.Rules = new Rule[] {
   new Rule (203,SubTypeDef, new Symbol[] {
   Type
,
   SUB88
,
   OPTION89
,
   OPTION90
,
   OPTION91
,
   OPTION92
   })
   };
   SUB88.Rules = new Rule[] {
   new Rule (204,SUB88, new Symbol[] {
   Identifier
   })
,
   new Rule (205,SUB88, new Symbol[] {
   T_address
   })
   };
   // *****  
   OPTION89.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (206, OPTION89, new Symbol[] {
         OPTIONBODY89
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (207, OPTION89, new Symbol[] {
      } ) 
   };
   OPTIONBODY89.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (208,OPTIONBODY89, new Symbol[] {
   FormalTypeParList
   })
   // *****  
   };
   // *****  
   OPTION90.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (209, OPTION90, new Symbol[] {
         OPTIONBODY90
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (210, OPTION90, new Symbol[] {
      } ) 
   };
   OPTIONBODY90.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (211,OPTIONBODY90, new Symbol[] {
   StructDefFormalParList
   })
   // *****  
   };
   // *****  
   OPTION91.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (212, OPTION91, new Symbol[] {
         OPTIONBODY91
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (213, OPTION91, new Symbol[] {
      } ) 
   };
   OPTIONBODY91.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (214,OPTIONBODY91, new Symbol[] {
   ArrayDef
   })
   // *****  
   };
   // *****  
   OPTION92.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (215, OPTION92, new Symbol[] {
         OPTIONBODY92
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (216, OPTION92, new Symbol[] {
      } ) 
   };
   OPTIONBODY92.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (217,OPTIONBODY92, new Symbol[] {
   SubTypeSpec
   })
   // *****  
   };
   SubTypeSpec.Rules = new Rule[] {
   new Rule (218,SubTypeSpec, new Symbol[] {
   AllowedValuesSpec
,
   OPTION93
   })
,
   new Rule (219,SubTypeSpec, new Symbol[] {
   StringLength
   })
   };
   // *****  
   OPTION93.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (220, OPTION93, new Symbol[] {
         OPTIONBODY93
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (221, OPTION93, new Symbol[] {
      } ) 
   };
   OPTIONBODY93.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (222,OPTIONBODY93, new Symbol[] {
   StringLength
   })
   // *****  
   };
   AllowedValuesSpec.Rules = new Rule[] {
   new Rule (223,AllowedValuesSpec, new Symbol[] {
   T__lparen_
,
   SUB94
,
   T__rparen_
   })
   };
   SUB94.Rules = new Rule[] {
   new Rule (224,SUB94, new Symbol[] {
   SUB95
   })
,
   new Rule (225,SUB94, new Symbol[] {
   CharStringMatch
   })
   };
   SUB95.Rules = new Rule[] {
   new Rule (226,SUB95, new Symbol[] {
   TemplateOrRange
,
   LOOP96
   })
   };
   // ***** 
   LOOP96.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (227, LOOP96, new Symbol[] {
         LOOPBODY96,
         LOOP96
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (228, LOOP96, new Symbol[] {
      } ) 
   };
   LOOPBODY96.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (229,LOOPBODY96, new Symbol[] {
   T__comma_
,
   TemplateOrRange
   })
   // ***** 
   };
   TemplateOrRange.Rules = new Rule[] {
   new Rule (230,TemplateOrRange, new Symbol[] {
   RangeDef
   })
,
   new Rule (231,TemplateOrRange, new Symbol[] {
   TemplateBody
   })
,
   new Rule (232,TemplateOrRange, new Symbol[] {
   Type
   })
   };
   RangeDef.Rules = new Rule[] {
   new Rule (233,RangeDef, new Symbol[] {
   Bound
,
   T__dot__dot_
,
   Bound
   })
   };
   StringLength.Rules = new Rule[] {
   new Rule (234,StringLength, new Symbol[] {
   T_length
,
   T__lparen_
,
   SingleExpression
,
   OPTION97
,
   T__rparen_
   })
   };
   // *****  
   OPTION97.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (235, OPTION97, new Symbol[] {
         OPTIONBODY97
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (236, OPTION97, new Symbol[] {
      } ) 
   };
   OPTIONBODY97.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (237,OPTIONBODY97, new Symbol[] {
   T__dot__dot_
,
   Bound
   })
   // *****  
   };
   PortDef.Rules = new Rule[] {
   new Rule (238,PortDef, new Symbol[] {
   T_port
,
   PortDefBody
   })
   };
   PortDefBody.Rules = new Rule[] {
   new Rule (239,PortDefBody, new Symbol[] {
   Identifier
,
   OPTION98
,
   OPTION99
,
   PortDefAttribs
   })
   };
   // *****  
   OPTION98.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (240, OPTION98, new Symbol[] {
         OPTIONBODY98
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (241, OPTION98, new Symbol[] {
      } ) 
   };
   OPTIONBODY98.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (242,OPTIONBODY98, new Symbol[] {
   FormalTypeParList
   })
   // *****  
   };
   // *****  
   OPTION99.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (243, OPTION99, new Symbol[] {
         OPTIONBODY99
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (244, OPTION99, new Symbol[] {
      } ) 
   };
   OPTIONBODY99.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (245,OPTIONBODY99, new Symbol[] {
   StructDefFormalParList
   })
   // *****  
   };
   PortDefAttribs.Rules = new Rule[] {
   new Rule (246,PortDefAttribs, new Symbol[] {
   MessageAttribs
   })
,
   new Rule (247,PortDefAttribs, new Symbol[] {
   ProcedureAttribs
   })
,
   new Rule (248,PortDefAttribs, new Symbol[] {
   MixedAttribs
   })
,
   new Rule (249,PortDefAttribs, new Symbol[] {
   StreamAttribs
   })
   };
   MessageAttribs.Rules = new Rule[] {
   new Rule (250,MessageAttribs, new Symbol[] {
   T_message
,
   OPTION100
,
   T__lbrace_
,
   LOOPPLUS101
,
   T__rbrace_
   })
   };
   // *****  
   OPTION100.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (251, OPTION100, new Symbol[] {
         OPTIONBODY100
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (252, OPTION100, new Symbol[] {
      } ) 
   };
   OPTIONBODY100.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (253,OPTIONBODY100, new Symbol[] {
   T_realtime
   })
   // *****  
   };
   // ***** 
   LOOPPLUS101.Rules = new Rule[] {
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
      new Rule (254, LOOPPLUS101, new Symbol[] {
         LOOPBODY101,
         LOOP101
      } ) 
   };
   LOOP101.Rules = new Rule[] {
   // ***** (2) LOOP ::= LOOPBODY LOOP 
      new Rule (255, LOOP101, new Symbol[] {
         LOOPBODY101,
         LOOP101
      } ) ,
   // ***** (3) LOOP ::= empty 
      new Rule (256, LOOP101, new Symbol[] {
      } ) 
   };
   LOOPBODY101.Rules = new Rule[] {
   // ***** (4) LOOPBODY ::= ... 
   new Rule (257,LOOPBODY101, new Symbol[] {
   SUB102
,
   OPTION103
   })
   // *****  
   };
   SUB102.Rules = new Rule[] {
   new Rule (258,SUB102, new Symbol[] {
   AddressDecl
   })
,
   new Rule (259,SUB102, new Symbol[] {
   MessageList
   })
,
   new Rule (260,SUB102, new Symbol[] {
   ConfigParamDef
   })
   };
   // *****  
   OPTION103.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (261, OPTION103, new Symbol[] {
         OPTIONBODY103
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (262, OPTION103, new Symbol[] {
      } ) 
   };
   OPTIONBODY103.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (263,OPTIONBODY103, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   ConfigParamDef.Rules = new Rule[] {
   new Rule (264,ConfigParamDef, new Symbol[] {
   MapParamDef
   })
,
   new Rule (265,ConfigParamDef, new Symbol[] {
   UnmapParamDef
   })
   };
   MapParamDef.Rules = new Rule[] {
   new Rule (266,MapParamDef, new Symbol[] {
   T_map
,
   T_param
,
   T__lparen_
,
   FormalValuePar
,
   LOOP104
,
   T__rparen_
   })
   };
   // ***** 
   LOOP104.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (267, LOOP104, new Symbol[] {
         LOOPBODY104,
         LOOP104
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (268, LOOP104, new Symbol[] {
      } ) 
   };
   LOOPBODY104.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (269,LOOPBODY104, new Symbol[] {
   T__comma_
,
   FormalValuePar
   })
   // ***** 
   };
   UnmapParamDef.Rules = new Rule[] {
   new Rule (270,UnmapParamDef, new Symbol[] {
   T_unmap
,
   T_param
,
   T__lparen_
,
   FormalValuePar
,
   LOOP105
,
   T__rparen_
   })
   };
   // ***** 
   LOOP105.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (271, LOOP105, new Symbol[] {
         LOOPBODY105,
         LOOP105
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (272, LOOP105, new Symbol[] {
      } ) 
   };
   LOOPBODY105.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (273,LOOPBODY105, new Symbol[] {
   T__comma_
,
   FormalValuePar
   })
   // ***** 
   };
   AddressDecl.Rules = new Rule[] {
   new Rule (274,AddressDecl, new Symbol[] {
   T_address
,
   Type
   })
   };
   MessageList.Rules = new Rule[] {
   new Rule (275,MessageList, new Symbol[] {
   Direction
,
   AllOrTypeList
   })
   };
   Direction.Rules = new Rule[] {
   new Rule (276,Direction, new Symbol[] {
   T_in
   })
,
   new Rule (277,Direction, new Symbol[] {
   T_out
   })
,
   new Rule (278,Direction, new Symbol[] {
   T_inout
   })
   };
   AllOrTypeList.Rules = new Rule[] {
   new Rule (279,AllOrTypeList, new Symbol[] {
   T_all
   })
,
   new Rule (280,AllOrTypeList, new Symbol[] {
   TypeList
   })
   };
   TypeList.Rules = new Rule[] {
   new Rule (281,TypeList, new Symbol[] {
   Type
,
   LOOP106
   })
   };
   // ***** 
   LOOP106.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (282, LOOP106, new Symbol[] {
         LOOPBODY106,
         LOOP106
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (283, LOOP106, new Symbol[] {
      } ) 
   };
   LOOPBODY106.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (284,LOOPBODY106, new Symbol[] {
   T__comma_
,
   Type
   })
   // ***** 
   };
   ProcedureAttribs.Rules = new Rule[] {
   new Rule (285,ProcedureAttribs, new Symbol[] {
   T_procedure
,
   OPTION107
,
   T__lbrace_
,
   LOOPPLUS108
,
   T__rbrace_
   })
   };
   // *****  
   OPTION107.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (286, OPTION107, new Symbol[] {
         OPTIONBODY107
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (287, OPTION107, new Symbol[] {
      } ) 
   };
   OPTIONBODY107.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (288,OPTIONBODY107, new Symbol[] {
   T_realtime
   })
   // *****  
   };
   // ***** 
   LOOPPLUS108.Rules = new Rule[] {
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
      new Rule (289, LOOPPLUS108, new Symbol[] {
         LOOPBODY108,
         LOOP108
      } ) 
   };
   LOOP108.Rules = new Rule[] {
   // ***** (2) LOOP ::= LOOPBODY LOOP 
      new Rule (290, LOOP108, new Symbol[] {
         LOOPBODY108,
         LOOP108
      } ) ,
   // ***** (3) LOOP ::= empty 
      new Rule (291, LOOP108, new Symbol[] {
      } ) 
   };
   LOOPBODY108.Rules = new Rule[] {
   // ***** (4) LOOPBODY ::= ... 
   new Rule (292,LOOPBODY108, new Symbol[] {
   SUB109
,
   OPTION110
   })
   // *****  
   };
   SUB109.Rules = new Rule[] {
   new Rule (293,SUB109, new Symbol[] {
   AddressDecl
   })
,
   new Rule (294,SUB109, new Symbol[] {
   ProcedureList
   })
,
   new Rule (295,SUB109, new Symbol[] {
   ConfigParamDef
   })
   };
   // *****  
   OPTION110.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (296, OPTION110, new Symbol[] {
         OPTIONBODY110
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (297, OPTION110, new Symbol[] {
      } ) 
   };
   OPTIONBODY110.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (298,OPTIONBODY110, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   ProcedureList.Rules = new Rule[] {
   new Rule (299,ProcedureList, new Symbol[] {
   Direction
,
   AllOrSignatureList
   })
   };
   AllOrSignatureList.Rules = new Rule[] {
   new Rule (300,AllOrSignatureList, new Symbol[] {
   T_all
   })
,
   new Rule (301,AllOrSignatureList, new Symbol[] {
   SignatureList
   })
   };
   SignatureList.Rules = new Rule[] {
   new Rule (302,SignatureList, new Symbol[] {
   Signature
,
   LOOP111
   })
   };
   // ***** 
   LOOP111.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (303, LOOP111, new Symbol[] {
         LOOPBODY111,
         LOOP111
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (304, LOOP111, new Symbol[] {
      } ) 
   };
   LOOPBODY111.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (305,LOOPBODY111, new Symbol[] {
   T__comma_
,
   Signature
   })
   // ***** 
   };
   MixedAttribs.Rules = new Rule[] {
   new Rule (306,MixedAttribs, new Symbol[] {
   T_mixed
,
   OPTION112
,
   T__lbrace_
,
   LOOPPLUS113
,
   T__rbrace_
   })
   };
   // *****  
   OPTION112.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (307, OPTION112, new Symbol[] {
         OPTIONBODY112
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (308, OPTION112, new Symbol[] {
      } ) 
   };
   OPTIONBODY112.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (309,OPTIONBODY112, new Symbol[] {
   T_realtime
   })
   // *****  
   };
   // ***** 
   LOOPPLUS113.Rules = new Rule[] {
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
      new Rule (310, LOOPPLUS113, new Symbol[] {
         LOOPBODY113,
         LOOP113
      } ) 
   };
   LOOP113.Rules = new Rule[] {
   // ***** (2) LOOP ::= LOOPBODY LOOP 
      new Rule (311, LOOP113, new Symbol[] {
         LOOPBODY113,
         LOOP113
      } ) ,
   // ***** (3) LOOP ::= empty 
      new Rule (312, LOOP113, new Symbol[] {
      } ) 
   };
   LOOPBODY113.Rules = new Rule[] {
   // ***** (4) LOOPBODY ::= ... 
   new Rule (313,LOOPBODY113, new Symbol[] {
   SUB114
,
   OPTION115
   })
   // *****  
   };
   SUB114.Rules = new Rule[] {
   new Rule (314,SUB114, new Symbol[] {
   AddressDecl
   })
,
   new Rule (315,SUB114, new Symbol[] {
   MixedList
   })
,
   new Rule (316,SUB114, new Symbol[] {
   ConfigParamDef
   })
   };
   // *****  
   OPTION115.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (317, OPTION115, new Symbol[] {
         OPTIONBODY115
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (318, OPTION115, new Symbol[] {
      } ) 
   };
   OPTIONBODY115.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (319,OPTIONBODY115, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   MixedList.Rules = new Rule[] {
   new Rule (320,MixedList, new Symbol[] {
   Direction
,
   ProcOrTypeList
   })
   };
   ProcOrTypeList.Rules = new Rule[] {
   new Rule (321,ProcOrTypeList, new Symbol[] {
   T_all
   })
,
   new Rule (322,ProcOrTypeList, new Symbol[] {
   SUB116
   })
   };
   SUB116.Rules = new Rule[] {
   new Rule (323,SUB116, new Symbol[] {
   ProcOrType
,
   LOOP117
   })
   };
   // ***** 
   LOOP117.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (324, LOOP117, new Symbol[] {
         LOOPBODY117,
         LOOP117
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (325, LOOP117, new Symbol[] {
      } ) 
   };
   LOOPBODY117.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (326,LOOPBODY117, new Symbol[] {
   T__comma_
,
   ProcOrType
   })
   // ***** 
   };
   ProcOrType.Rules = new Rule[] {
   new Rule (327,ProcOrType, new Symbol[] {
   Signature
   })
,
   new Rule (328,ProcOrType, new Symbol[] {
   Type
   })
   };
   ComponentDef.Rules = new Rule[] {
   new Rule (329,ComponentDef, new Symbol[] {
   T_component
,
   Identifier
,
   OPTION118
,
   OPTION119
,
   OPTION120
,
   T__lbrace_
,
   OPTION122
,
   T__rbrace_
   })
   };
   // *****  
   OPTION118.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (330, OPTION118, new Symbol[] {
         OPTIONBODY118
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (331, OPTION118, new Symbol[] {
      } ) 
   };
   OPTIONBODY118.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (332,OPTIONBODY118, new Symbol[] {
   FormalTypeParList
   })
   // *****  
   };
   // *****  
   OPTION119.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (333, OPTION119, new Symbol[] {
         OPTIONBODY119
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (334, OPTION119, new Symbol[] {
      } ) 
   };
   OPTIONBODY119.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (335,OPTIONBODY119, new Symbol[] {
   StructDefFormalParList
   })
   // *****  
   };
   // *****  
   OPTION120.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (336, OPTION120, new Symbol[] {
         OPTIONBODY120
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (337, OPTION120, new Symbol[] {
      } ) 
   };
   OPTIONBODY120.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (338,OPTIONBODY120, new Symbol[] {
   T_extends
,
   ComponentType
,
   LOOP121
   })
   // *****  
   };
   // ***** 
   LOOP121.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (339, LOOP121, new Symbol[] {
         LOOPBODY121,
         LOOP121
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (340, LOOP121, new Symbol[] {
      } ) 
   };
   LOOPBODY121.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (341,LOOPBODY121, new Symbol[] {
   T__comma_
,
   ComponentType
   })
   // ***** 
   };
   // *****  
   OPTION122.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (342, OPTION122, new Symbol[] {
         OPTIONBODY122
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (343, OPTION122, new Symbol[] {
      } ) 
   };
   OPTIONBODY122.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (344,OPTIONBODY122, new Symbol[] {
   ComponentDefList
   })
   // *****  
   };
   ComponentType.Rules = new Rule[] {
   new Rule (345,ComponentType, new Symbol[] {
   OPTION123
,
   Identifier
,
   OPTION124
,
   OPTION125
   })
   };
   // *****  
   OPTION123.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (346, OPTION123, new Symbol[] {
         OPTIONBODY123
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (347, OPTION123, new Symbol[] {
      } ) 
   };
   OPTIONBODY123.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (348,OPTIONBODY123, new Symbol[] {
   Identifier
,
   T__dot_
   })
   // *****  
   };
   // *****  
   OPTION124.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (349, OPTION124, new Symbol[] {
         OPTIONBODY124
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (350, OPTION124, new Symbol[] {
      } ) 
   };
   OPTIONBODY124.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (351,OPTIONBODY124, new Symbol[] {
   ActualTypeParList
   })
   // *****  
   };
   // *****  
   OPTION125.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (352, OPTION125, new Symbol[] {
         OPTIONBODY125
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (353, OPTION125, new Symbol[] {
      } ) 
   };
   OPTIONBODY125.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (354,OPTIONBODY125, new Symbol[] {
   TypeActualParList
   })
   // *****  
   };
   ComponentDefList.Rules = new Rule[] {
   new Rule (355,ComponentDefList, new Symbol[] {
   LOOP126
   })
   };
   // ***** 
   LOOP126.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (356, LOOP126, new Symbol[] {
         LOOPBODY126,
         LOOP126
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (357, LOOP126, new Symbol[] {
      } ) 
   };
   LOOPBODY126.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (358,LOOPBODY126, new Symbol[] {
   ComponentElementDef
,
   OPTION127
,
   OPTION128
   })
   // ***** 
   };
   // *****  
   OPTION127.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (359, OPTION127, new Symbol[] {
         OPTIONBODY127
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (360, OPTION127, new Symbol[] {
      } ) 
   };
   OPTIONBODY127.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (361,OPTIONBODY127, new Symbol[] {
   WithStatement
   })
   // *****  
   };
   // *****  
   OPTION128.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (362, OPTION128, new Symbol[] {
         OPTIONBODY128
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (363, OPTION128, new Symbol[] {
      } ) 
   };
   OPTIONBODY128.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (364,OPTIONBODY128, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   ComponentElementDef.Rules = new Rule[] {
   new Rule (365,ComponentElementDef, new Symbol[] {
   PortInstance
   })
,
   new Rule (366,ComponentElementDef, new Symbol[] {
   VarInstance
   })
,
   new Rule (367,ComponentElementDef, new Symbol[] {
   TimerInstance
   })
,
   new Rule (368,ComponentElementDef, new Symbol[] {
   ConstDef
   })
   };
   PortInstance.Rules = new Rule[] {
   new Rule (369,PortInstance, new Symbol[] {
   T_port
,
   OPTION129
,
   Identifier
,
   OPTION130
,
   OPTION131
,
   PortElement
,
   LOOP132
   })
   };
   // *****  
   OPTION129.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (370, OPTION129, new Symbol[] {
         OPTIONBODY129
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (371, OPTION129, new Symbol[] {
      } ) 
   };
   OPTIONBODY129.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (372,OPTIONBODY129, new Symbol[] {
   Identifier
,
   T__dot_
   })
   // *****  
   };
   // *****  
   OPTION130.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (373, OPTION130, new Symbol[] {
         OPTIONBODY130
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (374, OPTION130, new Symbol[] {
      } ) 
   };
   OPTIONBODY130.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (375,OPTIONBODY130, new Symbol[] {
   ActualTypeParList
   })
   // *****  
   };
   // *****  
   OPTION131.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (376, OPTION131, new Symbol[] {
         OPTIONBODY131
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (377, OPTION131, new Symbol[] {
      } ) 
   };
   OPTIONBODY131.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (378,OPTIONBODY131, new Symbol[] {
   TypeActualParList
   })
   // *****  
   };
   // ***** 
   LOOP132.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (379, LOOP132, new Symbol[] {
         LOOPBODY132,
         LOOP132
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (380, LOOP132, new Symbol[] {
      } ) 
   };
   LOOPBODY132.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (381,LOOPBODY132, new Symbol[] {
   T__comma_
,
   PortElement
   })
   // ***** 
   };
   PortElement.Rules = new Rule[] {
   new Rule (382,PortElement, new Symbol[] {
   Identifier
,
   OPTION133
,
   OPTION134
   })
   };
   // *****  
   OPTION133.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (383, OPTION133, new Symbol[] {
         OPTIONBODY133
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (384, OPTION133, new Symbol[] {
      } ) 
   };
   OPTIONBODY133.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (385,OPTIONBODY133, new Symbol[] {
   ArrayDef
   })
   // *****  
   };
   // *****  
   OPTION134.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (386, OPTION134, new Symbol[] {
         OPTIONBODY134
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (387, OPTION134, new Symbol[] {
      } ) 
   };
   OPTIONBODY134.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (388,OPTIONBODY134, new Symbol[] {
   T__colon__equal_
,
   PortInitialValue
   })
   // *****  
   };
   ConstDef.Rules = new Rule[] {
   new Rule (389,ConstDef, new Symbol[] {
   T_const
,
   Type
,
   ConstList
   })
   };
   ConstList.Rules = new Rule[] {
   new Rule (390,ConstList, new Symbol[] {
   SingleConstDef
,
   LOOP135
   })
   };
   // ***** 
   LOOP135.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (391, LOOP135, new Symbol[] {
         LOOPBODY135,
         LOOP135
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (392, LOOP135, new Symbol[] {
      } ) 
   };
   LOOPBODY135.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (393,LOOPBODY135, new Symbol[] {
   T__comma_
,
   SingleConstDef
   })
   // ***** 
   };
   SingleConstDef.Rules = new Rule[] {
   new Rule (394,SingleConstDef, new Symbol[] {
   Identifier
,
   OPTION136
,
   T__colon__equal_
,
   ConstantExpression
   })
   };
   // *****  
   OPTION136.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (395, OPTION136, new Symbol[] {
         OPTIONBODY136
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (396, OPTION136, new Symbol[] {
      } ) 
   };
   OPTIONBODY136.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (397,OPTIONBODY136, new Symbol[] {
   ArrayDef
   })
   // *****  
   };
   TemplateDef.Rules = new Rule[] {
   new Rule (398,TemplateDef, new Symbol[] {
   T_template
,
   OPTION137
,
   BaseTemplate
,
   OPTION138
,
   T__colon__equal_
,
   TemplateBody
   })
   };
   // *****  
   OPTION137.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (399, OPTION137, new Symbol[] {
         OPTIONBODY137
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (400, OPTION137, new Symbol[] {
      } ) 
   };
   OPTIONBODY137.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (401,OPTIONBODY137, new Symbol[] {
   TemplateRestriction
   })
   // *****  
   };
   // *****  
   OPTION138.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (402, OPTION138, new Symbol[] {
         OPTIONBODY138
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (403, OPTION138, new Symbol[] {
      } ) 
   };
   OPTIONBODY138.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (404,OPTIONBODY138, new Symbol[] {
   DerivedDef
   })
   // *****  
   };
   BaseTemplate.Rules = new Rule[] {
   new Rule (405,BaseTemplate, new Symbol[] {
   SUB139
,
   Identifier
,
   OPTION140
,
   OPTION141
   })
   };
   SUB139.Rules = new Rule[] {
   new Rule (406,SUB139, new Symbol[] {
   Type
   })
,
   new Rule (407,SUB139, new Symbol[] {
   Signature
   })
   };
   // *****  
   OPTION140.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (408, OPTION140, new Symbol[] {
         OPTIONBODY140
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (409, OPTION140, new Symbol[] {
      } ) 
   };
   OPTIONBODY140.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (410,OPTIONBODY140, new Symbol[] {
   FormalTypeParList
   })
   // *****  
   };
   // *****  
   OPTION141.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (411, OPTION141, new Symbol[] {
         OPTIONBODY141
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (412, OPTION141, new Symbol[] {
      } ) 
   };
   OPTIONBODY141.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (413,OPTIONBODY141, new Symbol[] {
   T__lparen_
,
   TemplateOrValueFormalParList
,
   T__rparen_
   })
   // *****  
   };
   DerivedDef.Rules = new Rule[] {
   new Rule (414,DerivedDef, new Symbol[] {
   T_modifies
,
   ExtendedIdentifier
   })
   };
   TemplateOrValueFormalParList.Rules = new Rule[] {
   new Rule (415,TemplateOrValueFormalParList, new Symbol[] {
   TemplateOrValueFormalPar
,
   LOOP142
   })
   };
   // ***** 
   LOOP142.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (416, LOOP142, new Symbol[] {
         LOOPBODY142,
         LOOP142
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (417, LOOP142, new Symbol[] {
      } ) 
   };
   LOOPBODY142.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (418,LOOPBODY142, new Symbol[] {
   T__comma_
,
   TemplateOrValueFormalPar
   })
   // ***** 
   };
   TemplateOrValueFormalPar.Rules = new Rule[] {
   new Rule (419,TemplateOrValueFormalPar, new Symbol[] {
   FormalValuePar
   })
,
   new Rule (420,TemplateOrValueFormalPar, new Symbol[] {
   FormalTemplatePar
   })
   };
   TemplateBody.Rules = new Rule[] {
   new Rule (421,TemplateBody, new Symbol[] {
   SUB143
,
   OPTION144
   })
   };
   SUB143.Rules = new Rule[] {
   new Rule (422,SUB143, new Symbol[] {
   SimpleSpec
   })
,
   new Rule (423,SUB143, new Symbol[] {
   FieldSpecList
   })
,
   new Rule (424,SUB143, new Symbol[] {
   ArrayValueOrAttrib
   })
   };
   // *****  
   OPTION144.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (425, OPTION144, new Symbol[] {
         OPTIONBODY144
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (426, OPTION144, new Symbol[] {
      } ) 
   };
   OPTIONBODY144.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (427,OPTIONBODY144, new Symbol[] {
   ExtraMatchingAttributes
   })
   // *****  
   };
   SimpleSpec.Rules = new Rule[] {
   new Rule (428,SimpleSpec, new Symbol[] {
   SUB145
   })
,
   new Rule (429,SimpleSpec, new Symbol[] {
   SimpleTemplateSpec
   })
   };
   SUB145.Rules = new Rule[] {
   new Rule (430,SUB145, new Symbol[] {
   SingleExpression
,
   OPTION146
   })
   };
   // *****  
   OPTION146.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (431, OPTION146, new Symbol[] {
         OPTIONBODY146
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (432, OPTION146, new Symbol[] {
      } ) 
   };
   OPTIONBODY146.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (433,OPTIONBODY146, new Symbol[] {
   T__ampersand_
,
   SimpleTemplateSpec
   })
   // *****  
   };
   SimpleTemplateSpec.Rules = new Rule[] {
   new Rule (434,SimpleTemplateSpec, new Symbol[] {
   CharStringMatch
   })
,
   new Rule (435,SimpleTemplateSpec, new Symbol[] {
   SUB147
   })
   };
   SUB147.Rules = new Rule[] {
   new Rule (436,SUB147, new Symbol[] {
   SingleTemplateExpression
,
   OPTION148
   })
   };
   // *****  
   OPTION148.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (437, OPTION148, new Symbol[] {
         OPTIONBODY148
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (438, OPTION148, new Symbol[] {
      } ) 
   };
   OPTIONBODY148.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (439,OPTIONBODY148, new Symbol[] {
   T__ampersand_
,
   SimpleSpec
   })
   // *****  
   };
   SingleTemplateExpression.Rules = new Rule[] {
   new Rule (440,SingleTemplateExpression, new Symbol[] {
   MatchingSymbol
   })
,
   new Rule (441,SingleTemplateExpression, new Symbol[] {
   SUB149
   })
   };
   SUB149.Rules = new Rule[] {
   new Rule (442,SUB149, new Symbol[] {
   TemplateRefWithParList
,
   OPTION150
   })
   };
   // *****  
   OPTION150.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (443, OPTION150, new Symbol[] {
         OPTIONBODY150
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (444, OPTION150, new Symbol[] {
      } ) 
   };
   OPTIONBODY150.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (445,OPTIONBODY150, new Symbol[] {
   ExtendedFieldReference
   })
   // *****  
   };
   FieldSpecList.Rules = new Rule[] {
   new Rule (446,FieldSpecList, new Symbol[] {
   T__lbrace_
,
   OPTION151
,
   T__rbrace_
   })
   };
   // *****  
   OPTION151.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (447, OPTION151, new Symbol[] {
         OPTIONBODY151
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (448, OPTION151, new Symbol[] {
      } ) 
   };
   OPTIONBODY151.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (449,OPTIONBODY151, new Symbol[] {
   FieldSpec
,
   LOOP152
   })
   // *****  
   };
   // ***** 
   LOOP152.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (450, LOOP152, new Symbol[] {
         LOOPBODY152,
         LOOP152
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (451, LOOP152, new Symbol[] {
      } ) 
   };
   LOOPBODY152.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (452,LOOPBODY152, new Symbol[] {
   T__comma_
,
   FieldSpec
   })
   // ***** 
   };
   FieldSpec.Rules = new Rule[] {
   new Rule (453,FieldSpec, new Symbol[] {
   FieldReference
,
   T__colon__equal_
,
   TemplateBody
   })
   };
   FieldReference.Rules = new Rule[] {
   new Rule (454,FieldReference, new Symbol[] {
   StructFieldRef
   })
,
   new Rule (455,FieldReference, new Symbol[] {
   ArrayOrBitRef
   })
   };
   StructFieldRef.Rules = new Rule[] {
   new Rule (456,StructFieldRef, new Symbol[] {
   Identifier
   })
,
   new Rule (457,StructFieldRef, new Symbol[] {
   PredefinedType
   })
,
   new Rule (458,StructFieldRef, new Symbol[] {
   ReferencedType
   })
   };
   ArrayOrBitRef.Rules = new Rule[] {
   new Rule (459,ArrayOrBitRef, new Symbol[] {
   T__lbracket_
,
   FieldOrBitNumber
,
   T__rbracket_
   })
   };
   FieldOrBitNumber.Rules = new Rule[] {
   new Rule (460,FieldOrBitNumber, new Symbol[] {
   SingleExpression
   })
   };
   ArrayValueOrAttrib.Rules = new Rule[] {
   new Rule (461,ArrayValueOrAttrib, new Symbol[] {
   T__lbrace_
,
   ArrayElementSpecList
,
   T__rbrace_
   })
   };
   ArrayElementSpecList.Rules = new Rule[] {
   new Rule (462,ArrayElementSpecList, new Symbol[] {
   ArrayElementSpec
,
   LOOP153
   })
   };
   // ***** 
   LOOP153.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (463, LOOP153, new Symbol[] {
         LOOPBODY153,
         LOOP153
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (464, LOOP153, new Symbol[] {
      } ) 
   };
   LOOPBODY153.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (465,LOOPBODY153, new Symbol[] {
   T__comma_
,
   ArrayElementSpec
   })
   // ***** 
   };
   ArrayElementSpec.Rules = new Rule[] {
   new Rule (466,ArrayElementSpec, new Symbol[] {
   T__minus_
   })
,
   new Rule (467,ArrayElementSpec, new Symbol[] {
   PermutationMatch
   })
,
   new Rule (468,ArrayElementSpec, new Symbol[] {
   TemplateBody
   })
   };
   MatchingSymbol.Rules = new Rule[] {
   new Rule (469,MatchingSymbol, new Symbol[] {
   Complement
   })
,
   new Rule (470,MatchingSymbol, new Symbol[] {
   SUB154
   })
,
   new Rule (471,MatchingSymbol, new Symbol[] {
   SUB156
   })
,
   new Rule (472,MatchingSymbol, new Symbol[] {
   TemplateList
   })
,
   new Rule (473,MatchingSymbol, new Symbol[] {
   Range
   })
,
   new Rule (474,MatchingSymbol, new Symbol[] {
   BitStringMatch
   })
,
   new Rule (475,MatchingSymbol, new Symbol[] {
   HexStringMatch
   })
,
   new Rule (476,MatchingSymbol, new Symbol[] {
   OctetStringMatch
   })
,
   new Rule (477,MatchingSymbol, new Symbol[] {
   CharStringMatch
   })
,
   new Rule (478,MatchingSymbol, new Symbol[] {
   SubsetMatch
   })
,
   new Rule (479,MatchingSymbol, new Symbol[] {
   SupersetMatch
   })
   };
   SUB154.Rules = new Rule[] {
   new Rule (480,SUB154, new Symbol[] {
   T__question_
,
   OPTION155
   })
   };
   // *****  
   OPTION155.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (481, OPTION155, new Symbol[] {
         OPTIONBODY155
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (482, OPTION155, new Symbol[] {
      } ) 
   };
   OPTIONBODY155.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (483,OPTIONBODY155, new Symbol[] {
   WildcardLengthMatch
   })
   // *****  
   };
   SUB156.Rules = new Rule[] {
   new Rule (484,SUB156, new Symbol[] {
   T__asterisk_
,
   OPTION157
   })
   };
   // *****  
   OPTION157.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (485, OPTION157, new Symbol[] {
         OPTIONBODY157
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (486, OPTION157, new Symbol[] {
      } ) 
   };
   OPTIONBODY157.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (487,OPTIONBODY157, new Symbol[] {
   WildcardLengthMatch
   })
   // *****  
   };
   ExtraMatchingAttributes.Rules = new Rule[] {
   new Rule (488,ExtraMatchingAttributes, new Symbol[] {
   StringLength
   })
,
   new Rule (489,ExtraMatchingAttributes, new Symbol[] {
   T_ifpresent
   })
,
   new Rule (490,ExtraMatchingAttributes, new Symbol[] {
   SUB158
   })
   };
   SUB158.Rules = new Rule[] {
   new Rule (491,SUB158, new Symbol[] {
   StringLength
,
   T_ifpresent
   })
   };
   BitStringMatch.Rules = new Rule[] {
   new Rule (492,BitStringMatch, new Symbol[] {
   BITSTRINGMATCH
   })
   };
   HexStringMatch.Rules = new Rule[] {
   new Rule (493,HexStringMatch, new Symbol[] {
   HEXSTRINGMATCH
   })
   };
   OctetStringMatch.Rules = new Rule[] {
   new Rule (494,OctetStringMatch, new Symbol[] {
   OCTETSTRINGMATCH
   })
   };
   CharStringMatch.Rules = new Rule[] {
   new Rule (495,CharStringMatch, new Symbol[] {
   T_pattern
,
   PatternParticle
,
   LOOP159
   })
   };
   // ***** 
   LOOP159.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (496, LOOP159, new Symbol[] {
         LOOPBODY159,
         LOOP159
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (497, LOOP159, new Symbol[] {
      } ) 
   };
   LOOPBODY159.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (498,LOOPBODY159, new Symbol[] {
   T__ampersand_
,
   PatternParticle
   })
   // ***** 
   };
   PatternParticle.Rules = new Rule[] {
   new Rule (499,PatternParticle, new Symbol[] {
   Pattern
   })
,
   new Rule (500,PatternParticle, new Symbol[] {
   ReferencedValue
   })
   };
   Pattern.Rules = new Rule[] {
   new Rule (501,Pattern, new Symbol[] {
   PATTERN
   })
   };
   Complement.Rules = new Rule[] {
   new Rule (502,Complement, new Symbol[] {
   T_complement
,
   T__lparen_
,
   TemplateBody
,
   LOOP160
,
   T__rparen_
   })
   };
   // ***** 
   LOOP160.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (503, LOOP160, new Symbol[] {
         LOOPBODY160,
         LOOP160
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (504, LOOP160, new Symbol[] {
      } ) 
   };
   LOOPBODY160.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (505,LOOPBODY160, new Symbol[] {
   T__comma_
,
   TemplateBody
   })
   // ***** 
   };
   SubsetMatch.Rules = new Rule[] {
   new Rule (506,SubsetMatch, new Symbol[] {
   T_subset
,
   TemplateList
   })
   };
   SupersetMatch.Rules = new Rule[] {
   new Rule (507,SupersetMatch, new Symbol[] {
   T_superset
,
   TemplateList
   })
   };
   PermutationMatch.Rules = new Rule[] {
   new Rule (508,PermutationMatch, new Symbol[] {
   T_permutation
,
   PermutationList
   })
   };
   PermutationList.Rules = new Rule[] {
   new Rule (509,PermutationList, new Symbol[] {
   T__lparen_
,
   TemplateBody
,
   LOOP161
,
   T__rparen_
   })
   };
   // ***** 
   LOOP161.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (510, LOOP161, new Symbol[] {
         LOOPBODY161,
         LOOP161
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (511, LOOP161, new Symbol[] {
      } ) 
   };
   LOOPBODY161.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (512,LOOPBODY161, new Symbol[] {
   T__comma_
,
   TemplateBody
   })
   // ***** 
   };
   TemplateList.Rules = new Rule[] {
   new Rule (513,TemplateList, new Symbol[] {
   T__lparen_
,
   TemplateBody
,
   LOOPPLUS162
,
   T__rparen_
   })
   };
   // ***** 
   LOOPPLUS162.Rules = new Rule[] {
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
      new Rule (514, LOOPPLUS162, new Symbol[] {
         LOOPBODY162,
         LOOP162
      } ) 
   };
   LOOP162.Rules = new Rule[] {
   // ***** (2) LOOP ::= LOOPBODY LOOP 
      new Rule (515, LOOP162, new Symbol[] {
         LOOPBODY162,
         LOOP162
      } ) ,
   // ***** (3) LOOP ::= empty 
      new Rule (516, LOOP162, new Symbol[] {
      } ) 
   };
   LOOPBODY162.Rules = new Rule[] {
   // ***** (4) LOOPBODY ::= ... 
   new Rule (517,LOOPBODY162, new Symbol[] {
   T__comma_
,
   TemplateBody
   })
   // *****  
   };
   WildcardLengthMatch.Rules = new Rule[] {
   new Rule (518,WildcardLengthMatch, new Symbol[] {
   T_length
,
   T__lparen_
,
   SingleExpression
,
   T__rparen_
   })
   };
   Range.Rules = new Rule[] {
   new Rule (519,Range, new Symbol[] {
   T__lparen_
,
   Bound
,
   T__dot__dot_
,
   Bound
,
   T__rparen_
   })
   };
   Bound.Rules = new Rule[] {
   new Rule (520,Bound, new Symbol[] {
   SUB163
   })
,
   new Rule (521,Bound, new Symbol[] {
   SUB165
   })
   };
   SUB163.Rules = new Rule[] {
   new Rule (522,SUB163, new Symbol[] {
   OPTION164
,
   SingleExpression
   })
   };
   // *****  
   OPTION164.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (523, OPTION164, new Symbol[] {
         OPTIONBODY164
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (524, OPTION164, new Symbol[] {
      } ) 
   };
   OPTIONBODY164.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (525,OPTIONBODY164, new Symbol[] {
   T__exclamation_
   })
   // *****  
   };
   SUB165.Rules = new Rule[] {
   new Rule (526,SUB165, new Symbol[] {
   OPTION166
,
   T_infinity
   })
   };
   // *****  
   OPTION166.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (527, OPTION166, new Symbol[] {
         OPTIONBODY166
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (528, OPTION166, new Symbol[] {
      } ) 
   };
   OPTIONBODY166.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (529,OPTIONBODY166, new Symbol[] {
   T__minus_
   })
   // *****  
   };
   TemplateInstanceAssignment.Rules = new Rule[] {
   new Rule (530,TemplateInstanceAssignment, new Symbol[] {
   Identifier
,
   T__colon__equal_
,
   InLineTemplate
   })
   };
   TemplateRefWithParList.Rules = new Rule[] {
   new Rule (531,TemplateRefWithParList, new Symbol[] {
   ExtendedIdentifier
,
   OPTION167
   })
   };
   // *****  
   OPTION167.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (532, OPTION167, new Symbol[] {
         OPTIONBODY167
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (533, OPTION167, new Symbol[] {
      } ) 
   };
   OPTIONBODY167.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (534,OPTIONBODY167, new Symbol[] {
   TemplateActualParList
   })
   // *****  
   };
   InLineTemplate.Rules = new Rule[] {
   new Rule (535,InLineTemplate, new Symbol[] {
   OPTION168
,
   OPTION170
,
   TemplateBody
   })
   };
   // *****  
   OPTION168.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (536, OPTION168, new Symbol[] {
         OPTIONBODY168
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (537, OPTION168, new Symbol[] {
      } ) 
   };
   OPTIONBODY168.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (538,OPTIONBODY168, new Symbol[] {
   SUB169
,
   T__colon_
   })
   // *****  
   };
   SUB169.Rules = new Rule[] {
   new Rule (539,SUB169, new Symbol[] {
   Type
   })
,
   new Rule (540,SUB169, new Symbol[] {
   Signature
   })
   };
   // *****  
   OPTION170.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (541, OPTION170, new Symbol[] {
         OPTIONBODY170
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (542, OPTION170, new Symbol[] {
      } ) 
   };
   OPTIONBODY170.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (543,OPTIONBODY170, new Symbol[] {
   DerivedRefWithParList
,
   T__colon__equal_
   })
   // *****  
   };
   DerivedRefWithParList.Rules = new Rule[] {
   new Rule (544,DerivedRefWithParList, new Symbol[] {
   T_modifies
,
   TemplateRefWithParList
   })
   };
// grenze 1
}
public static void DefineGrammar1()
{
   TemplateActualParList.Rules = new Rule[] {
   new Rule (545,TemplateActualParList, new Symbol[] {
   T__lparen_
,
   OPTION171
,
   T__rparen_
   })
   };
   // *****  
   OPTION171.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (546, OPTION171, new Symbol[] {
         OPTIONBODY171
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (547, OPTION171, new Symbol[] {
      } ) 
   };
   OPTIONBODY171.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (548,OPTIONBODY171, new Symbol[] {
   SUB172
   })
,
   new Rule (549,OPTIONBODY171, new Symbol[] {
   SUB174
   })
   // *****  
   };
   SUB172.Rules = new Rule[] {
   new Rule (550,SUB172, new Symbol[] {
   TemplateInstanceActualPar
,
   LOOP173
   })
   };
   // ***** 
   LOOP173.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (551, LOOP173, new Symbol[] {
         LOOPBODY173,
         LOOP173
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (552, LOOP173, new Symbol[] {
      } ) 
   };
   LOOPBODY173.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (553,LOOPBODY173, new Symbol[] {
   T__comma_
,
   TemplateInstanceActualPar
   })
   // ***** 
   };
   SUB174.Rules = new Rule[] {
   new Rule (554,SUB174, new Symbol[] {
   TemplateInstanceAssignment
,
   LOOP175
   })
   };
   // ***** 
   LOOP175.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (555, LOOP175, new Symbol[] {
         LOOPBODY175,
         LOOP175
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (556, LOOP175, new Symbol[] {
      } ) 
   };
   LOOPBODY175.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (557,LOOPBODY175, new Symbol[] {
   T__comma_
,
   TemplateInstanceAssignment
   })
   // ***** 
   };
   TemplateInstanceActualPar.Rules = new Rule[] {
   new Rule (558,TemplateInstanceActualPar, new Symbol[] {
   InLineTemplate
   })
,
   new Rule (559,TemplateInstanceActualPar, new Symbol[] {
   T__minus_
   })
   };
   TemplateOps.Rules = new Rule[] {
   new Rule (560,TemplateOps, new Symbol[] {
   MatchOp
   })
,
   new Rule (561,TemplateOps, new Symbol[] {
   ValueofOp
   })
   };
   MatchOp.Rules = new Rule[] {
   new Rule (562,MatchOp, new Symbol[] {
   T_match
,
   T__lparen_
,
   Expression
,
   T__comma_
,
   InLineTemplate
,
   T__rparen_
   })
   };
   ValueofOp.Rules = new Rule[] {
   new Rule (563,ValueofOp, new Symbol[] {
   T_valueof
,
   T__lparen_
,
   InLineTemplate
,
   T__rparen_
   })
   };
   FunctionDef.Rules = new Rule[] {
   new Rule (564,FunctionDef, new Symbol[] {
   T_function
,
   Identifier
,
   OPTION176
,
   T__lparen_
,
   OPTION177
,
   T__rparen_
,
   OPTION178
,
   OPTION179
,
   StatementBlock
   })
   };
   // *****  
   OPTION176.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (565, OPTION176, new Symbol[] {
         OPTIONBODY176
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (566, OPTION176, new Symbol[] {
      } ) 
   };
   OPTIONBODY176.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (567,OPTIONBODY176, new Symbol[] {
   FormalTypeParList
   })
   // *****  
   };
   // *****  
   OPTION177.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (568, OPTION177, new Symbol[] {
         OPTIONBODY177
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (569, OPTION177, new Symbol[] {
      } ) 
   };
   OPTIONBODY177.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (570,OPTIONBODY177, new Symbol[] {
   FunctionFormalParList
   })
   // *****  
   };
   // *****  
   OPTION178.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (571, OPTION178, new Symbol[] {
         OPTIONBODY178
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (572, OPTION178, new Symbol[] {
      } ) 
   };
   OPTIONBODY178.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (573,OPTIONBODY178, new Symbol[] {
   RunsOnSpec
   })
   // *****  
   };
   // *****  
   OPTION179.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (574, OPTION179, new Symbol[] {
         OPTIONBODY179
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (575, OPTION179, new Symbol[] {
      } ) 
   };
   OPTIONBODY179.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (576,OPTIONBODY179, new Symbol[] {
   ReturnType
   })
   // *****  
   };
   FunctionFormalParList.Rules = new Rule[] {
   new Rule (577,FunctionFormalParList, new Symbol[] {
   FunctionFormalPar
,
   LOOP180
   })
   };
   // ***** 
   LOOP180.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (578, LOOP180, new Symbol[] {
         LOOPBODY180,
         LOOP180
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (579, LOOP180, new Symbol[] {
      } ) 
   };
   LOOPBODY180.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (580,LOOPBODY180, new Symbol[] {
   T__comma_
,
   FunctionFormalPar
   })
   // ***** 
   };
   FunctionFormalPar.Rules = new Rule[] {
   new Rule (581,FunctionFormalPar, new Symbol[] {
   FormalValuePar
   })
,
   new Rule (582,FunctionFormalPar, new Symbol[] {
   FormalTimerPar
   })
,
   new Rule (583,FunctionFormalPar, new Symbol[] {
   FormalTemplatePar
   })
,
   new Rule (584,FunctionFormalPar, new Symbol[] {
   FormalPortPar
   })
   };
   ReturnType.Rules = new Rule[] {
   new Rule (585,ReturnType, new Symbol[] {
   T_return
,
   OPTION181
,
   Type
   })
   };
   // *****  
   OPTION181.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (586, OPTION181, new Symbol[] {
         OPTIONBODY181
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (587, OPTION181, new Symbol[] {
      } ) 
   };
   OPTIONBODY181.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (588,OPTIONBODY181, new Symbol[] {
   T_template
   })
,
   new Rule (589,OPTIONBODY181, new Symbol[] {
   RestrictedTemplate
   })
   // *****  
   };
   RunsOnSpec.Rules = new Rule[] {
   new Rule (590,RunsOnSpec, new Symbol[] {
   T_runs
,
   T_on
,
   SUB182
   })
   };
   SUB182.Rules = new Rule[] {
   new Rule (591,SUB182, new Symbol[] {
   ComponentType
   })
,
   new Rule (592,SUB182, new Symbol[] {
   T_self
   })
   };
   StatementBlock.Rules = new Rule[] {
   new Rule (593,StatementBlock, new Symbol[] {
   T__lbrace_
,
   OPTION183
,
   OPTION184
,
   T__rbrace_
   })
   };
   // *****  
   OPTION183.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (594, OPTION183, new Symbol[] {
         OPTIONBODY183
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (595, OPTION183, new Symbol[] {
      } ) 
   };
   OPTIONBODY183.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (596,OPTIONBODY183, new Symbol[] {
   FunctionDefList
   })
   // *****  
   };
   // *****  
   OPTION184.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (597, OPTION184, new Symbol[] {
         OPTIONBODY184
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (598, OPTION184, new Symbol[] {
      } ) 
   };
   OPTIONBODY184.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (599,OPTIONBODY184, new Symbol[] {
   FunctionStatementList
   })
   // *****  
   };
   FunctionDefList.Rules = new Rule[] {
   new Rule (600,FunctionDefList, new Symbol[] {
   LOOPPLUS185
   })
   };
   // ***** 
   LOOPPLUS185.Rules = new Rule[] {
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
      new Rule (601, LOOPPLUS185, new Symbol[] {
         LOOPBODY185,
         LOOP185
      } ) 
   };
   LOOP185.Rules = new Rule[] {
   // ***** (2) LOOP ::= LOOPBODY LOOP 
      new Rule (602, LOOP185, new Symbol[] {
         LOOPBODY185,
         LOOP185
      } ) ,
   // ***** (3) LOOP ::= empty 
      new Rule (603, LOOP185, new Symbol[] {
      } ) 
   };
   LOOPBODY185.Rules = new Rule[] {
   // ***** (4) LOOPBODY ::= ... 
   new Rule (604,LOOPBODY185, new Symbol[] {
   SUB186
,
   OPTION187
,
   OPTION188
   })
   // *****  
   };
   SUB186.Rules = new Rule[] {
   new Rule (605,SUB186, new Symbol[] {
   FunctionLocalDef
   })
,
   new Rule (606,SUB186, new Symbol[] {
   FunctionLocalInst
   })
   };
   // *****  
   OPTION187.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (607, OPTION187, new Symbol[] {
         OPTIONBODY187
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (608, OPTION187, new Symbol[] {
      } ) 
   };
   OPTIONBODY187.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (609,OPTIONBODY187, new Symbol[] {
   WithStatement
   })
   // *****  
   };
   // *****  
   OPTION188.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (610, OPTION188, new Symbol[] {
         OPTIONBODY188
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (611, OPTION188, new Symbol[] {
      } ) 
   };
   OPTIONBODY188.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (612,OPTIONBODY188, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   FunctionStatementList.Rules = new Rule[] {
   new Rule (613,FunctionStatementList, new Symbol[] {
   LOOPPLUS189
   })
   };
   // ***** 
   LOOPPLUS189.Rules = new Rule[] {
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
      new Rule (614, LOOPPLUS189, new Symbol[] {
         LOOPBODY189,
         LOOP189
      } ) 
   };
   LOOP189.Rules = new Rule[] {
   // ***** (2) LOOP ::= LOOPBODY LOOP 
      new Rule (615, LOOP189, new Symbol[] {
         LOOPBODY189,
         LOOP189
      } ) ,
   // ***** (3) LOOP ::= empty 
      new Rule (616, LOOP189, new Symbol[] {
      } ) 
   };
   LOOPBODY189.Rules = new Rule[] {
   // ***** (4) LOOPBODY ::= ... 
   new Rule (617,LOOPBODY189, new Symbol[] {
   FunctionStatement
,
   OPTION190
   })
   // *****  
   };
   // *****  
   OPTION190.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (618, OPTION190, new Symbol[] {
         OPTIONBODY190
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (619, OPTION190, new Symbol[] {
      } ) 
   };
   OPTIONBODY190.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (620,OPTIONBODY190, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   FunctionLocalInst.Rules = new Rule[] {
   new Rule (621,FunctionLocalInst, new Symbol[] {
   VarInstance
   })
,
   new Rule (622,FunctionLocalInst, new Symbol[] {
   TimerInstance
   })
   };
   FunctionLocalDef.Rules = new Rule[] {
   new Rule (623,FunctionLocalDef, new Symbol[] {
   ConstDef
   })
,
   new Rule (624,FunctionLocalDef, new Symbol[] {
   TemplateDef
   })
   };
   FunctionStatement.Rules = new Rule[] {
   new Rule (625,FunctionStatement, new Symbol[] {
   ConfigurationStatements
   })
,
   new Rule (626,FunctionStatement, new Symbol[] {
   TimerStatements
   })
,
   new Rule (627,FunctionStatement, new Symbol[] {
   CommunicationStatements
   })
,
   new Rule (628,FunctionStatement, new Symbol[] {
   BasicStatements
   })
,
   new Rule (629,FunctionStatement, new Symbol[] {
   BehaviourStatements
   })
,
   new Rule (630,FunctionStatement, new Symbol[] {
   SetLocalVerdict
   })
,
   new Rule (631,FunctionStatement, new Symbol[] {
   SUTStatements
   })
,
   new Rule (632,FunctionStatement, new Symbol[] {
   TestcaseOperation
   })
,
   new Rule (633,FunctionStatement, new Symbol[] {
   RealtimeStatement
   })
,
   new Rule (634,FunctionStatement, new Symbol[] {
   AssertStatement
   })
,
   new Rule (635,FunctionStatement, new Symbol[] {
   WaitStatement
   })
,
   new Rule (636,FunctionStatement, new Symbol[] {
   ModeSpecification
   })
   };
   FunctionInstance.Rules = new Rule[] {
   new Rule (637,FunctionInstance, new Symbol[] {
   FunctionRef
,
   OPTION191
,
   T__lparen_
,
   OPTION192
,
   T__rparen_
   })
,
   new Rule (638,FunctionInstance, new Symbol[] {
   T_apply
,
   T__lparen_
,
   Primary
,
   T__lparen_
,
   OPTION193
,
   T__rparen_
,
   T__rparen_
   })
   };
   // *****  
   OPTION191.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (639, OPTION191, new Symbol[] {
         OPTIONBODY191
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (640, OPTION191, new Symbol[] {
      } ) 
   };
   OPTIONBODY191.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (641,OPTIONBODY191, new Symbol[] {
   ActualTypeParList
   })
   // *****  
   };
   // *****  
   OPTION192.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (642, OPTION192, new Symbol[] {
         OPTIONBODY192
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (643, OPTION192, new Symbol[] {
      } ) 
   };
   OPTIONBODY192.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (644,OPTIONBODY192, new Symbol[] {
   FunctionActualParList
   })
   // *****  
   };
   // *****  
   OPTION193.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (645, OPTION193, new Symbol[] {
         OPTIONBODY193
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (646, OPTION193, new Symbol[] {
      } ) 
   };
   OPTIONBODY193.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (647,OPTIONBODY193, new Symbol[] {
   FunctionActualParList
   })
   // *****  
   };
   FunctionRef.Rules = new Rule[] {
   new Rule (648,FunctionRef, new Symbol[] {
   OPTION194
,
   Identifier
   })
   };
   // *****  
   OPTION194.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (649, OPTION194, new Symbol[] {
         OPTIONBODY194
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (650, OPTION194, new Symbol[] {
      } ) 
   };
   OPTIONBODY194.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (651,OPTIONBODY194, new Symbol[] {
   Identifier
,
   T__dot_
   })
   // *****  
   };
   FunctionActualParList.Rules = new Rule[] {
   new Rule (652,FunctionActualParList, new Symbol[] {
   SUB195
   })
,
   new Rule (653,FunctionActualParList, new Symbol[] {
   SUB197
   })
   };
   SUB195.Rules = new Rule[] {
   new Rule (654,SUB195, new Symbol[] {
   FunctionActualPar
,
   LOOP196
   })
   };
   // ***** 
   LOOP196.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (655, LOOP196, new Symbol[] {
         LOOPBODY196,
         LOOP196
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (656, LOOP196, new Symbol[] {
      } ) 
   };
   LOOPBODY196.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (657,LOOPBODY196, new Symbol[] {
   T__comma_
,
   FunctionActualPar
   })
   // ***** 
   };
   SUB197.Rules = new Rule[] {
   new Rule (658,SUB197, new Symbol[] {
   FunctionActualParAssignment
,
   LOOP198
   })
   };
   // ***** 
   LOOP198.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (659, LOOP198, new Symbol[] {
         LOOPBODY198,
         LOOP198
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (660, LOOP198, new Symbol[] {
      } ) 
   };
   LOOPBODY198.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (661,LOOPBODY198, new Symbol[] {
   T__comma_
,
   FunctionActualParAssignment
   })
   // ***** 
   };
   FunctionActualPar.Rules = new Rule[] {
   new Rule (662,FunctionActualPar, new Symbol[] {
   ArrayIdentifierRef
   })
,
   new Rule (663,FunctionActualPar, new Symbol[] {
   InLineTemplate
   })
,
   new Rule (664,FunctionActualPar, new Symbol[] {
   ComponentRef
   })
,
   new Rule (665,FunctionActualPar, new Symbol[] {
   T__minus_
   })
   };
   FunctionActualParAssignment.Rules = new Rule[] {
   new Rule (666,FunctionActualParAssignment, new Symbol[] {
   TemplateInstanceAssignment
   })
,
   new Rule (667,FunctionActualParAssignment, new Symbol[] {
   ComponentRefAssignment
   })
,
   new Rule (668,FunctionActualParAssignment, new Symbol[] {
   ArrayIdentifierRefAssignment
   })
   };
   ArrayIdentifierRefAssignment.Rules = new Rule[] {
   new Rule (669,ArrayIdentifierRefAssignment, new Symbol[] {
   Identifier
,
   T__colon__equal_
,
   ArrayIdentifierRef
   })
   };
   SignatureDef.Rules = new Rule[] {
   new Rule (670,SignatureDef, new Symbol[] {
   T_signature
,
   Identifier
,
   OPTION199
,
   T__lparen_
,
   OPTION200
,
   T__rparen_
,
   OPTION201
,
   OPTION202
   })
   };
   // *****  
   OPTION199.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (671, OPTION199, new Symbol[] {
         OPTIONBODY199
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (672, OPTION199, new Symbol[] {
      } ) 
   };
   OPTIONBODY199.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (673,OPTIONBODY199, new Symbol[] {
   FormalTypeParList
   })
   // *****  
   };
   // *****  
   OPTION200.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (674, OPTION200, new Symbol[] {
         OPTIONBODY200
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (675, OPTION200, new Symbol[] {
      } ) 
   };
   OPTIONBODY200.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (676,OPTIONBODY200, new Symbol[] {
   SignatureFormalParList
   })
   // *****  
   };
   // *****  
   OPTION201.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (677, OPTION201, new Symbol[] {
         OPTIONBODY201
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (678, OPTION201, new Symbol[] {
      } ) 
   };
   OPTIONBODY201.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (679,OPTIONBODY201, new Symbol[] {
   ReturnType
   })
,
   new Rule (680,OPTIONBODY201, new Symbol[] {
   T_noblock
   })
   // *****  
   };
   // *****  
   OPTION202.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (681, OPTION202, new Symbol[] {
         OPTIONBODY202
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (682, OPTION202, new Symbol[] {
      } ) 
   };
   OPTIONBODY202.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (683,OPTIONBODY202, new Symbol[] {
   ExceptionSpec
   })
   // *****  
   };
   SignatureFormalParList.Rules = new Rule[] {
   new Rule (684,SignatureFormalParList, new Symbol[] {
   FormalValuePar
,
   LOOP203
   })
   };
   // ***** 
   LOOP203.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (685, LOOP203, new Symbol[] {
         LOOPBODY203,
         LOOP203
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (686, LOOP203, new Symbol[] {
      } ) 
   };
   LOOPBODY203.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (687,LOOPBODY203, new Symbol[] {
   T__comma_
,
   FormalValuePar
   })
   // ***** 
   };
   ExceptionSpec.Rules = new Rule[] {
   new Rule (688,ExceptionSpec, new Symbol[] {
   T_exception
,
   T__lparen_
,
   TypeList
,
   T__rparen_
   })
   };
   Signature.Rules = new Rule[] {
   new Rule (689,Signature, new Symbol[] {
   OPTION204
,
   Identifier
,
   OPTION205
   })
   };
   // *****  
   OPTION204.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (690, OPTION204, new Symbol[] {
         OPTIONBODY204
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (691, OPTION204, new Symbol[] {
      } ) 
   };
   OPTIONBODY204.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (692,OPTIONBODY204, new Symbol[] {
   Identifier
,
   T__dot_
   })
   // *****  
   };
   // *****  
   OPTION205.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (693, OPTION205, new Symbol[] {
         OPTIONBODY205
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (694, OPTION205, new Symbol[] {
      } ) 
   };
   OPTIONBODY205.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (695,OPTIONBODY205, new Symbol[] {
   ActualTypeParList
   })
   // *****  
   };
   TestcaseDef.Rules = new Rule[] {
   new Rule (696,TestcaseDef, new Symbol[] {
   T_testcase
,
   Identifier
,
   OPTION206
,
   T__lparen_
,
   OPTION207
,
   T__rparen_
,
   SUB208
,
   StatementBlock
   })
   };
   // *****  
   OPTION206.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (697, OPTION206, new Symbol[] {
         OPTIONBODY206
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (698, OPTION206, new Symbol[] {
      } ) 
   };
   OPTIONBODY206.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (699,OPTIONBODY206, new Symbol[] {
   FormalTypeParList
   })
   // *****  
   };
   // *****  
   OPTION207.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (700, OPTION207, new Symbol[] {
         OPTIONBODY207
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (701, OPTION207, new Symbol[] {
      } ) 
   };
   OPTIONBODY207.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (702,OPTIONBODY207, new Symbol[] {
   TemplateOrValueFormalParList
   })
   // *****  
   };
   SUB208.Rules = new Rule[] {
   new Rule (703,SUB208, new Symbol[] {
   ConfigSpec
   })
,
   new Rule (704,SUB208, new Symbol[] {
   ExecuteOnSpec
   })
   };
   ConfigSpec.Rules = new Rule[] {
   new Rule (705,ConfigSpec, new Symbol[] {
   RunsOnSpec
,
   OPTION209
   })
   };
   // *****  
   OPTION209.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (706, OPTION209, new Symbol[] {
         OPTIONBODY209
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (707, OPTION209, new Symbol[] {
      } ) 
   };
   OPTIONBODY209.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (708,OPTIONBODY209, new Symbol[] {
   SystemSpec
   })
   // *****  
   };
   SystemSpec.Rules = new Rule[] {
   new Rule (709,SystemSpec, new Symbol[] {
   T_system
,
   ComponentType
   })
   };
   TestcaseInstance.Rules = new Rule[] {
   new Rule (710,TestcaseInstance, new Symbol[] {
   T_execute
,
   T__lparen_
,
   SUB210
,
   OPTION214
,
   T__rparen_
   })
   };
   SUB210.Rules = new Rule[] {
   new Rule (711,SUB210, new Symbol[] {
   ExtendedIdentifier
,
   OPTION211
,
   T__lparen_
,
   OPTION212
,
   T__rparen_
   })
,
   new Rule (712,SUB210, new Symbol[] {
   T_apply
,
   T__lparen_
,
   Primary
,
   T__lparen_
,
   OPTION213
,
   T__rparen_
,
   T__rparen_
   })
   };
   // *****  
   OPTION211.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (713, OPTION211, new Symbol[] {
         OPTIONBODY211
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (714, OPTION211, new Symbol[] {
      } ) 
   };
   OPTIONBODY211.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (715,OPTIONBODY211, new Symbol[] {
   ActualTypeParList
   })
   // *****  
   };
   // *****  
   OPTION212.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (716, OPTION212, new Symbol[] {
         OPTIONBODY212
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (717, OPTION212, new Symbol[] {
      } ) 
   };
   OPTIONBODY212.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (718,OPTIONBODY212, new Symbol[] {
   TestcaseActualParList
   })
   // *****  
   };
   // *****  
   OPTION213.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (719, OPTION213, new Symbol[] {
         OPTIONBODY213
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (720, OPTION213, new Symbol[] {
      } ) 
   };
   OPTIONBODY213.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (721,OPTIONBODY213, new Symbol[] {
   TestcaseActualParList
   })
   // *****  
   };
   // *****  
   OPTION214.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (722, OPTION214, new Symbol[] {
         OPTIONBODY214
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (723, OPTION214, new Symbol[] {
      } ) 
   };
   OPTIONBODY214.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (724,OPTIONBODY214, new Symbol[] {
   T__comma_
,
   SUB215
,
   OPTION216
   })
   // *****  
   };
   SUB215.Rules = new Rule[] {
   new Rule (725,SUB215, new Symbol[] {
   Expression
   })
,
   new Rule (726,SUB215, new Symbol[] {
   T__minus_
   })
   };
   // *****  
   OPTION216.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (727, OPTION216, new Symbol[] {
         OPTIONBODY216
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (728, OPTION216, new Symbol[] {
      } ) 
   };
   OPTIONBODY216.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (729,OPTIONBODY216, new Symbol[] {
   T__comma_
,
   SingleExpression
   })
   // *****  
   };
   TestcaseActualParList.Rules = new Rule[] {
   new Rule (730,TestcaseActualParList, new Symbol[] {
   SUB217
   })
,
   new Rule (731,TestcaseActualParList, new Symbol[] {
   SUB219
   })
   };
   SUB217.Rules = new Rule[] {
   new Rule (732,SUB217, new Symbol[] {
   TemplateInstanceActualPar
,
   LOOP218
   })
   };
   // ***** 
   LOOP218.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (733, LOOP218, new Symbol[] {
         LOOPBODY218,
         LOOP218
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (734, LOOP218, new Symbol[] {
      } ) 
   };
   LOOPBODY218.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (735,LOOPBODY218, new Symbol[] {
   T__comma_
,
   TemplateInstanceActualPar
   })
   // ***** 
   };
   SUB219.Rules = new Rule[] {
   new Rule (736,SUB219, new Symbol[] {
   TemplateInstanceAssignment
,
   LOOP220
   })
   };
   // ***** 
   LOOP220.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (737, LOOP220, new Symbol[] {
         LOOPBODY220,
         LOOP220
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (738, LOOP220, new Symbol[] {
      } ) 
   };
   LOOPBODY220.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (739,LOOPBODY220, new Symbol[] {
   T__comma_
,
   TemplateInstanceAssignment
   })
   // ***** 
   };
   AltstepDef.Rules = new Rule[] {
   new Rule (740,AltstepDef, new Symbol[] {
   T_altstep
,
   Identifier
,
   OPTION221
,
   T__lparen_
,
   OPTION222
,
   T__rparen_
,
   OPTION223
,
   T__lbrace_
,
   AltstepLocalDefList
,
   AltGuardList
,
   T__rbrace_
   })
   };
   // *****  
   OPTION221.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (741, OPTION221, new Symbol[] {
         OPTIONBODY221
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (742, OPTION221, new Symbol[] {
      } ) 
   };
   OPTIONBODY221.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (743,OPTIONBODY221, new Symbol[] {
   FormalTypeParList
   })
   // *****  
   };
   // *****  
   OPTION222.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (744, OPTION222, new Symbol[] {
         OPTIONBODY222
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (745, OPTION222, new Symbol[] {
      } ) 
   };
   OPTIONBODY222.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (746,OPTIONBODY222, new Symbol[] {
   FunctionFormalParList
   })
   // *****  
   };
   // *****  
   OPTION223.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (747, OPTION223, new Symbol[] {
         OPTIONBODY223
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (748, OPTION223, new Symbol[] {
      } ) 
   };
   OPTIONBODY223.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (749,OPTIONBODY223, new Symbol[] {
   RunsOnSpec
   })
   // *****  
   };
   AltstepLocalDefList.Rules = new Rule[] {
   new Rule (750,AltstepLocalDefList, new Symbol[] {
   LOOP224
   })
   };
   // ***** 
   LOOP224.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (751, LOOP224, new Symbol[] {
         LOOPBODY224,
         LOOP224
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (752, LOOP224, new Symbol[] {
      } ) 
   };
   LOOPBODY224.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (753,LOOPBODY224, new Symbol[] {
   AltstepLocalDef
,
   OPTION225
,
   OPTION226
   })
   // ***** 
   };
   // *****  
   OPTION225.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (754, OPTION225, new Symbol[] {
         OPTIONBODY225
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (755, OPTION225, new Symbol[] {
      } ) 
   };
   OPTIONBODY225.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (756,OPTIONBODY225, new Symbol[] {
   WithStatement
   })
   // *****  
   };
   // *****  
   OPTION226.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (757, OPTION226, new Symbol[] {
         OPTIONBODY226
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (758, OPTION226, new Symbol[] {
      } ) 
   };
   OPTIONBODY226.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (759,OPTIONBODY226, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   AltstepLocalDef.Rules = new Rule[] {
   new Rule (760,AltstepLocalDef, new Symbol[] {
   VarInstance
   })
,
   new Rule (761,AltstepLocalDef, new Symbol[] {
   TimerInstance
   })
,
   new Rule (762,AltstepLocalDef, new Symbol[] {
   ConstDef
   })
,
   new Rule (763,AltstepLocalDef, new Symbol[] {
   TemplateDef
   })
   };
   AltstepInstance.Rules = new Rule[] {
   new Rule (764,AltstepInstance, new Symbol[] {
   ExtendedIdentifier
,
   OPTION227
,
   T__lparen_
,
   OPTION228
,
   T__rparen_
   })
   };
   // *****  
   OPTION227.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (765, OPTION227, new Symbol[] {
         OPTIONBODY227
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (766, OPTION227, new Symbol[] {
      } ) 
   };
   OPTIONBODY227.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (767,OPTIONBODY227, new Symbol[] {
   ActualTypeParList
   })
   // *****  
   };
   // *****  
   OPTION228.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (768, OPTION228, new Symbol[] {
         OPTIONBODY228
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (769, OPTION228, new Symbol[] {
      } ) 
   };
   OPTIONBODY228.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (770,OPTIONBODY228, new Symbol[] {
   FunctionActualParList
   })
   // *****  
   };
   ImportDef.Rules = new Rule[] {
   new Rule (771,ImportDef, new Symbol[] {
   T_import
,
   ImportFromSpec
,
   SUB229
   })
   };
   SUB229.Rules = new Rule[] {
   new Rule (772,SUB229, new Symbol[] {
   AllWithExcepts
   })
,
   new Rule (773,SUB229, new Symbol[] {
   SUB230
   })
   };
   SUB230.Rules = new Rule[] {
   new Rule (774,SUB230, new Symbol[] {
   T__lbrace_
,
   ImportSpec
,
   T__rbrace_
   })
   };
   AllWithExcepts.Rules = new Rule[] {
   new Rule (775,AllWithExcepts, new Symbol[] {
   T_all
,
   OPTION231
   })
   };
   // *****  
   OPTION231.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (776, OPTION231, new Symbol[] {
         OPTIONBODY231
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (777, OPTION231, new Symbol[] {
      } ) 
   };
   OPTIONBODY231.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (778,OPTIONBODY231, new Symbol[] {
   ExceptsDef
   })
   // *****  
   };
   ExceptsDef.Rules = new Rule[] {
   new Rule (779,ExceptsDef, new Symbol[] {
   T_except
,
   T__lbrace_
,
   ExceptSpec
,
   T__rbrace_
   })
   };
   ExceptSpec.Rules = new Rule[] {
   new Rule (780,ExceptSpec, new Symbol[] {
   LOOP232
   })
   };
   // ***** 
   LOOP232.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (781, LOOP232, new Symbol[] {
         LOOPBODY232,
         LOOP232
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (782, LOOP232, new Symbol[] {
      } ) 
   };
   LOOPBODY232.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (783,LOOPBODY232, new Symbol[] {
   ExceptElement
,
   OPTION233
   })
   // ***** 
   };
   // *****  
   OPTION233.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (784, OPTION233, new Symbol[] {
         OPTIONBODY233
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (785, OPTION233, new Symbol[] {
      } ) 
   };
   OPTIONBODY233.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (786,OPTIONBODY233, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   ExceptElement.Rules = new Rule[] {
   new Rule (787,ExceptElement, new Symbol[] {
   ExceptGroupSpec
   })
,
   new Rule (788,ExceptElement, new Symbol[] {
   ExceptTypeDefSpec
   })
,
   new Rule (789,ExceptElement, new Symbol[] {
   ExceptTemplateSpec
   })
,
   new Rule (790,ExceptElement, new Symbol[] {
   ExceptConstSpec
   })
,
   new Rule (791,ExceptElement, new Symbol[] {
   ExceptTestcaseSpec
   })
,
   new Rule (792,ExceptElement, new Symbol[] {
   ExceptAltstepSpec
   })
,
   new Rule (793,ExceptElement, new Symbol[] {
   ExceptFunctionSpec
   })
,
   new Rule (794,ExceptElement, new Symbol[] {
   ExceptSignatureSpec
   })
,
   new Rule (795,ExceptElement, new Symbol[] {
   ExceptModuleParSpec
   })
   };
   ExceptGroupSpec.Rules = new Rule[] {
   new Rule (796,ExceptGroupSpec, new Symbol[] {
   T_group
,
   SUB234
   })
   };
   SUB234.Rules = new Rule[] {
   new Rule (797,SUB234, new Symbol[] {
   QualifiedIdentifierList
   })
,
   new Rule (798,SUB234, new Symbol[] {
   T_all
   })
   };
   IdentifierListOrAll.Rules = new Rule[] {
   new Rule (799,IdentifierListOrAll, new Symbol[] {
   IdentifierList
   })
,
   new Rule (800,IdentifierListOrAll, new Symbol[] {
   T_all
   })
   };
   ExceptTypeDefSpec.Rules = new Rule[] {
   new Rule (801,ExceptTypeDefSpec, new Symbol[] {
   T_type
,
   IdentifierListOrAll
   })
   };
   ExceptTemplateSpec.Rules = new Rule[] {
   new Rule (802,ExceptTemplateSpec, new Symbol[] {
   T_template
,
   IdentifierListOrAll
   })
   };
   ExceptConstSpec.Rules = new Rule[] {
   new Rule (803,ExceptConstSpec, new Symbol[] {
   T_const
,
   IdentifierListOrAll
   })
   };
   ExceptTestcaseSpec.Rules = new Rule[] {
   new Rule (804,ExceptTestcaseSpec, new Symbol[] {
   T_testcase
,
   IdentifierListOrAll
   })
   };
   ExceptAltstepSpec.Rules = new Rule[] {
   new Rule (805,ExceptAltstepSpec, new Symbol[] {
   T_altstep
,
   IdentifierListOrAll
   })
   };
   ExceptFunctionSpec.Rules = new Rule[] {
   new Rule (806,ExceptFunctionSpec, new Symbol[] {
   T_function
,
   IdentifierListOrAll
   })
   };
   ExceptSignatureSpec.Rules = new Rule[] {
   new Rule (807,ExceptSignatureSpec, new Symbol[] {
   T_signature
,
   IdentifierListOrAll
   })
   };
   ExceptModuleParSpec.Rules = new Rule[] {
   new Rule (808,ExceptModuleParSpec, new Symbol[] {
   T_modulepar
,
   IdentifierListOrAll
   })
   };
   ImportSpec.Rules = new Rule[] {
   new Rule (809,ImportSpec, new Symbol[] {
   LOOP235
   })
   };
   // ***** 
   LOOP235.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (810, LOOP235, new Symbol[] {
         LOOPBODY235,
         LOOP235
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (811, LOOP235, new Symbol[] {
      } ) 
   };
   LOOPBODY235.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (812,LOOPBODY235, new Symbol[] {
   ImportElement
,
   OPTION236
   })
   // ***** 
   };
   // *****  
   OPTION236.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (813, OPTION236, new Symbol[] {
         OPTIONBODY236
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (814, OPTION236, new Symbol[] {
      } ) 
   };
   OPTIONBODY236.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (815,OPTIONBODY236, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   ImportElement.Rules = new Rule[] {
   new Rule (816,ImportElement, new Symbol[] {
   ImportGroupSpec
   })
,
   new Rule (817,ImportElement, new Symbol[] {
   ImportTypeDefSpec
   })
,
   new Rule (818,ImportElement, new Symbol[] {
   ImportTemplateSpec
   })
,
   new Rule (819,ImportElement, new Symbol[] {
   ImportConstSpec
   })
,
   new Rule (820,ImportElement, new Symbol[] {
   ImportTestcaseSpec
   })
,
   new Rule (821,ImportElement, new Symbol[] {
   ImportAltstepSpec
   })
,
   new Rule (822,ImportElement, new Symbol[] {
   ImportFunctionSpec
   })
,
   new Rule (823,ImportElement, new Symbol[] {
   ImportSignatureSpec
   })
,
   new Rule (824,ImportElement, new Symbol[] {
   ImportModuleParSpec
   })
,
   new Rule (825,ImportElement, new Symbol[] {
   ImportImportSpec
   })
   };
   ImportFromSpec.Rules = new Rule[] {
   new Rule (826,ImportFromSpec, new Symbol[] {
   T_from
,
   ModuleId
,
   OPTION237
   })
   };
   // *****  
   OPTION237.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (827, OPTION237, new Symbol[] {
         OPTIONBODY237
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (828, OPTION237, new Symbol[] {
      } ) 
   };
   OPTIONBODY237.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (829,OPTIONBODY237, new Symbol[] {
   T_recursive
   })
   // *****  
   };
   ImportGroupSpec.Rules = new Rule[] {
   new Rule (830,ImportGroupSpec, new Symbol[] {
   T_group
,
   SUB238
   })
   };
   SUB238.Rules = new Rule[] {
   new Rule (831,SUB238, new Symbol[] {
   GroupRefListWithExcept
   })
,
   new Rule (832,SUB238, new Symbol[] {
   AllGroupsWithExcept
   })
   };
   GroupRefListWithExcept.Rules = new Rule[] {
   new Rule (833,GroupRefListWithExcept, new Symbol[] {
   QualifiedIdentifierWithExcept
,
   LOOP239
   })
   };
   // ***** 
   LOOP239.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (834, LOOP239, new Symbol[] {
         LOOPBODY239,
         LOOP239
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (835, LOOP239, new Symbol[] {
      } ) 
   };
   LOOPBODY239.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (836,LOOPBODY239, new Symbol[] {
   T__comma_
,
   QualifiedIdentifierWithExcept
   })
   // ***** 
   };
   AllGroupsWithExcept.Rules = new Rule[] {
   new Rule (837,AllGroupsWithExcept, new Symbol[] {
   T_all
,
   OPTION240
   })
   };
   // *****  
   OPTION240.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (838, OPTION240, new Symbol[] {
         OPTIONBODY240
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (839, OPTION240, new Symbol[] {
      } ) 
   };
   OPTIONBODY240.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (840,OPTIONBODY240, new Symbol[] {
   T_except
,
   QualifiedIdentifierList
   })
   // *****  
   };
   QualifiedIdentifierWithExcept.Rules = new Rule[] {
   new Rule (841,QualifiedIdentifierWithExcept, new Symbol[] {
   QualifiedIdentifier
,
   OPTION241
   })
   };
   // *****  
   OPTION241.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (842, OPTION241, new Symbol[] {
         OPTIONBODY241
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (843, OPTION241, new Symbol[] {
      } ) 
   };
   OPTIONBODY241.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (844,OPTIONBODY241, new Symbol[] {
   ExceptsDef
   })
   // *****  
   };
   IdentifierListOrAllWithExcept.Rules = new Rule[] {
   new Rule (845,IdentifierListOrAllWithExcept, new Symbol[] {
   IdentifierList
   })
,
   new Rule (846,IdentifierListOrAllWithExcept, new Symbol[] {
   AllWithExcept
   })
   };
   ImportTypeDefSpec.Rules = new Rule[] {
   new Rule (847,ImportTypeDefSpec, new Symbol[] {
   T_type
,
   IdentifierListOrAllWithExcept
   })
   };
   AllWithExcept.Rules = new Rule[] {
   new Rule (848,AllWithExcept, new Symbol[] {
   T_all
,
   OPTION242
   })
   };
   // *****  
   OPTION242.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (849, OPTION242, new Symbol[] {
         OPTIONBODY242
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (850, OPTION242, new Symbol[] {
      } ) 
   };
   OPTIONBODY242.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (851,OPTIONBODY242, new Symbol[] {
   T_except
,
   IdentifierList
   })
   // *****  
   };
   ImportTemplateSpec.Rules = new Rule[] {
   new Rule (852,ImportTemplateSpec, new Symbol[] {
   T_template
,
   IdentifierListOrAllWithExcept
   })
   };
   ImportConstSpec.Rules = new Rule[] {
   new Rule (853,ImportConstSpec, new Symbol[] {
   T_const
,
   IdentifierListOrAllWithExcept
   })
   };
   ImportAltstepSpec.Rules = new Rule[] {
   new Rule (854,ImportAltstepSpec, new Symbol[] {
   T_altstep
,
   IdentifierListOrAllWithExcept
   })
   };
   ImportTestcaseSpec.Rules = new Rule[] {
   new Rule (855,ImportTestcaseSpec, new Symbol[] {
   T_testcase
,
   IdentifierListOrAllWithExcept
   })
   };
   ImportFunctionSpec.Rules = new Rule[] {
   new Rule (856,ImportFunctionSpec, new Symbol[] {
   T_function
,
   IdentifierListOrAllWithExcept
   })
   };
   ImportSignatureSpec.Rules = new Rule[] {
   new Rule (857,ImportSignatureSpec, new Symbol[] {
   T_signature
,
   IdentifierListOrAllWithExcept
   })
   };
   ImportModuleParSpec.Rules = new Rule[] {
   new Rule (858,ImportModuleParSpec, new Symbol[] {
   T_modulepar
,
   IdentifierListOrAllWithExcept
   })
   };
   ImportImportSpec.Rules = new Rule[] {
   new Rule (859,ImportImportSpec, new Symbol[] {
   T_import
,
   T_all
   })
   };
   GroupDef.Rules = new Rule[] {
   new Rule (860,GroupDef, new Symbol[] {
   T_group
,
   Identifier
,
   T__lbrace_
,
   OPTION243
,
   T__rbrace_
   })
   };
   // *****  
   OPTION243.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (861, OPTION243, new Symbol[] {
         OPTIONBODY243
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (862, OPTION243, new Symbol[] {
      } ) 
   };
   OPTIONBODY243.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (863,OPTIONBODY243, new Symbol[] {
   ModuleDefinitionsList
   })
   // *****  
   };
   ExtFunctionDef.Rules = new Rule[] {
   new Rule (864,ExtFunctionDef, new Symbol[] {
   T_external
,
   T_function
,
   Identifier
,
   T__lparen_
,
   OPTION244
,
   T__rparen_
,
   OPTION245
   })
   };
   // *****  
   OPTION244.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (865, OPTION244, new Symbol[] {
         OPTIONBODY244
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (866, OPTION244, new Symbol[] {
      } ) 
   };
   OPTIONBODY244.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (867,OPTIONBODY244, new Symbol[] {
   FunctionFormalParList
   })
   // *****  
   };
   // *****  
   OPTION245.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (868, OPTION245, new Symbol[] {
         OPTIONBODY245
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (869, OPTION245, new Symbol[] {
      } ) 
   };
   OPTIONBODY245.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (870,OPTIONBODY245, new Symbol[] {
   ReturnType
   })
   // *****  
   };
   ExtConstDef.Rules = new Rule[] {
   new Rule (871,ExtConstDef, new Symbol[] {
   T_external
,
   T_const
,
   Type
,
   IdentifierList
   })
   };
   ModuleParDef.Rules = new Rule[] {
   new Rule (872,ModuleParDef, new Symbol[] {
   T_modulepar
,
   SUB246
   })
   };
   SUB246.Rules = new Rule[] {
   new Rule (873,SUB246, new Symbol[] {
   ModulePar
   })
,
   new Rule (874,SUB246, new Symbol[] {
   SUB247
   })
   };
   SUB247.Rules = new Rule[] {
   new Rule (875,SUB247, new Symbol[] {
   T__lbrace_
,
   MultitypedModuleParList
,
   T__rbrace_
   })
   };
   MultitypedModuleParList.Rules = new Rule[] {
   new Rule (876,MultitypedModuleParList, new Symbol[] {
   LOOP248
   })
   };
   // ***** 
   LOOP248.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (877, LOOP248, new Symbol[] {
         LOOPBODY248,
         LOOP248
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (878, LOOP248, new Symbol[] {
      } ) 
   };
   LOOPBODY248.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (879,LOOPBODY248, new Symbol[] {
   ModulePar
,
   OPTION249
   })
   // ***** 
   };
   // *****  
   OPTION249.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (880, OPTION249, new Symbol[] {
         OPTIONBODY249
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (881, OPTION249, new Symbol[] {
      } ) 
   };
   OPTIONBODY249.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (882,OPTIONBODY249, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   ModulePar.Rules = new Rule[] {
   new Rule (883,ModulePar, new Symbol[] {
   Type
,
   ModuleParList
   })
   };
   ModuleParList.Rules = new Rule[] {
   new Rule (884,ModuleParList, new Symbol[] {
   Identifier
,
   OPTION250
,
   LOOP251
   })
   };
   // *****  
   OPTION250.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (885, OPTION250, new Symbol[] {
         OPTIONBODY250
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (886, OPTION250, new Symbol[] {
      } ) 
   };
   OPTIONBODY250.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (887,OPTIONBODY250, new Symbol[] {
   T__colon__equal_
,
   ConstantExpression
   })
   // *****  
   };
   // ***** 
   LOOP251.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (888, LOOP251, new Symbol[] {
         LOOPBODY251,
         LOOP251
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (889, LOOP251, new Symbol[] {
      } ) 
   };
   LOOPBODY251.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (890,LOOPBODY251, new Symbol[] {
   T__comma_
,
   Identifier
,
   OPTION252
   })
   // ***** 
   };
   // *****  
   OPTION252.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (891, OPTION252, new Symbol[] {
         OPTIONBODY252
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (892, OPTION252, new Symbol[] {
      } ) 
   };
   OPTIONBODY252.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (893,OPTIONBODY252, new Symbol[] {
   T__colon__equal_
,
   ConstantExpression
   })
   // *****  
   };
   FriendModuleDef.Rules = new Rule[] {
   new Rule (894,FriendModuleDef, new Symbol[] {
   T_friend
,
   T_module
,
   IdentifierList
,
   OPTION253
   })
   };
   // *****  
   OPTION253.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (895, OPTION253, new Symbol[] {
         OPTIONBODY253
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (896, OPTION253, new Symbol[] {
      } ) 
   };
   OPTIONBODY253.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (897,OPTIONBODY253, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   ModuleControlPart.Rules = new Rule[] {
   new Rule (898,ModuleControlPart, new Symbol[] {
   T_control
,
   T__lbrace_
,
   ModuleControlBody
,
   T__rbrace_
,
   OPTION254
,
   OPTION255
   })
   };
   // *****  
   OPTION254.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (899, OPTION254, new Symbol[] {
         OPTIONBODY254
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (900, OPTION254, new Symbol[] {
      } ) 
   };
   OPTIONBODY254.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (901,OPTIONBODY254, new Symbol[] {
   WithStatement
   })
   // *****  
   };
   // *****  
   OPTION255.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (902, OPTION255, new Symbol[] {
         OPTIONBODY255
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (903, OPTION255, new Symbol[] {
      } ) 
   };
   OPTIONBODY255.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (904,OPTIONBODY255, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   ModuleControlBody.Rules = new Rule[] {
   new Rule (905,ModuleControlBody, new Symbol[] {
   OPTION256
   })
   };
   // *****  
   OPTION256.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (906, OPTION256, new Symbol[] {
         OPTIONBODY256
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (907, OPTION256, new Symbol[] {
      } ) 
   };
   OPTIONBODY256.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (908,OPTIONBODY256, new Symbol[] {
   ControlStatementOrDefList
   })
   // *****  
   };
   ControlStatementOrDefList.Rules = new Rule[] {
   new Rule (909,ControlStatementOrDefList, new Symbol[] {
   LOOPPLUS257
   })
   };
   // ***** 
   LOOPPLUS257.Rules = new Rule[] {
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
      new Rule (910, LOOPPLUS257, new Symbol[] {
         LOOPBODY257,
         LOOP257
      } ) 
   };
   LOOP257.Rules = new Rule[] {
   // ***** (2) LOOP ::= LOOPBODY LOOP 
      new Rule (911, LOOP257, new Symbol[] {
         LOOPBODY257,
         LOOP257
      } ) ,
   // ***** (3) LOOP ::= empty 
      new Rule (912, LOOP257, new Symbol[] {
      } ) 
   };
   LOOPBODY257.Rules = new Rule[] {
   // ***** (4) LOOPBODY ::= ... 
   new Rule (913,LOOPBODY257, new Symbol[] {
   ControlStatementOrDef
,
   OPTION258
   })
   // *****  
   };
   // *****  
   OPTION258.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (914, OPTION258, new Symbol[] {
         OPTIONBODY258
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (915, OPTION258, new Symbol[] {
      } ) 
   };
   OPTIONBODY258.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (916,OPTIONBODY258, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   ControlStatementOrDef.Rules = new Rule[] {
   new Rule (917,ControlStatementOrDef, new Symbol[] {
   SUB259
,
   OPTION260
   })
,
   new Rule (918,ControlStatementOrDef, new Symbol[] {
   ControlStatement
   })
   };
   SUB259.Rules = new Rule[] {
   new Rule (919,SUB259, new Symbol[] {
   FunctionLocalDef
   })
,
   new Rule (920,SUB259, new Symbol[] {
   FunctionLocalInst
   })
   };
   // *****  
   OPTION260.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (921, OPTION260, new Symbol[] {
         OPTIONBODY260
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (922, OPTION260, new Symbol[] {
      } ) 
   };
   OPTIONBODY260.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (923,OPTIONBODY260, new Symbol[] {
   WithStatement
   })
   // *****  
   };
   ControlStatement.Rules = new Rule[] {
   new Rule (924,ControlStatement, new Symbol[] {
   TimerStatements
   })
,
   new Rule (925,ControlStatement, new Symbol[] {
   BasicStatements
   })
,
   new Rule (926,ControlStatement, new Symbol[] {
   BehaviourStatements
   })
,
   new Rule (927,ControlStatement, new Symbol[] {
   SUTStatements
   })
,
   new Rule (928,ControlStatement, new Symbol[] {
   T_stop
   })
,
   new Rule (929,ControlStatement, new Symbol[] {
   KillConfigStatement
   })
   };
   VarInstance.Rules = new Rule[] {
   new Rule (930,VarInstance, new Symbol[] {
   T_var
,
   SUB261
   })
   };
   SUB261.Rules = new Rule[] {
   new Rule (931,SUB261, new Symbol[] {
   SUB262
   })
,
   new Rule (932,SUB261, new Symbol[] {
   SUB263
   })
   };
   SUB262.Rules = new Rule[] {
   new Rule (933,SUB262, new Symbol[] {
   Type
,
   VarList
   })
   };
   SUB263.Rules = new Rule[] {
   new Rule (934,SUB263, new Symbol[] {
   SUB264
,
   Type
,
   TempVarList
   })
   };
   SUB264.Rules = new Rule[] {
   new Rule (935,SUB264, new Symbol[] {
   T_template
   })
,
   new Rule (936,SUB264, new Symbol[] {
   RestrictedTemplate
   })
   };
   VarList.Rules = new Rule[] {
   new Rule (937,VarList, new Symbol[] {
   SingleVarInstance
,
   LOOP265
   })
   };
   // ***** 
   LOOP265.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (938, LOOP265, new Symbol[] {
         LOOPBODY265,
         LOOP265
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (939, LOOP265, new Symbol[] {
      } ) 
   };
   LOOPBODY265.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (940,LOOPBODY265, new Symbol[] {
   T__comma_
,
   SingleVarInstance
   })
   // ***** 
   };
   SingleVarInstance.Rules = new Rule[] {
   new Rule (941,SingleVarInstance, new Symbol[] {
   Identifier
,
   OPTION266
,
   OPTION267
   })
   };
   // *****  
   OPTION266.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (942, OPTION266, new Symbol[] {
         OPTIONBODY266
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (943, OPTION266, new Symbol[] {
      } ) 
   };
   OPTIONBODY266.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (944,OPTIONBODY266, new Symbol[] {
   ArrayDef
   })
   // *****  
   };
   // *****  
   OPTION267.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (945, OPTION267, new Symbol[] {
         OPTIONBODY267
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (946, OPTION267, new Symbol[] {
      } ) 
   };
   OPTIONBODY267.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (947,OPTIONBODY267, new Symbol[] {
   T__colon__equal_
,
   Expression
   })
   // *****  
   };
   TempVarList.Rules = new Rule[] {
   new Rule (948,TempVarList, new Symbol[] {
   SingleTempVarInstance
,
   LOOP268
   })
   };
   // ***** 
   LOOP268.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (949, LOOP268, new Symbol[] {
         LOOPBODY268,
         LOOP268
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (950, LOOP268, new Symbol[] {
      } ) 
   };
   LOOPBODY268.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (951,LOOPBODY268, new Symbol[] {
   T__comma_
,
   SingleTempVarInstance
   })
   // ***** 
   };
   SingleTempVarInstance.Rules = new Rule[] {
   new Rule (952,SingleTempVarInstance, new Symbol[] {
   Identifier
,
   OPTION269
,
   OPTION270
   })
   };
   // *****  
   OPTION269.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (953, OPTION269, new Symbol[] {
         OPTIONBODY269
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (954, OPTION269, new Symbol[] {
      } ) 
   };
   OPTIONBODY269.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (955,OPTIONBODY269, new Symbol[] {
   ArrayDef
   })
   // *****  
   };
   // *****  
   OPTION270.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (956, OPTION270, new Symbol[] {
         OPTIONBODY270
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (957, OPTION270, new Symbol[] {
      } ) 
   };
   OPTIONBODY270.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (958,OPTIONBODY270, new Symbol[] {
   T__colon__equal_
,
   TemplateBody
   })
   // *****  
   };
   VariableRef.Rules = new Rule[] {
   new Rule (959,VariableRef, new Symbol[] {
   Identifier
,
   OPTION271
   })
   };
   // *****  
   OPTION271.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (960, OPTION271, new Symbol[] {
         OPTIONBODY271
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (961, OPTION271, new Symbol[] {
      } ) 
   };
   OPTIONBODY271.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (962,OPTIONBODY271, new Symbol[] {
   ExtendedFieldReference
   })
   // *****  
   };
   TimerInstance.Rules = new Rule[] {
   new Rule (963,TimerInstance, new Symbol[] {
   T_timer
,
   VarList
   })
   };
   ArrayIdentifierRef.Rules = new Rule[] {
   new Rule (964,ArrayIdentifierRef, new Symbol[] {
   Identifier
,
   LOOP272
   })
   };
   // ***** 
   LOOP272.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (965, LOOP272, new Symbol[] {
         LOOPBODY272,
         LOOP272
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (966, LOOP272, new Symbol[] {
      } ) 
   };
   LOOPBODY272.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (967,LOOPBODY272, new Symbol[] {
   ArrayOrBitRef
   })
   // ***** 
   };
   ConfigurationStatements.Rules = new Rule[] {
   new Rule (968,ConfigurationStatements, new Symbol[] {
   ConnectStatement
   })
,
   new Rule (969,ConfigurationStatements, new Symbol[] {
   MapStatement
   })
,
   new Rule (970,ConfigurationStatements, new Symbol[] {
   DisconnectStatement
   })
,
   new Rule (971,ConfigurationStatements, new Symbol[] {
   UnmapStatement
   })
,
   new Rule (972,ConfigurationStatements, new Symbol[] {
   DoneStatement
   })
,
   new Rule (973,ConfigurationStatements, new Symbol[] {
   KilledStatement
   })
,
   new Rule (974,ConfigurationStatements, new Symbol[] {
   StartTCStatement
   })
,
   new Rule (975,ConfigurationStatements, new Symbol[] {
   StopTCStatement
   })
,
   new Rule (976,ConfigurationStatements, new Symbol[] {
   KillTCStatement
   })
   };
   ConfigurationOps.Rules = new Rule[] {
   new Rule (977,ConfigurationOps, new Symbol[] {
   CreateOp
   })
,
   new Rule (978,ConfigurationOps, new Symbol[] {
   T_self
   })
,
   new Rule (979,ConfigurationOps, new Symbol[] {
   T_system
   })
,
   new Rule (980,ConfigurationOps, new Symbol[] {
   T_mtc
   })
,
   new Rule (981,ConfigurationOps, new Symbol[] {
   RunningOp
   })
,
   new Rule (982,ConfigurationOps, new Symbol[] {
   AliveOp
   })
   };
   CreateOp.Rules = new Rule[] {
   new Rule (983,CreateOp, new Symbol[] {
   ComponentType
,
   T__dot_
,
   T_create
,
   OPTION273
,
   OPTION276
   })
   };
   // *****  
   OPTION273.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (984, OPTION273, new Symbol[] {
         OPTIONBODY273
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (985, OPTION273, new Symbol[] {
      } ) 
   };
   OPTIONBODY273.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (986,OPTIONBODY273, new Symbol[] {
   T__lparen_
,
   SUB274
,
   OPTION275
,
   T__rparen_
   })
   // *****  
   };
   SUB274.Rules = new Rule[] {
   new Rule (987,SUB274, new Symbol[] {
   SingleExpression
   })
,
   new Rule (988,SUB274, new Symbol[] {
   T__minus_
   })
   };
   // *****  
   OPTION275.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (989, OPTION275, new Symbol[] {
         OPTIONBODY275
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (990, OPTION275, new Symbol[] {
      } ) 
   };
   OPTIONBODY275.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (991,OPTIONBODY275, new Symbol[] {
   T__comma_
,
   SingleExpression
   })
   // *****  
   };
   // *****  
   OPTION276.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (992, OPTION276, new Symbol[] {
         OPTIONBODY276
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (993, OPTION276, new Symbol[] {
      } ) 
   };
   OPTIONBODY276.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (994,OPTIONBODY276, new Symbol[] {
   T_alive
   })
,
   new Rule (995,OPTIONBODY276, new Symbol[] {
   T_static
   })
   // *****  
   };
   DoneStatement.Rules = new Rule[] {
   new Rule (996,DoneStatement, new Symbol[] {
   ComponentId
,
   T__dot_
,
   T_done
   })
   };
   KilledStatement.Rules = new Rule[] {
   new Rule (997,KilledStatement, new Symbol[] {
   ComponentId
,
   T__dot_
,
   T_killed
   })
   };
   ComponentId.Rules = new Rule[] {
   new Rule (998,ComponentId, new Symbol[] {
   ComponentOrDefaultReference
   })
,
   new Rule (999,ComponentId, new Symbol[] {
   SUB277
,
   T_component
   })
   };
   SUB277.Rules = new Rule[] {
   new Rule (1000,SUB277, new Symbol[] {
   T_any
   })
,
   new Rule (1001,SUB277, new Symbol[] {
   T_all
   })
   };
   RunningOp.Rules = new Rule[] {
   new Rule (1002,RunningOp, new Symbol[] {
   ComponentId
,
   T__dot_
,
   T_running
   })
   };
   AliveOp.Rules = new Rule[] {
   new Rule (1003,AliveOp, new Symbol[] {
   ComponentId
,
   T__dot_
,
   T_alive
   })
   };
   ConnectStatement.Rules = new Rule[] {
   new Rule (1004,ConnectStatement, new Symbol[] {
   T_connect
,
   SingleConnectionSpec
,
   OPTION278
   })
   };
   // *****  
   OPTION278.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1005, OPTION278, new Symbol[] {
         OPTIONBODY278
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1006, OPTION278, new Symbol[] {
      } ) 
   };
   OPTIONBODY278.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1007,OPTIONBODY278, new Symbol[] {
   T_static
   })
   // *****  
   };
   SingleConnectionSpec.Rules = new Rule[] {
   new Rule (1008,SingleConnectionSpec, new Symbol[] {
   T__lparen_
,
   PortRef
,
   T__comma_
,
   PortRef
,
   T__rparen_
   })
   };
   PortRef.Rules = new Rule[] {
   new Rule (1009,PortRef, new Symbol[] {
   ComponentRef
,
   T__colon_
,
   ArrayIdentifierRef
   })
   };
   ComponentRef.Rules = new Rule[] {
   new Rule (1010,ComponentRef, new Symbol[] {
   ComponentOrDefaultReference
   })
,
   new Rule (1011,ComponentRef, new Symbol[] {
   T_system
   })
,
   new Rule (1012,ComponentRef, new Symbol[] {
   T_self
   })
,
   new Rule (1013,ComponentRef, new Symbol[] {
   T_mtc
   })
   };
   ComponentRefAssignment.Rules = new Rule[] {
   new Rule (1014,ComponentRefAssignment, new Symbol[] {
   Identifier
,
   T__colon__equal_
,
   ComponentRef
   })
   };
   DisconnectStatement.Rules = new Rule[] {
   new Rule (1015,DisconnectStatement, new Symbol[] {
   T_disconnect
,
   OPTION279
   })
   };
   // *****  
   OPTION279.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1016, OPTION279, new Symbol[] {
         OPTIONBODY279
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1017, OPTION279, new Symbol[] {
      } ) 
   };
   OPTIONBODY279.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1018,OPTIONBODY279, new Symbol[] {
   SingleConnectionSpec
   })
,
   new Rule (1019,OPTIONBODY279, new Symbol[] {
   AllConnectionsSpec
   })
,
   new Rule (1020,OPTIONBODY279, new Symbol[] {
   AllPortsSpec
   })
,
   new Rule (1021,OPTIONBODY279, new Symbol[] {
   AllCompsAllPortsSpec
   })
   // *****  
   };
   AllConnectionsSpec.Rules = new Rule[] {
   new Rule (1022,AllConnectionsSpec, new Symbol[] {
   T__lparen_
,
   PortRef
,
   T__rparen_
   })
   };
// grenze 1
}
public static void DefineGrammar2()
{
   AllPortsSpec.Rules = new Rule[] {
   new Rule (1023,AllPortsSpec, new Symbol[] {
   T__lparen_
,
   ComponentRef
,
   T__colon_
,
   T_all
,
   T_port
,
   T__rparen_
   })
   };
   AllCompsAllPortsSpec.Rules = new Rule[] {
   new Rule (1024,AllCompsAllPortsSpec, new Symbol[] {
   T__lparen_
,
   T_all
,
   T_component
,
   T__colon_
,
   T_all
,
   T_port
,
   T__rparen_
   })
   };
   MapStatement.Rules = new Rule[] {
   new Rule (1025,MapStatement, new Symbol[] {
   T_map
,
   SingleConnectionSpec
,
   OPTION280
,
   OPTION281
   })
   };
   // *****  
   OPTION280.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1026, OPTION280, new Symbol[] {
         OPTIONBODY280
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1027, OPTION280, new Symbol[] {
      } ) 
   };
   OPTIONBODY280.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1028,OPTIONBODY280, new Symbol[] {
   ParamClause
   })
   // *****  
   };
   // *****  
   OPTION281.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1029, OPTION281, new Symbol[] {
         OPTIONBODY281
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1030, OPTION281, new Symbol[] {
      } ) 
   };
   OPTIONBODY281.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1031,OPTIONBODY281, new Symbol[] {
   T_static
   })
   // *****  
   };
   ParamClause.Rules = new Rule[] {
   new Rule (1032,ParamClause, new Symbol[] {
   T_param
,
   FunctionActualParList
   })
   };
   UnmapStatement.Rules = new Rule[] {
   new Rule (1033,UnmapStatement, new Symbol[] {
   T_unmap
,
   OPTION282
   })
   };
   // *****  
   OPTION282.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1034, OPTION282, new Symbol[] {
         OPTIONBODY282
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1035, OPTION282, new Symbol[] {
      } ) 
   };
   OPTIONBODY282.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1036,OPTIONBODY282, new Symbol[] {
   SingleConnectionSpec
,
   OPTION283
   })
,
   new Rule (1037,OPTIONBODY282, new Symbol[] {
   AllConnectionsSpec
,
   OPTION284
   })
,
   new Rule (1038,OPTIONBODY282, new Symbol[] {
   AllPortsSpec
   })
,
   new Rule (1039,OPTIONBODY282, new Symbol[] {
   AllCompsAllPortsSpec
   })
   // *****  
   };
   // *****  
   OPTION283.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1040, OPTION283, new Symbol[] {
         OPTIONBODY283
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1041, OPTION283, new Symbol[] {
      } ) 
   };
   OPTIONBODY283.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1042,OPTIONBODY283, new Symbol[] {
   ParamClause
   })
   // *****  
   };
   // *****  
   OPTION284.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1043, OPTION284, new Symbol[] {
         OPTIONBODY284
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1044, OPTION284, new Symbol[] {
      } ) 
   };
   OPTIONBODY284.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1045,OPTIONBODY284, new Symbol[] {
   ParamClause
   })
   // *****  
   };
   StartTCStatement.Rules = new Rule[] {
   new Rule (1046,StartTCStatement, new Symbol[] {
   ComponentOrDefaultReference
,
   T__dot_
,
   T_start
,
   T__lparen_
,
   FunctionInstance
,
   T__rparen_
   })
   };
   StopTCStatement.Rules = new Rule[] {
   new Rule (1047,StopTCStatement, new Symbol[] {
   T_stop
   })
,
   new Rule (1048,StopTCStatement, new Symbol[] {
   SUB285
,
   T__dot_
,
   T_stop
   })
   };
   SUB285.Rules = new Rule[] {
   new Rule (1049,SUB285, new Symbol[] {
   ComponentReferenceOrLiteral
   })
,
   new Rule (1050,SUB285, new Symbol[] {
   T_all
,
   T_component
   })
   };
   ComponentReferenceOrLiteral.Rules = new Rule[] {
   new Rule (1051,ComponentReferenceOrLiteral, new Symbol[] {
   ComponentOrDefaultReference
   })
,
   new Rule (1052,ComponentReferenceOrLiteral, new Symbol[] {
   T_mtc
   })
,
   new Rule (1053,ComponentReferenceOrLiteral, new Symbol[] {
   T_self
   })
   };
   KillTCStatement.Rules = new Rule[] {
   new Rule (1054,KillTCStatement, new Symbol[] {
   T_kill
   })
,
   new Rule (1055,KillTCStatement, new Symbol[] {
   SUB286
   })
   };
   SUB286.Rules = new Rule[] {
   new Rule (1056,SUB286, new Symbol[] {
   SUB287
,
   T__dot_
,
   T_kill
   })
   };
   SUB287.Rules = new Rule[] {
   new Rule (1057,SUB287, new Symbol[] {
   ComponentReferenceOrLiteral
   })
,
   new Rule (1058,SUB287, new Symbol[] {
   T_all
,
   T_component
   })
   };
   ComponentOrDefaultReference.Rules = new Rule[] {
   new Rule (1059,ComponentOrDefaultReference, new Symbol[] {
   VariableRef
   })
,
   new Rule (1060,ComponentOrDefaultReference, new Symbol[] {
   FunctionInstance
   })
   };
   CommunicationStatements.Rules = new Rule[] {
   new Rule (1061,CommunicationStatements, new Symbol[] {
   SendStatement
   })
,
   new Rule (1062,CommunicationStatements, new Symbol[] {
   CallStatement
   })
,
   new Rule (1063,CommunicationStatements, new Symbol[] {
   ReplyStatement
   })
,
   new Rule (1064,CommunicationStatements, new Symbol[] {
   RaiseStatement
   })
,
   new Rule (1065,CommunicationStatements, new Symbol[] {
   ReceiveStatement
   })
,
   new Rule (1066,CommunicationStatements, new Symbol[] {
   TriggerStatement
   })
,
   new Rule (1067,CommunicationStatements, new Symbol[] {
   GetCallStatement
   })
,
   new Rule (1068,CommunicationStatements, new Symbol[] {
   GetReplyStatement
   })
,
   new Rule (1069,CommunicationStatements, new Symbol[] {
   CatchStatement
   })
,
   new Rule (1070,CommunicationStatements, new Symbol[] {
   CheckStatement
   })
,
   new Rule (1071,CommunicationStatements, new Symbol[] {
   ClearStatement
   })
,
   new Rule (1072,CommunicationStatements, new Symbol[] {
   StartStatement
   })
,
   new Rule (1073,CommunicationStatements, new Symbol[] {
   StopStatement
   })
,
   new Rule (1074,CommunicationStatements, new Symbol[] {
   HaltStatement
   })
,
   new Rule (1075,CommunicationStatements, new Symbol[] {
   CheckStateStatement
   })
,
   new Rule (1076,CommunicationStatements, new Symbol[] {
   StreamEvalStatements
   })
   };
   SendStatement.Rules = new Rule[] {
   new Rule (1077,SendStatement, new Symbol[] {
   ArrayIdentifierRef
,
   T__dot_
,
   PortSendOp
   })
   };
   PortSendOp.Rules = new Rule[] {
   new Rule (1078,PortSendOp, new Symbol[] {
   T_send
,
   T__lparen_
,
   InLineTemplate
,
   T__rparen_
,
   OPTION288
   })
   };
   // *****  
   OPTION288.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1079, OPTION288, new Symbol[] {
         OPTIONBODY288
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1080, OPTION288, new Symbol[] {
      } ) 
   };
   OPTIONBODY288.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1081,OPTIONBODY288, new Symbol[] {
   ToClause
   })
   // *****  
   };
   ToClause.Rules = new Rule[] {
   new Rule (1082,ToClause, new Symbol[] {
   T_to
,
   SUB289
   })
   };
   SUB289.Rules = new Rule[] {
   new Rule (1083,SUB289, new Symbol[] {
   InLineTemplate
   })
,
   new Rule (1084,SUB289, new Symbol[] {
   AddressRefList
   })
,
   new Rule (1085,SUB289, new Symbol[] {
   T_all
,
   T_component
   })
   };
   AddressRefList.Rules = new Rule[] {
   new Rule (1086,AddressRefList, new Symbol[] {
   T__lparen_
,
   InLineTemplate
,
   LOOP290
,
   T__rparen_
   })
   };
   // ***** 
   LOOP290.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1087, LOOP290, new Symbol[] {
         LOOPBODY290,
         LOOP290
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1088, LOOP290, new Symbol[] {
      } ) 
   };
   LOOPBODY290.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1089,LOOPBODY290, new Symbol[] {
   T__comma_
,
   InLineTemplate
   })
   // ***** 
   };
   CallStatement.Rules = new Rule[] {
   new Rule (1090,CallStatement, new Symbol[] {
   ArrayIdentifierRef
,
   T__dot_
,
   PortCallOp
,
   OPTION291
   })
   };
   // *****  
   OPTION291.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1091, OPTION291, new Symbol[] {
         OPTIONBODY291
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1092, OPTION291, new Symbol[] {
      } ) 
   };
   OPTIONBODY291.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1093,OPTIONBODY291, new Symbol[] {
   PortCallBody
   })
   // *****  
   };
   PortCallOp.Rules = new Rule[] {
   new Rule (1094,PortCallOp, new Symbol[] {
   T_call
,
   T__lparen_
,
   CallParameters
,
   T__rparen_
,
   OPTION292
   })
   };
   // *****  
   OPTION292.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1095, OPTION292, new Symbol[] {
         OPTIONBODY292
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1096, OPTION292, new Symbol[] {
      } ) 
   };
   OPTIONBODY292.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1097,OPTIONBODY292, new Symbol[] {
   ToClause
   })
   // *****  
   };
   CallParameters.Rules = new Rule[] {
   new Rule (1098,CallParameters, new Symbol[] {
   InLineTemplate
,
   OPTION293
   })
   };
   // *****  
   OPTION293.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1099, OPTION293, new Symbol[] {
         OPTIONBODY293
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1100, OPTION293, new Symbol[] {
      } ) 
   };
   OPTIONBODY293.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1101,OPTIONBODY293, new Symbol[] {
   T__comma_
,
   CallTimerValue
   })
   // *****  
   };
   CallTimerValue.Rules = new Rule[] {
   new Rule (1102,CallTimerValue, new Symbol[] {
   Expression
   })
,
   new Rule (1103,CallTimerValue, new Symbol[] {
   T_nowait
   })
   };
   PortCallBody.Rules = new Rule[] {
   new Rule (1104,PortCallBody, new Symbol[] {
   T__lbrace_
,
   CallBodyStatementList
,
   T__rbrace_
   })
   };
   CallBodyStatementList.Rules = new Rule[] {
   new Rule (1105,CallBodyStatementList, new Symbol[] {
   LOOPPLUS294
   })
   };
   // ***** 
   LOOPPLUS294.Rules = new Rule[] {
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
      new Rule (1106, LOOPPLUS294, new Symbol[] {
         LOOPBODY294,
         LOOP294
      } ) 
   };
   LOOP294.Rules = new Rule[] {
   // ***** (2) LOOP ::= LOOPBODY LOOP 
      new Rule (1107, LOOP294, new Symbol[] {
         LOOPBODY294,
         LOOP294
      } ) ,
   // ***** (3) LOOP ::= empty 
      new Rule (1108, LOOP294, new Symbol[] {
      } ) 
   };
   LOOPBODY294.Rules = new Rule[] {
   // ***** (4) LOOPBODY ::= ... 
   new Rule (1109,LOOPBODY294, new Symbol[] {
   CallBodyStatement
,
   OPTION295
   })
   // *****  
   };
   // *****  
   OPTION295.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1110, OPTION295, new Symbol[] {
         OPTIONBODY295
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1111, OPTION295, new Symbol[] {
      } ) 
   };
   OPTIONBODY295.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1112,OPTIONBODY295, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   CallBodyStatement.Rules = new Rule[] {
   new Rule (1113,CallBodyStatement, new Symbol[] {
   CallBodyGuard
,
   StatementBlock
   })
   };
   CallBodyGuard.Rules = new Rule[] {
   new Rule (1114,CallBodyGuard, new Symbol[] {
   AltGuardChar
,
   CallBodyOps
   })
   };
   CallBodyOps.Rules = new Rule[] {
   new Rule (1115,CallBodyOps, new Symbol[] {
   GetReplyStatement
   })
,
   new Rule (1116,CallBodyOps, new Symbol[] {
   CatchStatement
   })
   };
   ReplyStatement.Rules = new Rule[] {
   new Rule (1117,ReplyStatement, new Symbol[] {
   ArrayIdentifierRef
,
   T__dot_
,
   PortReplyOp
   })
   };
   PortReplyOp.Rules = new Rule[] {
   new Rule (1118,PortReplyOp, new Symbol[] {
   T_reply
,
   T__lparen_
,
   InLineTemplate
,
   OPTION296
,
   T__rparen_
,
   OPTION297
   })
   };
   // *****  
   OPTION296.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1119, OPTION296, new Symbol[] {
         OPTIONBODY296
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1120, OPTION296, new Symbol[] {
      } ) 
   };
   OPTIONBODY296.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1121,OPTIONBODY296, new Symbol[] {
   ReplyValue
   })
   // *****  
   };
   // *****  
   OPTION297.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1122, OPTION297, new Symbol[] {
         OPTIONBODY297
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1123, OPTION297, new Symbol[] {
      } ) 
   };
   OPTIONBODY297.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1124,OPTIONBODY297, new Symbol[] {
   ToClause
   })
   // *****  
   };
   ReplyValue.Rules = new Rule[] {
   new Rule (1125,ReplyValue, new Symbol[] {
   T_value
,
   Expression
   })
   };
   RaiseStatement.Rules = new Rule[] {
   new Rule (1126,RaiseStatement, new Symbol[] {
   ArrayIdentifierRef
,
   T__dot_
,
   PortRaiseOp
   })
   };
   PortRaiseOp.Rules = new Rule[] {
   new Rule (1127,PortRaiseOp, new Symbol[] {
   T_raise
,
   T__lparen_
,
   Signature
,
   T__comma_
,
   InLineTemplate
,
   T__rparen_
,
   OPTION298
   })
   };
   // *****  
   OPTION298.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1128, OPTION298, new Symbol[] {
         OPTIONBODY298
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1129, OPTION298, new Symbol[] {
      } ) 
   };
   OPTIONBODY298.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1130,OPTIONBODY298, new Symbol[] {
   ToClause
   })
   // *****  
   };
   ReceiveStatement.Rules = new Rule[] {
   new Rule (1131,ReceiveStatement, new Symbol[] {
   PortOrAny
,
   T__dot_
,
   PortReceiveOp
   })
   };
   PortOrAny.Rules = new Rule[] {
   new Rule (1132,PortOrAny, new Symbol[] {
   ArrayIdentifierRef
   })
,
   new Rule (1133,PortOrAny, new Symbol[] {
   T_any
,
   T_port
   })
   };
   PortReceiveOp.Rules = new Rule[] {
   new Rule (1134,PortReceiveOp, new Symbol[] {
   T_receive
,
   OPTION299
,
   OPTION300
,
   OPTION301
   })
   };
   // *****  
   OPTION299.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1135, OPTION299, new Symbol[] {
         OPTIONBODY299
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1136, OPTION299, new Symbol[] {
      } ) 
   };
   OPTIONBODY299.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1137,OPTIONBODY299, new Symbol[] {
   T__lparen_
,
   InLineTemplate
,
   T__rparen_
   })
   // *****  
   };
   // *****  
   OPTION300.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1138, OPTION300, new Symbol[] {
         OPTIONBODY300
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1139, OPTION300, new Symbol[] {
      } ) 
   };
   OPTIONBODY300.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1140,OPTIONBODY300, new Symbol[] {
   FromClause
   })
   // *****  
   };
   // *****  
   OPTION301.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1141, OPTION301, new Symbol[] {
         OPTIONBODY301
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1142, OPTION301, new Symbol[] {
      } ) 
   };
   OPTIONBODY301.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1143,OPTIONBODY301, new Symbol[] {
   PortRedirect
   })
   // *****  
   };
   FromClause.Rules = new Rule[] {
   new Rule (1144,FromClause, new Symbol[] {
   T_from
,
   SUB302
   })
   };
   SUB302.Rules = new Rule[] {
   new Rule (1145,SUB302, new Symbol[] {
   InLineTemplate
   })
,
   new Rule (1146,SUB302, new Symbol[] {
   AddressRefList
   })
,
   new Rule (1147,SUB302, new Symbol[] {
   T_any
,
   T_component
   })
   };
   PortRedirect.Rules = new Rule[] {
   new Rule (1148,PortRedirect, new Symbol[] {
   T__minus__greater_
,
   SUB303
   })
   };
   SUB303.Rules = new Rule[] {
   new Rule (1149,SUB303, new Symbol[] {
   ValueSpec
,
   OPTION304
,
   OPTION305
   })
,
   new Rule (1150,SUB303, new Symbol[] {
   SenderSpec
,
   OPTION306
   })
,
   new Rule (1151,SUB303, new Symbol[] {
   TimestampSpec
   })
   };
   // *****  
   OPTION304.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1152, OPTION304, new Symbol[] {
         OPTIONBODY304
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1153, OPTION304, new Symbol[] {
      } ) 
   };
   OPTIONBODY304.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1154,OPTIONBODY304, new Symbol[] {
   SenderSpec
   })
   // *****  
   };
   // *****  
   OPTION305.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1155, OPTION305, new Symbol[] {
         OPTIONBODY305
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1156, OPTION305, new Symbol[] {
      } ) 
   };
   OPTIONBODY305.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1157,OPTIONBODY305, new Symbol[] {
   TimestampSpec
   })
   // *****  
   };
   // *****  
   OPTION306.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1158, OPTION306, new Symbol[] {
         OPTIONBODY306
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1159, OPTION306, new Symbol[] {
      } ) 
   };
   OPTIONBODY306.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1160,OPTIONBODY306, new Symbol[] {
   TimestampSpec
   })
   // *****  
   };
   ValueSpec.Rules = new Rule[] {
   new Rule (1161,ValueSpec, new Symbol[] {
   T_value
,
   SUB307
   })
   };
   SUB307.Rules = new Rule[] {
   new Rule (1162,SUB307, new Symbol[] {
   VariableRef
   })
,
   new Rule (1163,SUB307, new Symbol[] {
   SUB308
   })
   };
   SUB308.Rules = new Rule[] {
   new Rule (1164,SUB308, new Symbol[] {
   T__lparen_
,
   SingleValueSpec
,
   LOOP309
,
   T__rparen_
   })
   };
   // ***** 
   LOOP309.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1165, LOOP309, new Symbol[] {
         LOOPBODY309,
         LOOP309
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1166, LOOP309, new Symbol[] {
      } ) 
   };
   LOOPBODY309.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1167,LOOPBODY309, new Symbol[] {
   T__comma_
,
   SingleValueSpec
   })
   // ***** 
   };
   SingleValueSpec.Rules = new Rule[] {
   new Rule (1168,SingleValueSpec, new Symbol[] {
   VariableRef
,
   OPTION310
   })
   };
   // *****  
   OPTION310.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1169, OPTION310, new Symbol[] {
         OPTIONBODY310
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1170, OPTION310, new Symbol[] {
      } ) 
   };
   OPTIONBODY310.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1171,OPTIONBODY310, new Symbol[] {
   T__colon__equal_
,
   FieldReference
,
   ExtendedFieldReference
   })
   // *****  
   };
   SenderSpec.Rules = new Rule[] {
   new Rule (1172,SenderSpec, new Symbol[] {
   T_sender
,
   VariableRef
   })
   };
   TriggerStatement.Rules = new Rule[] {
   new Rule (1173,TriggerStatement, new Symbol[] {
   PortOrAny
,
   T__dot_
,
   PortTriggerOp
   })
   };
   PortTriggerOp.Rules = new Rule[] {
   new Rule (1174,PortTriggerOp, new Symbol[] {
   T_trigger
,
   OPTION311
,
   OPTION312
,
   OPTION313
   })
   };
   // *****  
   OPTION311.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1175, OPTION311, new Symbol[] {
         OPTIONBODY311
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1176, OPTION311, new Symbol[] {
      } ) 
   };
   OPTIONBODY311.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1177,OPTIONBODY311, new Symbol[] {
   T__lparen_
,
   InLineTemplate
,
   T__rparen_
   })
   // *****  
   };
   // *****  
   OPTION312.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1178, OPTION312, new Symbol[] {
         OPTIONBODY312
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1179, OPTION312, new Symbol[] {
      } ) 
   };
   OPTIONBODY312.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1180,OPTIONBODY312, new Symbol[] {
   FromClause
   })
   // *****  
   };
   // *****  
   OPTION313.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1181, OPTION313, new Symbol[] {
         OPTIONBODY313
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1182, OPTION313, new Symbol[] {
      } ) 
   };
   OPTIONBODY313.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1183,OPTIONBODY313, new Symbol[] {
   PortRedirect
   })
   // *****  
   };
   GetCallStatement.Rules = new Rule[] {
   new Rule (1184,GetCallStatement, new Symbol[] {
   PortOrAny
,
   T__dot_
,
   PortGetCallOp
   })
   };
   PortGetCallOp.Rules = new Rule[] {
   new Rule (1185,PortGetCallOp, new Symbol[] {
   T_getcall
,
   OPTION314
,
   OPTION315
,
   OPTION316
   })
   };
   // *****  
   OPTION314.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1186, OPTION314, new Symbol[] {
         OPTIONBODY314
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1187, OPTION314, new Symbol[] {
      } ) 
   };
   OPTIONBODY314.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1188,OPTIONBODY314, new Symbol[] {
   T__lparen_
,
   InLineTemplate
,
   T__rparen_
   })
   // *****  
   };
   // *****  
   OPTION315.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1189, OPTION315, new Symbol[] {
         OPTIONBODY315
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1190, OPTION315, new Symbol[] {
      } ) 
   };
   OPTIONBODY315.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1191,OPTIONBODY315, new Symbol[] {
   FromClause
   })
   // *****  
   };
   // *****  
   OPTION316.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1192, OPTION316, new Symbol[] {
         OPTIONBODY316
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1193, OPTION316, new Symbol[] {
      } ) 
   };
   OPTIONBODY316.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1194,OPTIONBODY316, new Symbol[] {
   PortRedirectWithParam
   })
   // *****  
   };
   PortRedirectWithParam.Rules = new Rule[] {
   new Rule (1195,PortRedirectWithParam, new Symbol[] {
   T__minus__greater_
,
   RedirectWithParamSpec
   })
   };
   RedirectWithParamSpec.Rules = new Rule[] {
   new Rule (1196,RedirectWithParamSpec, new Symbol[] {
   ParamSpec
,
   OPTION317
   })
,
   new Rule (1197,RedirectWithParamSpec, new Symbol[] {
   SenderSpec
   })
   };
   // *****  
   OPTION317.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1198, OPTION317, new Symbol[] {
         OPTIONBODY317
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1199, OPTION317, new Symbol[] {
      } ) 
   };
   OPTIONBODY317.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1200,OPTIONBODY317, new Symbol[] {
   SenderSpec
   })
   // *****  
   };
   ParamSpec.Rules = new Rule[] {
   new Rule (1201,ParamSpec, new Symbol[] {
   T_param
,
   ParamAssignmentList
   })
   };
   ParamAssignmentList.Rules = new Rule[] {
   new Rule (1202,ParamAssignmentList, new Symbol[] {
   T__lparen_
,
   SUB318
,
   T__rparen_
   })
   };
   SUB318.Rules = new Rule[] {
   new Rule (1203,SUB318, new Symbol[] {
   AssignmentList
   })
,
   new Rule (1204,SUB318, new Symbol[] {
   VariableList
   })
   };
   AssignmentList.Rules = new Rule[] {
   new Rule (1205,AssignmentList, new Symbol[] {
   VariableAssignment
,
   LOOP319
   })
   };
   // ***** 
   LOOP319.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1206, LOOP319, new Symbol[] {
         LOOPBODY319,
         LOOP319
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1207, LOOP319, new Symbol[] {
      } ) 
   };
   LOOPBODY319.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1208,LOOPBODY319, new Symbol[] {
   T__comma_
,
   VariableAssignment
   })
   // ***** 
   };
   VariableAssignment.Rules = new Rule[] {
   new Rule (1209,VariableAssignment, new Symbol[] {
   VariableRef
,
   T__colon__equal_
,
   Identifier
   })
   };
   VariableList.Rules = new Rule[] {
   new Rule (1210,VariableList, new Symbol[] {
   VariableEntry
,
   LOOP320
   })
   };
   // ***** 
   LOOP320.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1211, LOOP320, new Symbol[] {
         LOOPBODY320,
         LOOP320
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1212, LOOP320, new Symbol[] {
      } ) 
   };
   LOOPBODY320.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1213,LOOPBODY320, new Symbol[] {
   T__comma_
,
   VariableEntry
   })
   // ***** 
   };
   VariableEntry.Rules = new Rule[] {
   new Rule (1214,VariableEntry, new Symbol[] {
   VariableRef
   })
,
   new Rule (1215,VariableEntry, new Symbol[] {
   T__minus_
   })
   };
   GetReplyStatement.Rules = new Rule[] {
   new Rule (1216,GetReplyStatement, new Symbol[] {
   PortOrAny
,
   T__dot_
,
   PortGetReplyOp
   })
   };
   PortGetReplyOp.Rules = new Rule[] {
   new Rule (1217,PortGetReplyOp, new Symbol[] {
   T_getreply
,
   OPTION321
,
   OPTION323
,
   OPTION324
   })
   };
   // *****  
   OPTION321.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1218, OPTION321, new Symbol[] {
         OPTIONBODY321
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1219, OPTION321, new Symbol[] {
      } ) 
   };
   OPTIONBODY321.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1220,OPTIONBODY321, new Symbol[] {
   T__lparen_
,
   InLineTemplate
,
   OPTION322
,
   T__rparen_
   })
   // *****  
   };
   // *****  
   OPTION322.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1221, OPTION322, new Symbol[] {
         OPTIONBODY322
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1222, OPTION322, new Symbol[] {
      } ) 
   };
   OPTIONBODY322.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1223,OPTIONBODY322, new Symbol[] {
   ValueMatchSpec
   })
   // *****  
   };
   // *****  
   OPTION323.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1224, OPTION323, new Symbol[] {
         OPTIONBODY323
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1225, OPTION323, new Symbol[] {
      } ) 
   };
   OPTIONBODY323.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1226,OPTIONBODY323, new Symbol[] {
   FromClause
   })
   // *****  
   };
   // *****  
   OPTION324.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1227, OPTION324, new Symbol[] {
         OPTIONBODY324
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1228, OPTION324, new Symbol[] {
      } ) 
   };
   OPTIONBODY324.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1229,OPTIONBODY324, new Symbol[] {
   PortRedirectWithValueAndParam
   })
   // *****  
   };
   PortRedirectWithValueAndParam.Rules = new Rule[] {
   new Rule (1230,PortRedirectWithValueAndParam, new Symbol[] {
   T__minus__greater_
,
   RedirectWithValueAndParamSpec
   })
   };
   RedirectWithValueAndParamSpec.Rules = new Rule[] {
   new Rule (1231,RedirectWithValueAndParamSpec, new Symbol[] {
   ValueSpec
,
   OPTION325
,
   OPTION326
   })
,
   new Rule (1232,RedirectWithValueAndParamSpec, new Symbol[] {
   RedirectWithParamSpec
   })
   };
   // *****  
   OPTION325.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1233, OPTION325, new Symbol[] {
         OPTIONBODY325
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1234, OPTION325, new Symbol[] {
      } ) 
   };
   OPTIONBODY325.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1235,OPTIONBODY325, new Symbol[] {
   ParamSpec
   })
   // *****  
   };
   // *****  
   OPTION326.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1236, OPTION326, new Symbol[] {
         OPTIONBODY326
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1237, OPTION326, new Symbol[] {
      } ) 
   };
   OPTIONBODY326.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1238,OPTIONBODY326, new Symbol[] {
   SenderSpec
   })
   // *****  
   };
   ValueMatchSpec.Rules = new Rule[] {
   new Rule (1239,ValueMatchSpec, new Symbol[] {
   T_value
,
   InLineTemplate
   })
   };
   CheckStatement.Rules = new Rule[] {
   new Rule (1240,CheckStatement, new Symbol[] {
   PortOrAny
,
   T__dot_
,
   PortCheckOp
   })
   };
   PortCheckOp.Rules = new Rule[] {
   new Rule (1241,PortCheckOp, new Symbol[] {
   T_check
,
   OPTION327
   })
   };
   // *****  
   OPTION327.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1242, OPTION327, new Symbol[] {
         OPTIONBODY327
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1243, OPTION327, new Symbol[] {
      } ) 
   };
   OPTIONBODY327.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1244,OPTIONBODY327, new Symbol[] {
   T__lparen_
,
   CheckParameter
,
   T__rparen_
   })
   // *****  
   };
   CheckParameter.Rules = new Rule[] {
   new Rule (1245,CheckParameter, new Symbol[] {
   CheckPortOpsPresent
   })
,
   new Rule (1246,CheckParameter, new Symbol[] {
   FromClausePresent
   })
,
   new Rule (1247,CheckParameter, new Symbol[] {
   RedirectPresent
   })
   };
   FromClausePresent.Rules = new Rule[] {
   new Rule (1248,FromClausePresent, new Symbol[] {
   FromClause
,
   OPTION328
   })
   };
   // *****  
   OPTION328.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1249, OPTION328, new Symbol[] {
         OPTIONBODY328
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1250, OPTION328, new Symbol[] {
      } ) 
   };
   OPTIONBODY328.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1251,OPTIONBODY328, new Symbol[] {
   T__minus__greater_
,
   SenderSpec
   })
   // *****  
   };
   RedirectPresent.Rules = new Rule[] {
   new Rule (1252,RedirectPresent, new Symbol[] {
   T__minus__greater_
,
   SenderSpec
   })
   };
   CheckPortOpsPresent.Rules = new Rule[] {
   new Rule (1253,CheckPortOpsPresent, new Symbol[] {
   PortReceiveOp
   })
,
   new Rule (1254,CheckPortOpsPresent, new Symbol[] {
   PortGetCallOp
   })
,
   new Rule (1255,CheckPortOpsPresent, new Symbol[] {
   PortGetReplyOp
   })
,
   new Rule (1256,CheckPortOpsPresent, new Symbol[] {
   PortCatchOp
   })
   };
   CatchStatement.Rules = new Rule[] {
   new Rule (1257,CatchStatement, new Symbol[] {
   PortOrAny
,
   T__dot_
,
   PortCatchOp
   })
   };
   PortCatchOp.Rules = new Rule[] {
   new Rule (1258,PortCatchOp, new Symbol[] {
   T_catch
,
   OPTION329
,
   OPTION330
,
   OPTION331
   })
   };
   // *****  
   OPTION329.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1259, OPTION329, new Symbol[] {
         OPTIONBODY329
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1260, OPTION329, new Symbol[] {
      } ) 
   };
   OPTIONBODY329.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1261,OPTIONBODY329, new Symbol[] {
   T__lparen_
,
   CatchOpParameter
,
   T__rparen_
   })
   // *****  
   };
   // *****  
   OPTION330.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1262, OPTION330, new Symbol[] {
         OPTIONBODY330
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1263, OPTION330, new Symbol[] {
      } ) 
   };
   OPTIONBODY330.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1264,OPTIONBODY330, new Symbol[] {
   FromClause
   })
   // *****  
   };
   // *****  
   OPTION331.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1265, OPTION331, new Symbol[] {
         OPTIONBODY331
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1266, OPTION331, new Symbol[] {
      } ) 
   };
   OPTIONBODY331.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1267,OPTIONBODY331, new Symbol[] {
   PortRedirect
   })
   // *****  
   };
   CatchOpParameter.Rules = new Rule[] {
   new Rule (1268,CatchOpParameter, new Symbol[] {
   Signature
,
   T__comma_
,
   InLineTemplate
   })
,
   new Rule (1269,CatchOpParameter, new Symbol[] {
   T_timeout
   })
   };
   ClearStatement.Rules = new Rule[] {
   new Rule (1270,ClearStatement, new Symbol[] {
   PortOrAll
,
   T__dot_
,
   T_clear
   })
   };
   PortOrAll.Rules = new Rule[] {
   new Rule (1271,PortOrAll, new Symbol[] {
   ArrayIdentifierRef
   })
,
   new Rule (1272,PortOrAll, new Symbol[] {
   T_all
,
   T_port
   })
   };
   StartStatement.Rules = new Rule[] {
   new Rule (1273,StartStatement, new Symbol[] {
   PortOrAll
,
   T__dot_
,
   T_start
   })
   };
   StopStatement.Rules = new Rule[] {
   new Rule (1274,StopStatement, new Symbol[] {
   PortOrAll
,
   T__dot_
,
   T_stop
   })
   };
   HaltStatement.Rules = new Rule[] {
   new Rule (1275,HaltStatement, new Symbol[] {
   PortOrAll
,
   T__dot_
,
   T_halt
   })
   };
   CheckStateStatement.Rules = new Rule[] {
   new Rule (1276,CheckStateStatement, new Symbol[] {
   PortOrAllAny
,
   T__dot_
,
   T_checkstate
,
   T__lparen_
,
   SingleExpression
,
   T__rparen_
   })
   };
   PortOrAllAny.Rules = new Rule[] {
   new Rule (1277,PortOrAllAny, new Symbol[] {
   PortOrAll
   })
,
   new Rule (1278,PortOrAllAny, new Symbol[] {
   T_any
,
   T_port
   })
   };
   TimerStatements.Rules = new Rule[] {
   new Rule (1279,TimerStatements, new Symbol[] {
   StartTimerStatement
   })
,
   new Rule (1280,TimerStatements, new Symbol[] {
   StopTimerStatement
   })
,
   new Rule (1281,TimerStatements, new Symbol[] {
   TimeoutStatement
   })
   };
   TimerOps.Rules = new Rule[] {
   new Rule (1282,TimerOps, new Symbol[] {
   ReadTimerOp
   })
,
   new Rule (1283,TimerOps, new Symbol[] {
   RunningTimerOp
   })
   };
   StartTimerStatement.Rules = new Rule[] {
   new Rule (1284,StartTimerStatement, new Symbol[] {
   ArrayIdentifierRef
,
   T__dot_
,
   T_start
,
   OPTION332
   })
   };
   // *****  
   OPTION332.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1285, OPTION332, new Symbol[] {
         OPTIONBODY332
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1286, OPTION332, new Symbol[] {
      } ) 
   };
   OPTIONBODY332.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1287,OPTIONBODY332, new Symbol[] {
   T__lparen_
,
   Expression
,
   T__rparen_
   })
   // *****  
   };
   StopTimerStatement.Rules = new Rule[] {
   new Rule (1288,StopTimerStatement, new Symbol[] {
   TimerRefOrAll
,
   T__dot_
,
   T_stop
   })
   };
   TimerRefOrAll.Rules = new Rule[] {
   new Rule (1289,TimerRefOrAll, new Symbol[] {
   ArrayIdentifierRef
   })
,
   new Rule (1290,TimerRefOrAll, new Symbol[] {
   T_all
,
   T_timer
   })
   };
   ReadTimerOp.Rules = new Rule[] {
   new Rule (1291,ReadTimerOp, new Symbol[] {
   ArrayIdentifierRef
,
   T__dot_
,
   T_read
   })
   };
   RunningTimerOp.Rules = new Rule[] {
   new Rule (1292,RunningTimerOp, new Symbol[] {
   TimerRefOrAny
,
   T__dot_
,
   T_running
   })
   };
   TimeoutStatement.Rules = new Rule[] {
   new Rule (1293,TimeoutStatement, new Symbol[] {
   TimerRefOrAny
,
   T__dot_
,
   T_timeout
   })
   };
   TimerRefOrAny.Rules = new Rule[] {
   new Rule (1294,TimerRefOrAny, new Symbol[] {
   ArrayIdentifierRef
   })
,
   new Rule (1295,TimerRefOrAny, new Symbol[] {
   SUB333
   })
   };
   SUB333.Rules = new Rule[] {
   new Rule (1296,SUB333, new Symbol[] {
   T_any
,
   T_timer
   })
   };
   TestcaseOperation.Rules = new Rule[] {
   new Rule (1297,TestcaseOperation, new Symbol[] {
   T_testcase
,
   T__dot_
,
   T_stop
,
   OPTION334
   })
   };
   // *****  
   OPTION334.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1298, OPTION334, new Symbol[] {
         OPTIONBODY334
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1299, OPTION334, new Symbol[] {
      } ) 
   };
   OPTIONBODY334.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1300,OPTIONBODY334, new Symbol[] {
   T__lparen_
,
   LOOP335
,
   T__rparen_
   })
   // *****  
   };
   // ***** 
   LOOP335.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1301, LOOP335, new Symbol[] {
         LOOPBODY335,
         LOOP335
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1302, LOOP335, new Symbol[] {
      } ) 
   };
   LOOPBODY335.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1303,LOOPBODY335, new Symbol[] {
   SUB336
,
   OPTION337
   })
   // ***** 
   };
   SUB336.Rules = new Rule[] {
   new Rule (1304,SUB336, new Symbol[] {
   FreeText
   })
,
   new Rule (1305,SUB336, new Symbol[] {
   InLineTemplate
   })
   };
   // *****  
   OPTION337.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1306, OPTION337, new Symbol[] {
         OPTIONBODY337
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1307, OPTION337, new Symbol[] {
      } ) 
   };
   OPTIONBODY337.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1308,OPTIONBODY337, new Symbol[] {
   T__comma_
   })
   // *****  
   };
   Type.Rules = new Rule[] {
   new Rule (1309,Type, new Symbol[] {
   PredefinedType
   })
,
   new Rule (1310,Type, new Symbol[] {
   ReferencedType
   })
   };
   PredefinedType.Rules = new Rule[] {
   new Rule (1311,PredefinedType, new Symbol[] {
   T_bitstring
   })
,
   new Rule (1312,PredefinedType, new Symbol[] {
   T_boolean
   })
,
   new Rule (1313,PredefinedType, new Symbol[] {
   T_charstring
   })
,
   new Rule (1314,PredefinedType, new Symbol[] {
   UniversalCharString
   })
,
   new Rule (1315,PredefinedType, new Symbol[] {
   T_integer
   })
,
   new Rule (1316,PredefinedType, new Symbol[] {
   T_octetstring
   })
,
   new Rule (1317,PredefinedType, new Symbol[] {
   T_hexstring
   })
,
   new Rule (1318,PredefinedType, new Symbol[] {
   T_verdicttype
   })
,
   new Rule (1319,PredefinedType, new Symbol[] {
   T_float
   })
,
   new Rule (1320,PredefinedType, new Symbol[] {
   T_address
   })
,
   new Rule (1321,PredefinedType, new Symbol[] {
   T_default
   })
,
   new Rule (1322,PredefinedType, new Symbol[] {
   T_anytype
   })
,
   new Rule (1323,PredefinedType, new Symbol[] {
   T_configuration
   })
   };
   UniversalCharString.Rules = new Rule[] {
   new Rule (1324,UniversalCharString, new Symbol[] {
   T_universal
,
   T_charstring
   })
   };
   ReferencedType.Rules = new Rule[] {
   new Rule (1325,ReferencedType, new Symbol[] {
   OPTION338
,
   Identifier
,
   OPTION339
,
   OPTION340
,
   OPTION341
   })
   };
   // *****  
   OPTION338.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1326, OPTION338, new Symbol[] {
         OPTIONBODY338
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1327, OPTION338, new Symbol[] {
      } ) 
   };
   OPTIONBODY338.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1328,OPTIONBODY338, new Symbol[] {
   Identifier
,
   T__dot_
   })
   // *****  
   };
   // *****  
   OPTION339.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1329, OPTION339, new Symbol[] {
         OPTIONBODY339
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1330, OPTION339, new Symbol[] {
      } ) 
   };
   OPTIONBODY339.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1331,OPTIONBODY339, new Symbol[] {
   ActualTypeParList
   })
   // *****  
   };
   // *****  
   OPTION340.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1332, OPTION340, new Symbol[] {
         OPTIONBODY340
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1333, OPTION340, new Symbol[] {
      } ) 
   };
   OPTIONBODY340.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1334,OPTIONBODY340, new Symbol[] {
   TypeActualParList
   })
   // *****  
   };
   // *****  
   OPTION341.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1335, OPTION341, new Symbol[] {
         OPTIONBODY341
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1336, OPTION341, new Symbol[] {
      } ) 
   };
   OPTIONBODY341.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1337,OPTIONBODY341, new Symbol[] {
   ExtendedFieldReference
   })
   // *****  
   };
   ArrayDef.Rules = new Rule[] {
   new Rule (1338,ArrayDef, new Symbol[] {
   LOOPPLUS342
   })
   };
   // ***** 
   LOOPPLUS342.Rules = new Rule[] {
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
      new Rule (1339, LOOPPLUS342, new Symbol[] {
         LOOPBODY342,
         LOOP342
      } ) 
   };
   LOOP342.Rules = new Rule[] {
   // ***** (2) LOOP ::= LOOPBODY LOOP 
      new Rule (1340, LOOP342, new Symbol[] {
         LOOPBODY342,
         LOOP342
      } ) ,
   // ***** (3) LOOP ::= empty 
      new Rule (1341, LOOP342, new Symbol[] {
      } ) 
   };
   LOOPBODY342.Rules = new Rule[] {
   // ***** (4) LOOPBODY ::= ... 
   new Rule (1342,LOOPBODY342, new Symbol[] {
   T__lbracket_
,
   SingleExpression
,
   OPTION343
,
   T__rbracket_
   })
   // *****  
   };
   // *****  
   OPTION343.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1343, OPTION343, new Symbol[] {
         OPTIONBODY343
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1344, OPTION343, new Symbol[] {
      } ) 
   };
   OPTIONBODY343.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1345,OPTIONBODY343, new Symbol[] {
   T__dot__dot_
,
   SingleExpression
   })
   // *****  
   };
   Value.Rules = new Rule[] {
   new Rule (1346,Value, new Symbol[] {
   PredefinedValue
   })
,
   new Rule (1347,Value, new Symbol[] {
   ReferencedValue
   })
   };
   PredefinedValue.Rules = new Rule[] {
   new Rule (1348,PredefinedValue, new Symbol[] {
   Bstring
   })
,
   new Rule (1349,PredefinedValue, new Symbol[] {
   BooleanValue
   })
,
   new Rule (1350,PredefinedValue, new Symbol[] {
   CharStringValue
   })
,
   new Rule (1351,PredefinedValue, new Symbol[] {
   Number
   })
,
   new Rule (1352,PredefinedValue, new Symbol[] {
   Ostring
   })
,
   new Rule (1353,PredefinedValue, new Symbol[] {
   Hstring
   })
,
   new Rule (1354,PredefinedValue, new Symbol[] {
   VerdictTypeValue
   })
,
   new Rule (1355,PredefinedValue, new Symbol[] {
   FloatValue
   })
,
   new Rule (1356,PredefinedValue, new Symbol[] {
   T_omit
   })
,
   new Rule (1357,PredefinedValue, new Symbol[] {
   T__underscore_xxx_underscore_
,
   BehaviourValue
   })
   };
   BooleanValue.Rules = new Rule[] {
   new Rule (1358,BooleanValue, new Symbol[] {
   T_true
   })
,
   new Rule (1359,BooleanValue, new Symbol[] {
   T_false
   })
   };
   VerdictTypeValue.Rules = new Rule[] {
   new Rule (1360,VerdictTypeValue, new Symbol[] {
   T_pass
   })
,
   new Rule (1361,VerdictTypeValue, new Symbol[] {
   T_fail
   })
,
   new Rule (1362,VerdictTypeValue, new Symbol[] {
   T_inconc
   })
,
   new Rule (1363,VerdictTypeValue, new Symbol[] {
   T_none
   })
,
   new Rule (1364,VerdictTypeValue, new Symbol[] {
   T_error
   })
   };
   CharStringValue.Rules = new Rule[] {
   new Rule (1365,CharStringValue, new Symbol[] {
   Cstring
   })
,
   new Rule (1366,CharStringValue, new Symbol[] {
   Quadruple
   })
   };
   Quadruple.Rules = new Rule[] {
   new Rule (1367,Quadruple, new Symbol[] {
   T_char
,
   T__lparen_
,
   Number
,
   T__comma_
,
   Number
,
   T__comma_
,
   Number
,
   T__comma_
,
   Number
,
   T__rparen_
   })
   };
   FloatValue.Rules = new Rule[] {
   new Rule (1368,FloatValue, new Symbol[] {
   FLOATVALUE
   })
   };
   ReferencedValue.Rules = new Rule[] {
   new Rule (1369,ReferencedValue, new Symbol[] {
   ExtendedIdentifier
,
   OPTION344
   })
   };
   // *****  
   OPTION344.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1370, OPTION344, new Symbol[] {
         OPTIONBODY344
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1371, OPTION344, new Symbol[] {
      } ) 
   };
   OPTIONBODY344.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1372,OPTIONBODY344, new Symbol[] {
   ExtendedFieldReference
   })
   // *****  
   };
   Number.Rules = new Rule[] {
   new Rule (1373,Number, new Symbol[] {
   NUMBER
   })
   };
   Bstring.Rules = new Rule[] {
   new Rule (1374,Bstring, new Symbol[] {
   BSTRING
   })
   };
   Hstring.Rules = new Rule[] {
   new Rule (1375,Hstring, new Symbol[] {
   HSTRING
   })
   };
   Ostring.Rules = new Rule[] {
   new Rule (1376,Ostring, new Symbol[] {
   OSTRING
   })
   };
   Cstring.Rules = new Rule[] {
   new Rule (1377,Cstring, new Symbol[] {
   CSTRING
   })
   };
   FreeText.Rules = new Rule[] {
   new Rule (1378,FreeText, new Symbol[] {
   FREETEXT
   })
   };
   FormalValuePar.Rules = new Rule[] {
   new Rule (1379,FormalValuePar, new Symbol[] {
   OPTION345
,
   Type
,
   Identifier
,
   OPTION347
   })
   };
   // *****  
   OPTION345.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1380, OPTION345, new Symbol[] {
         OPTIONBODY345
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1381, OPTION345, new Symbol[] {
      } ) 
   };
   OPTIONBODY345.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1382,OPTIONBODY345, new Symbol[] {
   SUB346
   })
   // *****  
   };
   SUB346.Rules = new Rule[] {
   new Rule (1383,SUB346, new Symbol[] {
   T_in
   })
,
   new Rule (1384,SUB346, new Symbol[] {
   T_inout
   })
,
   new Rule (1385,SUB346, new Symbol[] {
   T_out
   })
   };
   // *****  
   OPTION347.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1386, OPTION347, new Symbol[] {
         OPTIONBODY347
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1387, OPTION347, new Symbol[] {
      } ) 
   };
   OPTIONBODY347.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1388,OPTIONBODY347, new Symbol[] {
   T__colon__equal_
,
   SUB348
   })
   // *****  
   };
   SUB348.Rules = new Rule[] {
   new Rule (1389,SUB348, new Symbol[] {
   Expression
   })
,
   new Rule (1390,SUB348, new Symbol[] {
   T__minus_
   })
   };
   FormalPortPar.Rules = new Rule[] {
   new Rule (1391,FormalPortPar, new Symbol[] {
   OPTION349
,
   Identifier
,
   Identifier
   })
   };
   // *****  
   OPTION349.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1392, OPTION349, new Symbol[] {
         OPTIONBODY349
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1393, OPTION349, new Symbol[] {
      } ) 
   };
   OPTIONBODY349.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1394,OPTIONBODY349, new Symbol[] {
   T_inout
   })
   // *****  
   };
   FormalTimerPar.Rules = new Rule[] {
   new Rule (1395,FormalTimerPar, new Symbol[] {
   OPTION350
,
   T_timer
,
   Identifier
   })
   };
   // *****  
   OPTION350.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1396, OPTION350, new Symbol[] {
         OPTIONBODY350
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1397, OPTION350, new Symbol[] {
      } ) 
   };
   OPTIONBODY350.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1398,OPTIONBODY350, new Symbol[] {
   T_out
   })
   // *****  
   };
   FormalTemplatePar.Rules = new Rule[] {
   new Rule (1399,FormalTemplatePar, new Symbol[] {
   OPTION351
,
   SUB353
,
   Type
,
   Identifier
,
   OPTION354
   })
   };
   // *****  
   OPTION351.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1400, OPTION351, new Symbol[] {
         OPTIONBODY351
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1401, OPTION351, new Symbol[] {
      } ) 
   };
   OPTIONBODY351.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1402,OPTIONBODY351, new Symbol[] {
   SUB352
   })
   // *****  
   };
   SUB352.Rules = new Rule[] {
   new Rule (1403,SUB352, new Symbol[] {
   T_in
   })
,
   new Rule (1404,SUB352, new Symbol[] {
   T_out
   })
,
   new Rule (1405,SUB352, new Symbol[] {
   T_inout
   })
   };
   SUB353.Rules = new Rule[] {
   new Rule (1406,SUB353, new Symbol[] {
   T_template
   })
,
   new Rule (1407,SUB353, new Symbol[] {
   RestrictedTemplate
   })
   };
   // *****  
   OPTION354.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1408, OPTION354, new Symbol[] {
         OPTIONBODY354
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1409, OPTION354, new Symbol[] {
      } ) 
   };
   OPTIONBODY354.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1410,OPTIONBODY354, new Symbol[] {
   T__colon__equal_
,
   SUB355
   })
   // *****  
   };
   SUB355.Rules = new Rule[] {
   new Rule (1411,SUB355, new Symbol[] {
   InLineTemplate
   })
,
   new Rule (1412,SUB355, new Symbol[] {
   T__minus_
   })
   };
   RestrictedTemplate.Rules = new Rule[] {
   new Rule (1413,RestrictedTemplate, new Symbol[] {
   T_omit
   })
,
   new Rule (1414,RestrictedTemplate, new Symbol[] {
   SUB356
   })
   };
   SUB356.Rules = new Rule[] {
   new Rule (1415,SUB356, new Symbol[] {
   T_template
,
   TemplateRestriction
   })
   };
// grenze 1
}
public static void DefineGrammar3()
{
   TemplateRestriction.Rules = new Rule[] {
   new Rule (1416,TemplateRestriction, new Symbol[] {
   T__lparen_
,
   SUB357
,
   T__rparen_
   })
   };
   SUB357.Rules = new Rule[] {
   new Rule (1417,SUB357, new Symbol[] {
   T_omit
   })
,
   new Rule (1418,SUB357, new Symbol[] {
   T_value
   })
,
   new Rule (1419,SUB357, new Symbol[] {
   T_present
   })
   };
   WithStatement.Rules = new Rule[] {
   new Rule (1420,WithStatement, new Symbol[] {
   T_with
,
   WithAttribList
   })
   };
   WithAttribList.Rules = new Rule[] {
   new Rule (1421,WithAttribList, new Symbol[] {
   T__lbrace_
,
   MultiWithAttrib
,
   T__rbrace_
   })
   };
   MultiWithAttrib.Rules = new Rule[] {
   new Rule (1422,MultiWithAttrib, new Symbol[] {
   LOOP358
   })
   };
   // ***** 
   LOOP358.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1423, LOOP358, new Symbol[] {
         LOOPBODY358,
         LOOP358
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1424, LOOP358, new Symbol[] {
      } ) 
   };
   LOOPBODY358.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1425,LOOPBODY358, new Symbol[] {
   SingleWithAttrib
,
   OPTION359
   })
   // ***** 
   };
   // *****  
   OPTION359.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1426, OPTION359, new Symbol[] {
         OPTIONBODY359
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1427, OPTION359, new Symbol[] {
      } ) 
   };
   OPTIONBODY359.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1428,OPTIONBODY359, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   SingleWithAttrib.Rules = new Rule[] {
   new Rule (1429,SingleWithAttrib, new Symbol[] {
   AttribKeyword
,
   OPTION360
,
   OPTION361
,
   FreeText
   })
   };
   // *****  
   OPTION360.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1430, OPTION360, new Symbol[] {
         OPTIONBODY360
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1431, OPTION360, new Symbol[] {
      } ) 
   };
   OPTIONBODY360.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1432,OPTIONBODY360, new Symbol[] {
   T_override
   })
   // *****  
   };
   // *****  
   OPTION361.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1433, OPTION361, new Symbol[] {
         OPTIONBODY361
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1434, OPTION361, new Symbol[] {
      } ) 
   };
   OPTIONBODY361.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1435,OPTIONBODY361, new Symbol[] {
   AttribQualifier
   })
   // *****  
   };
   AttribKeyword.Rules = new Rule[] {
   new Rule (1436,AttribKeyword, new Symbol[] {
   T_encode
   })
,
   new Rule (1437,AttribKeyword, new Symbol[] {
   T_variant
   })
,
   new Rule (1438,AttribKeyword, new Symbol[] {
   T_display
   })
,
   new Rule (1439,AttribKeyword, new Symbol[] {
   T_extension
   })
,
   new Rule (1440,AttribKeyword, new Symbol[] {
   T_optional
   })
,
   new Rule (1441,AttribKeyword, new Symbol[] {
   T_stepsize
   })
   };
   AttribQualifier.Rules = new Rule[] {
   new Rule (1442,AttribQualifier, new Symbol[] {
   T__lparen_
,
   DefOrFieldRefList
,
   T__rparen_
   })
   };
   DefOrFieldRefList.Rules = new Rule[] {
   new Rule (1443,DefOrFieldRefList, new Symbol[] {
   DefOrFieldRef
,
   LOOP362
   })
   };
   // ***** 
   LOOP362.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1444, LOOP362, new Symbol[] {
         LOOPBODY362,
         LOOP362
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1445, LOOP362, new Symbol[] {
      } ) 
   };
   LOOPBODY362.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1446,LOOPBODY362, new Symbol[] {
   T__comma_
,
   DefOrFieldRef
   })
   // ***** 
   };
   DefOrFieldRef.Rules = new Rule[] {
   new Rule (1447,DefOrFieldRef, new Symbol[] {
   SUB363
   })
,
   new Rule (1448,DefOrFieldRef, new Symbol[] {
   AllRef
   })
   };
   SUB363.Rules = new Rule[] {
   new Rule (1449,SUB363, new Symbol[] {
   SUB364
,
   OPTION365
   })
   };
   SUB364.Rules = new Rule[] {
   new Rule (1450,SUB364, new Symbol[] {
   FieldReference
   })
,
   new Rule (1451,SUB364, new Symbol[] {
   T__lbracket_
,
   T__minus_
,
   T__rbracket_
   })
   };
   // *****  
   OPTION365.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1452, OPTION365, new Symbol[] {
         OPTIONBODY365
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1453, OPTION365, new Symbol[] {
      } ) 
   };
   OPTIONBODY365.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1454,OPTIONBODY365, new Symbol[] {
   ExtendedFieldReference
   })
   // *****  
   };
   QualifiedIdentifier.Rules = new Rule[] {
   new Rule (1455,QualifiedIdentifier, new Symbol[] {
   LOOP366
,
   Identifier
   })
   };
   // ***** 
   LOOP366.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1456, LOOP366, new Symbol[] {
         LOOPBODY366,
         LOOP366
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1457, LOOP366, new Symbol[] {
      } ) 
   };
   LOOPBODY366.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1458,LOOPBODY366, new Symbol[] {
   Identifier
,
   T__dot_
   })
   // ***** 
   };
   AllRef.Rules = new Rule[] {
   new Rule (1459,AllRef, new Symbol[] {
   SUB367
   })
,
   new Rule (1460,AllRef, new Symbol[] {
   SUB369
   })
   };
   SUB367.Rules = new Rule[] {
   new Rule (1461,SUB367, new Symbol[] {
   T_group
,
   T_all
,
   OPTION368
   })
   };
   // *****  
   OPTION368.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1462, OPTION368, new Symbol[] {
         OPTIONBODY368
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1463, OPTION368, new Symbol[] {
      } ) 
   };
   OPTIONBODY368.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1464,OPTIONBODY368, new Symbol[] {
   T_except
,
   T__lbrace_
,
   QualifiedIdentifierList
,
   T__rbrace_
   })
   // *****  
   };
   SUB369.Rules = new Rule[] {
   new Rule (1465,SUB369, new Symbol[] {
   SUB370
,
   T_all
,
   OPTION371
   })
   };
   SUB370.Rules = new Rule[] {
   new Rule (1466,SUB370, new Symbol[] {
   T_type
   })
,
   new Rule (1467,SUB370, new Symbol[] {
   T_template
   })
,
   new Rule (1468,SUB370, new Symbol[] {
   T_const
   })
,
   new Rule (1469,SUB370, new Symbol[] {
   T_altstep
   })
,
   new Rule (1470,SUB370, new Symbol[] {
   T_testcase
   })
,
   new Rule (1471,SUB370, new Symbol[] {
   T_function
   })
,
   new Rule (1472,SUB370, new Symbol[] {
   T_signature
   })
,
   new Rule (1473,SUB370, new Symbol[] {
   T_modulepar
   })
   };
   // *****  
   OPTION371.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1474, OPTION371, new Symbol[] {
         OPTIONBODY371
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1475, OPTION371, new Symbol[] {
      } ) 
   };
   OPTIONBODY371.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1476,OPTIONBODY371, new Symbol[] {
   T_except
,
   T__lbrace_
,
   IdentifierList
,
   T__rbrace_
   })
   // *****  
   };
   BehaviourStatements.Rules = new Rule[] {
   new Rule (1477,BehaviourStatements, new Symbol[] {
   TestcaseInstance
   })
,
   new Rule (1478,BehaviourStatements, new Symbol[] {
   FunctionInstance
   })
,
   new Rule (1479,BehaviourStatements, new Symbol[] {
   ReturnStatement
   })
,
   new Rule (1480,BehaviourStatements, new Symbol[] {
   AltConstruct
   })
,
   new Rule (1481,BehaviourStatements, new Symbol[] {
   InterleavedConstruct
   })
,
   new Rule (1482,BehaviourStatements, new Symbol[] {
   LabelStatement
   })
,
   new Rule (1483,BehaviourStatements, new Symbol[] {
   GotoStatement
   })
,
   new Rule (1484,BehaviourStatements, new Symbol[] {
   T_repeat
   })
,
   new Rule (1485,BehaviourStatements, new Symbol[] {
   DeactivateStatement
   })
,
   new Rule (1486,BehaviourStatements, new Symbol[] {
   AltstepInstance
   })
,
   new Rule (1487,BehaviourStatements, new Symbol[] {
   ActivateOp
   })
,
   new Rule (1488,BehaviourStatements, new Symbol[] {
   T_break
   })
,
   new Rule (1489,BehaviourStatements, new Symbol[] {
   T_continue
   })
   };
   SetLocalVerdict.Rules = new Rule[] {
   new Rule (1490,SetLocalVerdict, new Symbol[] {
   T_setverdict
,
   T__lparen_
,
   SingleExpression
,
   LOOP372
,
   T__rparen_
   })
   };
   // ***** 
   LOOP372.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1491, LOOP372, new Symbol[] {
         LOOPBODY372,
         LOOP372
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1492, LOOP372, new Symbol[] {
      } ) 
   };
   LOOPBODY372.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1493,LOOPBODY372, new Symbol[] {
   T__comma_
,
   LogItem
   })
   // ***** 
   };
   SUTStatements.Rules = new Rule[] {
   new Rule (1494,SUTStatements, new Symbol[] {
   T_action
,
   T__lparen_
,
   ActionText
,
   LOOP373
,
   T__rparen_
   })
   };
   // ***** 
   LOOP373.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1495, LOOP373, new Symbol[] {
         LOOPBODY373,
         LOOP373
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1496, LOOP373, new Symbol[] {
      } ) 
   };
   LOOPBODY373.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1497,LOOPBODY373, new Symbol[] {
   StringOp
,
   ActionText
   })
   // ***** 
   };
   ActionText.Rules = new Rule[] {
   new Rule (1498,ActionText, new Symbol[] {
   FreeText
   })
,
   new Rule (1499,ActionText, new Symbol[] {
   Expression
   })
   };
   ReturnStatement.Rules = new Rule[] {
   new Rule (1500,ReturnStatement, new Symbol[] {
   T_return
,
   OPTION374
   })
   };
   // *****  
   OPTION374.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1501, OPTION374, new Symbol[] {
         OPTIONBODY374
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1502, OPTION374, new Symbol[] {
      } ) 
   };
   OPTIONBODY374.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1503,OPTIONBODY374, new Symbol[] {
   Expression
   })
,
   new Rule (1504,OPTIONBODY374, new Symbol[] {
   InLineTemplate
   })
   // *****  
   };
   AltConstruct.Rules = new Rule[] {
   new Rule (1505,AltConstruct, new Symbol[] {
   T_alt
,
   T__lbrace_
,
   AltGuardList
,
   T__rbrace_
   })
   };
   AltGuardList.Rules = new Rule[] {
   new Rule (1506,AltGuardList, new Symbol[] {
   LOOP375
   })
   };
   // ***** 
   LOOP375.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1507, LOOP375, new Symbol[] {
         LOOPBODY375,
         LOOP375
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1508, LOOP375, new Symbol[] {
      } ) 
   };
   LOOPBODY375.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1509,LOOPBODY375, new Symbol[] {
   GuardStatement
   })
,
   new Rule (1510,LOOPBODY375, new Symbol[] {
   ElseStatement
,
   OPTION376
   })
   // ***** 
   };
   // *****  
   OPTION376.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1511, OPTION376, new Symbol[] {
         OPTIONBODY376
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1512, OPTION376, new Symbol[] {
      } ) 
   };
   OPTIONBODY376.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1513,OPTIONBODY376, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   GuardStatement.Rules = new Rule[] {
   new Rule (1514,GuardStatement, new Symbol[] {
   AltGuardChar
,
   SUB377
   })
   };
   SUB377.Rules = new Rule[] {
   new Rule (1515,SUB377, new Symbol[] {
   AltstepInstance
,
   OPTION378
   })
,
   new Rule (1516,SUB377, new Symbol[] {
   GuardOp
,
   StatementBlock
   })
   };
   // *****  
   OPTION378.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1517, OPTION378, new Symbol[] {
         OPTIONBODY378
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1518, OPTION378, new Symbol[] {
      } ) 
   };
   OPTIONBODY378.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1519,OPTIONBODY378, new Symbol[] {
   StatementBlock
   })
   // *****  
   };
   ElseStatement.Rules = new Rule[] {
   new Rule (1520,ElseStatement, new Symbol[] {
   T__lbracket_
,
   T_else
,
   T__rbracket_
,
   StatementBlock
   })
   };
   AltGuardChar.Rules = new Rule[] {
   new Rule (1521,AltGuardChar, new Symbol[] {
   T__lbracket_
,
   OPTION379
,
   T__rbracket_
   })
   };
   // *****  
   OPTION379.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1522, OPTION379, new Symbol[] {
         OPTIONBODY379
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1523, OPTION379, new Symbol[] {
      } ) 
   };
   OPTIONBODY379.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1524,OPTIONBODY379, new Symbol[] {
   BooleanExpression
   })
   // *****  
   };
   GuardOp.Rules = new Rule[] {
   new Rule (1525,GuardOp, new Symbol[] {
   TimeoutStatement
   })
,
   new Rule (1526,GuardOp, new Symbol[] {
   ReceiveStatement
   })
,
   new Rule (1527,GuardOp, new Symbol[] {
   TriggerStatement
   })
,
   new Rule (1528,GuardOp, new Symbol[] {
   GetCallStatement
   })
,
   new Rule (1529,GuardOp, new Symbol[] {
   CatchStatement
   })
,
   new Rule (1530,GuardOp, new Symbol[] {
   CheckStatement
   })
,
   new Rule (1531,GuardOp, new Symbol[] {
   GetReplyStatement
   })
,
   new Rule (1532,GuardOp, new Symbol[] {
   DoneStatement
   })
,
   new Rule (1533,GuardOp, new Symbol[] {
   KilledStatement
   })
   };
   InterleavedConstruct.Rules = new Rule[] {
   new Rule (1534,InterleavedConstruct, new Symbol[] {
   T_interleave
,
   T__lbrace_
,
   InterleavedGuardList
,
   T__rbrace_
   })
   };
   InterleavedGuardList.Rules = new Rule[] {
   new Rule (1535,InterleavedGuardList, new Symbol[] {
   LOOPPLUS380
   })
   };
   // ***** 
   LOOPPLUS380.Rules = new Rule[] {
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
      new Rule (1536, LOOPPLUS380, new Symbol[] {
         LOOPBODY380,
         LOOP380
      } ) 
   };
   LOOP380.Rules = new Rule[] {
   // ***** (2) LOOP ::= LOOPBODY LOOP 
      new Rule (1537, LOOP380, new Symbol[] {
         LOOPBODY380,
         LOOP380
      } ) ,
   // ***** (3) LOOP ::= empty 
      new Rule (1538, LOOP380, new Symbol[] {
      } ) 
   };
   LOOPBODY380.Rules = new Rule[] {
   // ***** (4) LOOPBODY ::= ... 
   new Rule (1539,LOOPBODY380, new Symbol[] {
   InterleavedGuardElement
,
   OPTION381
   })
   // *****  
   };
   // *****  
   OPTION381.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1540, OPTION381, new Symbol[] {
         OPTIONBODY381
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1541, OPTION381, new Symbol[] {
      } ) 
   };
   OPTIONBODY381.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1542,OPTIONBODY381, new Symbol[] {
   T__semicolon_
   })
   // *****  
   };
   InterleavedGuardElement.Rules = new Rule[] {
   new Rule (1543,InterleavedGuardElement, new Symbol[] {
   InterleavedGuard
,
   StatementBlock
   })
   };
   InterleavedGuard.Rules = new Rule[] {
   new Rule (1544,InterleavedGuard, new Symbol[] {
   T__lbracket_
,
   T__rbracket_
,
   GuardOp
   })
   };
   LabelStatement.Rules = new Rule[] {
   new Rule (1545,LabelStatement, new Symbol[] {
   T_label
,
   Identifier
   })
   };
   GotoStatement.Rules = new Rule[] {
   new Rule (1546,GotoStatement, new Symbol[] {
   T_goto
,
   Identifier
   })
   };
   ActivateOp.Rules = new Rule[] {
   new Rule (1547,ActivateOp, new Symbol[] {
   T_activate
,
   T__lparen_
,
   AltstepInstance
,
   T__rparen_
   })
   };
   DeactivateStatement.Rules = new Rule[] {
   new Rule (1548,DeactivateStatement, new Symbol[] {
   T_deactivate
,
   OPTION382
   })
   };
   // *****  
   OPTION382.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1549, OPTION382, new Symbol[] {
         OPTIONBODY382
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1550, OPTION382, new Symbol[] {
      } ) 
   };
   OPTIONBODY382.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1551,OPTIONBODY382, new Symbol[] {
   T__lparen_
,
   ComponentOrDefaultReference
,
   T__rparen_
   })
   // *****  
   };
   BasicStatements.Rules = new Rule[] {
   new Rule (1552,BasicStatements, new Symbol[] {
   Assignment
   })
,
   new Rule (1553,BasicStatements, new Symbol[] {
   LogStatement
   })
,
   new Rule (1554,BasicStatements, new Symbol[] {
   LoopConstruct
   })
,
   new Rule (1555,BasicStatements, new Symbol[] {
   ConditionalConstruct
   })
,
   new Rule (1556,BasicStatements, new Symbol[] {
   SelectCaseConstruct
   })
,
   new Rule (1557,BasicStatements, new Symbol[] {
   StatementBlock
   })
   };
   Expression.Rules = new Rule[] {
   new Rule (1558,Expression, new Symbol[] {
   SingleExpression
   })
,
   new Rule (1559,Expression, new Symbol[] {
   CompoundExpression
   })
   };
   CompoundExpression.Rules = new Rule[] {
   new Rule (1560,CompoundExpression, new Symbol[] {
   FieldExpressionList
   })
,
   new Rule (1561,CompoundExpression, new Symbol[] {
   ArrayExpression
   })
   };
   FieldExpressionList.Rules = new Rule[] {
   new Rule (1562,FieldExpressionList, new Symbol[] {
   T__lbrace_
,
   FieldExpressionSpec
,
   LOOP383
,
   T__rbrace_
   })
   };
   // ***** 
   LOOP383.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1563, LOOP383, new Symbol[] {
         LOOPBODY383,
         LOOP383
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1564, LOOP383, new Symbol[] {
      } ) 
   };
   LOOPBODY383.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1565,LOOPBODY383, new Symbol[] {
   T__comma_
,
   FieldExpressionSpec
   })
   // ***** 
   };
   FieldExpressionSpec.Rules = new Rule[] {
   new Rule (1566,FieldExpressionSpec, new Symbol[] {
   FieldReference
,
   T__colon__equal_
,
   NotUsedOrExpression
   })
   };
   ArrayExpression.Rules = new Rule[] {
   new Rule (1567,ArrayExpression, new Symbol[] {
   T__lbrace_
,
   OPTION384
,
   T__rbrace_
   })
   };
   // *****  
   OPTION384.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1568, OPTION384, new Symbol[] {
         OPTIONBODY384
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1569, OPTION384, new Symbol[] {
      } ) 
   };
   OPTIONBODY384.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1570,OPTIONBODY384, new Symbol[] {
   ArrayElementExpressionList
   })
   // *****  
   };
   ArrayElementExpressionList.Rules = new Rule[] {
   new Rule (1571,ArrayElementExpressionList, new Symbol[] {
   NotUsedOrExpression
,
   LOOP385
   })
   };
   // ***** 
   LOOP385.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1572, LOOP385, new Symbol[] {
         LOOPBODY385,
         LOOP385
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1573, LOOP385, new Symbol[] {
      } ) 
   };
   LOOPBODY385.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1574,LOOPBODY385, new Symbol[] {
   T__comma_
,
   NotUsedOrExpression
   })
   // ***** 
   };
   NotUsedOrExpression.Rules = new Rule[] {
   new Rule (1575,NotUsedOrExpression, new Symbol[] {
   Expression
   })
,
   new Rule (1576,NotUsedOrExpression, new Symbol[] {
   T__minus_
   })
   };
   ConstantExpression.Rules = new Rule[] {
   new Rule (1577,ConstantExpression, new Symbol[] {
   SingleExpression
   })
,
   new Rule (1578,ConstantExpression, new Symbol[] {
   CompoundConstExpression
   })
   };
   BooleanExpression.Rules = new Rule[] {
   new Rule (1579,BooleanExpression, new Symbol[] {
   SingleExpression
   })
   };
   CompoundConstExpression.Rules = new Rule[] {
   new Rule (1580,CompoundConstExpression, new Symbol[] {
   FieldConstExpressionList
   })
,
   new Rule (1581,CompoundConstExpression, new Symbol[] {
   ArrayConstExpression
   })
   };
   FieldConstExpressionList.Rules = new Rule[] {
   new Rule (1582,FieldConstExpressionList, new Symbol[] {
   T__lbrace_
,
   FieldConstExpressionSpec
,
   LOOP386
,
   T__rbrace_
   })
   };
   // ***** 
   LOOP386.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1583, LOOP386, new Symbol[] {
         LOOPBODY386,
         LOOP386
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1584, LOOP386, new Symbol[] {
      } ) 
   };
   LOOPBODY386.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1585,LOOPBODY386, new Symbol[] {
   T__comma_
,
   FieldConstExpressionSpec
   })
   // ***** 
   };
   FieldConstExpressionSpec.Rules = new Rule[] {
   new Rule (1586,FieldConstExpressionSpec, new Symbol[] {
   FieldReference
,
   T__colon__equal_
,
   ConstantExpression
   })
   };
   ArrayConstExpression.Rules = new Rule[] {
   new Rule (1587,ArrayConstExpression, new Symbol[] {
   T__lbrace_
,
   OPTION387
,
   T__rbrace_
   })
   };
   // *****  
   OPTION387.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1588, OPTION387, new Symbol[] {
         OPTIONBODY387
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1589, OPTION387, new Symbol[] {
      } ) 
   };
   OPTIONBODY387.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1590,OPTIONBODY387, new Symbol[] {
   ArrayElementConstExpressionList
   })
   // *****  
   };
   ArrayElementConstExpressionList.Rules = new Rule[] {
   new Rule (1591,ArrayElementConstExpressionList, new Symbol[] {
   ConstantExpression
,
   LOOP388
   })
   };
   // ***** 
   LOOP388.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1592, LOOP388, new Symbol[] {
         LOOPBODY388,
         LOOP388
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1593, LOOP388, new Symbol[] {
      } ) 
   };
   LOOPBODY388.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1594,LOOPBODY388, new Symbol[] {
   T__comma_
,
   ConstantExpression
   })
   // ***** 
   };
   Assignment.Rules = new Rule[] {
   new Rule (1595,Assignment, new Symbol[] {
   VariableRef
,
   T__colon__equal_
,
   SUB389
   })
   };
   SUB389.Rules = new Rule[] {
   new Rule (1596,SUB389, new Symbol[] {
   Expression
   })
,
   new Rule (1597,SUB389, new Symbol[] {
   TemplateBody
   })
   };
   SingleExpression.Rules = new Rule[] {
   new Rule (1598,SingleExpression, new Symbol[] {
   XorExpression
,
   LOOP390
   })
   };
   // ***** 
   LOOP390.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1599, LOOP390, new Symbol[] {
         LOOPBODY390,
         LOOP390
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1600, LOOP390, new Symbol[] {
      } ) 
   };
   LOOPBODY390.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1601,LOOPBODY390, new Symbol[] {
   T_or
,
   XorExpression
   })
   // ***** 
   };
   XorExpression.Rules = new Rule[] {
   new Rule (1602,XorExpression, new Symbol[] {
   AndExpression
,
   LOOP391
   })
   };
   // ***** 
   LOOP391.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1603, LOOP391, new Symbol[] {
         LOOPBODY391,
         LOOP391
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1604, LOOP391, new Symbol[] {
      } ) 
   };
   LOOPBODY391.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1605,LOOPBODY391, new Symbol[] {
   T_xor
,
   AndExpression
   })
   // ***** 
   };
   AndExpression.Rules = new Rule[] {
   new Rule (1606,AndExpression, new Symbol[] {
   NotExpression
,
   LOOP392
   })
   };
   // ***** 
   LOOP392.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1607, LOOP392, new Symbol[] {
         LOOPBODY392,
         LOOP392
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1608, LOOP392, new Symbol[] {
      } ) 
   };
   LOOPBODY392.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1609,LOOPBODY392, new Symbol[] {
   T_and
,
   NotExpression
   })
   // ***** 
   };
   NotExpression.Rules = new Rule[] {
   new Rule (1610,NotExpression, new Symbol[] {
   OPTION393
,
   EqualExpression
   })
   };
   // *****  
   OPTION393.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1611, OPTION393, new Symbol[] {
         OPTIONBODY393
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1612, OPTION393, new Symbol[] {
      } ) 
   };
   OPTIONBODY393.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1613,OPTIONBODY393, new Symbol[] {
   T_not
   })
   // *****  
   };
   EqualExpression.Rules = new Rule[] {
   new Rule (1614,EqualExpression, new Symbol[] {
   RelExpression
,
   LOOP394
   })
   };
   // ***** 
   LOOP394.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1615, LOOP394, new Symbol[] {
         LOOPBODY394,
         LOOP394
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1616, LOOP394, new Symbol[] {
      } ) 
   };
   LOOPBODY394.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1617,LOOPBODY394, new Symbol[] {
   EqualOp
,
   RelExpression
   })
   // ***** 
   };
   RelExpression.Rules = new Rule[] {
   new Rule (1618,RelExpression, new Symbol[] {
   ShiftExpression
,
   OPTION395
   })
,
   new Rule (1619,RelExpression, new Symbol[] {
   CompoundExpression
   })
   };
   // *****  
   OPTION395.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1620, OPTION395, new Symbol[] {
         OPTIONBODY395
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1621, OPTION395, new Symbol[] {
      } ) 
   };
   OPTIONBODY395.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1622,OPTIONBODY395, new Symbol[] {
   RelOp
,
   ShiftExpression
   })
   // *****  
   };
   ShiftExpression.Rules = new Rule[] {
   new Rule (1623,ShiftExpression, new Symbol[] {
   BitOrExpression
,
   LOOP396
   })
   };
   // ***** 
   LOOP396.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1624, LOOP396, new Symbol[] {
         LOOPBODY396,
         LOOP396
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1625, LOOP396, new Symbol[] {
      } ) 
   };
   LOOPBODY396.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1626,LOOPBODY396, new Symbol[] {
   ShiftOp
,
   BitOrExpression
   })
   // ***** 
   };
   BitOrExpression.Rules = new Rule[] {
   new Rule (1627,BitOrExpression, new Symbol[] {
   BitXorExpression
,
   LOOP397
   })
   };
   // ***** 
   LOOP397.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1628, LOOP397, new Symbol[] {
         LOOPBODY397,
         LOOP397
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1629, LOOP397, new Symbol[] {
      } ) 
   };
   LOOPBODY397.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1630,LOOPBODY397, new Symbol[] {
   T_or4b
,
   BitXorExpression
   })
   // ***** 
   };
   BitXorExpression.Rules = new Rule[] {
   new Rule (1631,BitXorExpression, new Symbol[] {
   BitAndExpression
,
   LOOP398
   })
   };
   // ***** 
   LOOP398.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1632, LOOP398, new Symbol[] {
         LOOPBODY398,
         LOOP398
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1633, LOOP398, new Symbol[] {
      } ) 
   };
   LOOPBODY398.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1634,LOOPBODY398, new Symbol[] {
   T_xor4b
,
   BitAndExpression
   })
   // ***** 
   };
   BitAndExpression.Rules = new Rule[] {
   new Rule (1635,BitAndExpression, new Symbol[] {
   BitNotExpression
,
   LOOP399
   })
   };
   // ***** 
   LOOP399.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1636, LOOP399, new Symbol[] {
         LOOPBODY399,
         LOOP399
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1637, LOOP399, new Symbol[] {
      } ) 
   };
   LOOPBODY399.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1638,LOOPBODY399, new Symbol[] {
   T_and4b
,
   BitNotExpression
   })
   // ***** 
   };
   BitNotExpression.Rules = new Rule[] {
   new Rule (1639,BitNotExpression, new Symbol[] {
   OPTION400
,
   AddExpression
   })
   };
   // *****  
   OPTION400.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1640, OPTION400, new Symbol[] {
         OPTIONBODY400
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1641, OPTION400, new Symbol[] {
      } ) 
   };
   OPTIONBODY400.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1642,OPTIONBODY400, new Symbol[] {
   T_not4b
   })
   // *****  
   };
   AddExpression.Rules = new Rule[] {
   new Rule (1643,AddExpression, new Symbol[] {
   MulExpression
,
   LOOP401
   })
   };
   // ***** 
   LOOP401.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1644, LOOP401, new Symbol[] {
         LOOPBODY401,
         LOOP401
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1645, LOOP401, new Symbol[] {
      } ) 
   };
   LOOPBODY401.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1646,LOOPBODY401, new Symbol[] {
   AddOp
,
   MulExpression
   })
   // ***** 
   };
   MulExpression.Rules = new Rule[] {
   new Rule (1647,MulExpression, new Symbol[] {
   UnaryExpression
,
   LOOP402
   })
,
   new Rule (1648,MulExpression, new Symbol[] {
   CompoundExpression
   })
   };
   // ***** 
   LOOP402.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1649, LOOP402, new Symbol[] {
         LOOPBODY402,
         LOOP402
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1650, LOOP402, new Symbol[] {
      } ) 
   };
   LOOPBODY402.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1651,LOOPBODY402, new Symbol[] {
   MultiplyOp
,
   UnaryExpression
   })
   // ***** 
   };
   UnaryExpression.Rules = new Rule[] {
   new Rule (1652,UnaryExpression, new Symbol[] {
   OPTION403
,
   Primary
   })
   };
   // *****  
   OPTION403.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1653, OPTION403, new Symbol[] {
         OPTIONBODY403
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1654, OPTION403, new Symbol[] {
      } ) 
   };
   OPTIONBODY403.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1655,OPTIONBODY403, new Symbol[] {
   UnaryOp
   })
   // *****  
   };
   Primary.Rules = new Rule[] {
   new Rule (1656,Primary, new Symbol[] {
   OpCall
   })
,
   new Rule (1657,Primary, new Symbol[] {
   Value
   })
,
   new Rule (1658,Primary, new Symbol[] {
   T__lparen_
,
   SingleExpression
,
   T__rparen_
   })
   };
   ExtendedFieldReference.Rules = new Rule[] {
   new Rule (1659,ExtendedFieldReference, new Symbol[] {
   LOOPPLUS404
   })
   };
   // ***** 
   LOOPPLUS404.Rules = new Rule[] {
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
      new Rule (1660, LOOPPLUS404, new Symbol[] {
         LOOPBODY404,
         LOOP404
      } ) 
   };
   LOOP404.Rules = new Rule[] {
   // ***** (2) LOOP ::= LOOPBODY LOOP 
      new Rule (1661, LOOP404, new Symbol[] {
         LOOPBODY404,
         LOOP404
      } ) ,
   // ***** (3) LOOP ::= empty 
      new Rule (1662, LOOP404, new Symbol[] {
      } ) 
   };
   LOOPBODY404.Rules = new Rule[] {
   // ***** (4) LOOPBODY ::= ... 
   new Rule (1663,LOOPBODY404, new Symbol[] {
   SUB405
   })
   // *****  
   };
   SUB405.Rules = new Rule[] {
   new Rule (1664,SUB405, new Symbol[] {
   SUB406
   })
,
   new Rule (1665,SUB405, new Symbol[] {
   ArrayOrBitRef
   })
,
   new Rule (1666,SUB405, new Symbol[] {
   SUB411
   })
   };
   SUB406.Rules = new Rule[] {
   new Rule (1667,SUB406, new Symbol[] {
   T__dot_
,
   SUB407
   })
   };
   SUB407.Rules = new Rule[] {
   new Rule (1668,SUB407, new Symbol[] {
   Identifier
   })
,
   new Rule (1669,SUB407, new Symbol[] {
   PredefinedType
   })
,
   new Rule (1670,SUB407, new Symbol[] {
   SUB408
   })
   };
   SUB408.Rules = new Rule[] {
   new Rule (1671,SUB408, new Symbol[] {
   Identifier
,
   OPTION409
,
   OPTION410
   })
   };
   // *****  
   OPTION409.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1672, OPTION409, new Symbol[] {
         OPTIONBODY409
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1673, OPTION409, new Symbol[] {
      } ) 
   };
   OPTIONBODY409.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1674,OPTIONBODY409, new Symbol[] {
   ActualTypeParList
   })
   // *****  
   };
   // *****  
   OPTION410.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1675, OPTION410, new Symbol[] {
         OPTIONBODY410
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1676, OPTION410, new Symbol[] {
      } ) 
   };
   OPTIONBODY410.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1677,OPTIONBODY410, new Symbol[] {
   TypeActualParList
   })
   // *****  
   };
   SUB411.Rules = new Rule[] {
   new Rule (1678,SUB411, new Symbol[] {
   T__lbracket_
,
   T__minus_
,
   T__rbracket_
   })
   };
   OpCall.Rules = new Rule[] {
   new Rule (1679,OpCall, new Symbol[] {
   ConfigurationOps
   })
,
   new Rule (1680,OpCall, new Symbol[] {
   T_getverdict
   })
,
   new Rule (1681,OpCall, new Symbol[] {
   TimerOps
   })
,
   new Rule (1682,OpCall, new Symbol[] {
   TestcaseInstance
   })
,
   new Rule (1683,OpCall, new Symbol[] {
   FunctionInstance
,
   OPTION412
   })
,
   new Rule (1684,OpCall, new Symbol[] {
   TemplateOps
,
   OPTION413
   })
,
   new Rule (1685,OpCall, new Symbol[] {
   ActivateOp
   })
,
   new Rule (1686,OpCall, new Symbol[] {
   ConfigurationInstance
   })
,
   new Rule (1687,OpCall, new Symbol[] {
   T_now
   })
,
   new Rule (1688,OpCall, new Symbol[] {
   StreamDataOps
   })
,
   new Rule (1689,OpCall, new Symbol[] {
   StreamNavigationOps
   })
,
   new Rule (1690,OpCall, new Symbol[] {
   ModeLocalOps
   })
   };
   // *****  
   OPTION412.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1691, OPTION412, new Symbol[] {
         OPTIONBODY412
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1692, OPTION412, new Symbol[] {
      } ) 
   };
   OPTIONBODY412.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1693,OPTIONBODY412, new Symbol[] {
   ExtendedFieldReference
   })
   // *****  
   };
   // *****  
   OPTION413.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1694, OPTION413, new Symbol[] {
         OPTIONBODY413
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1695, OPTION413, new Symbol[] {
      } ) 
   };
   OPTIONBODY413.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1696,OPTIONBODY413, new Symbol[] {
   ExtendedFieldReference
   })
   // *****  
   };
   AddOp.Rules = new Rule[] {
   new Rule (1697,AddOp, new Symbol[] {
   T__plus_
   })
,
   new Rule (1698,AddOp, new Symbol[] {
   T__minus_
   })
,
   new Rule (1699,AddOp, new Symbol[] {
   StringOp
   })
   };
   MultiplyOp.Rules = new Rule[] {
   new Rule (1700,MultiplyOp, new Symbol[] {
   T__asterisk_
   })
,
   new Rule (1701,MultiplyOp, new Symbol[] {
   T__slash_
   })
,
   new Rule (1702,MultiplyOp, new Symbol[] {
   T_mod
   })
,
   new Rule (1703,MultiplyOp, new Symbol[] {
   T_rem
   })
   };
   UnaryOp.Rules = new Rule[] {
   new Rule (1704,UnaryOp, new Symbol[] {
   T__plus_
   })
,
   new Rule (1705,UnaryOp, new Symbol[] {
   T__minus_
   })
   };
   RelOp.Rules = new Rule[] {
   new Rule (1706,RelOp, new Symbol[] {
   T__less_
   })
,
   new Rule (1707,RelOp, new Symbol[] {
   T__greater_
   })
,
   new Rule (1708,RelOp, new Symbol[] {
   T__greater__equal_
   })
,
   new Rule (1709,RelOp, new Symbol[] {
   T__less__equal_
   })
   };
   EqualOp.Rules = new Rule[] {
   new Rule (1710,EqualOp, new Symbol[] {
   T__equal__equal_
   })
,
   new Rule (1711,EqualOp, new Symbol[] {
   T__exclamation__equal_
   })
   };
   StringOp.Rules = new Rule[] {
   new Rule (1712,StringOp, new Symbol[] {
   T__ampersand_
   })
   };
   ShiftOp.Rules = new Rule[] {
   new Rule (1713,ShiftOp, new Symbol[] {
   T__less__less_
   })
,
   new Rule (1714,ShiftOp, new Symbol[] {
   T__greater__greater_
   })
,
   new Rule (1715,ShiftOp, new Symbol[] {
   T__less__atsign_
   })
,
   new Rule (1716,ShiftOp, new Symbol[] {
   T__atsign__greater_
   })
   };
   LogStatement.Rules = new Rule[] {
   new Rule (1717,LogStatement, new Symbol[] {
   T_log
,
   T__lparen_
,
   LogItem
,
   LOOP414
,
   T__rparen_
   })
   };
   // ***** 
   LOOP414.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1718, LOOP414, new Symbol[] {
         LOOPBODY414,
         LOOP414
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1719, LOOP414, new Symbol[] {
      } ) 
   };
   LOOPBODY414.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1720,LOOPBODY414, new Symbol[] {
   T__comma_
,
   LogItem
   })
   // ***** 
   };
   LogItem.Rules = new Rule[] {
   new Rule (1721,LogItem, new Symbol[] {
   FreeText
   })
,
   new Rule (1722,LogItem, new Symbol[] {
   InLineTemplate
   })
   };
   LoopConstruct.Rules = new Rule[] {
   new Rule (1723,LoopConstruct, new Symbol[] {
   ForStatement
   })
,
   new Rule (1724,LoopConstruct, new Symbol[] {
   WhileStatement
   })
,
   new Rule (1725,LoopConstruct, new Symbol[] {
   DoWhileStatement
   })
   };
   ForStatement.Rules = new Rule[] {
   new Rule (1726,ForStatement, new Symbol[] {
   T_for
,
   T__lparen_
,
   Initial
,
   T__semicolon_
,
   BooleanExpression
,
   T__semicolon_
,
   Assignment
,
   T__rparen_
,
   StatementBlock
   })
   };
   Initial.Rules = new Rule[] {
   new Rule (1727,Initial, new Symbol[] {
   VarInstance
   })
,
   new Rule (1728,Initial, new Symbol[] {
   Assignment
   })
   };
   WhileStatement.Rules = new Rule[] {
   new Rule (1729,WhileStatement, new Symbol[] {
   T_while
,
   T__lparen_
,
   BooleanExpression
,
   T__rparen_
,
   StatementBlock
   })
   };
   DoWhileStatement.Rules = new Rule[] {
   new Rule (1730,DoWhileStatement, new Symbol[] {
   T_do
,
   StatementBlock
,
   T_while
,
   T__lparen_
,
   BooleanExpression
,
   T__rparen_
   })
   };
   ConditionalConstruct.Rules = new Rule[] {
   new Rule (1731,ConditionalConstruct, new Symbol[] {
   T_if
,
   T__lparen_
,
   BooleanExpression
,
   T__rparen_
,
   StatementBlock
,
   LOOP415
,
   OPTION416
   })
   };
   // ***** 
   LOOP415.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1732, LOOP415, new Symbol[] {
         LOOPBODY415,
         LOOP415
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1733, LOOP415, new Symbol[] {
      } ) 
   };
   LOOPBODY415.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1734,LOOPBODY415, new Symbol[] {
   ElseIfClause
   })
   // ***** 
   };
   // *****  
   OPTION416.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1735, OPTION416, new Symbol[] {
         OPTIONBODY416
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1736, OPTION416, new Symbol[] {
      } ) 
   };
   OPTIONBODY416.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1737,OPTIONBODY416, new Symbol[] {
   ElseClause
   })
   // *****  
   };
   ElseIfClause.Rules = new Rule[] {
   new Rule (1738,ElseIfClause, new Symbol[] {
   T_else
,
   T_if
,
   T__lparen_
,
   BooleanExpression
,
   T__rparen_
,
   StatementBlock
   })
   };
   ElseClause.Rules = new Rule[] {
   new Rule (1739,ElseClause, new Symbol[] {
   T_else
,
   StatementBlock
   })
   };
   SelectCaseConstruct.Rules = new Rule[] {
   new Rule (1740,SelectCaseConstruct, new Symbol[] {
   T_select
,
   T__lparen_
,
   SingleExpression
,
   T__rparen_
,
   SelectCaseBody
   })
   };
   SelectCaseBody.Rules = new Rule[] {
   new Rule (1741,SelectCaseBody, new Symbol[] {
   T__lbrace_
,
   LOOPPLUS417
,
   T__rbrace_
   })
   };
   // ***** 
   LOOPPLUS417.Rules = new Rule[] {
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
      new Rule (1742, LOOPPLUS417, new Symbol[] {
         LOOPBODY417,
         LOOP417
      } ) 
   };
   LOOP417.Rules = new Rule[] {
   // ***** (2) LOOP ::= LOOPBODY LOOP 
      new Rule (1743, LOOP417, new Symbol[] {
         LOOPBODY417,
         LOOP417
      } ) ,
   // ***** (3) LOOP ::= empty 
      new Rule (1744, LOOP417, new Symbol[] {
      } ) 
   };
   LOOPBODY417.Rules = new Rule[] {
   // ***** (4) LOOPBODY ::= ... 
   new Rule (1745,LOOPBODY417, new Symbol[] {
   SelectCase
   })
   // *****  
   };
   SelectCase.Rules = new Rule[] {
   new Rule (1746,SelectCase, new Symbol[] {
   T_case
,
   SUB418
,
   StatementBlock
   })
   };
   SUB418.Rules = new Rule[] {
   new Rule (1747,SUB418, new Symbol[] {
   T__lparen_
,
   InLineTemplate
,
   LOOP419
,
   T__rparen_
   })
,
   new Rule (1748,SUB418, new Symbol[] {
   T_else
   })
   };
   // ***** 
   LOOP419.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1749, LOOP419, new Symbol[] {
         LOOPBODY419,
         LOOP419
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1750, LOOP419, new Symbol[] {
      } ) 
   };
   LOOPBODY419.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1751,LOOPBODY419, new Symbol[] {
   T__comma_
,
   InLineTemplate
   })
   // ***** 
   };
   ExtendedIdentifier.Rules = new Rule[] {
   new Rule (1752,ExtendedIdentifier, new Symbol[] {
   OPTION420
,
   Identifier
   })
   };
   // *****  
   OPTION420.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1753, OPTION420, new Symbol[] {
         OPTIONBODY420
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1754, OPTION420, new Symbol[] {
      } ) 
   };
   OPTIONBODY420.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1755,OPTIONBODY420, new Symbol[] {
   Identifier
,
   T__dot_
   })
   // *****  
   };
   IdentifierList.Rules = new Rule[] {
   new Rule (1756,IdentifierList, new Symbol[] {
   Identifier
,
   LOOP421
   })
   };
   // ***** 
   LOOP421.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1757, LOOP421, new Symbol[] {
         LOOPBODY421,
         LOOP421
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1758, LOOP421, new Symbol[] {
      } ) 
   };
   LOOPBODY421.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1759,LOOPBODY421, new Symbol[] {
   T__comma_
,
   Identifier
   })
   // ***** 
   };
   QualifiedIdentifierList.Rules = new Rule[] {
   new Rule (1760,QualifiedIdentifierList, new Symbol[] {
   QualifiedIdentifier
,
   LOOP422
   })
   };
   // ***** 
   LOOP422.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1761, LOOP422, new Symbol[] {
         LOOPBODY422,
         LOOP422
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1762, LOOP422, new Symbol[] {
      } ) 
   };
   LOOPBODY422.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1763,LOOPBODY422, new Symbol[] {
   T__comma_
,
   QualifiedIdentifier
   })
   // ***** 
   };
   TypeActualParList.Rules = new Rule[] {
   new Rule (1764,TypeActualParList, new Symbol[] {
   SUB423
   })
,
   new Rule (1765,TypeActualParList, new Symbol[] {
   SUB425
   })
   };
   SUB423.Rules = new Rule[] {
   new Rule (1766,SUB423, new Symbol[] {
   T__lparen_
,
   TypeActualPar
,
   LOOP424
,
   T__rparen_
   })
   };
   // ***** 
   LOOP424.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1767, LOOP424, new Symbol[] {
         LOOPBODY424,
         LOOP424
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1768, LOOP424, new Symbol[] {
      } ) 
   };
   LOOPBODY424.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1769,LOOPBODY424, new Symbol[] {
   T__comma_
,
   TypeActualPar
   })
   // ***** 
   };
   SUB425.Rules = new Rule[] {
   new Rule (1770,SUB425, new Symbol[] {
   T__lparen_
,
   TypeParAssignment
,
   LOOP426
,
   T__rparen_
   })
   };
   // ***** 
   LOOP426.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1771, LOOP426, new Symbol[] {
         LOOPBODY426,
         LOOP426
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1772, LOOP426, new Symbol[] {
      } ) 
   };
   LOOPBODY426.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1773,LOOPBODY426, new Symbol[] {
   T__comma_
,
   TypeParAssignment
   })
   // ***** 
   };
   TypeActualPar.Rules = new Rule[] {
   new Rule (1774,TypeActualPar, new Symbol[] {
   ConstantExpression
   })
,
   new Rule (1775,TypeActualPar, new Symbol[] {
   TypeActualParIdentifier
,
   T__lbrace_
,
   UnionFieldDef
,
   LOOP427
,
   T__rbrace_
,
   T__lbrace_
,
   EnumerationList
,
   T__rbrace_
   })
   };
   // ***** 
   LOOP427.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1776, LOOP427, new Symbol[] {
         LOOPBODY427,
         LOOP427
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1777, LOOP427, new Symbol[] {
      } ) 
   };
   LOOPBODY427.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1778,LOOPBODY427, new Symbol[] {
   T__comma_
,
   UnionFieldDef
   })
   // ***** 
   };
   FormalTypeParList.Rules = new Rule[] {
   new Rule (1779,FormalTypeParList, new Symbol[] {
   T__less_
,
   FormalTypePar
,
   LOOP428
,
   T__greater_
   })
   };
   // ***** 
   LOOP428.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1780, LOOP428, new Symbol[] {
         LOOPBODY428,
         LOOP428
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1781, LOOP428, new Symbol[] {
      } ) 
   };
   LOOPBODY428.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1782,LOOPBODY428, new Symbol[] {
   T__comma_
,
   FormalTypePar
   })
   // ***** 
   };
   FormalTypePar.Rules = new Rule[] {
   new Rule (1783,FormalTypePar, new Symbol[] {
   OPTION429
,
   OPTION430
,
   TypeParIdentifier
,
   OPTION431
   })
   };
   // *****  
   OPTION429.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1784, OPTION429, new Symbol[] {
         OPTIONBODY429
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1785, OPTION429, new Symbol[] {
      } ) 
   };
   OPTIONBODY429.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1786,OPTIONBODY429, new Symbol[] {
   T_in
   })
   // *****  
   };
   // *****  
   OPTION430.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1787, OPTION430, new Symbol[] {
         OPTIONBODY430
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1788, OPTION430, new Symbol[] {
      } ) 
   };
   OPTIONBODY430.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1789,OPTIONBODY430, new Symbol[] {
   Type
   })
,
   new Rule (1790,OPTIONBODY430, new Symbol[] {
   T_type
   })
   // *****  
   };
   // *****  
   OPTION431.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1791, OPTION431, new Symbol[] {
         OPTIONBODY431
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1792, OPTION431, new Symbol[] {
      } ) 
   };
   OPTIONBODY431.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1793,OPTIONBODY431, new Symbol[] {
   T__colon__equal_
,
   Type
   })
   // *****  
   };
   TypeParIdentifier.Rules = new Rule[] {
   new Rule (1794,TypeParIdentifier, new Symbol[] {
   Identifier
   })
   };
   TypeActualParIdentifier.Rules = new Rule[] {
   new Rule (1795,TypeActualParIdentifier, new Symbol[] {
   Identifier
   })
   };
   TypeParAssignment.Rules = new Rule[] {
   new Rule (1796,TypeParAssignment, new Symbol[] {
   TypeActualParIdentifier
,
   T__colon__equal_
,
   TypeActualPar
   })
   };
   ActualTypeParList.Rules = new Rule[] {
   new Rule (1797,ActualTypeParList, new Symbol[] {
   SUB432
   })
,
   new Rule (1798,ActualTypeParList, new Symbol[] {
   SUB434
   })
   };
   SUB432.Rules = new Rule[] {
   new Rule (1799,SUB432, new Symbol[] {
   T__less_
,
   ActualTypePar
,
   LOOP433
,
   T__greater_
   })
   };
   // ***** 
   LOOP433.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1800, LOOP433, new Symbol[] {
         LOOPBODY433,
         LOOP433
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1801, LOOP433, new Symbol[] {
      } ) 
   };
   LOOPBODY433.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1802,LOOPBODY433, new Symbol[] {
   T__comma_
,
   ActualTypePar
   })
   // ***** 
   };
   SUB434.Rules = new Rule[] {
   new Rule (1803,SUB434, new Symbol[] {
   T__less_
,
   ActualTypeParAssignment
,
   LOOP435
,
   T__greater_
   })
   };
   // ***** 
   LOOP435.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1804, LOOP435, new Symbol[] {
         LOOPBODY435,
         LOOP435
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1805, LOOP435, new Symbol[] {
      } ) 
   };
   LOOPBODY435.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1806,LOOPBODY435, new Symbol[] {
   T__comma_
,
   ActualTypeParAssignment
   })
   // ***** 
   };
   ActualTypePar.Rules = new Rule[] {
   new Rule (1807,ActualTypePar, new Symbol[] {
   Type
   })
,
   new Rule (1808,ActualTypePar, new Symbol[] {
   T__minus_
   })
   };
   ActualTypeParAssignment.Rules = new Rule[] {
   new Rule (1809,ActualTypeParAssignment, new Symbol[] {
   TypeActualParIdentifier
,
   T__colon__equal_
,
   ActualTypePar
   })
   };
   StructDefFormalParList.Rules = new Rule[] {
   new Rule (1810,StructDefFormalParList, new Symbol[] {
   T__lparen_
,
   StructDefFormalPar
,
   LOOP436
,
   T__rparen_
   })
   };
   // ***** 
   LOOP436.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1811, LOOP436, new Symbol[] {
         LOOPBODY436,
         LOOP436
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1812, LOOP436, new Symbol[] {
      } ) 
   };
   LOOPBODY436.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1813,LOOPBODY436, new Symbol[] {
   T__comma_
,
   StructDefFormalPar
   })
   // ***** 
   };
   StructDefFormalPar.Rules = new Rule[] {
   new Rule (1814,StructDefFormalPar, new Symbol[] {
   FormalValuePar
   })
   };
   BehaviourDef.Rules = new Rule[] {
   new Rule (1815,BehaviourDef, new Symbol[] {
   SUB437
   })
,
   new Rule (1816,BehaviourDef, new Symbol[] {
   SUB441
   })
,
   new Rule (1817,BehaviourDef, new Symbol[] {
   SUB446
   })
   };
   SUB437.Rules = new Rule[] {
   new Rule (1818,SUB437, new Symbol[] {
   T_altstep
,
   Identifier
,
   OPTION438
,
   T__lparen_
,
   OPTION439
,
   T__rparen_
,
   OPTION440
   })
   };
   // *****  
   OPTION438.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1819, OPTION438, new Symbol[] {
         OPTIONBODY438
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1820, OPTION438, new Symbol[] {
      } ) 
   };
   OPTIONBODY438.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1821,OPTIONBODY438, new Symbol[] {
   FormalTypeParList
   })
   // *****  
   };
   // *****  
   OPTION439.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1822, OPTION439, new Symbol[] {
         OPTIONBODY439
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1823, OPTION439, new Symbol[] {
      } ) 
   };
   OPTIONBODY439.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1824,OPTIONBODY439, new Symbol[] {
   FunctionFormalParList
   })
   // *****  
   };
   // *****  
   OPTION440.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1825, OPTION440, new Symbol[] {
         OPTIONBODY440
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1826, OPTION440, new Symbol[] {
      } ) 
   };
   OPTIONBODY440.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1827,OPTIONBODY440, new Symbol[] {
   RunsOnSpec
   })
   // *****  
   };
   SUB441.Rules = new Rule[] {
   new Rule (1828,SUB441, new Symbol[] {
   T_function
,
   Identifier
,
   OPTION442
,
   T__lparen_
,
   OPTION443
,
   T__rparen_
,
   OPTION444
,
   OPTION445
   })
   };
   // *****  
   OPTION442.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1829, OPTION442, new Symbol[] {
         OPTIONBODY442
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1830, OPTION442, new Symbol[] {
      } ) 
   };
   OPTIONBODY442.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1831,OPTIONBODY442, new Symbol[] {
   FormalTypeParList
   })
   // *****  
   };
   // *****  
   OPTION443.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1832, OPTION443, new Symbol[] {
         OPTIONBODY443
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1833, OPTION443, new Symbol[] {
      } ) 
   };
   OPTIONBODY443.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1834,OPTIONBODY443, new Symbol[] {
   FunctionFormalParList
   })
   // *****  
   };
   // *****  
   OPTION444.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1835, OPTION444, new Symbol[] {
         OPTIONBODY444
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1836, OPTION444, new Symbol[] {
      } ) 
   };
   OPTIONBODY444.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1837,OPTIONBODY444, new Symbol[] {
   RunsOnSpec
   })
   // *****  
   };
   // *****  
   OPTION445.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1838, OPTION445, new Symbol[] {
         OPTIONBODY445
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1839, OPTION445, new Symbol[] {
      } ) 
   };
   OPTIONBODY445.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1840,OPTIONBODY445, new Symbol[] {
   ReturnType
   })
   // *****  
   };
   SUB446.Rules = new Rule[] {
   new Rule (1841,SUB446, new Symbol[] {
   T_testcase
,
   Identifier
,
   OPTION447
,
   T__lparen_
,
   OPTION448
,
   T__rparen_
,
   ConfigSpec
   })
   };
   // *****  
   OPTION447.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1842, OPTION447, new Symbol[] {
         OPTIONBODY447
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1843, OPTION447, new Symbol[] {
      } ) 
   };
   OPTIONBODY447.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1844,OPTIONBODY447, new Symbol[] {
   FormalTypeParList
   })
   // *****  
   };
   // *****  
   OPTION448.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1845, OPTION448, new Symbol[] {
         OPTIONBODY448
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1846, OPTION448, new Symbol[] {
      } ) 
   };
   OPTIONBODY448.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1847,OPTIONBODY448, new Symbol[] {
   TemplateOrValueFormalParList
   })
   // *****  
   };
   NestedBehaviourDef.Rules = new Rule[] {
   new Rule (1848,NestedBehaviourDef, new Symbol[] {
   SUB449
   })
,
   new Rule (1849,NestedBehaviourDef, new Symbol[] {
   SUB452
   })
,
   new Rule (1850,NestedBehaviourDef, new Symbol[] {
   SUB456
   })
   };
   SUB449.Rules = new Rule[] {
   new Rule (1851,SUB449, new Symbol[] {
   T_altstep
,
   T__lparen_
,
   OPTION450
,
   T__rparen_
,
   OPTION451
   })
   };
   // *****  
   OPTION450.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1852, OPTION450, new Symbol[] {
         OPTIONBODY450
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1853, OPTION450, new Symbol[] {
      } ) 
   };
   OPTIONBODY450.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1854,OPTIONBODY450, new Symbol[] {
   FunctionFormalParList
   })
   // *****  
   };
   // *****  
   OPTION451.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1855, OPTION451, new Symbol[] {
         OPTIONBODY451
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1856, OPTION451, new Symbol[] {
      } ) 
   };
   OPTIONBODY451.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1857,OPTIONBODY451, new Symbol[] {
   RunsOnSpec
   })
   // *****  
   };
   SUB452.Rules = new Rule[] {
   new Rule (1858,SUB452, new Symbol[] {
   T_function
,
   T__lparen_
,
   OPTION453
,
   T__rparen_
,
   OPTION454
,
   OPTION455
   })
   };
   // *****  
   OPTION453.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1859, OPTION453, new Symbol[] {
         OPTIONBODY453
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1860, OPTION453, new Symbol[] {
      } ) 
   };
   OPTIONBODY453.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1861,OPTIONBODY453, new Symbol[] {
   FunctionFormalParList
   })
   // *****  
   };
   // *****  
   OPTION454.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1862, OPTION454, new Symbol[] {
         OPTIONBODY454
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1863, OPTION454, new Symbol[] {
      } ) 
   };
   OPTIONBODY454.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1864,OPTIONBODY454, new Symbol[] {
   RunsOnSpec
   })
   // *****  
   };
   // *****  
   OPTION455.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1865, OPTION455, new Symbol[] {
         OPTIONBODY455
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1866, OPTION455, new Symbol[] {
      } ) 
   };
   OPTIONBODY455.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1867,OPTIONBODY455, new Symbol[] {
   ReturnType
   })
   // *****  
   };
   SUB456.Rules = new Rule[] {
   new Rule (1868,SUB456, new Symbol[] {
   T_testcase
,
   T__lparen_
,
   OPTION457
,
   T__rparen_
,
   ConfigSpec
   })
   };
   // *****  
   OPTION457.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1869, OPTION457, new Symbol[] {
         OPTIONBODY457
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1870, OPTION457, new Symbol[] {
      } ) 
   };
   OPTIONBODY457.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1871,OPTIONBODY457, new Symbol[] {
   TemplateOrValueFormalParList
   })
   // *****  
   };
   BehaviourValue.Rules = new Rule[] {
   new Rule (1872,BehaviourValue, new Symbol[] {
   OPTION458
,
   T__dot_
,
   Identifier
   })
,
   new Rule (1873,BehaviourValue, new Symbol[] {
   T_null
   })
   };
   // *****  
   OPTION458.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1874, OPTION458, new Symbol[] {
         OPTIONBODY458
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1875, OPTION458, new Symbol[] {
      } ) 
   };
   OPTIONBODY458.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1876,OPTIONBODY458, new Symbol[] {
   Identifier
   })
   // *****  
   };
   ExecuteOnSpec.Rules = new Rule[] {
   new Rule (1877,ExecuteOnSpec, new Symbol[] {
   T_execute
,
   T_on
,
   ConfigurationRef
   })
   };
   ConfigurationDef.Rules = new Rule[] {
   new Rule (1878,ConfigurationDef, new Symbol[] {
   T_configuration
,
   ConfigurationIdentifier
,
   T__lparen_
,
   OPTION459
,
   T__rparen_
,
   ConfigSpec
,
   StatementBlock
   })
   };
   // *****  
   OPTION459.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1879, OPTION459, new Symbol[] {
         OPTIONBODY459
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1880, OPTION459, new Symbol[] {
      } ) 
   };
   OPTIONBODY459.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1881,OPTIONBODY459, new Symbol[] {
   TemplateOrValueFormalParList
   })
   // *****  
   };
   ConfigurationIdentifier.Rules = new Rule[] {
   new Rule (1882,ConfigurationIdentifier, new Symbol[] {
   Identifier
   })
   };
// grenze 1
}
public static void DefineGrammar4()
{
   ConfigurationInstance.Rules = new Rule[] {
   new Rule (1883,ConfigurationInstance, new Symbol[] {
   ConfigurationRef
,
   T__lparen_
,
   OPTION460
,
   T__rparen_
   })
   };
   // *****  
   OPTION460.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1884, OPTION460, new Symbol[] {
         OPTIONBODY460
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1885, OPTION460, new Symbol[] {
      } ) 
   };
   OPTIONBODY460.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1886,OPTIONBODY460, new Symbol[] {
   TestcaseActualParList
   })
   // *****  
   };
   ConfigurationRef.Rules = new Rule[] {
   new Rule (1887,ConfigurationRef, new Symbol[] {
   OPTION461
,
   ConfigurationIdentifier
   })
   };
   // *****  
   OPTION461.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1888, OPTION461, new Symbol[] {
         OPTIONBODY461
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1889, OPTION461, new Symbol[] {
      } ) 
   };
   OPTIONBODY461.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1890,OPTIONBODY461, new Symbol[] {
   Identifier
,
   T__dot_
   })
   // *****  
   };
   KillConfigStatement.Rules = new Rule[] {
   new Rule (1891,KillConfigStatement, new Symbol[] {
   ConfigurationReference
,
   T__dot_
,
   T_kill
   })
   };
   ConfigurationReference.Rules = new Rule[] {
   new Rule (1892,ConfigurationReference, new Symbol[] {
   VariableRef
   })
,
   new Rule (1893,ConfigurationReference, new Symbol[] {
   FunctionInstance
   })
   };
   TimestampSpec.Rules = new Rule[] {
   new Rule (1894,TimestampSpec, new Symbol[] {
   T_timestamp
,
   VariableRef
   })
   };
   RealtimeStatement.Rules = new Rule[] {
   new Rule (1895,RealtimeStatement, new Symbol[] {
   WaitStatement
   })
   };
   WaitStatement.Rules = new Rule[] {
   new Rule (1896,WaitStatement, new Symbol[] {
   T_wait
,
   SUB462
   })
   };
   SUB462.Rules = new Rule[] {
   new Rule (1897,SUB462, new Symbol[] {
   SingleExpression
   })
   };
   StreamAttribs.Rules = new Rule[] {
   new Rule (1898,StreamAttribs, new Symbol[] {
   T_stream
,
   T__lbrace_
,
   StreamDirection
,
   Type
,
   T__rbrace_
   })
   };
   StreamDirection.Rules = new Rule[] {
   new Rule (1899,StreamDirection, new Symbol[] {
   T_in
   })
,
   new Rule (1900,StreamDirection, new Symbol[] {
   T_out
   })
   };
   PortInitialValue.Rules = new Rule[] {
   new Rule (1901,PortInitialValue, new Symbol[] {
   Expression
   })
   };
   StreamDataOps.Rules = new Rule[] {
   new Rule (1902,StreamDataOps, new Symbol[] {
   Identifier
,
   T__dot_
,
   PortDataOp
   })
   };
   PortDataOp.Rules = new Rule[] {
   new Rule (1903,PortDataOp, new Symbol[] {
   T_value
   })
,
   new Rule (1904,PortDataOp, new Symbol[] {
   T_timestamp
   })
,
   new Rule (1905,PortDataOp, new Symbol[] {
   T_delta
   })
,
   new Rule (1906,PortDataOp, new Symbol[] {
   PortHistoryOp
   })
,
   new Rule (1907,PortDataOp, new Symbol[] {
   PortValuesOp
   })
   };
   PortHistoryOp.Rules = new Rule[] {
   new Rule (1908,PortHistoryOp, new Symbol[] {
   T_history
,
   OPTION463
   })
   };
   // *****  
   OPTION463.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1909, OPTION463, new Symbol[] {
         OPTIONBODY463
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1910, OPTION463, new Symbol[] {
      } ) 
   };
   OPTIONBODY463.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1911,OPTIONBODY463, new Symbol[] {
   T__lparen_
,
   StartValue
,
   OPTION464
,
   T__rparen_
   })
   // *****  
   };
   // *****  
   OPTION464.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1912, OPTION464, new Symbol[] {
         OPTIONBODY464
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1913, OPTION464, new Symbol[] {
      } ) 
   };
   OPTIONBODY464.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1914,OPTIONBODY464, new Symbol[] {
   T__comma_
,
   EndValue
   })
   // *****  
   };
   StartValue.Rules = new Rule[] {
   new Rule (1915,StartValue, new Symbol[] {
   Expression
   })
   };
   EndValue.Rules = new Rule[] {
   new Rule (1916,EndValue, new Symbol[] {
   Expression
   })
   };
   PortValuesOp.Rules = new Rule[] {
   new Rule (1917,PortValuesOp, new Symbol[] {
   T_values
,
   OPTION465
   })
   };
   // *****  
   OPTION465.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1918, OPTION465, new Symbol[] {
         OPTIONBODY465
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1919, OPTION465, new Symbol[] {
      } ) 
   };
   OPTIONBODY465.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1920,OPTIONBODY465, new Symbol[] {
   T__lparen_
,
   StartValue
,
   OPTION466
,
   T__rparen_
   })
   // *****  
   };
   // *****  
   OPTION466.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1921, OPTION466, new Symbol[] {
         OPTIONBODY466
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1922, OPTION466, new Symbol[] {
      } ) 
   };
   OPTIONBODY466.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1923,OPTIONBODY466, new Symbol[] {
   T__comma_
,
   EndValue
   })
   // *****  
   };
   StreamNavigationOps.Rules = new Rule[] {
   new Rule (1924,StreamNavigationOps, new Symbol[] {
   Identifier
,
   T__dot_
,
   SUB467
,
   OPTION468
   })
   };
   SUB467.Rules = new Rule[] {
   new Rule (1925,SUB467, new Symbol[] {
   PortPrevOp
   })
,
   new Rule (1926,SUB467, new Symbol[] {
   PortAtOp
   })
   };
   // *****  
   OPTION468.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1927, OPTION468, new Symbol[] {
         OPTIONBODY468
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1928, OPTION468, new Symbol[] {
      } ) 
   };
   OPTIONBODY468.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1929,OPTIONBODY468, new Symbol[] {
   T__dot_
,
   PortDataOp
   })
   // *****  
   };
   PortPrevOp.Rules = new Rule[] {
   new Rule (1930,PortPrevOp, new Symbol[] {
   T_prev
,
   OPTION469
   })
   };
   // *****  
   OPTION469.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1931, OPTION469, new Symbol[] {
         OPTIONBODY469
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1932, OPTION469, new Symbol[] {
      } ) 
   };
   OPTIONBODY469.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1933,OPTIONBODY469, new Symbol[] {
   T__lparen_
,
   IndexValue
,
   T__rparen_
   })
   // *****  
   };
   IndexValue.Rules = new Rule[] {
   new Rule (1934,IndexValue, new Symbol[] {
   Expression
   })
   };
   PortAtOp.Rules = new Rule[] {
   new Rule (1935,PortAtOp, new Symbol[] {
   T_at
,
   OPTION470
   })
   };
   // *****  
   OPTION470.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1936, OPTION470, new Symbol[] {
         OPTIONBODY470
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1937, OPTION470, new Symbol[] {
      } ) 
   };
   OPTIONBODY470.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1938,OPTIONBODY470, new Symbol[] {
   T__lparen_
,
   TimeIndexValue
,
   T__rparen_
   })
   // *****  
   };
   TimeIndexValue.Rules = new Rule[] {
   new Rule (1939,TimeIndexValue, new Symbol[] {
   Expression
   })
   };
   ModeLocalOps.Rules = new Rule[] {
   new Rule (1940,ModeLocalOps, new Symbol[] {
   T_duration
   })
,
   new Rule (1941,ModeLocalOps, new Symbol[] {
   T_finished
   })
,
   new Rule (1942,ModeLocalOps, new Symbol[] {
   T_notinv
   })
   };
   StreamEvalStatements.Rules = new Rule[] {
   new Rule (1943,StreamEvalStatements, new Symbol[] {
   Identifier
,
   T__dot_
,
   SUB471
   })
   };
   SUB471.Rules = new Rule[] {
   new Rule (1944,SUB471, new Symbol[] {
   PortApplyOp
   })
,
   new Rule (1945,SUB471, new Symbol[] {
   PortFindOp
   })
,
   new Rule (1946,SUB471, new Symbol[] {
   PortViolatesOp
   })
   };
   PortApplyOp.Rules = new Rule[] {
   new Rule (1947,PortApplyOp, new Symbol[] {
   T_apply
,
   OPTION472
   })
   };
   // *****  
   OPTION472.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1948, OPTION472, new Symbol[] {
         OPTIONBODY472
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1949, OPTION472, new Symbol[] {
      } ) 
   };
   OPTIONBODY472.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1950,OPTIONBODY472, new Symbol[] {
   T__lparen_
,
   ApplyParameter
,
   T__rparen_
   })
   // *****  
   };
   ApplyParameter.Rules = new Rule[] {
   new Rule (1951,ApplyParameter, new Symbol[] {
   TemplateInstance
   })
   };
   PortFindOp.Rules = new Rule[] {
   new Rule (1952,PortFindOp, new Symbol[] {
   T_find
,
   OPTION473
   })
   };
   // *****  
   OPTION473.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1953, OPTION473, new Symbol[] {
         OPTIONBODY473
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1954, OPTION473, new Symbol[] {
      } ) 
   };
   OPTIONBODY473.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1955,OPTIONBODY473, new Symbol[] {
   T__lparen_
,
   FindParameter
,
   T__rparen_
   })
   // *****  
   };
   FindParameter.Rules = new Rule[] {
   new Rule (1956,FindParameter, new Symbol[] {
   TemplateInstance
   })
   };
   PortViolatesOp.Rules = new Rule[] {
   new Rule (1957,PortViolatesOp, new Symbol[] {
   T_violates
,
   OPTION474
   })
   };
   // *****  
   OPTION474.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1958, OPTION474, new Symbol[] {
         OPTIONBODY474
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1959, OPTION474, new Symbol[] {
      } ) 
   };
   OPTIONBODY474.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1960,OPTIONBODY474, new Symbol[] {
   T__lparen_
,
   ViolatesParameter
,
   T__rparen_
   })
   // *****  
   };
   ViolatesParameter.Rules = new Rule[] {
   new Rule (1961,ViolatesParameter, new Symbol[] {
   TemplateInstance
   })
   };
   AssertStatement.Rules = new Rule[] {
   new Rule (1962,AssertStatement, new Symbol[] {
   T_assert
,
   OPTION475
   })
   };
   // *****  
   OPTION475.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1963, OPTION475, new Symbol[] {
         OPTIONBODY475
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1964, OPTION475, new Symbol[] {
      } ) 
   };
   OPTIONBODY475.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1965,OPTIONBODY475, new Symbol[] {
   T__lparen_
,
   AssertionList
,
   T__rparen_
   })
   // *****  
   };
   AssertionList.Rules = new Rule[] {
   new Rule (1966,AssertionList, new Symbol[] {
   Expression
,
   LOOP476
   })
   };
   // ***** 
   LOOP476.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1967, LOOP476, new Symbol[] {
         LOOPBODY476,
         LOOP476
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1968, LOOP476, new Symbol[] {
      } ) 
   };
   LOOPBODY476.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1969,LOOPBODY476, new Symbol[] {
   T__comma_
,
   Expression
   })
   // ***** 
   };
   ModeSpecification.Rules = new Rule[] {
   new Rule (1970,ModeSpecification, new Symbol[] {
   SUB477
,
   OPTION478
   })
   };
   SUB477.Rules = new Rule[] {
   new Rule (1971,SUB477, new Symbol[] {
   BasicMode
   })
,
   new Rule (1972,SUB477, new Symbol[] {
   ComplexMode
   })
   };
   // *****  
   OPTION478.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1973, OPTION478, new Symbol[] {
         OPTIONBODY478
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1974, OPTION478, new Symbol[] {
      } ) 
   };
   OPTIONBODY478.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1975,OPTIONBODY478, new Symbol[] {
   UntilBlock
   })
   // *****  
   };
   BasicMode.Rules = new Rule[] {
   new Rule (1976,BasicMode, new Symbol[] {
   T_cont
,
   T__lbrace_
,
   LOOP479
,
   OPTION480
,
   OPTION481
,
   LOOP482
,
   OPTION483
,
   T__rbrace_
   })
   };
   // ***** 
   LOOP479.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1977, LOOP479, new Symbol[] {
         LOOPBODY479,
         LOOP479
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1978, LOOP479, new Symbol[] {
      } ) 
   };
   LOOPBODY479.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1979,LOOPBODY479, new Symbol[] {
   VarInstance
   })
   // ***** 
   };
   // *****  
   OPTION480.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1980, OPTION480, new Symbol[] {
         OPTIONBODY480
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1981, OPTION480, new Symbol[] {
      } ) 
   };
   OPTIONBODY480.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1982,OPTIONBODY480, new Symbol[] {
   OnEntryBlock
   })
   // *****  
   };
   // *****  
   OPTION481.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1983, OPTION481, new Symbol[] {
         OPTIONBODY481
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1984, OPTION481, new Symbol[] {
      } ) 
   };
   OPTIONBODY481.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1985,OPTIONBODY481, new Symbol[] {
   InvariantBlock
   })
   // *****  
   };
   // ***** 
   LOOP482.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1986, LOOP482, new Symbol[] {
         LOOPBODY482,
         LOOP482
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1987, LOOP482, new Symbol[] {
      } ) 
   };
   LOOPBODY482.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (1988,LOOPBODY482, new Symbol[] {
   BasicModeOp
   })
   // ***** 
   };
   // *****  
   OPTION483.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1989, OPTION483, new Symbol[] {
         OPTIONBODY483
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1990, OPTION483, new Symbol[] {
      } ) 
   };
   OPTIONBODY483.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1991,OPTIONBODY483, new Symbol[] {
   OnExitBlock
   })
   // *****  
   };
   OnEntryBlock.Rules = new Rule[] {
   new Rule (1992,OnEntryBlock, new Symbol[] {
   T_onentry
,
   T__lbrace_
,
   StatementBlock
,
   T__rbrace_
   })
   };
   InvariantBlock.Rules = new Rule[] {
   new Rule (1993,InvariantBlock, new Symbol[] {
   T_inv
,
   T__lbrace_
,
   InvariantList
,
   T__rbrace_
   })
   };
   InvariantList.Rules = new Rule[] {
   new Rule (1994,InvariantList, new Symbol[] {
   OPTION484
   })
   };
   // *****  
   OPTION484.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (1995, OPTION484, new Symbol[] {
         OPTIONBODY484
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (1996, OPTION484, new Symbol[] {
      } ) 
   };
   OPTIONBODY484.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (1997,OPTIONBODY484, new Symbol[] {
   BooleanExpression
,
   LOOP485
   })
   // *****  
   };
   // ***** 
   LOOP485.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (1998, LOOP485, new Symbol[] {
         LOOPBODY485,
         LOOP485
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (1999, LOOP485, new Symbol[] {
      } ) 
   };
   LOOPBODY485.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (2000,LOOPBODY485, new Symbol[] {
   T__comma_
,
   BooleanExpression
   })
   // ***** 
   };
   BasicModeOp.Rules = new Rule[] {
   new Rule (2001,BasicModeOp, new Symbol[] {
   Assignment
   })
,
   new Rule (2002,BasicModeOp, new Symbol[] {
   AssertStatement
   })
   };
   OnExitBlock.Rules = new Rule[] {
   new Rule (2003,OnExitBlock, new Symbol[] {
   T_onexit
,
   T__lbrace_
,
   StatementBlock
,
   T__rbrace_
   })
   };
   ComplexMode.Rules = new Rule[] {
   new Rule (2004,ComplexMode, new Symbol[] {
   SUB486
,
   T__lbrace_
,
   LOOP487
,
   OPTION488
,
   OPTION489
,
   ModeList
,
   OPTION490
,
   T__rbrace_
   })
   };
   SUB486.Rules = new Rule[] {
   new Rule (2005,SUB486, new Symbol[] {
   T_seq
   })
,
   new Rule (2006,SUB486, new Symbol[] {
   T_par
   })
   };
   // ***** 
   LOOP487.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (2007, LOOP487, new Symbol[] {
         LOOPBODY487,
         LOOP487
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (2008, LOOP487, new Symbol[] {
      } ) 
   };
   LOOPBODY487.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (2009,LOOPBODY487, new Symbol[] {
   VarInstance
   })
   // ***** 
   };
   // *****  
   OPTION488.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (2010, OPTION488, new Symbol[] {
         OPTIONBODY488
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (2011, OPTION488, new Symbol[] {
      } ) 
   };
   OPTIONBODY488.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (2012,OPTIONBODY488, new Symbol[] {
   OnEntryBlock
   })
   // *****  
   };
   // *****  
   OPTION489.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (2013, OPTION489, new Symbol[] {
         OPTIONBODY489
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (2014, OPTION489, new Symbol[] {
      } ) 
   };
   OPTIONBODY489.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (2015,OPTIONBODY489, new Symbol[] {
   InvariantBlock
   })
   // *****  
   };
   // *****  
   OPTION490.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (2016, OPTION490, new Symbol[] {
         OPTIONBODY490
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (2017, OPTION490, new Symbol[] {
      } ) 
   };
   OPTIONBODY490.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (2018,OPTIONBODY490, new Symbol[] {
   OnExitBlock
   })
   // *****  
   };
   ModeList.Rules = new Rule[] {
   new Rule (2019,ModeList, new Symbol[] {
   LOOP491
   })
   };
   // ***** 
   LOOP491.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (2020, LOOP491, new Symbol[] {
         LOOPBODY491,
         LOOP491
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (2021, LOOP491, new Symbol[] {
      } ) 
   };
   LOOPBODY491.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (2022,LOOPBODY491, new Symbol[] {
   OPTION492
,
   ModeSpecification
   })
   // ***** 
   };
   // *****  
   OPTION492.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (2023, OPTION492, new Symbol[] {
         OPTIONBODY492
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (2024, OPTION492, new Symbol[] {
      } ) 
   };
   OPTIONBODY492.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (2025,OPTIONBODY492, new Symbol[] {
   LabelStatement
   })
   // *****  
   };
   UntilBlock.Rules = new Rule[] {
   new Rule (2026,UntilBlock, new Symbol[] {
   T_until
,
   T__lbrace_
,
   UntilGuardList
,
   T__rbrace_
   })
   };
   UntilGuardList.Rules = new Rule[] {
   new Rule (2027,UntilGuardList, new Symbol[] {
   LOOP493
   })
   };
   // ***** 
   LOOP493.Rules = new Rule[] {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
      new Rule (2028, LOOP493, new Symbol[] {
         LOOPBODY493,
         LOOP493
      } ) ,
   // ***** (2) LOOP ::= empty 
      new Rule (2029, LOOP493, new Symbol[] {
      } ) 
   };
   LOOPBODY493.Rules = new Rule[] {
   // ***** (3) LOOPBODY ::= ... 
   new Rule (2030,LOOPBODY493, new Symbol[] {
   UntilGuardStatement
   })
   // ***** 
   };
   UntilGuardStatement.Rules = new Rule[] {
   new Rule (2031,UntilGuardStatement, new Symbol[] {
   T__lbracket_
,
   OPTION494
,
   T__rbracket_
,
   GuardOp
,
   StatementBlock
,
   OPTION495
,
   OPTION496
,
   OPTION497
,
   OPTION498
,
   OPTION499
,
   ModeSpecification
   })
   };
   // *****  
   OPTION494.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (2032, OPTION494, new Symbol[] {
         OPTIONBODY494
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (2033, OPTION494, new Symbol[] {
      } ) 
   };
   OPTIONBODY494.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (2034,OPTIONBODY494, new Symbol[] {
   BooleanExpression
   })
   // *****  
   };
   // *****  
   OPTION495.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (2035, OPTION495, new Symbol[] {
         OPTIONBODY495
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (2036, OPTION495, new Symbol[] {
      } ) 
   };
   OPTIONBODY495.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (2037,OPTIONBODY495, new Symbol[] {
   GotoStatement
   })
   // *****  
   };
   // *****  
   OPTION496.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (2038, OPTION496, new Symbol[] {
         OPTIONBODY496
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (2039, OPTION496, new Symbol[] {
      } ) 
   };
   OPTIONBODY496.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (2040,OPTIONBODY496, new Symbol[] {
   T__lparen_
,
   TemplateOrValueFormalParList
,
   T__rparen_
   })
   // *****  
   };
   // *****  
   OPTION497.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (2041, OPTION497, new Symbol[] {
         OPTIONBODY497
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (2042, OPTION497, new Symbol[] {
      } ) 
   };
   OPTIONBODY497.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (2043,OPTIONBODY497, new Symbol[] {
   RunsOnSpec
   })
   // *****  
   };
   // *****  
   OPTION498.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (2044, OPTION498, new Symbol[] {
         OPTIONBODY498
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (2045, OPTION498, new Symbol[] {
      } ) 
   };
   OPTIONBODY498.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (2046,OPTIONBODY498, new Symbol[] {
   T__lparen_
,
   TemplateOrValueFormalParList
,
   T__rparen_
   })
   // *****  
   };
   // *****  
   OPTION499.Rules = new Rule[] {
   // ***** (1) OPTION ::= OPTIONBODY 
      new Rule (2047, OPTION499, new Symbol[] {
         OPTIONBODY499
      } ) ,
   // ***** (2) OPTION ::= empty 
      new Rule (2048, OPTION499, new Symbol[] {
      } ) 
   };
   OPTIONBODY499.Rules = new Rule[] {
   // ***** (3) OPTIONBODY ::= ... 
   new Rule (2049,OPTIONBODY499, new Symbol[] {
   RunsOnSpec
   })
   // *****  
   };
   TemplateInstance.Rules = new Rule[] {
   new Rule (2050,TemplateInstance, new Symbol[] {
   Identifier
   })
   };
   BITSTRINGMATCH.Rules = new Rule[] {
   new Rule (2051,BITSTRINGMATCH, new Symbol[] {
   BSTRING
   })
   };
   HEXSTRINGMATCH.Rules = new Rule[] {
   new Rule (2052,HEXSTRINGMATCH, new Symbol[] {
   HSTRING
   })
   };
   OCTETSTRINGMATCH.Rules = new Rule[] {
   new Rule (2053,OCTETSTRINGMATCH, new Symbol[] {
   OSTRING
   })
   };
   PATTERN.Rules = new Rule[] {
   new Rule (2054,PATTERN, new Symbol[] {
   CSTRING
   })
   };
   FREETEXT.Rules = new Rule[] {
   new Rule (2055,FREETEXT, new Symbol[] {
   CSTRING
   })
   };

ExhaustiveParser.UserRoot = TTCN3Module;
} // DefineGrammar

public static void DefineGrammar()
{
   DefineGrammar0();
   DefineGrammar1();
   DefineGrammar2();
   DefineGrammar3();
   DefineGrammar4();
}

public static void SemanticAction(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   case 0:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TTCN3Module_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(4)
,RT.DollarI(5)
,RT.DollarI(7)
,RT.DollarI(8)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(8), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-yyDecls"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 2: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-yyDecls"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 3:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"yyDecls_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 4: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-yyControlPart"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 5: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-yyControlPart"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 6:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"yyControlPart_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 7: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-TTCN3Module_A1_M7"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 8: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-TTCN3Module_A1_M7"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 9:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TTCN3Module_A1_M7_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 10: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-TTCN3Module_A1_M8"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 11: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-TTCN3Module_A1_M8"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 12:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TTCN3Module_A1_M8_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 13:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleId_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 14: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ModuleId_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 15: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ModuleId_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 16:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleId_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 17:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"LanguageSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 18: // LOOP39
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-LanguageSpec_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 19: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-LanguageSpec_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 20:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"LanguageSpec_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 21:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinitionsList_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
   case 22: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ModuleDefinitionsList_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= LOOPBODY LOOP 
   case 23: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ModuleDefinitionsList_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOP ::= empty 
   case 24: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ModuleDefinitionsList_A1_M1"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (4) LOOPBODY ::= ... 
   case 25:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinitionsList_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 26: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ModuleDefinitionsList_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 27: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ModuleDefinitionsList_A1_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 28:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinitionsList_A1_M1_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 29:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB42:
   case 30:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 31:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 32:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB43:
   case 33:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 34: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ModuleDefinition_A1_M1_A1_M1_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 35: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ModuleDefinition_A1_M1_A1_M1_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 36:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A1_M1_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB45:
   case 37:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A1_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 38:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A1_M1_A1_M2_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 39:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A1_M1_A1_M2_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 40:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A1_M1_A1_M2_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 41:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A1_M1_A1_M2_A5"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 42:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A1_M1_A1_M2_A6"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 43:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A1_M1_A1_M2_A7"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 44:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A1_M1_A1_M2_A8"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 45:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A1_M1_A1_M2_A9"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 46:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A1_M1_A1_M2_A10"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 47:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A1_M1_A1_M2_A11"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 48:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A1_M1_A1_M2_A12"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB46:
   case 49:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 50: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ModuleDefinition_A1_M1_A2_M1_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 51: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ModuleDefinition_A1_M1_A2_M1_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 52:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A2_M1_A1_M1_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB48:
   case 53:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A3_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 54: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ModuleDefinition_A1_M1_A3_M1_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 55: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ModuleDefinition_A1_M1_A3_M1_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 56:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M1_A3_M1_A1_M1_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 57: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ModuleDefinition_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 58: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ModuleDefinition_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 59:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleDefinition_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 60:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Visibility_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 61:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Visibility_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 62:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Visibility_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 63:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TypeDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 64:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TypeDefBody_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 65:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TypeDefBody_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 66:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructuredTypeDef_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 67:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructuredTypeDef_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 68:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructuredTypeDef_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 69:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructuredTypeDef_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 70:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructuredTypeDef_A5"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 71:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructuredTypeDef_A6"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 72:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructuredTypeDef_A7"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 73:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructuredTypeDef_A8"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 74:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructuredTypeDef_A9"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 75:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RecordDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 76:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructDefBody_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(6), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB51:
   case 77:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructDefBody_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 78:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructDefBody_A1_M1_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 79: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-StructDefBody_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 80: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-StructDefBody_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 81:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructDefBody_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 82: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-StructDefBody_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 83: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-StructDefBody_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 84:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructDefBody_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 85: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-StructDefBody_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 86: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-StructDefBody_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 87:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructDefBody_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 88: // LOOP55
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-StructDefBody_A1_M5_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 89: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-StructDefBody_A1_M5_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 90:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructDefBody_A1_M5_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 91:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructFieldDef_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB56:
   case 92:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructFieldDef_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 93:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructFieldDef_A1_M1_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 94: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-StructFieldDef_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 95: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-StructFieldDef_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 96:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructFieldDef_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 97: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-StructFieldDef_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 98: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-StructFieldDef_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 99:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructFieldDef_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 100: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-StructFieldDef_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 101: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-StructFieldDef_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 102:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructFieldDef_A1_M5_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
// grenze 2
   default :
   SemanticAction1(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction1(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   case 103:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedTypeDef_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 104:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedTypeDef_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 105:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedTypeDef_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 106:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedTypeDef_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 107:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedTypeDef_A5"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 108:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedTypeDef_A6"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 109:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedTypeDef_A7"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 110:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedRecordDef_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 111: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-NestedRecordDef_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 112: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-NestedRecordDef_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 113:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedRecordDef_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 114: // LOOP61
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-NestedRecordDef_A1_M3_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 115: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-NestedRecordDef_A1_M3_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 116:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedRecordDef_A1_M3_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 117:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedUnionDef_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 118: // LOOP62
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-NestedUnionDef_A1_M4"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 119: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-NestedUnionDef_A1_M4"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 120:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedUnionDef_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 121:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedSetDef_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 122: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-NestedSetDef_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 123: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-NestedSetDef_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 124:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedSetDef_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 125: // LOOP64
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-NestedSetDef_A1_M3_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 126: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-NestedSetDef_A1_M3_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 127:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedSetDef_A1_M3_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 128:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedRecordOfDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 129: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-NestedRecordOfDef_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 130: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-NestedRecordOfDef_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 131:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedRecordOfDef_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB66:
   case 132:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedRecordOfDef_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 133:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedRecordOfDef_A1_M4_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 134:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedSetOfDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 135: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-NestedSetOfDef_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 136: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-NestedSetOfDef_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 137:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedSetOfDef_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB68:
   case 138:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedSetOfDef_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 139:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedSetOfDef_A1_M4_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 140:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedEnumDef_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 141:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnionDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 142:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnionDefBody_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(5)
,RT.DollarI(6)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(7), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB69:
   case 143:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnionDefBody_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 144:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnionDefBody_A1_M1_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 145: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-UnionDefBody_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 146: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-UnionDefBody_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 147:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnionDefBody_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 148: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-UnionDefBody_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 149: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-UnionDefBody_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 150:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnionDefBody_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 151: // LOOP72
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-UnionDefBody_A1_M6"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 152: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-UnionDefBody_A1_M6"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 153:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnionDefBody_A1_M6_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 154:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnionFieldDef_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB73:
   case 155:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnionFieldDef_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 156:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnionFieldDef_A1_M1_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 157: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-UnionFieldDef_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 158: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-UnionFieldDef_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 159:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnionFieldDef_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 160: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-UnionFieldDef_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 161: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-UnionFieldDef_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 162:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnionFieldDef_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 163:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SetDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 164:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RecordOfDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 165: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-RecordOfDef_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 166: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-RecordOfDef_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 167:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RecordOfDef_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 168:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructOfDefBody_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB77:
   case 169:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructOfDefBody_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 170:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructOfDefBody_A1_M1_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB78:
   case 171:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructOfDefBody_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 172:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructOfDefBody_A1_M2_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 173: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-StructOfDefBody_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 174: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-StructOfDefBody_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 175:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructOfDefBody_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 176: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-StructOfDefBody_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 177: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-StructOfDefBody_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 178:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructOfDefBody_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 179: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-StructOfDefBody_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 180: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-StructOfDefBody_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 181:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructOfDefBody_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 182:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SetOfDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 183: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SetOfDef_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 184: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SetOfDef_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 185:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SetOfDef_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 186:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"EnumDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(6), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB83:
   case 187:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"EnumDef_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 188:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"EnumDef_A1_M2_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 189: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-EnumDef_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 190: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-EnumDef_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 191:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"EnumDef_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 192:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"EnumerationList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 193: // LOOP85
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-EnumerationList_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 194: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-EnumerationList_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 195:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"EnumerationList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 196:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Enumeration_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 197: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-Enumeration_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 198: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-Enumeration_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 199:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Enumeration_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 200: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-Enumeration_A1_M2_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 201: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-Enumeration_A1_M2_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 202:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Enumeration_A1_M2_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 203:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SubTypeDef_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
,RT.DollarI(5)
,RT.DollarI(6)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(6), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB88:
   case 204:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SubTypeDef_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 205:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SubTypeDef_A1_M2_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 206: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SubTypeDef_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
// grenze 2
   default :
   SemanticAction2(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction2(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   // ***** (2) OPTION ::= empty 
   case 207: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SubTypeDef_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 208:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SubTypeDef_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 209: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SubTypeDef_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 210: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SubTypeDef_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 211:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SubTypeDef_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 212: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SubTypeDef_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 213: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SubTypeDef_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 214:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SubTypeDef_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 215: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SubTypeDef_A1_M6"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 216: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SubTypeDef_A1_M6"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 217:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SubTypeDef_A1_M6_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 218:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SubTypeSpec_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 219:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SubTypeSpec_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 220: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SubTypeSpec_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 221: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SubTypeSpec_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 222:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SubTypeSpec_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 223:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllowedValuesSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB94:
   case 224:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllowedValuesSpec_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 225:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllowedValuesSpec_A1_M2_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB95:
   case 226:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllowedValuesSpec_A1_M2_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 227: // LOOP96
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-AllowedValuesSpec_A1_M2_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 228: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-AllowedValuesSpec_A1_M2_A1_M1_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 229:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllowedValuesSpec_A1_M2_A1_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 230:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateOrRange_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 231:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateOrRange_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 232:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateOrRange_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 233:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RangeDef_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 234:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StringLength_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 235: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-StringLength_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 236: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-StringLength_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 237:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StringLength_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 238:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 239:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortDefBody_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 240: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortDefBody_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 241: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortDefBody_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 242:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortDefBody_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 243: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortDefBody_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 244: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortDefBody_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 245:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortDefBody_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 246:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortDefAttribs_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 247:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortDefAttribs_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 248:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortDefAttribs_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 249:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortDefAttribs_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 250:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MessageAttribs_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 251: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-MessageAttribs_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 252: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-MessageAttribs_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 253:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MessageAttribs_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // *****  
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
   case 254: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-MessageAttribs_A1_M4"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= LOOPBODY LOOP 
   case 255: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-MessageAttribs_A1_M4"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOP ::= empty 
   case 256: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-MessageAttribs_A1_M4"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (4) LOOPBODY ::= ... 
   case 257:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MessageAttribs_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
//begin EAR_ 2
// SUB102:
   case 258:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MessageAttribs_A1_M4_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 259:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MessageAttribs_A1_M4_A1_M1_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 260:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MessageAttribs_A1_M4_A1_M1_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 261: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-MessageAttribs_A1_M4_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 262: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-MessageAttribs_A1_M4_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 263:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MessageAttribs_A1_M4_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 264:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigParamDef_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 265:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigParamDef_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 266:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MapParamDef_A1"
      , new JavaNode[]{
RT.DollarI(4)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(6), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 267: // LOOP104
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-MapParamDef_A1_M5"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 268: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-MapParamDef_A1_M5"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 269:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MapParamDef_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 270:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnmapParamDef_A1"
      , new JavaNode[]{
RT.DollarI(4)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(6), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 271: // LOOP105
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-UnmapParamDef_A1_M5"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 272: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-UnmapParamDef_A1_M5"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 273:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnmapParamDef_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 274:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AddressDecl_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 275:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MessageList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 276:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Direction_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 277:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Direction_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 278:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Direction_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 279:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllOrTypeList_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 280:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllOrTypeList_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 281:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TypeList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 282: // LOOP106
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-TypeList_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 283: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-TypeList_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 284:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TypeList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 285:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ProcedureAttribs_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 286: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ProcedureAttribs_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 287: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ProcedureAttribs_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 288:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ProcedureAttribs_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // *****  
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
   case 289: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ProcedureAttribs_A1_M4"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= LOOPBODY LOOP 
   case 290: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ProcedureAttribs_A1_M4"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOP ::= empty 
   case 291: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ProcedureAttribs_A1_M4"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (4) LOOPBODY ::= ... 
   case 292:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ProcedureAttribs_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
//begin EAR_ 2
// SUB109:
   case 293:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ProcedureAttribs_A1_M4_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 294:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ProcedureAttribs_A1_M4_A1_M1_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 295:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ProcedureAttribs_A1_M4_A1_M1_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 296: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ProcedureAttribs_A1_M4_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 297: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ProcedureAttribs_A1_M4_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 298:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ProcedureAttribs_A1_M4_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 299:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ProcedureList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 300:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllOrSignatureList_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 301:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllOrSignatureList_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 302:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SignatureList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 303: // LOOP111
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-SignatureList_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 304: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-SignatureList_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 305:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SignatureList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 306:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MixedAttribs_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 307: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-MixedAttribs_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 308: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-MixedAttribs_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 309:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MixedAttribs_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // *****  
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
   case 310: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-MixedAttribs_A1_M4"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
// grenze 2
   default :
   SemanticAction3(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction3(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   // ***** (2) LOOP ::= LOOPBODY LOOP 
   case 311: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-MixedAttribs_A1_M4"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOP ::= empty 
   case 312: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-MixedAttribs_A1_M4"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (4) LOOPBODY ::= ... 
   case 313:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MixedAttribs_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
//begin EAR_ 2
// SUB114:
   case 314:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MixedAttribs_A1_M4_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 315:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MixedAttribs_A1_M4_A1_M1_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 316:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MixedAttribs_A1_M4_A1_M1_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 317: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-MixedAttribs_A1_M4_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 318: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-MixedAttribs_A1_M4_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 319:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MixedAttribs_A1_M4_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 320:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MixedList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 321:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ProcOrTypeList_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 322:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ProcOrTypeList_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB116:
   case 323:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ProcOrTypeList_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 324: // LOOP117
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ProcOrTypeList_A2_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 325: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ProcOrTypeList_A2_M1_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 326:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ProcOrTypeList_A2_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 327:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ProcOrType_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 328:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ProcOrType_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 329:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
,RT.DollarI(5)
,RT.DollarI(7)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(8), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 330: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ComponentDef_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 331: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ComponentDef_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 332:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentDef_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 333: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ComponentDef_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 334: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ComponentDef_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 335:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentDef_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 336: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ComponentDef_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 337: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ComponentDef_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 338:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentDef_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 339: // LOOP121
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ComponentDef_A1_M5_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 340: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ComponentDef_A1_M5_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 341:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentDef_A1_M5_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 342: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ComponentDef_A1_M7"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 343: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ComponentDef_A1_M7"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 344:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentDef_A1_M7_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 345:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentType_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 346: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ComponentType_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 347: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ComponentType_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 348:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentType_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 349: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ComponentType_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 350: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ComponentType_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 351:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentType_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 352: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ComponentType_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 353: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ComponentType_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 354:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentType_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 355:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentDefList_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 356: // LOOP126
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ComponentDefList_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 357: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ComponentDefList_A1_M1"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 358:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentDefList_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 359: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ComponentDefList_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 360: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ComponentDefList_A1_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 361:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentDefList_A1_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 362: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ComponentDefList_A1_M1_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 363: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ComponentDefList_A1_M1_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 364:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentDefList_A1_M1_A1_M3_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 365:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentElementDef_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 366:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentElementDef_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 367:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentElementDef_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 368:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentElementDef_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 369:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortInstance_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
,RT.DollarI(5)
,RT.DollarI(6)
,RT.DollarI(7)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(7), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 370: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortInstance_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 371: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortInstance_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 372:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortInstance_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 373: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortInstance_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 374: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortInstance_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 375:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortInstance_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 376: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortInstance_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 377: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortInstance_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 378:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortInstance_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 379: // LOOP132
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-PortInstance_A1_M7"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 380: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-PortInstance_A1_M7"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 381:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortInstance_A1_M7_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 382:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortElement_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 383: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortElement_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 384: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortElement_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 385:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortElement_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 386: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortElement_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 387: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortElement_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 388:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortElement_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 389:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConstDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 390:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConstList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 391: // LOOP135
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ConstList_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 392: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ConstList_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 393:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConstList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 394:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleConstDef_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 395: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SingleConstDef_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 396: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SingleConstDef_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 397:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleConstDef_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 398:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
,RT.DollarI(6)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(6), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 399: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-TemplateDef_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 400: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-TemplateDef_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 401:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateDef_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 402: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-TemplateDef_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 403: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-TemplateDef_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 404:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateDef_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 405:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BaseTemplate_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB139:
   case 406:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BaseTemplate_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 407:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BaseTemplate_A1_M1_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 408: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-BaseTemplate_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 409: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-BaseTemplate_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 410:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BaseTemplate_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 411: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-BaseTemplate_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 412: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-BaseTemplate_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 413:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BaseTemplate_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 414:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DerivedDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
// grenze 2
   default :
   SemanticAction4(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction4(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   case 415:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateOrValueFormalParList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 416: // LOOP142
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-TemplateOrValueFormalParList_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 417: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-TemplateOrValueFormalParList_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 418:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateOrValueFormalParList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 419:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateOrValueFormalPar_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 420:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateOrValueFormalPar_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 421:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateBody_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB143:
   case 422:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateBody_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 423:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateBody_A1_M1_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 424:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateBody_A1_M1_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 425: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-TemplateBody_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 426: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-TemplateBody_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 427:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateBody_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 428:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SimpleSpec_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 429:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SimpleSpec_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB145:
   case 430:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SimpleSpec_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 431: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SimpleSpec_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 432: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SimpleSpec_A1_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 433:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SimpleSpec_A1_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 434:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SimpleTemplateSpec_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 435:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SimpleTemplateSpec_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB147:
   case 436:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SimpleTemplateSpec_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 437: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SimpleTemplateSpec_A2_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 438: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SimpleTemplateSpec_A2_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 439:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SimpleTemplateSpec_A2_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 440:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleTemplateExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 441:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleTemplateExpression_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB149:
   case 442:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleTemplateExpression_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 443: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SingleTemplateExpression_A2_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 444: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SingleTemplateExpression_A2_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 445:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleTemplateExpression_A2_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 446:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FieldSpecList_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 447: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FieldSpecList_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 448: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FieldSpecList_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 449:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FieldSpecList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 450: // LOOP152
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-FieldSpecList_A1_M2_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 451: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-FieldSpecList_A1_M2_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 452:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FieldSpecList_A1_M2_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 453:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FieldSpec_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 454:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FieldReference_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 455:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FieldReference_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 456:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructFieldRef_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 457:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructFieldRef_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 458:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructFieldRef_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 459:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayOrBitRef_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 460:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FieldOrBitNumber_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 461:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayValueOrAttrib_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 462:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayElementSpecList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 463: // LOOP153
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ArrayElementSpecList_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 464: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ArrayElementSpecList_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 465:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayElementSpecList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 466:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayElementSpec_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 467:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayElementSpec_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 468:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayElementSpec_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 469:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MatchingSymbol_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 470:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MatchingSymbol_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 471:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MatchingSymbol_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 472:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MatchingSymbol_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 473:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MatchingSymbol_A5"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 474:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MatchingSymbol_A6"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 475:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MatchingSymbol_A7"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 476:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MatchingSymbol_A8"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 477:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MatchingSymbol_A9"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 478:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MatchingSymbol_A10"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 479:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MatchingSymbol_A11"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB154:
   case 480:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MatchingSymbol_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 481: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-MatchingSymbol_A2_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 482: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-MatchingSymbol_A2_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 483:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MatchingSymbol_A2_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB156:
   case 484:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MatchingSymbol_A3_M1_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 485: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-MatchingSymbol_A3_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 486: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-MatchingSymbol_A3_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 487:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MatchingSymbol_A3_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 488:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtraMatchingAttributes_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 489:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtraMatchingAttributes_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 490:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtraMatchingAttributes_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB158:
   case 491:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtraMatchingAttributes_A3_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 492:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BitStringMatch_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 493:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"HexStringMatch_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 494:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"OctetStringMatch_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 495:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CharStringMatch_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 496: // LOOP159
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-CharStringMatch_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 497: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-CharStringMatch_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 498:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CharStringMatch_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 499:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PatternParticle_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 500:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PatternParticle_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 501:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Pattern_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 502:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Complement_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 503: // LOOP160
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-Complement_A1_M4"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 504: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-Complement_A1_M4"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 505:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Complement_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 506:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SubsetMatch_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 507:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SupersetMatch_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 508:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PermutationMatch_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 509:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PermutationList_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 510: // LOOP161
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-PermutationList_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 511: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-PermutationList_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 512:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PermutationList_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 513:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateList_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
   case 514: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-TemplateList_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= LOOPBODY LOOP 
   case 515: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-TemplateList_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOP ::= empty 
   case 516: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-TemplateList_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (4) LOOPBODY ::= ... 
   case 517:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateList_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 518:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"WildcardLengthMatch_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
// grenze 2
   default :
   SemanticAction5(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction5(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   case 519:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Range_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 520:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Bound_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 521:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Bound_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB163:
   case 522:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Bound_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 523: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-Bound_A1_M1_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 524: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-Bound_A1_M1_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 525:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Bound_A1_M1_A1_M1_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB165:
   case 526:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Bound_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 527: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-Bound_A2_M1_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 528: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-Bound_A2_M1_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 529:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Bound_A2_M1_A1_M1_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 530:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateInstanceAssignment_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 531:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateRefWithParList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 532: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-TemplateRefWithParList_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 533: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-TemplateRefWithParList_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 534:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateRefWithParList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 535:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"InLineTemplate_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 536: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-InLineTemplate_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 537: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-InLineTemplate_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 538:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"InLineTemplate_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB169:
   case 539:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"InLineTemplate_A1_M1_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 540:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"InLineTemplate_A1_M1_A1_M1_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 541: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-InLineTemplate_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 542: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-InLineTemplate_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 543:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"InLineTemplate_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 544:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DerivedRefWithParList_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 545:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateActualParList_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 546: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-TemplateActualParList_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 547: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-TemplateActualParList_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 548:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateActualParList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 549:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateActualParList_A1_M2_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB172:
   case 550:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateActualParList_A1_M2_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 551: // LOOP173
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-TemplateActualParList_A1_M2_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 552: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-TemplateActualParList_A1_M2_A1_M1_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 553:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateActualParList_A1_M2_A1_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
//begin EAR_ 2
// SUB174:
   case 554:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateActualParList_A1_M2_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 555: // LOOP175
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-TemplateActualParList_A1_M2_A2_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 556: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-TemplateActualParList_A1_M2_A2_M1_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 557:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateActualParList_A1_M2_A2_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 558:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateInstanceActualPar_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 559:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateInstanceActualPar_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 560:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateOps_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 561:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateOps_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 562:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MatchOp_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(6), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 563:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ValueofOp_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 564:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(5)
,RT.DollarI(7)
,RT.DollarI(8)
,RT.DollarI(9)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(9), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 565: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FunctionDef_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 566: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FunctionDef_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 567:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionDef_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 568: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FunctionDef_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 569: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FunctionDef_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 570:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionDef_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 571: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FunctionDef_A1_M7"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 572: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FunctionDef_A1_M7"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 573:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionDef_A1_M7_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 574: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FunctionDef_A1_M8"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 575: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FunctionDef_A1_M8"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 576:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionDef_A1_M8_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 577:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionFormalParList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 578: // LOOP180
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-FunctionFormalParList_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 579: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-FunctionFormalParList_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 580:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionFormalParList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 581:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionFormalPar_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 582:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionFormalPar_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 583:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionFormalPar_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 584:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionFormalPar_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 585:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ReturnType_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 586: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ReturnType_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 587: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ReturnType_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 588:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ReturnType_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 589:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ReturnType_A1_M2_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 590:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RunsOnSpec_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB182:
   case 591:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RunsOnSpec_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 592:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RunsOnSpec_A1_M3_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 593:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StatementBlock_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 594: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-StatementBlock_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 595: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-StatementBlock_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 596:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StatementBlock_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 597: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-StatementBlock_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 598: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-StatementBlock_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 599:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StatementBlock_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 600:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionDefList_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
   case 601: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-FunctionDefList_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= LOOPBODY LOOP 
   case 602: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-FunctionDefList_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOP ::= empty 
   case 603: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-FunctionDefList_A1_M1"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (4) LOOPBODY ::= ... 
   case 604:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionDefList_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
//begin EAR_ 2
// SUB186:
   case 605:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionDefList_A1_M1_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 606:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionDefList_A1_M1_A1_M1_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 607: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FunctionDefList_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 608: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FunctionDefList_A1_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 609:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionDefList_A1_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 610: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FunctionDefList_A1_M1_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 611: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FunctionDefList_A1_M1_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 612:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionDefList_A1_M1_A1_M3_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 613:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionStatementList_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
   case 614: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-FunctionStatementList_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= LOOPBODY LOOP 
   case 615: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-FunctionStatementList_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOP ::= empty 
   case 616: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-FunctionStatementList_A1_M1"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (4) LOOPBODY ::= ... 
   case 617:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionStatementList_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 618: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FunctionStatementList_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 619: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FunctionStatementList_A1_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 620:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionStatementList_A1_M1_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 621:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionLocalInst_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 622:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionLocalInst_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
// grenze 2
   default :
   SemanticAction6(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction6(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   case 623:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionLocalDef_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 624:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionLocalDef_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 625:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 626:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionStatement_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 627:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionStatement_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 628:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionStatement_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 629:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionStatement_A5"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 630:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionStatement_A6"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 631:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionStatement_A7"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 632:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionStatement_A8"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 633:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionStatement_A9"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 634:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionStatement_A10"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 635:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionStatement_A11"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 636:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionStatement_A12"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 637:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionInstance_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 638:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionInstance_A2"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(7), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 639: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FunctionInstance_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 640: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FunctionInstance_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 641:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionInstance_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 642: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FunctionInstance_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 643: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FunctionInstance_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 644:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionInstance_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 645: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FunctionInstance_A2_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 646: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FunctionInstance_A2_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 647:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionInstance_A2_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 648:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionRef_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 649: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FunctionRef_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 650: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FunctionRef_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 651:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionRef_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 652:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionActualParList_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 653:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionActualParList_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB195:
   case 654:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionActualParList_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 655: // LOOP196
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-FunctionActualParList_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 656: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-FunctionActualParList_A1_M1_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 657:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionActualParList_A1_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
//begin EAR_ 2
// SUB197:
   case 658:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionActualParList_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 659: // LOOP198
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-FunctionActualParList_A2_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 660: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-FunctionActualParList_A2_M1_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 661:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionActualParList_A2_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 662:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionActualPar_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 663:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionActualPar_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 664:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionActualPar_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 665:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionActualPar_A4"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 666:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionActualParAssignment_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 667:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionActualParAssignment_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 668:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FunctionActualParAssignment_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 669:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayIdentifierRefAssignment_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 670:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SignatureDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(5)
,RT.DollarI(7)
,RT.DollarI(8)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(8), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 671: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SignatureDef_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 672: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SignatureDef_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 673:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SignatureDef_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 674: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SignatureDef_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 675: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SignatureDef_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 676:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SignatureDef_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 677: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SignatureDef_A1_M7"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 678: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SignatureDef_A1_M7"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 679:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SignatureDef_A1_M7_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 680:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SignatureDef_A1_M7_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 681: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SignatureDef_A1_M8"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 682: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SignatureDef_A1_M8"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 683:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SignatureDef_A1_M8_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 684:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SignatureFormalParList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 685: // LOOP203
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-SignatureFormalParList_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 686: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-SignatureFormalParList_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 687:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SignatureFormalParList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 688:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptionSpec_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 689:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Signature_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 690: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-Signature_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 691: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-Signature_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 692:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Signature_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 693: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-Signature_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 694: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-Signature_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 695:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Signature_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 696:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(5)
,RT.DollarI(7)
,RT.DollarI(8)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(8), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 697: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-TestcaseDef_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 698: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-TestcaseDef_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 699:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseDef_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 700: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-TestcaseDef_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 701: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-TestcaseDef_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 702:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseDef_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB208:
   case 703:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseDef_A1_M7_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 704:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseDef_A1_M7_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 705:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigSpec_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 706: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ConfigSpec_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 707: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ConfigSpec_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 708:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigSpec_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 709:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SystemSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 710:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseInstance_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB210:
   case 711:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseInstance_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 712:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseInstance_A1_M3_A2"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(7), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 713: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-TestcaseInstance_A1_M3_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 714: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-TestcaseInstance_A1_M3_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 715:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseInstance_A1_M3_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 716: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-TestcaseInstance_A1_M3_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 717: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-TestcaseInstance_A1_M3_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 718:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseInstance_A1_M3_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 719: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-TestcaseInstance_A1_M3_A2_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 720: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-TestcaseInstance_A1_M3_A2_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 721:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseInstance_A1_M3_A2_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 722: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-TestcaseInstance_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 723: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-TestcaseInstance_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 724:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseInstance_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB215:
   case 725:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseInstance_A1_M4_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 726:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseInstance_A1_M4_A1_M2_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
// grenze 2
   default :
   SemanticAction7(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction7(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   // ***** (1) OPTION ::= OPTIONBODY 
   case 727: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-TestcaseInstance_A1_M4_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 728: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-TestcaseInstance_A1_M4_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 729:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseInstance_A1_M4_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 730:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseActualParList_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 731:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseActualParList_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB217:
   case 732:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseActualParList_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 733: // LOOP218
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-TestcaseActualParList_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 734: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-TestcaseActualParList_A1_M1_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 735:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseActualParList_A1_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
//begin EAR_ 2
// SUB219:
   case 736:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseActualParList_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 737: // LOOP220
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-TestcaseActualParList_A2_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 738: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-TestcaseActualParList_A2_M1_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 739:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseActualParList_A2_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 740:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltstepDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(5)
,RT.DollarI(7)
,RT.DollarI(9)
,RT.DollarI(10)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(11), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 741: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-AltstepDef_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 742: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-AltstepDef_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 743:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltstepDef_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 744: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-AltstepDef_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 745: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-AltstepDef_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 746:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltstepDef_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 747: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-AltstepDef_A1_M7"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 748: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-AltstepDef_A1_M7"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 749:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltstepDef_A1_M7_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 750:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltstepLocalDefList_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 751: // LOOP224
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-AltstepLocalDefList_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 752: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-AltstepLocalDefList_A1_M1"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 753:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltstepLocalDefList_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 754: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-AltstepLocalDefList_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 755: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-AltstepLocalDefList_A1_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 756:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltstepLocalDefList_A1_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 757: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-AltstepLocalDefList_A1_M1_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 758: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-AltstepLocalDefList_A1_M1_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 759:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltstepLocalDefList_A1_M1_A1_M3_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 760:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltstepLocalDef_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 761:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltstepLocalDef_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 762:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltstepLocalDef_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 763:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltstepLocalDef_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 764:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltstepInstance_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 765: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-AltstepInstance_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 766: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-AltstepInstance_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 767:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltstepInstance_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 768: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-AltstepInstance_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 769: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-AltstepInstance_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 770:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltstepInstance_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 771:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB229:
   case 772:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportDef_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 773:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportDef_A1_M3_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB230:
   case 774:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportDef_A1_M3_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 775:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllWithExcepts_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 776: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-AllWithExcepts_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 777: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-AllWithExcepts_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 778:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllWithExcepts_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 779:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptsDef_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 780:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptSpec_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 781: // LOOP232
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ExceptSpec_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 782: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ExceptSpec_A1_M1"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 783:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptSpec_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 784: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ExceptSpec_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 785: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ExceptSpec_A1_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 786:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptSpec_A1_M1_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 787:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptElement_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 788:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptElement_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 789:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptElement_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 790:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptElement_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 791:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptElement_A5"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 792:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptElement_A6"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 793:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptElement_A7"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 794:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptElement_A8"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 795:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptElement_A9"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 796:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptGroupSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB234:
   case 797:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptGroupSpec_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 798:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptGroupSpec_A1_M2_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 799:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"IdentifierListOrAll_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 800:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"IdentifierListOrAll_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 801:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptTypeDefSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 802:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptTemplateSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 803:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptConstSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 804:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptTestcaseSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 805:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptAltstepSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 806:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptFunctionSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 807:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptSignatureSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 808:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExceptModuleParSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 809:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportSpec_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 810: // LOOP235
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ImportSpec_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 811: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ImportSpec_A1_M1"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 812:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportSpec_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 813: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ImportSpec_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 814: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ImportSpec_A1_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 815:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportSpec_A1_M1_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 816:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportElement_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 817:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportElement_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 818:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportElement_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 819:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportElement_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 820:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportElement_A5"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 821:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportElement_A6"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 822:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportElement_A7"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 823:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportElement_A8"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 824:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportElement_A9"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 825:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportElement_A10"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 826:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportFromSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 827: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ImportFromSpec_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 828: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ImportFromSpec_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 829:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportFromSpec_A1_M3_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 830:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportGroupSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB238:
// grenze 2
   default :
   SemanticAction8(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction8(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   case 831:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportGroupSpec_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 832:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportGroupSpec_A1_M2_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 833:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GroupRefListWithExcept_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 834: // LOOP239
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-GroupRefListWithExcept_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 835: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-GroupRefListWithExcept_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 836:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GroupRefListWithExcept_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 837:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllGroupsWithExcept_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 838: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-AllGroupsWithExcept_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 839: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-AllGroupsWithExcept_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 840:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllGroupsWithExcept_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 841:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"QualifiedIdentifierWithExcept_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 842: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-QualifiedIdentifierWithExcept_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 843: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-QualifiedIdentifierWithExcept_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 844:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"QualifiedIdentifierWithExcept_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 845:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"IdentifierListOrAllWithExcept_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 846:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"IdentifierListOrAllWithExcept_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 847:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportTypeDefSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 848:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllWithExcept_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 849: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-AllWithExcept_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 850: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-AllWithExcept_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 851:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllWithExcept_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 852:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportTemplateSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 853:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportConstSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 854:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportAltstepSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 855:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportTestcaseSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 856:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportFunctionSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 857:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportSignatureSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 858:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportModuleParSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 859:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ImportImportSpec_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 860:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GroupDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 861: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-GroupDef_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 862: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-GroupDef_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 863:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GroupDef_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 864:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtFunctionDef_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(5)
,RT.DollarI(7)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(7), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 865: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ExtFunctionDef_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 866: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ExtFunctionDef_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 867:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtFunctionDef_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 868: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ExtFunctionDef_A1_M7"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 869: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ExtFunctionDef_A1_M7"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 870:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtFunctionDef_A1_M7_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 871:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtConstDef_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 872:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleParDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB246:
   case 873:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleParDef_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 874:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleParDef_A1_M2_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB247:
   case 875:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleParDef_A1_M2_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 876:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MultitypedModuleParList_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 877: // LOOP248
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-MultitypedModuleParList_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 878: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-MultitypedModuleParList_A1_M1"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 879:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MultitypedModuleParList_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 880: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-MultitypedModuleParList_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 881: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-MultitypedModuleParList_A1_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 882:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MultitypedModuleParList_A1_M1_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 883:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModulePar_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 884:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleParList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 885: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ModuleParList_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 886: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ModuleParList_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 887:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleParList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 888: // LOOP251
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ModuleParList_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 889: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ModuleParList_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 890:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleParList_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 891: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ModuleParList_A1_M3_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 892: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ModuleParList_A1_M3_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 893:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleParList_A1_M3_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 894:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FriendModuleDef_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 895: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FriendModuleDef_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 896: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FriendModuleDef_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 897:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FriendModuleDef_A1_M4_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 898:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleControlPart_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(5)
,RT.DollarI(6)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(6), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 899: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ModuleControlPart_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 900: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ModuleControlPart_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 901:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleControlPart_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 902: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ModuleControlPart_A1_M6"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 903: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ModuleControlPart_A1_M6"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 904:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleControlPart_A1_M6_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 905:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleControlBody_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 906: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ModuleControlBody_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 907: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ModuleControlBody_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 908:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModuleControlBody_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 909:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ControlStatementOrDefList_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
   case 910: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ControlStatementOrDefList_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= LOOPBODY LOOP 
   case 911: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ControlStatementOrDefList_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOP ::= empty 
   case 912: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ControlStatementOrDefList_A1_M1"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (4) LOOPBODY ::= ... 
   case 913:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ControlStatementOrDefList_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 914: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ControlStatementOrDefList_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 915: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ControlStatementOrDefList_A1_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 916:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ControlStatementOrDefList_A1_M1_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 917:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ControlStatementOrDef_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 918:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ControlStatementOrDef_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB259:
   case 919:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ControlStatementOrDef_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 920:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ControlStatementOrDef_A1_M1_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 921: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ControlStatementOrDef_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 922: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ControlStatementOrDef_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 923:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ControlStatementOrDef_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 924:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ControlStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 925:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ControlStatement_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 926:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ControlStatement_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 927:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ControlStatement_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 928:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ControlStatement_A5"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 929:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ControlStatement_A6"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 930:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VarInstance_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB261:
   case 931:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VarInstance_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 932:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VarInstance_A1_M2_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB262:
   case 933:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VarInstance_A1_M2_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB263:
   case 934:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VarInstance_A1_M2_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB264:
// grenze 2
   default :
   SemanticAction9(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction9(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   case 935:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VarInstance_A1_M2_A2_M1_A1_M1_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 936:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VarInstance_A1_M2_A2_M1_A1_M1_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 937:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VarList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 938: // LOOP265
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-VarList_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 939: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-VarList_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 940:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VarList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 941:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleVarInstance_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 942: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SingleVarInstance_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 943: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SingleVarInstance_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 944:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleVarInstance_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 945: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SingleVarInstance_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 946: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SingleVarInstance_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 947:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleVarInstance_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 948:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TempVarList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 949: // LOOP268
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-TempVarList_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 950: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-TempVarList_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 951:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TempVarList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 952:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleTempVarInstance_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 953: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SingleTempVarInstance_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 954: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SingleTempVarInstance_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 955:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleTempVarInstance_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 956: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SingleTempVarInstance_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 957: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SingleTempVarInstance_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 958:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleTempVarInstance_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 959:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VariableRef_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 960: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-VariableRef_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 961: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-VariableRef_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 962:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VariableRef_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 963:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TimerInstance_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 964:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayIdentifierRef_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 965: // LOOP272
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ArrayIdentifierRef_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 966: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ArrayIdentifierRef_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 967:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayIdentifierRef_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 968:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationStatements_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 969:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationStatements_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 970:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationStatements_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 971:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationStatements_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 972:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationStatements_A5"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 973:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationStatements_A6"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 974:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationStatements_A7"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 975:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationStatements_A8"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 976:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationStatements_A9"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 977:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationOps_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 978:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationOps_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 979:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationOps_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 980:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationOps_A4"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 981:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationOps_A5"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 982:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationOps_A6"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 983:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CreateOp_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(4)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 984: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-CreateOp_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 985: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-CreateOp_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 986:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CreateOp_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB274:
   case 987:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CreateOp_A1_M4_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 988:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CreateOp_A1_M4_A1_M2_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 989: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-CreateOp_A1_M4_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 990: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-CreateOp_A1_M4_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 991:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CreateOp_A1_M4_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 992: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-CreateOp_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 993: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-CreateOp_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 994:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CreateOp_A1_M5_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 995:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CreateOp_A1_M5_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 996:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DoneStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 997:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"KilledStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 998:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentId_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 999:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentId_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB277:
   case 1000:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentId_A2_M1_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1001:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentId_A2_M1_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1002:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RunningOp_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1003:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AliveOp_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1004:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConnectStatement_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1005: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ConnectStatement_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1006: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ConnectStatement_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1007:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConnectStatement_A1_M3_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1008:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleConnectionSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1009:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortRef_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1010:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentRef_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1011:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentRef_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1012:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentRef_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1013:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentRef_A4"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1014:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentRefAssignment_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1015:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DisconnectStatement_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1016: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-DisconnectStatement_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1017: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-DisconnectStatement_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1018:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DisconnectStatement_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1019:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DisconnectStatement_A1_M2_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1020:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DisconnectStatement_A1_M2_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1021:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DisconnectStatement_A1_M2_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1022:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllConnectionsSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1023:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllPortsSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(6), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1024:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllCompsAllPortsSpec_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(7), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1025:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MapStatement_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1026: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-MapStatement_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1027: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-MapStatement_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1028:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MapStatement_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1029: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-MapStatement_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1030: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-MapStatement_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1031:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MapStatement_A1_M4_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1032:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ParamClause_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1033:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnmapStatement_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1034: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-UnmapStatement_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1035: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-UnmapStatement_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1036:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnmapStatement_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1037:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnmapStatement_A1_M2_A2"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1038:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnmapStatement_A1_M2_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
// grenze 2
   default :
   SemanticAction10(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction10(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   case 1039:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnmapStatement_A1_M2_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1040: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-UnmapStatement_A1_M2_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1041: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-UnmapStatement_A1_M2_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1042:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnmapStatement_A1_M2_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1043: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-UnmapStatement_A1_M2_A2_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1044: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-UnmapStatement_A1_M2_A2_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1045:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnmapStatement_A1_M2_A2_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1046:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StartTCStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(6), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1047:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StopTCStatement_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1048:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StopTCStatement_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB285:
   case 1049:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StopTCStatement_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1050:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StopTCStatement_A2_M1_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1051:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentReferenceOrLiteral_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1052:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentReferenceOrLiteral_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1053:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentReferenceOrLiteral_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1054:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"KillTCStatement_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1055:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"KillTCStatement_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB286:
   case 1056:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"KillTCStatement_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB287:
   case 1057:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"KillTCStatement_A2_M1_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1058:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"KillTCStatement_A2_M1_A1_M1_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1059:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentOrDefaultReference_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1060:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComponentOrDefaultReference_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1061:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CommunicationStatements_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1062:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CommunicationStatements_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1063:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CommunicationStatements_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1064:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CommunicationStatements_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1065:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CommunicationStatements_A5"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1066:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CommunicationStatements_A6"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1067:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CommunicationStatements_A7"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1068:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CommunicationStatements_A8"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1069:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CommunicationStatements_A9"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1070:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CommunicationStatements_A10"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1071:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CommunicationStatements_A11"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1072:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CommunicationStatements_A12"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1073:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CommunicationStatements_A13"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1074:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CommunicationStatements_A14"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1075:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CommunicationStatements_A15"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1076:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CommunicationStatements_A16"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1077:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SendStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1078:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortSendOp_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1079: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortSendOp_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1080: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortSendOp_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1081:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortSendOp_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1082:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ToClause_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB289:
   case 1083:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ToClause_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1084:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ToClause_A1_M2_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1085:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ToClause_A1_M2_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1086:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AddressRefList_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1087: // LOOP290
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-AddressRefList_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1088: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-AddressRefList_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1089:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AddressRefList_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1090:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CallStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1091: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-CallStatement_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1092: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-CallStatement_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1093:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CallStatement_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1094:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortCallOp_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1095: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortCallOp_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1096: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortCallOp_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1097:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortCallOp_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1098:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CallParameters_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1099: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-CallParameters_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1100: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-CallParameters_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1101:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CallParameters_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1102:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CallTimerValue_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1103:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CallTimerValue_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1104:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortCallBody_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1105:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CallBodyStatementList_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
   case 1106: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-CallBodyStatementList_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= LOOPBODY LOOP 
   case 1107: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-CallBodyStatementList_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOP ::= empty 
   case 1108: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-CallBodyStatementList_A1_M1"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (4) LOOPBODY ::= ... 
   case 1109:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CallBodyStatementList_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1110: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-CallBodyStatementList_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1111: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-CallBodyStatementList_A1_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1112:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CallBodyStatementList_A1_M1_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1113:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CallBodyStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1114:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CallBodyGuard_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1115:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CallBodyOps_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1116:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CallBodyOps_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1117:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ReplyStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1118:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortReplyOp_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(4)
,RT.DollarI(6)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(6), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1119: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortReplyOp_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1120: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortReplyOp_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1121:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortReplyOp_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1122: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortReplyOp_A1_M6"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1123: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortReplyOp_A1_M6"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1124:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortReplyOp_A1_M6_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1125:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ReplyValue_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1126:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RaiseStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1127:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortRaiseOp_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(5)
,RT.DollarI(7)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(7), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1128: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortRaiseOp_A1_M7"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1129: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortRaiseOp_A1_M7"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1130:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortRaiseOp_A1_M7_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1131:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ReceiveStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1132:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortOrAny_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1133:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortOrAny_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1134:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortReceiveOp_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1135: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortReceiveOp_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1136: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortReceiveOp_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1137:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortReceiveOp_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1138: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortReceiveOp_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1139: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortReceiveOp_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1140:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortReceiveOp_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1141: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortReceiveOp_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1142: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortReceiveOp_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
// grenze 2
   default :
   SemanticAction11(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction11(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   case 1143:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortReceiveOp_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1144:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FromClause_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB302:
   case 1145:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FromClause_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1146:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FromClause_A1_M2_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1147:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FromClause_A1_M2_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1148:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortRedirect_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB303:
   case 1149:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortRedirect_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1150:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortRedirect_A1_M2_A2"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1151:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortRedirect_A1_M2_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1152: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortRedirect_A1_M2_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1153: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortRedirect_A1_M2_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1154:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortRedirect_A1_M2_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1155: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortRedirect_A1_M2_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1156: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortRedirect_A1_M2_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1157:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortRedirect_A1_M2_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1158: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortRedirect_A1_M2_A2_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1159: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortRedirect_A1_M2_A2_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1160:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortRedirect_A1_M2_A2_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1161:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ValueSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB307:
   case 1162:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ValueSpec_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1163:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ValueSpec_A1_M2_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB308:
   case 1164:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ValueSpec_A1_M2_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1165: // LOOP309
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ValueSpec_A1_M2_A2_M1_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1166: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ValueSpec_A1_M2_A2_M1_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1167:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ValueSpec_A1_M2_A2_M1_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1168:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleValueSpec_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1169: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SingleValueSpec_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1170: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SingleValueSpec_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1171:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleValueSpec_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1172:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SenderSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1173:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TriggerStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1174:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortTriggerOp_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1175: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortTriggerOp_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1176: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortTriggerOp_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1177:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortTriggerOp_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1178: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortTriggerOp_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1179: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortTriggerOp_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1180:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortTriggerOp_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1181: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortTriggerOp_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1182: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortTriggerOp_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1183:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortTriggerOp_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1184:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GetCallStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1185:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortGetCallOp_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1186: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortGetCallOp_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1187: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortGetCallOp_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1188:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortGetCallOp_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1189: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortGetCallOp_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1190: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortGetCallOp_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1191:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortGetCallOp_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1192: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortGetCallOp_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1193: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortGetCallOp_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1194:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortGetCallOp_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1195:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortRedirectWithParam_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1196:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RedirectWithParamSpec_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1197:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RedirectWithParamSpec_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1198: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-RedirectWithParamSpec_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1199: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-RedirectWithParamSpec_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1200:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RedirectWithParamSpec_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1201:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ParamSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1202:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ParamAssignmentList_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB318:
   case 1203:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ParamAssignmentList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1204:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ParamAssignmentList_A1_M2_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1205:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AssignmentList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1206: // LOOP319
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-AssignmentList_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1207: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-AssignmentList_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1208:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AssignmentList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1209:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VariableAssignment_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1210:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VariableList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1211: // LOOP320
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-VariableList_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1212: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-VariableList_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1213:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VariableList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1214:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VariableEntry_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1215:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VariableEntry_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1216:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GetReplyStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1217:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortGetReplyOp_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1218: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortGetReplyOp_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1219: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortGetReplyOp_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1220:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortGetReplyOp_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1221: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortGetReplyOp_A1_M2_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1222: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortGetReplyOp_A1_M2_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1223:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortGetReplyOp_A1_M2_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1224: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortGetReplyOp_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1225: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortGetReplyOp_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1226:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortGetReplyOp_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1227: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortGetReplyOp_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1228: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortGetReplyOp_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1229:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortGetReplyOp_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1230:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortRedirectWithValueAndParam_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1231:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RedirectWithValueAndParamSpec_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1232:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RedirectWithValueAndParamSpec_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1233: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-RedirectWithValueAndParamSpec_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1234: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-RedirectWithValueAndParamSpec_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1235:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RedirectWithValueAndParamSpec_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1236: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-RedirectWithValueAndParamSpec_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1237: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-RedirectWithValueAndParamSpec_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1238:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RedirectWithValueAndParamSpec_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1239:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ValueMatchSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1240:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CheckStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1241:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortCheckOp_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1242: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortCheckOp_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1243: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortCheckOp_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1244:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortCheckOp_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1245:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CheckParameter_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1246:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CheckParameter_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
// grenze 2
   default :
   SemanticAction12(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction12(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   case 1247:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CheckParameter_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1248:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FromClausePresent_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1249: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FromClausePresent_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1250: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FromClausePresent_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1251:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FromClausePresent_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1252:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RedirectPresent_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1253:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CheckPortOpsPresent_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1254:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CheckPortOpsPresent_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1255:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CheckPortOpsPresent_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1256:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CheckPortOpsPresent_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1257:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CatchStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1258:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortCatchOp_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1259: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortCatchOp_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1260: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortCatchOp_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1261:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortCatchOp_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1262: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortCatchOp_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1263: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortCatchOp_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1264:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortCatchOp_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1265: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortCatchOp_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1266: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortCatchOp_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1267:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortCatchOp_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1268:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CatchOpParameter_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1269:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CatchOpParameter_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1270:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ClearStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1271:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortOrAll_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1272:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortOrAll_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1273:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StartStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1274:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StopStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1275:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"HaltStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1276:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CheckStateStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(6), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1277:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortOrAllAny_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1278:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortOrAllAny_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1279:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TimerStatements_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1280:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TimerStatements_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1281:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TimerStatements_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1282:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TimerOps_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1283:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TimerOps_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1284:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StartTimerStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1285: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-StartTimerStatement_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1286: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-StartTimerStatement_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1287:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StartTimerStatement_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1288:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StopTimerStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1289:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TimerRefOrAll_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1290:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TimerRefOrAll_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1291:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ReadTimerOp_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1292:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RunningTimerOp_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1293:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TimeoutStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1294:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TimerRefOrAny_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1295:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TimerRefOrAny_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB333:
   case 1296:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TimerRefOrAny_A2_M1_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1297:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseOperation_A1"
      , new JavaNode[]{
RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1298: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-TestcaseOperation_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1299: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-TestcaseOperation_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1300:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseOperation_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1301: // LOOP335
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-TestcaseOperation_A1_M4_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1302: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-TestcaseOperation_A1_M4_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1303:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseOperation_A1_M4_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
//begin EAR_ 2
// SUB336:
   case 1304:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseOperation_A1_M4_A1_M2_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1305:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseOperation_A1_M4_A1_M2_A1_M1_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1306: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-TestcaseOperation_A1_M4_A1_M2_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1307: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-TestcaseOperation_A1_M4_A1_M2_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1308:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TestcaseOperation_A1_M4_A1_M2_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1309:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Type_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1310:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Type_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1311:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedType_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1312:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedType_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1313:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedType_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1314:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedType_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1315:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedType_A5"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1316:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedType_A6"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1317:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedType_A7"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1318:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedType_A8"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1319:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedType_A9"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1320:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedType_A10"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1321:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedType_A11"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1322:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedType_A12"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1323:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedType_A13"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1324:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UniversalCharString_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1325:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ReferencedType_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1326: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ReferencedType_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1327: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ReferencedType_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1328:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ReferencedType_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1329: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ReferencedType_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1330: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ReferencedType_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1331:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ReferencedType_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1332: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ReferencedType_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1333: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ReferencedType_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1334:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ReferencedType_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1335: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ReferencedType_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1336: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ReferencedType_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1337:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ReferencedType_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1338:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayDef_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
   case 1339: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ArrayDef_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= LOOPBODY LOOP 
   case 1340: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ArrayDef_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOP ::= empty 
   case 1341: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ArrayDef_A1_M1"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (4) LOOPBODY ::= ... 
   case 1342:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayDef_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1343: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ArrayDef_A1_M1_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1344: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ArrayDef_A1_M1_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1345:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayDef_A1_M1_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1346:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Value_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1347:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Value_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1348:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedValue_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1349:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedValue_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1350:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedValue_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
// grenze 2
   default :
   SemanticAction13(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction13(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   case 1351:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedValue_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1352:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedValue_A5"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1353:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedValue_A6"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1354:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedValue_A7"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1355:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedValue_A8"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1356:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedValue_A9"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1357:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PredefinedValue_A10"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1358:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BooleanValue_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1359:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BooleanValue_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1360:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VerdictTypeValue_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1361:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VerdictTypeValue_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1362:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VerdictTypeValue_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1363:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VerdictTypeValue_A4"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1364:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"VerdictTypeValue_A5"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1365:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CharStringValue_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1366:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CharStringValue_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1367:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Quadruple_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(5)
,RT.DollarI(7)
,RT.DollarI(9)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(10), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1368:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FloatValue_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1369:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ReferencedValue_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1370: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ReferencedValue_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1371: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ReferencedValue_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1372:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ReferencedValue_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1373:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Number_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1374:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Bstring_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1375:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Hstring_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1376:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Ostring_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1377:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Cstring_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1378:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FreeText_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1379:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalValuePar_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1380: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FormalValuePar_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1381: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FormalValuePar_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1382:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalValuePar_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB346:
   case 1383:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalValuePar_A1_M1_A1_M1_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1384:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalValuePar_A1_M1_A1_M1_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1385:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalValuePar_A1_M1_A1_M1_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1386: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FormalValuePar_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1387: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FormalValuePar_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1388:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalValuePar_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB348:
   case 1389:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalValuePar_A1_M4_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1390:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalValuePar_A1_M4_A1_M2_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1391:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalPortPar_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1392: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FormalPortPar_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1393: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FormalPortPar_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1394:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalPortPar_A1_M1_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1395:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTimerPar_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1396: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FormalTimerPar_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1397: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FormalTimerPar_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1398:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTimerPar_A1_M1_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1399:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTemplatePar_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1400: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FormalTemplatePar_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1401: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FormalTemplatePar_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1402:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTemplatePar_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB352:
   case 1403:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTemplatePar_A1_M1_A1_M1_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1404:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTemplatePar_A1_M1_A1_M1_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1405:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTemplatePar_A1_M1_A1_M1_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB353:
   case 1406:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTemplatePar_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1407:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTemplatePar_A1_M2_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1408: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FormalTemplatePar_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1409: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FormalTemplatePar_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1410:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTemplatePar_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB355:
   case 1411:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTemplatePar_A1_M5_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1412:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTemplatePar_A1_M5_A1_M2_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1413:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RestrictedTemplate_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1414:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RestrictedTemplate_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB356:
   case 1415:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RestrictedTemplate_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1416:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateRestriction_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB357:
   case 1417:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateRestriction_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1418:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateRestriction_A1_M2_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1419:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateRestriction_A1_M2_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1420:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"WithStatement_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1421:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"WithAttribList_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1422:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MultiWithAttrib_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1423: // LOOP358
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-MultiWithAttrib_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1424: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-MultiWithAttrib_A1_M1"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1425:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MultiWithAttrib_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1426: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-MultiWithAttrib_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1427: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-MultiWithAttrib_A1_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1428:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MultiWithAttrib_A1_M1_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1429:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleWithAttrib_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1430: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SingleWithAttrib_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1431: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SingleWithAttrib_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1432:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleWithAttrib_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1433: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-SingleWithAttrib_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1434: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-SingleWithAttrib_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1435:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleWithAttrib_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1436:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AttribKeyword_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1437:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AttribKeyword_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1438:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AttribKeyword_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1439:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AttribKeyword_A4"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1440:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AttribKeyword_A5"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1441:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AttribKeyword_A6"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1442:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AttribQualifier_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1443:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DefOrFieldRefList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1444: // LOOP362
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-DefOrFieldRefList_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1445: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-DefOrFieldRefList_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1446:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DefOrFieldRefList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1447:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DefOrFieldRef_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1448:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DefOrFieldRef_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB363:
   case 1449:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DefOrFieldRef_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB364:
   case 1450:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DefOrFieldRef_A1_M1_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1451:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DefOrFieldRef_A1_M1_A1_M1_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1452: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-DefOrFieldRef_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1453: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-DefOrFieldRef_A1_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1454:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DefOrFieldRef_A1_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
// grenze 2
   default :
   SemanticAction14(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction14(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   case 1455:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"QualifiedIdentifier_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1456: // LOOP366
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-QualifiedIdentifier_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1457: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-QualifiedIdentifier_A1_M1"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1458:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"QualifiedIdentifier_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1459:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllRef_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1460:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllRef_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB367:
   case 1461:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllRef_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1462: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-AllRef_A1_M1_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1463: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-AllRef_A1_M1_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1464:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllRef_A1_M1_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB369:
   case 1465:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllRef_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB370:
   case 1466:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllRef_A2_M1_A1_M1_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1467:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllRef_A2_M1_A1_M1_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1468:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllRef_A2_M1_A1_M1_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1469:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllRef_A2_M1_A1_M1_A4"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1470:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllRef_A2_M1_A1_M1_A5"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1471:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllRef_A2_M1_A1_M1_A6"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1472:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllRef_A2_M1_A1_M1_A7"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1473:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllRef_A2_M1_A1_M1_A8"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1474: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-AllRef_A2_M1_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1475: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-AllRef_A2_M1_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1476:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AllRef_A2_M1_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1477:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourStatements_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1478:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourStatements_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1479:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourStatements_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1480:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourStatements_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1481:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourStatements_A5"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1482:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourStatements_A6"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1483:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourStatements_A7"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1484:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourStatements_A8"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1485:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourStatements_A9"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1486:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourStatements_A10"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1487:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourStatements_A11"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1488:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourStatements_A12"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1489:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourStatements_A13"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1490:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SetLocalVerdict_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1491: // LOOP372
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-SetLocalVerdict_A1_M4"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1492: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-SetLocalVerdict_A1_M4"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1493:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SetLocalVerdict_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1494:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SUTStatements_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1495: // LOOP373
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-SUTStatements_A1_M4"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1496: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-SUTStatements_A1_M4"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1497:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SUTStatements_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1498:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ActionText_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1499:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ActionText_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1500:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ReturnStatement_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1501: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ReturnStatement_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1502: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ReturnStatement_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1503:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ReturnStatement_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1504:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ReturnStatement_A1_M2_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1505:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltConstruct_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1506:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltGuardList_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1507: // LOOP375
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-AltGuardList_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1508: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-AltGuardList_A1_M1"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1509:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltGuardList_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1510:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltGuardList_A1_M1_A2"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1511: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-AltGuardList_A1_M1_A2_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1512: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-AltGuardList_A1_M1_A2_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1513:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltGuardList_A1_M1_A2_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1514:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GuardStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB377:
   case 1515:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GuardStatement_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1516:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GuardStatement_A1_M2_A2"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1517: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-GuardStatement_A1_M2_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1518: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-GuardStatement_A1_M2_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1519:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GuardStatement_A1_M2_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1520:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ElseStatement_A1"
      , new JavaNode[]{
RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1521:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltGuardChar_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1522: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-AltGuardChar_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1523: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-AltGuardChar_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1524:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AltGuardChar_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1525:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GuardOp_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1526:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GuardOp_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1527:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GuardOp_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1528:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GuardOp_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1529:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GuardOp_A5"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1530:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GuardOp_A6"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1531:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GuardOp_A7"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1532:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GuardOp_A8"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1533:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GuardOp_A9"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1534:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"InterleavedConstruct_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1535:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"InterleavedGuardList_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
   case 1536: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-InterleavedGuardList_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= LOOPBODY LOOP 
   case 1537: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-InterleavedGuardList_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOP ::= empty 
   case 1538: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-InterleavedGuardList_A1_M1"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (4) LOOPBODY ::= ... 
   case 1539:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"InterleavedGuardList_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1540: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-InterleavedGuardList_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1541: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-InterleavedGuardList_A1_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1542:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"InterleavedGuardList_A1_M1_A1_M2_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1543:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"InterleavedGuardElement_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1544:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"InterleavedGuard_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1545:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"LabelStatement_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1546:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"GotoStatement_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1547:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ActivateOp_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1548:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DeactivateStatement_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1549: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-DeactivateStatement_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1550: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-DeactivateStatement_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1551:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DeactivateStatement_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1552:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BasicStatements_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1553:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BasicStatements_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1554:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BasicStatements_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1555:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BasicStatements_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1556:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BasicStatements_A5"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1557:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BasicStatements_A6"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1558:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Expression_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
// grenze 2
   default :
   SemanticAction15(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction15(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   case 1559:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Expression_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1560:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CompoundExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1561:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CompoundExpression_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1562:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FieldExpressionList_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1563: // LOOP383
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-FieldExpressionList_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1564: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-FieldExpressionList_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1565:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FieldExpressionList_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1566:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FieldExpressionSpec_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1567:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayExpression_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1568: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ArrayExpression_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1569: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ArrayExpression_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1570:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayExpression_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1571:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayElementExpressionList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1572: // LOOP385
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ArrayElementExpressionList_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1573: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ArrayElementExpressionList_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1574:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayElementExpressionList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1575:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NotUsedOrExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1576:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NotUsedOrExpression_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1577:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConstantExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1578:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConstantExpression_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1579:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BooleanExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1580:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CompoundConstExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1581:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"CompoundConstExpression_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1582:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FieldConstExpressionList_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1583: // LOOP386
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-FieldConstExpressionList_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1584: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-FieldConstExpressionList_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1585:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FieldConstExpressionList_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1586:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FieldConstExpressionSpec_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1587:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayConstExpression_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1588: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ArrayConstExpression_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1589: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ArrayConstExpression_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1590:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayConstExpression_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1591:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayElementConstExpressionList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1592: // LOOP388
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ArrayElementConstExpressionList_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1593: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ArrayElementConstExpressionList_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1594:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ArrayElementConstExpressionList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1595:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Assignment_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB389:
   case 1596:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Assignment_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1597:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Assignment_A1_M3_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1598:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1599: // LOOP390
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-SingleExpression_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1600: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-SingleExpression_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1601:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SingleExpression_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1602:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"XorExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1603: // LOOP391
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-XorExpression_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1604: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-XorExpression_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1605:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"XorExpression_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1606:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AndExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1607: // LOOP392
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-AndExpression_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1608: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-AndExpression_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1609:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AndExpression_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1610:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NotExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1611: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-NotExpression_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1612: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-NotExpression_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1613:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NotExpression_A1_M1_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1614:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"EqualExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1615: // LOOP394
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-EqualExpression_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1616: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-EqualExpression_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1617:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"EqualExpression_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1618:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RelExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1619:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RelExpression_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1620: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-RelExpression_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1621: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-RelExpression_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1622:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RelExpression_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1623:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ShiftExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1624: // LOOP396
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ShiftExpression_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1625: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ShiftExpression_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1626:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ShiftExpression_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1627:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BitOrExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1628: // LOOP397
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-BitOrExpression_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1629: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-BitOrExpression_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1630:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BitOrExpression_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1631:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BitXorExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1632: // LOOP398
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-BitXorExpression_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1633: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-BitXorExpression_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1634:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BitXorExpression_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1635:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BitAndExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1636: // LOOP399
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-BitAndExpression_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1637: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-BitAndExpression_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1638:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BitAndExpression_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1639:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BitNotExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1640: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-BitNotExpression_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1641: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-BitNotExpression_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1642:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BitNotExpression_A1_M1_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1643:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AddExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1644: // LOOP401
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-AddExpression_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1645: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-AddExpression_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1646:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AddExpression_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1647:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MulExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1648:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MulExpression_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1649: // LOOP402
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-MulExpression_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1650: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-MulExpression_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1651:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MulExpression_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1652:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnaryExpression_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1653: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-UnaryExpression_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1654: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-UnaryExpression_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1655:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnaryExpression_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1656:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Primary_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1657:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Primary_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1658:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Primary_A3"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1659:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtendedFieldReference_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
   case 1660: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ExtendedFieldReference_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= LOOPBODY LOOP 
   case 1661: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ExtendedFieldReference_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOP ::= empty 
   case 1662: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ExtendedFieldReference_A1_M1"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (4) LOOPBODY ::= ... 
// grenze 2
   default :
   SemanticAction16(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction16(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   case 1663:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtendedFieldReference_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
//begin EAR_ 2
// SUB405:
   case 1664:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtendedFieldReference_A1_M1_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1665:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtendedFieldReference_A1_M1_A1_M1_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1666:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtendedFieldReference_A1_M1_A1_M1_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB406:
   case 1667:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB407:
   case 1668:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1669:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1_M2_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1670:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1_M2_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB408:
   case 1671:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1_M2_A3_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1672: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1_M2_A3_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1673: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1_M2_A3_M1_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1674:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1_M2_A3_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1675: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1_M2_A3_M1_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1676: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1_M2_A3_M1_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1677:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtendedFieldReference_A1_M1_A1_M1_A1_M1_A1_M2_A3_M1_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB411:
   case 1678:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtendedFieldReference_A1_M1_A1_M1_A3_M1_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1679:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"OpCall_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1680:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"OpCall_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1681:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"OpCall_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1682:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"OpCall_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1683:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"OpCall_A5"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1684:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"OpCall_A6"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1685:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"OpCall_A7"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1686:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"OpCall_A8"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1687:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"OpCall_A9"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1688:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"OpCall_A10"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1689:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"OpCall_A11"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1690:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"OpCall_A12"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1691: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-OpCall_A5_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1692: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-OpCall_A5_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1693:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"OpCall_A5_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1694: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-OpCall_A6_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1695: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-OpCall_A6_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1696:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"OpCall_A6_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1697:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AddOp_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1698:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AddOp_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1699:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AddOp_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1700:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MultiplyOp_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1701:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MultiplyOp_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1702:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MultiplyOp_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1703:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"MultiplyOp_A4"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1704:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnaryOp_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1705:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UnaryOp_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1706:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RelOp_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1707:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RelOp_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1708:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RelOp_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1709:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RelOp_A4"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1710:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"EqualOp_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1711:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"EqualOp_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1712:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StringOp_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1713:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ShiftOp_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1714:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ShiftOp_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1715:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ShiftOp_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1716:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ShiftOp_A4"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1717:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"LogStatement_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1718: // LOOP414
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-LogStatement_A1_M4"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1719: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-LogStatement_A1_M4"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1720:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"LogStatement_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1721:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"LogItem_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1722:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"LogItem_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1723:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"LoopConstruct_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1724:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"LoopConstruct_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1725:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"LoopConstruct_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1726:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ForStatement_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(5)
,RT.DollarI(7)
,RT.DollarI(9)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(9), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1727:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Initial_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1728:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"Initial_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1729:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"WhileStatement_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1730:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"DoWhileStatement_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(6), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1731:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConditionalConstruct_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(5)
,RT.DollarI(6)
,RT.DollarI(7)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(7), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1732: // LOOP415
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ConditionalConstruct_A1_M6"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1733: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ConditionalConstruct_A1_M6"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1734:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConditionalConstruct_A1_M6_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1735: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ConditionalConstruct_A1_M7"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1736: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ConditionalConstruct_A1_M7"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1737:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConditionalConstruct_A1_M7_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1738:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ElseIfClause_A1"
      , new JavaNode[]{
RT.DollarI(4)
,RT.DollarI(6)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(6), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1739:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ElseClause_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1740:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SelectCaseConstruct_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1741:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SelectCaseBody_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOPPLUS ::= LOOPBODY LOOP 
   case 1742: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-SelectCaseBody_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= LOOPBODY LOOP 
   case 1743: 
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-SelectCaseBody_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOP ::= empty 
   case 1744: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-SelectCaseBody_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (4) LOOPBODY ::= ... 
   case 1745:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SelectCaseBody_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1746:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SelectCase_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB418:
   case 1747:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SelectCase_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1748:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SelectCase_A1_M2_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1749: // LOOP419
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-SelectCase_A1_M2_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1750: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-SelectCase_A1_M2_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1751:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"SelectCase_A1_M2_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1752:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtendedIdentifier_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1753: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ExtendedIdentifier_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1754: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ExtendedIdentifier_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1755:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExtendedIdentifier_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1756:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"IdentifierList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1757: // LOOP421
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-IdentifierList_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1758: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-IdentifierList_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1759:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"IdentifierList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1760:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"QualifiedIdentifierList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1761: // LOOP422
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-QualifiedIdentifierList_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1762: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-QualifiedIdentifierList_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1763:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"QualifiedIdentifierList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1764:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TypeActualParList_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1765:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TypeActualParList_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB423:
   case 1766:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TypeActualParList_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
// grenze 2
   default :
   SemanticAction17(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction17(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1767: // LOOP424
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-TypeActualParList_A1_M1_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1768: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-TypeActualParList_A1_M1_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1769:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TypeActualParList_A1_M1_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
//begin EAR_ 2
// SUB425:
   case 1770:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TypeActualParList_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1771: // LOOP426
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-TypeActualParList_A2_M1_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1772: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-TypeActualParList_A2_M1_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1773:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TypeActualParList_A2_M1_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1774:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TypeActualPar_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1775:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TypeActualPar_A2"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
,RT.DollarI(4)
,RT.DollarI(7)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(8), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1776: // LOOP427
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-TypeActualPar_A2_M4"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1777: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-TypeActualPar_A2_M4"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1778:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TypeActualPar_A2_M4_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1779:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTypeParList_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1780: // LOOP428
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-FormalTypeParList_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1781: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-FormalTypeParList_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1782:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTypeParList_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1783:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTypePar_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1784: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FormalTypePar_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1785: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FormalTypePar_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1786:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTypePar_A1_M1_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1787: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FormalTypePar_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1788: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FormalTypePar_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1789:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTypePar_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1790:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTypePar_A1_M2_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1791: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-FormalTypePar_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1792: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-FormalTypePar_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1793:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FormalTypePar_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1794:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TypeParIdentifier_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1795:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TypeActualParIdentifier_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1796:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TypeParAssignment_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1797:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ActualTypeParList_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1798:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ActualTypeParList_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB432:
   case 1799:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ActualTypeParList_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1800: // LOOP433
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ActualTypeParList_A1_M1_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1801: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ActualTypeParList_A1_M1_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1802:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ActualTypeParList_A1_M1_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
//begin EAR_ 2
// SUB434:
   case 1803:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ActualTypeParList_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1804: // LOOP435
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ActualTypeParList_A2_M1_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1805: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ActualTypeParList_A2_M1_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1806:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ActualTypeParList_A2_M1_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1807:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ActualTypePar_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1808:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ActualTypePar_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1809:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ActualTypeParAssignment_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1810:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructDefFormalParList_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1811: // LOOP436
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-StructDefFormalParList_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1812: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-StructDefFormalParList_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1813:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructDefFormalParList_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1814:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StructDefFormalPar_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1815:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourDef_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1816:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourDef_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1817:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourDef_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB437:
   case 1818:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourDef_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(5)
,RT.DollarI(7)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(7), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1819: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-BehaviourDef_A1_M1_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1820: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-BehaviourDef_A1_M1_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1821:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourDef_A1_M1_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1822: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-BehaviourDef_A1_M1_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1823: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-BehaviourDef_A1_M1_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1824:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourDef_A1_M1_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1825: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-BehaviourDef_A1_M1_A1_M7"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1826: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-BehaviourDef_A1_M1_A1_M7"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1827:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourDef_A1_M1_A1_M7_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB441:
   case 1828:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourDef_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(5)
,RT.DollarI(7)
,RT.DollarI(8)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(8), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1829: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-BehaviourDef_A2_M1_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1830: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-BehaviourDef_A2_M1_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1831:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourDef_A2_M1_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1832: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-BehaviourDef_A2_M1_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1833: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-BehaviourDef_A2_M1_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1834:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourDef_A2_M1_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1835: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-BehaviourDef_A2_M1_A1_M7"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1836: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-BehaviourDef_A2_M1_A1_M7"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1837:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourDef_A2_M1_A1_M7_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1838: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-BehaviourDef_A2_M1_A1_M8"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1839: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-BehaviourDef_A2_M1_A1_M8"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1840:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourDef_A2_M1_A1_M8_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB446:
   case 1841:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourDef_A3_M1_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
,RT.DollarI(5)
,RT.DollarI(7)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(7), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1842: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-BehaviourDef_A3_M1_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1843: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-BehaviourDef_A3_M1_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1844:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourDef_A3_M1_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1845: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-BehaviourDef_A3_M1_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1846: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-BehaviourDef_A3_M1_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1847:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourDef_A3_M1_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1848:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedBehaviourDef_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1849:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedBehaviourDef_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1850:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedBehaviourDef_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB449:
   case 1851:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedBehaviourDef_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1852: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-NestedBehaviourDef_A1_M1_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1853: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-NestedBehaviourDef_A1_M1_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1854:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedBehaviourDef_A1_M1_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1855: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-NestedBehaviourDef_A1_M1_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1856: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-NestedBehaviourDef_A1_M1_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1857:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedBehaviourDef_A1_M1_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB452:
   case 1858:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedBehaviourDef_A2_M1_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(5)
,RT.DollarI(6)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(6), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1859: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-NestedBehaviourDef_A2_M1_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1860: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-NestedBehaviourDef_A2_M1_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1861:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedBehaviourDef_A2_M1_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1862: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-NestedBehaviourDef_A2_M1_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1863: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-NestedBehaviourDef_A2_M1_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1864:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedBehaviourDef_A2_M1_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1865: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-NestedBehaviourDef_A2_M1_A1_M6"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1866: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-NestedBehaviourDef_A2_M1_A1_M6"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1867:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedBehaviourDef_A2_M1_A1_M6_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
//begin EAR_ 2
// SUB456:
   case 1868:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedBehaviourDef_A3_M1_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(5)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1869: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-NestedBehaviourDef_A3_M1_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1870: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-NestedBehaviourDef_A3_M1_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
// grenze 2
   default :
   SemanticAction18(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction18(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   case 1871:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"NestedBehaviourDef_A3_M1_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1872:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourValue_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1873:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourValue_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1874: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-BehaviourValue_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1875: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-BehaviourValue_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1876:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BehaviourValue_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1877:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ExecuteOnSpec_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1878:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationDef_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(4)
,RT.DollarI(6)
,RT.DollarI(7)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(7), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1879: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ConfigurationDef_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1880: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ConfigurationDef_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1881:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationDef_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1882:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationIdentifier_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1883:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationInstance_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1884: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ConfigurationInstance_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1885: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ConfigurationInstance_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1886:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationInstance_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1887:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationRef_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1888: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ConfigurationRef_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1889: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ConfigurationRef_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1890:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationRef_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1891:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"KillConfigStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1892:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationReference_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1893:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ConfigurationReference_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1894:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TimestampSpec_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1895:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"RealtimeStatement_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1896:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"WaitStatement_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB462:
   case 1897:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"WaitStatement_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1898:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StreamAttribs_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(5), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1899:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StreamDirection_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1900:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StreamDirection_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1901:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortInitialValue_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1902:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StreamDataOps_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1903:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortDataOp_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1904:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortDataOp_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1905:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortDataOp_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1906:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortDataOp_A4"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1907:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortDataOp_A5"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1908:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortHistoryOp_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1909: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortHistoryOp_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1910: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortHistoryOp_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1911:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortHistoryOp_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1912: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortHistoryOp_A1_M2_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1913: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortHistoryOp_A1_M2_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1914:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortHistoryOp_A1_M2_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1915:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StartValue_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1916:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"EndValue_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1917:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortValuesOp_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1918: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortValuesOp_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1919: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortValuesOp_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1920:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortValuesOp_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1921: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortValuesOp_A1_M2_A1_M3"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1922: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortValuesOp_A1_M2_A1_M3"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1923:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortValuesOp_A1_M2_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1924:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StreamNavigationOps_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
,RT.DollarI(4)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB467:
   case 1925:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StreamNavigationOps_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1926:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StreamNavigationOps_A1_M3_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1927: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-StreamNavigationOps_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1928: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-StreamNavigationOps_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1929:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StreamNavigationOps_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1930:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortPrevOp_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1931: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortPrevOp_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1932: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortPrevOp_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1933:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortPrevOp_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1934:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"IndexValue_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1935:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortAtOp_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1936: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortAtOp_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1937: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortAtOp_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1938:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortAtOp_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1939:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TimeIndexValue_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1940:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModeLocalOps_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1941:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModeLocalOps_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1942:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModeLocalOps_A3"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1943:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StreamEvalStatements_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB471:
   case 1944:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StreamEvalStatements_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1945:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StreamEvalStatements_A1_M3_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1946:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"StreamEvalStatements_A1_M3_A3"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1947:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortApplyOp_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1948: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortApplyOp_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1949: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortApplyOp_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1950:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortApplyOp_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1951:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ApplyParameter_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1952:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortFindOp_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1953: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortFindOp_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1954: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortFindOp_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1955:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortFindOp_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1956:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FindParameter_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1957:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortViolatesOp_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1958: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-PortViolatesOp_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1959: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-PortViolatesOp_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1960:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PortViolatesOp_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1961:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ViolatesParameter_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1962:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AssertStatement_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1963: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-AssertStatement_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1964: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-AssertStatement_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1965:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AssertStatement_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1966:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AssertionList_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1967: // LOOP476
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-AssertionList_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1968: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-AssertionList_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1969:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"AssertionList_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 1970:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModeSpecification_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB477:
   case 1971:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModeSpecification_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1972:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModeSpecification_A1_M1_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1973: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ModeSpecification_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1974: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ModeSpecification_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
// grenze 2
   default :
   SemanticAction19(RT, ruleid);
   break;
   } // switch
} // Semantic Actions
public static void SemanticAction19(EarleyRuntime RT, int ruleid)
{
   switch (ruleid) {
   case 1975:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModeSpecification_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1976:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BasicMode_A1"
      , new JavaNode[]{
RT.DollarI(3)
,RT.DollarI(4)
,RT.DollarI(5)
,RT.DollarI(6)
,RT.DollarI(7)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(8), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1977: // LOOP479
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-BasicMode_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1978: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-BasicMode_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1979:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BasicMode_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1980: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-BasicMode_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1981: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-BasicMode_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1982:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BasicMode_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1983: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-BasicMode_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1984: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-BasicMode_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1985:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BasicMode_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1986: // LOOP482
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-BasicMode_A1_M6"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1987: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-BasicMode_A1_M6"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 1988:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BasicMode_A1_M6_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1989: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-BasicMode_A1_M7"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1990: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-BasicMode_A1_M7"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1991:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BasicMode_A1_M7_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 1992:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"OnEntryBlock_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1993:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"InvariantBlock_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 1994:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"InvariantList_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 1995: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-InvariantList_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 1996: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-InvariantList_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 1997:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"InvariantList_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 1998: // LOOP485
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-InvariantList_A1_M1_A1_M2"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 1999: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-InvariantList_A1_M1_A1_M2"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 2000:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"InvariantList_A1_M1_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 2001:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BasicModeOp_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 2002:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BasicModeOp_A2"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 2003:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"OnExitBlock_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 2004:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComplexMode_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(3)
,RT.DollarI(4)
,RT.DollarI(5)
,RT.DollarI(6)
,RT.DollarI(7)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(8), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
//begin EAR_ 2
// SUB486:
   case 2005:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComplexMode_A1_M1_A1"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 2006:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComplexMode_A1_M1_A2"
      , new JavaNode[]{
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 2007: // LOOP487
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ComplexMode_A1_M3"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 2008: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ComplexMode_A1_M3"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 2009:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComplexMode_A1_M3_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 2010: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ComplexMode_A1_M4"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 2011: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ComplexMode_A1_M4"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 2012:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComplexMode_A1_M4_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 2013: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ComplexMode_A1_M5"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 2014: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ComplexMode_A1_M5"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 2015:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComplexMode_A1_M5_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 2016: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ComplexMode_A1_M7"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 2017: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ComplexMode_A1_M7"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 2018:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ComplexMode_A1_M7_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 2019:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModeList_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 2020: // LOOP491
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-ModeList_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 2021: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-ModeList_A1_M1"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 2022:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModeList_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
,RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(2), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   // ***** (1) OPTION ::= OPTIONBODY 
   case 2023: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-ModeList_A1_M1_A1_M1"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 2024: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-ModeList_A1_M1_A1_M1"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 2025:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"ModeList_A1_M1_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 2026:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UntilBlock_A1"
      , new JavaNode[]{
RT.DollarI(3)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(4), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 2027:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UntilGuardList_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) LOOP ::= LOOPBODY LOOP 
   case 2028: // LOOP493
   {
      JavaNode x =
NodeFactory.NewNode(
"SeqOf-UntilGuardList_A1_M1"
      , new JavaNode[]{RT.Dollar1(),RT.Dollar2()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (2) LOOP ::= empty 
   case 2029: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NilOf-UntilGuardList_A1_M1"
,  new JavaNode [] {})
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      //$$ = x;
      RT.DefDollarDollar(x);
   }
   break;
   // ***** (3) LOOPBODY ::= ... 
   case 2030:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UntilGuardList_A1_M1_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** 
   case 2031:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UntilGuardStatement_A1"
      , new JavaNode[]{
RT.DollarI(2)
,RT.DollarI(4)
,RT.DollarI(5)
,RT.DollarI(6)
,RT.DollarI(7)
,RT.DollarI(8)
,RT.DollarI(9)
,RT.DollarI(10)
,RT.DollarI(11)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(11), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // ***** (1) OPTION ::= OPTIONBODY 
   case 2032: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-UntilGuardStatement_A1_M2"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 2033: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-UntilGuardStatement_A1_M2"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 2034:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UntilGuardStatement_A1_M2_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 2035: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-UntilGuardStatement_A1_M6"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 2036: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-UntilGuardStatement_A1_M6"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 2037:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UntilGuardStatement_A1_M6_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 2038: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-UntilGuardStatement_A1_M7"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 2039: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-UntilGuardStatement_A1_M7"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 2040:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UntilGuardStatement_A1_M7_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 2041: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-UntilGuardStatement_A1_M8"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 2042: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-UntilGuardStatement_A1_M8"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 2043:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UntilGuardStatement_A1_M8_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 2044: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-UntilGuardStatement_A1_M9"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 2045: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-UntilGuardStatement_A1_M9"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 2046:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UntilGuardStatement_A1_M9_A1"
      , new JavaNode[]{
RT.DollarI(2)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(3), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   // ***** (1) OPTION ::= OPTIONBODY 
   case 2047: 
   {
      JavaNode x =
NodeFactory.NewNode(
"OneOf-UntilGuardStatement_A1_M10"
      , new JavaNode[]{RT.Dollar1()})
;
Gently.SemanticActions.SourceRange(RT.Dollar1(),RT.Dollar1(),x,RT.EgonGetLexerState(),0);
      RT.DefDollarDollar(x);
   }
break;
   // ***** (2) OPTION ::= empty 
   case 2048: 
   {
      JavaNode x =
NodeFactory.NewNode (
"NoneOf-UntilGuardStatement_A1_M10"
,  new JavaNode [] {}
)
;
      Gently.SemanticActions.SourceRangeEmpty(x, RT.EgonGetLexerState());
      RT.DefDollarDollar(x);
   }
break;
   // ***** (3) OPTIONBODY ::= ... 
   case 2049:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"UntilGuardStatement_A1_M10_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   // *****  
   case 2050:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"TemplateInstance_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 2051:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"BITSTRINGMATCH_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 2052:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"HEXSTRINGMATCH_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 2053:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"OCTETSTRINGMATCH_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 2054:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"PATTERN_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   case 2055:
   // yyaction (alternative)
   { // EAR_Translation default
   } // EAR_Translation default
   { // EAR_Translation
   // yyaction (trace)
   Gently.SemanticActions.TraceAction();
      JavaNode x =
NodeFactory.NewNode(
"FREETEXT_A1"
      , new JavaNode[]{
RT.DollarI(1)
})
      ;
Gently.SemanticActions.SourceRange(RT.Dollar1(), RT.DollarI(1), x, RT.EgonGetLexerState(), 0);
      RT.DefDollarDollar(x);
   }//EAR_Translation
   break;
   } // switch
} // Semantic Actions

} // EGrammar
